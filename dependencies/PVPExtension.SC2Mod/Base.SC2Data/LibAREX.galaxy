include "TriggerLibs/NativeLib"
include "LibARRA"
include "LibARMP"
include "LibARZC"
include "LibARMB"

include "LibAREX_h"

//--------------------------------------------------------------------------------------------------
// Library: ALL RACES MELEE EXTENSION
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libAREX_InitLibraries () {
    libNtve_InitVariables();
    libARRA_InitVariables();
    libARMP_InitVariables();
    libARZC_InitVariables();
    libARMB_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Game Attributes
//--------------------------------------------------------------------------------------------------
bool libAREX_gt_GameAttributes_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_aG_GameType;
    string lv_aG_Supplies;
    string lv_aG_Money;
    string lv_aG_Resources;
    string lv_aG_Zombies;
    string lv_aG_Bounty;
    string lv_aG_Mode;
    string lv_aG_Monobattle;
    string lv_race;
    int lv_player;
    int lv_availableRacesCount;
    string lv_availableFactions;
    string lv_playerFactionGameAtrribute;
    fixed lv_zC_Difficulty;
    fixed lv_zC_BountyMinerals;
    fixed lv_zC_BountyVespene;

    // Automatic Variable Declarations
    playergroup autoC3410F3B_g;
    string autoBF819B9B_val;
    string auto9AE61E81_val;
    string autoDA350B19_val;
    string autoEA4DE2D7_val;
    string autoA6D530FA_val;
    string autoDAA4B84C_val;
    string autoC1D8D2BC_val;

    // Variable Initialization
    lv_aG_GameType = GameAttributeGameValue("6");
    lv_aG_Supplies = GameAttributeGameValue("2");
    lv_aG_Money = GameAttributeGameValue("5");
    lv_aG_Resources = GameAttributeGameValue("3");
    lv_aG_Zombies = GameAttributeGameValue("4");
    lv_aG_Bounty = GameAttributeGameValue("4");
    lv_aG_Mode = GameAttributeGameValue("7");
    lv_aG_Monobattle = GameAttributeGameValue("8");
    lv_availableFactions = "ALL";

    // Actions
    if (!runActions) {
        return true;
    }

    libARMP_gf_SetAvailableFactions(lv_availableFactions);
    autoC3410F3B_g = libARMP_gf_ARCGetActivePlayers();
    lv_player = -1;
    while (true) {
        lv_player = PlayerGroupNextPlayer(autoC3410F3B_g, lv_player);
        if (lv_player < 0) { break; }
        lv_playerFactionGameAtrribute = "16";
        libARRA_gf_LOGString((libARMP_gf_GetCustomRace(lv_player, lv_playerFactionGameAtrribute, lv_availableFactions)));
        libARMP_gf_SetPlayerRaceARC(lv_player, libARMP_gf_GetCustomRace(lv_player, lv_playerFactionGameAtrribute, lv_availableFactions));
    }
    autoBF819B9B_val = lv_aG_Money;
    if (autoBF819B9B_val == "0002") {
        libARMP_gf_SetInitialResources("Rich");
    }
    else if (autoBF819B9B_val == "0003") {
        libARMP_gf_SetInitialResources("Jeff Bezos");
    }
    else {
    }
    auto9AE61E81_val = lv_aG_Resources;
    if (auto9AE61E81_val == "0003") {
        libARMP_gf_SetHarvestableResources("Rich");
    }
    else if (auto9AE61E81_val == "0002") {
        libARMP_gf_SetHarvestableResources("BGH");
    }
    else if (auto9AE61E81_val == "0004") {
        libARMP_gf_SetHarvestableResources("BGH Rich");
    }
    else {
    }
    autoDA350B19_val = lv_aG_Supplies;
    if (autoDA350B19_val == "0001") {
        libARMP_gf_SetSupplyCap("100");
    }
    else if (autoDA350B19_val == "0003") {
        libARMP_gf_SetSupplyCap("300");
    }
    else if (autoDA350B19_val == "0005") {
        libARMP_gf_SetSupplyCap("400");
    }
    else if (autoDA350B19_val == "0004") {
        libARMP_gf_SetSupplyCap("500");
    }
    else if (autoDA350B19_val == "0006") {
        libARMP_gf_SetSupplyCap("1000");
    }
    else {
    }
    autoEA4DE2D7_val = lv_aG_Mode;
    if (autoEA4DE2D7_val == "0002") {
        if ((lv_aG_Zombies != "0005")) {
            autoA6D530FA_val = lv_aG_Zombies;
            if (autoA6D530FA_val == "0005") {
                lv_zC_Difficulty = 0.0;
            }
            else if (autoA6D530FA_val == "0001") {
                lv_zC_Difficulty = 1.0;
            }
            else if (autoA6D530FA_val == "0002") {
                lv_zC_Difficulty = 2.0;
            }
            else if (autoA6D530FA_val == "0003") {
                lv_zC_Difficulty = 3.0;
            }
            else if (autoA6D530FA_val == "0004") {
                lv_zC_Difficulty = 4.0;
            }
            else {
            }
            autoDAA4B84C_val = lv_aG_Bounty;
            if (autoDAA4B84C_val == "0004") {
                lv_zC_BountyMinerals = 0.0;
                lv_zC_BountyVespene = 0.0;
            }
            else if (autoDAA4B84C_val == "0001") {
                lv_zC_BountyMinerals = 5.0;
                lv_zC_BountyVespene = 2.0;
            }
            else if (autoDAA4B84C_val == "0002") {
                lv_zC_BountyMinerals = 10.0;
                lv_zC_BountyVespene = 5.0;
            }
            else if (autoDAA4B84C_val == "0003") {
                lv_zC_BountyMinerals = 20.0;
                lv_zC_BountyVespene = 10.0;
            }
            else {
            }
            libARZC_gf_Zombiecatastrophe(lv_zC_Difficulty, lv_zC_BountyMinerals, lv_zC_BountyVespene);
        }

        libARMP_gf_InitializeMeleeGame();
    }
    else if (autoEA4DE2D7_val == "0003") {
        autoC1D8D2BC_val = lv_aG_Monobattle;
        if (autoC1D8D2BC_val == "0001") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_DraftSelection);
        }
        else if (autoC1D8D2BC_val == "0002") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_BlindRandom);
        }
        else if (autoC1D8D2BC_val == "0003") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_SingleDraft);
        }
        else if (autoC1D8D2BC_val == "0004") {
            libARMB_gf_Monobattle(libARMB_ge_MonobattleMode_TierDraft);
        }
        else {
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAREX_gt_GameAttributes_Init () {
    libAREX_gt_GameAttributes = TriggerCreate("libAREX_gt_GameAttributes_Func");
    TriggerAddEventMapInit(libAREX_gt_GameAttributes);
}

void libAREX_InitTriggers () {
    libAREX_gt_GameAttributes_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libAREX_InitLib_completed = false;

void libAREX_InitLib () {
    if (libAREX_InitLib_completed) {
        return;
    }

    libAREX_InitLib_completed = true;

    libAREX_InitLibraries();
    libAREX_InitTriggers();
}

