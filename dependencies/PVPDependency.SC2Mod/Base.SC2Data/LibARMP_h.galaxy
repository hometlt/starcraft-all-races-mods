include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: ALL RACES
//--------------------------------------------------------------------------------------------------
// Variable Declarations
int libARMP_gv_dEBUGGING_AI;
string libARMP_gv_acceptedRaces;

// Function Declarations
playergroup libARMP_gf_ARCGetActivePlayers ();
point libARMP_gf_ARCGetPlayerStartPosition (int lp_player);
bool libARMP_gf_IsUnitGenerateCreep (string lp_unit);
void libARMP_gf_InitializeMeleeGame ();
void libARMP_gf_SetInitialResources (string lp_value);
void libARMP_gf_SetPlayerRaceARC (int lp_player, string lp_race);
void libARMP_gf_SetHarvestableResources (string lp_value);
void libARMP_gf_SetSupplyCap (string lp_value);
void libARMP_gf_SetAvailableFactions (string lp_value);
void libARMP_gf_SetAvailableFactionsForPlayer (int lp_player, string lp_value);
string libARMP_gf_GetUnitUserData (string lp_unit);
string libARMP_gf_GetResourceUserData (string lp_unit);
string libARMP_gf_GetRaceUserData (string lp_race);
void libARMP_gf_RestrictRaces (string lp_race);
void libARMP_gf_AllowRaces (string lp_race);
string libARMP_gf_GetCustomRace (int lp_player, string lp_attributeID, string lp_dataInstance);
string libARMP_gf_GetStandardRace (int lp_player);
string libARMP_gf_GetRandomRace (int lp_player);
int libARMP_gf_GetRacesVariationCount ();

// Trigger Declarations
trigger libARMP_gt_OfflineDebug;
trigger libARMP_gt_GameAttributes;
trigger libARMP_gt_SupportWorkerOnlyPathsForSomeCustomMaps;
trigger libARMP_gt_SprayUpgrades;
trigger libARMP_gt_ApplyInitialResources;
trigger libARMP_gt_ApplyHarvestableResources;
trigger libARMP_gt_ApplySupplyCap;
trigger libARMP_gt_CreateStartingUnitsForPlayers;
trigger libARMP_gt_RunRaceSpecificTriggers;
trigger libARMP_gt_RunAI;
trigger libARMP_gt_UEDAIController;
trigger libARMP_gt_DragonAIController;
trigger libARMP_gt_TerranAIController;
trigger libARMP_gt_DeprecatedGenetronV2AIController;
trigger libARMP_gt_InitializeZergRace;

// Library Initialization
void libARMP_InitVariables ();

