include "TriggerLibs/NativeLib"
include "LibDDE92A83_h"
include "Lib474957E9_h"
include "LibDBB0BE4A_h"
include "Lib948F000A_h"
include "Lib2A8CE4F7_h"
include "Lib57FF8648_h"
include "Lib7A9A9B22_h"
include "LibCA960273_h"
include "Lib038F51B7_h"
include "Lib479C7CBB_h"
include "LibF58A3325_h"
include "LibD6A97973_h"
include "LibBBFED31C_h"

include "Lib64DC5B97_h"

//--------------------------------------------------------------------------------------------------
// Library: Skin System
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib64DC5B97_InitLibraries () {
    libNtve_InitVariables();
    libDDE92A83_InitVariables();
    lib474957E9_InitVariables();
    libDBB0BE4A_InitVariables();
    lib948F000A_InitVariables();
    lib2A8CE4F7_InitVariables();
    lib57FF8648_InitVariables();
    lib7A9A9B22_InitVariables();
    libCA960273_InitVariables();
    lib038F51B7_InitVariables();
    lib479C7CBB_InitVariables();
    libF58A3325_InitVariables();
    libD6A97973_InitVariables();
    libBBFED31C_InitVariables();
}

// Variable Initialization
bool lib64DC5B97_InitVariables_completed = false;

void lib64DC5B97_InitVariables () {
    int init_i;
    int init_j;
    int init_k;

    if (lib64DC5B97_InitVariables_completed) {
        return;
    }

    lib64DC5B97_InitVariables_completed = true;

    lib64DC5B97_gv_editValueVespeneCosts = 2;
    lib64DC5B97_gv_editValueIsSkin = 3;
    lib64DC5B97_gv_editValueUnitType = 4;
    lib64DC5B97_gv_currentUnitDialog = c_invalidDialogControlId;
    lib64DC5B97_gv_currentUnit4 = 50;
    lib64DC5B97_gv_currentUnit3 = -1;
    for (init_i = 0; init_i <= lib64DC5B97_gv_unit; init_i += 1) {
        lib64DC5B97_gv_dialogItemUnitButton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= lib64DC5B97_gv_unit; init_i += 1) {
        lib64DC5B97_gv_dialogItemUnitVespene[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= lib64DC5B97_gv_unit; init_i += 1) {
        for (init_j = 0; init_j <= lib64DC5B97_gv_skin; init_j += 1) {
            for (init_k = 0; init_k <= 2; init_k += 1) {
                lib64DC5B97_gv_dialogItemUnits[init_i][init_j][init_k] = c_invalidDialogControlId;
            }
        }
    }
    for (init_i = 0; init_i <= lib64DC5B97_gv_unit; init_i += 1) {
        lib64DC5B97_gv_dialogItemUnitHighlight[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= lib64DC5B97_gv_unit; init_i += 1) {
        lib64DC5B97_gv_dialogItemUnitBackground[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= lib64DC5B97_gv_races; init_i += 1) {
        lib64DC5B97_gv_dialogRace[init_i] = c_invalidDialogId;
    }
    lib64DC5B97_gv_dialogMain = c_invalidDialogId;
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib64DC5B97_gv_playerVespeneMax[init_i] = 500;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib64DC5B97_gv_playerRace[init_i] = 1;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib64DC5B97_gv_playerRaceMain[init_i] = 1;
    }
    lib64DC5B97_gv_raceDropdown = c_invalidDialogControlId;
    lib64DC5B97_gv_vespeneTabCurrent = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lib64DC5B97_gv_vespeneTabElement[init_i] = c_invalidDialogControlId;
    }
    lib64DC5B97_gv_vespeneTabWrongRace = c_invalidDialogControlId;
    lib64DC5B97_gv_rewardsDialogClose = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 63; init_i += 1) {
        lib64DC5B97_gv_rewardsDialogItem[init_i] = c_invalidDialogControlId;
    }
    lib64DC5B97_gv_monthName = "";
    lib64DC5B97_gv_editBoxPaypalLink = "patreon.com/join/Tya";
    lib64DC5B97_gv_editBoxPaypalDialog = c_invalidDialogControlId;
    lib64DC5B97_gv_editBoxHandleDialog = c_invalidDialogControlId;
    lib64DC5B97_gv_closeButton = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 4; init_i += 1) {
        lib64DC5B97_gv_addMoreVespeneButton[init_i] = c_invalidDialogControlId;
    }
    lib64DC5B97_gv_addMoreVespeneDialog = c_invalidDialogId;
    lib64DC5B97_gv_addMoreVespeneFallback = c_invalidDialogControlId;
    lib64DC5B97_gv_addMoreVespeneFallbackDialog = c_invalidDialogId;
    lib64DC5B97_gv_rewardsNotificationDialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 8; init_i += 1) {
        lib64DC5B97_gv_rewardsNotificationDialogItem[init_i] = c_invalidDialogControlId;
    }
    lib64DC5B97_gv_decorationData = "CurrentSubscribers";
    lib64DC5B97_gv_showVespeneStuff = true;
}

// Functions
void lib64DC5B97_gf_AddRaceProtoss () {
    // Automatic Variable Declarations
    playergroup auto9E70D371_g;
    int auto9E70D371_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("UI/Race/Protoss"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Zealot");
    lib64DC5B97_gf_AddSkin("ZealotTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ZealotPurifier", 1);
    lib64DC5B97_gf_AddSkin("ZealotGolden", 1);
    lib64DC5B97_gf_AddSkin("ZealotIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ZealotXPR", 1);
    lib64DC5B97_gf_AddSkin("ZealotRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    auto9E70D371_g = PlayerGroupActive();
    auto9E70D371_var = -1;
    while (true) {
        auto9E70D371_var = PlayerGroupNextPlayer(auto9E70D371_g, auto9E70D371_var);
        if (auto9E70D371_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto9E70D371_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto9E70D371_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Stalker");
    lib64DC5B97_gf_AddSkin("StalkerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("StalkerPurifier", 1);
    lib64DC5B97_gf_AddSkin("StalkerGolden", 1);
    lib64DC5B97_gf_AddSkin("StalkerIhanrii", 1);
    lib64DC5B97_gf_AddSkin("StalkerDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Sentry");
    lib64DC5B97_gf_AddSkin("SentryTaldarim", 1);
    lib64DC5B97_gf_AddSkin("SentryPurifier", 1);
    lib64DC5B97_gf_AddSkin("SentryGolden", 1);
    lib64DC5B97_gf_AddSkin("SentryIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Adept");
    lib64DC5B97_gf_AddSkin("AdeptTaldarim", 1);
    lib64DC5B97_gf_AddSkin("AdeptPurifier", 1);
    lib64DC5B97_gf_AddSkin("AdeptGolden", 1);
    lib64DC5B97_gf_AddSkin("AdeptIhanrii", 1);
    lib64DC5B97_gf_AddSkin("AdeptCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Observer");
    lib64DC5B97_gf_AddSkin("ObserverTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ObserverPurifier", 1);
    lib64DC5B97_gf_AddSkin("ObserverGolden", 1);
    lib64DC5B97_gf_AddSkin("ObserverIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("DarkTemplar");
    lib64DC5B97_gf_AddSkin("DarkTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarIhanrii", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarAiur", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Disruptor");
    lib64DC5B97_gf_AddSkin("DisruptorTaldarim", 1);
    lib64DC5B97_gf_AddSkin("DisruptorPurifier", 1);
    lib64DC5B97_gf_AddSkin("DisruptorGolden", 1);
    lib64DC5B97_gf_AddSkin("DisruptorIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Phoenix");
    lib64DC5B97_gf_AddSkin("PhoenixTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhoenixPurifier", 1);
    lib64DC5B97_gf_AddSkin("PhoenixGolden", 1);
    lib64DC5B97_gf_AddSkin("PhoenixIhanrii", 1);
    lib64DC5B97_gf_AddSkin("PhoenixGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HighTemplar");
    lib64DC5B97_gf_AddSkin("HighTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Immortal");
    lib64DC5B97_gf_AddSkin("ImmortalTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ImmortalPurifier", 1);
    lib64DC5B97_gf_AddSkin("ImmortalGolden", 1);
    lib64DC5B97_gf_AddSkin("ImmortalIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ImmortalAdun", 1);
    lib64DC5B97_gf_AddSkin("ImmortalNerazim", 1);
    lib64DC5B97_gf_AddSkin("ImmortalGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VoidRay");
    lib64DC5B97_gf_AddSkin("VoidRayTaldarim", 1);
    lib64DC5B97_gf_AddSkin("VoidRayPurifier", 1);
    lib64DC5B97_gf_AddSkin("VoidRayGolden", 1);
    lib64DC5B97_gf_AddSkin("VoidRayIhanrii", 1);
    lib64DC5B97_gf_AddSkin("VoidRayShakuras", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Colossus");
    lib64DC5B97_gf_AddSkin("ColossusTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ColossusPurifier", 1);
    lib64DC5B97_gf_AddSkin("ColossusGolden", 1);
    lib64DC5B97_gf_AddSkin("ColossusIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ColossusTal", 1);
    lib64DC5B97_gf_AddSkin("ColossusCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Tempest");
    lib64DC5B97_gf_AddSkin("TempestTaldarim", 1);
    lib64DC5B97_gf_AddSkin("TempestPurifier", 1);
    lib64DC5B97_gf_AddSkin("TempestGolden", 1);
    lib64DC5B97_gf_AddSkin("TempestIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Carrier");
    lib64DC5B97_gf_AddSkin("CarrierTaldarim", 1);
    lib64DC5B97_gf_AddSkin("CarrierPurifier", 1);
    lib64DC5B97_gf_AddSkin("CarrierGolden", 1);
    lib64DC5B97_gf_AddSkin("CarrierIhanrii", 1);
    lib64DC5B97_gf_AddSkin("Carrier_AmonBrood_Collection", 1);
    lib64DC5B97_gf_AddSkin("CarrierRemastered", 1);
    lib64DC5B97_gf_AddSkin("CarrierSelendis", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mothership");
    lib64DC5B97_gf_AddSkin("MothershipTaldarim", 1);
    lib64DC5B97_gf_AddSkin("MothershipPurifier", 1);
    lib64DC5B97_gf_AddSkin("MothershipGolden", 1);
    lib64DC5B97_gf_AddSkin("MothershipIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceTerran () {
    // Automatic Variable Declarations
    playergroup auto91CB50C8_g;
    int auto91CB50C8_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("UI/Race/Terran"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Marine");
    lib64DC5B97_gf_AddSkin("MarineCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarineJunker", 1);
    lib64DC5B97_gf_AddSkin("MarineUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarineSilver", 1);
    lib64DC5B97_gf_AddSkin("MarineXPR", 1);
    lib64DC5B97_gf_AddSkin("MarineRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    auto91CB50C8_g = PlayerGroupActive();
    auto91CB50C8_var = -1;
    while (true) {
        auto91CB50C8_var = PlayerGroupNextPlayer(auto91CB50C8_g, auto91CB50C8_var);
        if (auto91CB50C8_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto91CB50C8_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto91CB50C8_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Marauder");
    lib64DC5B97_gf_AddSkin("MarauderCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarauderJunker", 1);
    lib64DC5B97_gf_AddSkin("MarauderUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarauderSilver", 1);
    lib64DC5B97_gf_AddSkin("MarauderDeluxe", 1);
    lib64DC5B97_gf_AddSkin("MarauderMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Reaper");
    lib64DC5B97_gf_AddSkin("ReaperCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ReaperJunker", 1);
    lib64DC5B97_gf_AddSkin("ReaperUmojan", 1);
    lib64DC5B97_gf_AddSkin("ReaperSilver", 1);
    lib64DC5B97_gf_AddSkin("ReaperMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Ghost");
    lib64DC5B97_gf_AddSkin("GhostCovertOps", 1);
    lib64DC5B97_gf_AddSkin("GhostJunker", 1);
    lib64DC5B97_gf_AddSkin("GhostUmojan", 1);
    lib64DC5B97_gf_AddSkin("GhostSilver", 1);
    lib64DC5B97_gf_AddSkin("GhostEidolon", 1);
    lib64DC5B97_gf_AddSkin("GhostNova", 1);
    lib64DC5B97_gf_AddSkin("GhostMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Hellion");
    lib64DC5B97_gf_AddSkin("HellionCovertOps", 1);
    lib64DC5B97_gf_AddSkin("HellionJunkerMM", 1);
    lib64DC5B97_gf_AddSkin("HellionUmojan", 1);
    lib64DC5B97_gf_AddSkin("HellionSilver", 1);
    lib64DC5B97_gf_AddSkin("HellionJunker", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Medivac");
    lib64DC5B97_gf_AddSkin("MedivacCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MedivacJunker", 1);
    lib64DC5B97_gf_AddSkin("MedivacUmojan", 1);
    lib64DC5B97_gf_AddSkin("MedivacSilver", 1);
    lib64DC5B97_gf_AddSkin("MedivacMengsk", 1);
    lib64DC5B97_gf_AddSkin("MedivacMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Banshee");
    lib64DC5B97_gf_AddSkin("BansheeCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BansheeJunker", 1);
    lib64DC5B97_gf_AddSkin("BansheeUmojan", 1);
    lib64DC5B97_gf_AddSkin("BansheeSilver", 1);
    lib64DC5B97_gf_AddSkin("BansheeMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VikingFighter");
    lib64DC5B97_gf_AddSkin("VikingCovertOps", 1);
    lib64DC5B97_gf_AddSkin("VikingJunker", 1);
    lib64DC5B97_gf_AddSkin("VikingUmojan", 1);
    lib64DC5B97_gf_AddSkin("VikingSilver", 1);
    lib64DC5B97_gf_AddSkin("VikingMecha", 1);
    lib64DC5B97_gf_AddSkin("VikingMengsk", 1);
    lib64DC5B97_gf_AddSkin("VikingMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Raven");
    lib64DC5B97_gf_AddSkin("RavenCovertOps", 1);
    lib64DC5B97_gf_AddSkin("RavenJunker", 1);
    lib64DC5B97_gf_AddSkin("RavenUmojan", 1);
    lib64DC5B97_gf_AddSkin("RavenSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("SiegeTank");
    lib64DC5B97_gf_AddSkin("SiegeTankCovertOps", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankJunker", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankUmojan", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankSilver", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMerc", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMengsk", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMercenary", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Cyclone");
    lib64DC5B97_gf_AddSkin("CycloneCovertOps", 1);
    lib64DC5B97_gf_AddSkin("CycloneJunker", 1);
    lib64DC5B97_gf_AddSkin("CycloneUmojan", 1);
    lib64DC5B97_gf_AddSkin("CycloneSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("WidowMine");
    lib64DC5B97_gf_AddSkin("WidowMineCovertOps", 1);
    lib64DC5B97_gf_AddSkin("WidowMineJunker", 1);
    lib64DC5B97_gf_AddSkin("WidowMineUmojan", 1);
    lib64DC5B97_gf_AddSkin("WidowMineSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Liberator");
    lib64DC5B97_gf_AddSkin("LiberatorCovertOps", 1);
    lib64DC5B97_gf_AddSkin("LiberatorJunker", 1);
    lib64DC5B97_gf_AddSkin("LiberatorUmojan", 1);
    lib64DC5B97_gf_AddSkin("LiberatorSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Thor");
    lib64DC5B97_gf_AddSkin("ThorCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ThorJunker", 1);
    lib64DC5B97_gf_AddSkin("ThorUmojan", 1);
    lib64DC5B97_gf_AddSkin("ThorSilver", 1);
    lib64DC5B97_gf_AddSkin("ThorCE", 1);
    lib64DC5B97_gf_AddSkin("ThorMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Battlecruiser");
    lib64DC5B97_gf_AddSkin("BattlecruiserCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserJunker", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserUmojan", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserSilver", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserRemastered", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceZerg () {
    // Automatic Variable Declarations
    playergroup auto53F2557B_g;
    int auto53F2557B_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("UI/Race/Zerg"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Zergling");
    lib64DC5B97_gf_AddSkin("ZerglingWebby", 1);
    lib64DC5B97_gf_AddSkin("ZerglingPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZerglingMecha", 1);
    lib64DC5B97_gf_AddSkin("ZerglingRCZ", 1);
    lib64DC5B97_gf_AddSkin("ZerglingXPR", 1);
    lib64DC5B97_gf_LoadUnit();
    auto53F2557B_g = PlayerGroupActive();
    auto53F2557B_var = -1;
    while (true) {
        auto53F2557B_var = PlayerGroupNextPlayer(auto53F2557B_g, auto53F2557B_var);
        if (auto53F2557B_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto53F2557B_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto53F2557B_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Baneling");
    lib64DC5B97_gf_AddSkin("BanelingWebby", 1);
    lib64DC5B97_gf_AddSkin("BanelingPrimal", 1);
    lib64DC5B97_gf_AddSkin("BanelingMecha", 1);
    lib64DC5B97_gf_AddSkin("BanelingRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Roach");
    lib64DC5B97_gf_AddSkin("RoachWebby", 1);
    lib64DC5B97_gf_AddSkin("RoachPrimal", 1);
    lib64DC5B97_gf_AddSkin("RoachMecha", 1);
    lib64DC5B97_gf_AddSkin("RoachRCZ", 1);
    lib64DC5B97_gf_AddSkin("RoachDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Queen");
    lib64DC5B97_gf_AddSkin("QueenWebby", 1);
    lib64DC5B97_gf_AddSkin("QueenPrimal", 1);
    lib64DC5B97_gf_AddSkin("QueenMecha", 1);
    lib64DC5B97_gf_AddSkin("QueenRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Ravager");
    lib64DC5B97_gf_AddSkin("RavagerWebby", 1);
    lib64DC5B97_gf_AddSkin("RavagerPrimal", 1);
    lib64DC5B97_gf_AddSkin("RavagerMecha", 1);
    lib64DC5B97_gf_AddSkin("RavagerRCZ", 1);
    lib64DC5B97_gf_AddSkin("RavagerBone", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Overseer");
    lib64DC5B97_gf_AddSkin("OverSeerWebby", 1);
    lib64DC5B97_gf_AddSkin("OverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("OverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("OverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Hydralisk");
    lib64DC5B97_gf_AddSkin("HydraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("HydraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("HydraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("HydraliskNoxious", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("LurkerMP");
    lib64DC5B97_gf_AddSkin("LurkerWebby", 1);
    lib64DC5B97_gf_AddSkin("LurkerPrimal", 1);
    lib64DC5B97_gf_AddSkin("LurkerMecha", 1);
    lib64DC5B97_gf_AddSkin("LurkerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mutalisk");
    lib64DC5B97_gf_AddSkin("MutaliskWebby", 1);
    lib64DC5B97_gf_AddSkin("MutaliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("MutaliskMecha", 1);
    lib64DC5B97_gf_AddSkin("MutaliskRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Corruptor");
    lib64DC5B97_gf_AddSkin("CorruptorWebby", 1);
    lib64DC5B97_gf_AddSkin("CorruptorPrimal", 1);
    lib64DC5B97_gf_AddSkin("CorruptorMecha", 1);
    lib64DC5B97_gf_AddSkin("CorruptorRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Infestor");
    lib64DC5B97_gf_AddSkin("InfestorWebby", 1);
    lib64DC5B97_gf_AddSkin("InfestorPrimal", 1);
    lib64DC5B97_gf_AddSkin("InfestorMecha", 1);
    lib64DC5B97_gf_AddSkin("InfestorRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SwarmHostMP");
    lib64DC5B97_gf_AddSkin("SwarmHostWebby", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostPrimal", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Viper");
    lib64DC5B97_gf_AddSkin("ViperWebby", 1);
    lib64DC5B97_gf_AddSkin("ViperPrimal", 1);
    lib64DC5B97_gf_AddSkin("ViperMecha", 1);
    lib64DC5B97_gf_AddSkin("ViperRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Ultralisk");
    lib64DC5B97_gf_AddSkin("UltraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("UltraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("UltraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("UltraliskCE", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("BroodLord");
    lib64DC5B97_gf_AddSkin("BroodLordWebby", 1);
    lib64DC5B97_gf_AddSkin("BroodLordPrimal", 1);
    lib64DC5B97_gf_AddSkin("BroodLordMecha", 1);
    lib64DC5B97_gf_AddSkin("BroodLordRCZ", 1);
    lib64DC5B97_gf_AddSkin("BroodLord_PremiumSkin_Aquatic", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceRaynor () {
    // Automatic Variable Declarations
    playergroup autoC72EBBAC_g;
    int autoC72EBBAC_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Raynor"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Marine");
    lib64DC5B97_gf_AddSkin("MarineCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarineJunker", 1);
    lib64DC5B97_gf_AddSkin("MarineUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarineSilver", 1);
    lib64DC5B97_gf_AddSkin("MarineXPR", 1);
    lib64DC5B97_gf_AddSkin("MarineRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    autoC72EBBAC_g = PlayerGroupActive();
    autoC72EBBAC_var = -1;
    while (true) {
        autoC72EBBAC_var = PlayerGroupNextPlayer(autoC72EBBAC_g, autoC72EBBAC_var);
        if (autoC72EBBAC_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoC72EBBAC_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoC72EBBAC_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Marauder");
    lib64DC5B97_gf_AddSkin("MarauderCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarauderJunker", 1);
    lib64DC5B97_gf_AddSkin("MarauderUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarauderSilver", 1);
    lib64DC5B97_gf_AddSkin("MarauderDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("FirebatStarlight");
    lib64DC5B97_gf_AddSkin("FirebatMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("MedicStarlight");
    lib64DC5B97_gf_AddSkin("MedicKillSquad", 1);
    lib64DC5B97_gf_AddSkin("MedicMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("MissileTurret");
    lib64DC5B97_gf_AddSkin("MissileTurretCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MissileTurretSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Bunker");
    lib64DC5B97_gf_AddSkin("BunkerCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BunkerSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Banshee");
    lib64DC5B97_gf_AddSkin("BansheeCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BansheeJunker", 1);
    lib64DC5B97_gf_AddSkin("BansheeUmojan", 1);
    lib64DC5B97_gf_AddSkin("BansheeSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VikingFighter");
    lib64DC5B97_gf_AddSkin("VikingCovertOps", 1);
    lib64DC5B97_gf_AddSkin("VikingJunker", 1);
    lib64DC5B97_gf_AddSkin("VikingUmojan", 1);
    lib64DC5B97_gf_AddSkin("VikingSilver", 1);
    lib64DC5B97_gf_AddSkin("VikingMecha", 1);
    lib64DC5B97_gf_AddSkin("VikingMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("SiegeTank");
    lib64DC5B97_gf_AddSkin("SiegeTankCovertOps", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankJunker", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankUmojan", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankSilver", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMerc", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMercenary", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("BattlecruiserRaynor");
    lib64DC5B97_gf_AddSkin("BattlecruiserCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserJunker", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserUmojan", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserSilver", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceSwann () {
    // Automatic Variable Declarations
    playergroup autoCED248A0_g;
    int autoCED248A0_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Swann"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("HellionTank");
    lib64DC5B97_gf_AddSkin("HellionCovertOps", 1);
    lib64DC5B97_gf_AddSkin("HellionJunkerMM", 1);
    lib64DC5B97_gf_AddSkin("HellionUmojan", 1);
    lib64DC5B97_gf_AddSkin("HellionSilver", 1);
    lib64DC5B97_gf_AddSkin("HellionJunker", 1);
    lib64DC5B97_gf_LoadUnit();
    autoCED248A0_g = PlayerGroupActive();
    autoCED248A0_var = -1;
    while (true) {
        autoCED248A0_var = PlayerGroupNextPlayer(autoCED248A0_g, autoCED248A0_var);
        if (autoCED248A0_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoCED248A0_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoCED248A0_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("GoliathStarlight");
    lib64DC5B97_gf_AddSkin("GoliathMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("MissileTurret");
    lib64DC5B97_gf_AddSkin("MissileTurretCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MissileTurretSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Cyclone");
    lib64DC5B97_gf_AddSkin("CycloneCovertOps", 1);
    lib64DC5B97_gf_AddSkin("CycloneJunker", 1);
    lib64DC5B97_gf_AddSkin("CycloneUmojan", 1);
    lib64DC5B97_gf_AddSkin("CycloneSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("WraithStarlight");
    lib64DC5B97_gf_AddSkin("WraithJunker", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("SiegeTank");
    lib64DC5B97_gf_AddSkin("SiegeTankCovertOps", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankJunker", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankUmojan", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankSilver", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMerc", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMercenary", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Thor");
    lib64DC5B97_gf_AddSkin("ThorCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ThorJunker", 1);
    lib64DC5B97_gf_AddSkin("ThorUmojan", 1);
    lib64DC5B97_gf_AddSkin("ThorSilver", 1);
    lib64DC5B97_gf_AddSkin("ThorCE", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceNova () {
    // Automatic Variable Declarations
    playergroup auto266670C9_g;
    int auto266670C9_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Nova"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("EliteMarine");
    lib64DC5B97_gf_AddSkin("EliteMarineJunker", 1);
    lib64DC5B97_gf_AddSkin("EliteMarineUmojan", 1);
    lib64DC5B97_gf_AddSkin("EliteMarineSilver", 1);
    lib64DC5B97_gf_AddSkin("EliteMarineXPR", 1);
    lib64DC5B97_gf_AddSkin("EliteMarineRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    auto266670C9_g = PlayerGroupActive();
    auto266670C9_var = -1;
    while (true) {
        auto266670C9_var = PlayerGroupNextPlayer(auto266670C9_g, auto266670C9_var);
        if (auto266670C9_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto266670C9_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto266670C9_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("MarauderCommando");
    lib64DC5B97_gf_AddSkin("MarauderCommandoJunker", 1);
    lib64DC5B97_gf_AddSkin("MarauderCommandoUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarauderCommandoSilver", 1);
    lib64DC5B97_gf_AddSkin("MarauderCommandoDeluxe", 1);
    lib64DC5B97_gf_AddSkin("MarauderCommandoMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("HellbatRanger");
    lib64DC5B97_gf_AddSkin("HellbatRangerJunker", 1);
    lib64DC5B97_gf_AddSkin("HellbatRangerUmojan", 1);
    lib64DC5B97_gf_AddSkin("HellbatRangerSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SpecOpsGhost");
    lib64DC5B97_gf_AddSkin("NovaGhostCovertOps", 1);
    lib64DC5B97_gf_AddSkin("NovaGhostJunker", 1);
    lib64DC5B97_gf_AddSkin("NovaGhostUmojan", 1);
    lib64DC5B97_gf_AddSkin("NovaGhostSilver", 1);
    lib64DC5B97_gf_AddSkin("NovaGhostEidolon", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("CovertBanshee");
    lib64DC5B97_gf_AddSkin("CovertBansheeJunker", 1);
    lib64DC5B97_gf_AddSkin("CovertBansheeUmojan", 1);
    lib64DC5B97_gf_AddSkin("CovertBansheeSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HeavySiegeTank");
    lib64DC5B97_gf_AddSkin("HeavySiegeTankJunker", 1);
    lib64DC5B97_gf_AddSkin("HeavySiegeTankUmojan", 1);
    lib64DC5B97_gf_AddSkin("HeavySiegeTankSilver", 1);
    lib64DC5B97_gf_AddSkin("HeavySiegeTankMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("RaidLiberator");
    lib64DC5B97_gf_AddSkin("RaidLiberatorJunker", 1);
    lib64DC5B97_gf_AddSkin("RaidLiberatorUmojan", 1);
    lib64DC5B97_gf_AddSkin("RaidLiberatorSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("RavenTypeII");
    lib64DC5B97_gf_AddSkin("RavenTypeIIJunker", 1);
    lib64DC5B97_gf_AddSkin("RavenTypeIIUmojan", 1);
    lib64DC5B97_gf_AddSkin("RavenTypeIISilver", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceHorner () {
    // Automatic Variable Declarations
    playergroup autoFB84B288_g;
    int autoFB84B288_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Horner"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Reaper");
    lib64DC5B97_gf_AddSkin("ReaperCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ReaperJunker", 1);
    lib64DC5B97_gf_AddSkin("ReaperUmojan", 1);
    lib64DC5B97_gf_AddSkin("ReaperSilver", 1);
    lib64DC5B97_gf_AddSkin("ReaperMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    autoFB84B288_g = PlayerGroupActive();
    autoFB84B288_var = -1;
    while (true) {
        autoFB84B288_var = PlayerGroupNextPlayer(autoFB84B288_g, autoFB84B288_var);
        if (autoFB84B288_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoFB84B288_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoFB84B288_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Hellion");
    lib64DC5B97_gf_AddSkin("HellionCovertOps", 1);
    lib64DC5B97_gf_AddSkin("HellionJunkerMM", 1);
    lib64DC5B97_gf_AddSkin("HellionUmojan", 1);
    lib64DC5B97_gf_AddSkin("HellionSilver", 1);
    lib64DC5B97_gf_AddSkin("HellionJunker", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("VikingFighter");
    lib64DC5B97_gf_AddSkin("VikingCovertOps", 1);
    lib64DC5B97_gf_AddSkin("VikingJunker", 1);
    lib64DC5B97_gf_AddSkin("VikingUmojan", 1);
    lib64DC5B97_gf_AddSkin("VikingSilver", 1);
    lib64DC5B97_gf_AddSkin("VikingMecha", 1);
    lib64DC5B97_gf_AddSkin("VikingMengsk", 1);
    lib64DC5B97_gf_AddSkin("VikingMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Raven");
    lib64DC5B97_gf_AddSkin("RavenCovertOps", 1);
    lib64DC5B97_gf_AddSkin("RavenJunker", 1);
    lib64DC5B97_gf_AddSkin("RavenUmojan", 1);
    lib64DC5B97_gf_AddSkin("RavenSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("WidowMine");
    lib64DC5B97_gf_AddSkin("WidowMineCovertOps", 1);
    lib64DC5B97_gf_AddSkin("WidowMineJunker", 1);
    lib64DC5B97_gf_AddSkin("WidowMineUmojan", 1);
    lib64DC5B97_gf_AddSkin("WidowMineSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Battlecruiser");
    lib64DC5B97_gf_AddSkin("BattlecruiserCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserJunker", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserUmojan", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserSilver", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserRemastered", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceTychus () {
    // Automatic Variable Declarations
    playergroup auto293C0999_g;
    int auto293C0999_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Tychus"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Reaper");
    lib64DC5B97_gf_AddSkin("ReaperCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ReaperJunker", 1);
    lib64DC5B97_gf_AddSkin("ReaperUmojan", 1);
    lib64DC5B97_gf_AddSkin("ReaperSilver", 1);
    lib64DC5B97_gf_AddSkin("ReaperMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    auto293C0999_g = PlayerGroupActive();
    auto293C0999_var = -1;
    while (true) {
        auto293C0999_var = PlayerGroupNextPlayer(auto293C0999_g, auto293C0999_var);
        if (auto293C0999_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto293C0999_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto293C0999_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Marauder");
    lib64DC5B97_gf_AddSkin("MarauderCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarauderJunker", 1);
    lib64DC5B97_gf_AddSkin("MarauderUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarauderSilver", 1);
    lib64DC5B97_gf_AddSkin("MarauderDeluxe", 1);
    lib64DC5B97_gf_AddSkin("MarauderMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Ghost");
    lib64DC5B97_gf_AddSkin("GhostCovertOps", 1);
    lib64DC5B97_gf_AddSkin("GhostJunker", 1);
    lib64DC5B97_gf_AddSkin("GhostUmojan", 1);
    lib64DC5B97_gf_AddSkin("GhostSilver", 1);
    lib64DC5B97_gf_AddSkin("GhostEidolon", 1);
    lib64DC5B97_gf_AddSkin("GhostNova", 1);
    lib64DC5B97_gf_AddSkin("GhostMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
}

void lib64DC5B97_gf_AddRaceMengsk () {
    // Automatic Variable Declarations
    playergroup auto8620CDE4_g;
    int auto8620CDE4_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Mengsk"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Marine");
    lib64DC5B97_gf_AddSkin("MarineCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarineJunker", 1);
    lib64DC5B97_gf_AddSkin("MarineUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarineSilver", 1);
    lib64DC5B97_gf_AddSkin("MarineXPR", 1);
    lib64DC5B97_gf_AddSkin("MarineRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    auto8620CDE4_g = PlayerGroupActive();
    auto8620CDE4_var = -1;
    while (true) {
        auto8620CDE4_var = PlayerGroupNextPlayer(auto8620CDE4_g, auto8620CDE4_var);
        if (auto8620CDE4_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto8620CDE4_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto8620CDE4_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Marauder");
    lib64DC5B97_gf_AddSkin("MarauderCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MarauderJunker", 1);
    lib64DC5B97_gf_AddSkin("MarauderUmojan", 1);
    lib64DC5B97_gf_AddSkin("MarauderSilver", 1);
    lib64DC5B97_gf_AddSkin("MarauderDeluxe", 1);
    lib64DC5B97_gf_AddSkin("MarauderMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Zergling");
    lib64DC5B97_gf_AddSkin("ZerglingWebby", 1);
    lib64DC5B97_gf_AddSkin("ZerglingPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZerglingMecha", 1);
    lib64DC5B97_gf_AddSkin("ZerglingRCZ", 1);
    lib64DC5B97_gf_AddSkin("ZerglingXPR", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mutalisk");
    lib64DC5B97_gf_AddSkin("MutaliskWebby", 1);
    lib64DC5B97_gf_AddSkin("MutaliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("MutaliskMecha", 1);
    lib64DC5B97_gf_AddSkin("MutaliskRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Ultralisk");
    lib64DC5B97_gf_AddSkin("UltraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("UltraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("UltraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("UltraliskCE", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("MissileTurret");
    lib64DC5B97_gf_AddSkin("MissileTurretCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MissileTurretSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Bunker");
    lib64DC5B97_gf_AddSkin("BunkerCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BunkerSilver", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Ghost");
    lib64DC5B97_gf_AddSkin("GhostCovertOps", 1);
    lib64DC5B97_gf_AddSkin("GhostJunker", 1);
    lib64DC5B97_gf_AddSkin("GhostUmojan", 1);
    lib64DC5B97_gf_AddSkin("GhostSilver", 1);
    lib64DC5B97_gf_AddSkin("GhostEidolon", 1);
    lib64DC5B97_gf_AddSkin("GhostNova", 1);
    lib64DC5B97_gf_AddSkin("GhostMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Medivac");
    lib64DC5B97_gf_AddSkin("MedivacCovertOps", 1);
    lib64DC5B97_gf_AddSkin("MedivacJunker", 1);
    lib64DC5B97_gf_AddSkin("MedivacUmojan", 1);
    lib64DC5B97_gf_AddSkin("MedivacSilver", 1);
    lib64DC5B97_gf_AddSkin("MedivacMengsk", 1);
    lib64DC5B97_gf_AddSkin("MedivacMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VikingFighter");
    lib64DC5B97_gf_AddSkin("VikingCovertOps", 1);
    lib64DC5B97_gf_AddSkin("VikingJunker", 1);
    lib64DC5B97_gf_AddSkin("VikingUmojan", 1);
    lib64DC5B97_gf_AddSkin("VikingSilver", 1);
    lib64DC5B97_gf_AddSkin("VikingMecha", 1);
    lib64DC5B97_gf_AddSkin("VikingMengsk", 1);
    lib64DC5B97_gf_AddSkin("VikingMerc", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("SiegeTank");
    lib64DC5B97_gf_AddSkin("SiegeTankCovertOps", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankJunker", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankUmojan", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankSilver", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMerc", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMengsk", 1);
    lib64DC5B97_gf_AddSkin("SiegeTankMercenary", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Thor");
    lib64DC5B97_gf_AddSkin("ThorCovertOps", 1);
    lib64DC5B97_gf_AddSkin("ThorJunker", 1);
    lib64DC5B97_gf_AddSkin("ThorUmojan", 1);
    lib64DC5B97_gf_AddSkin("ThorSilver", 1);
    lib64DC5B97_gf_AddSkin("ThorCE", 1);
    lib64DC5B97_gf_AddSkin("ThorMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Battlecruiser");
    lib64DC5B97_gf_AddSkin("BattlecruiserCovertOps", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserJunker", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserUmojan", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserSilver", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserRemastered", 1);
    lib64DC5B97_gf_AddSkin("BattlecruiserMengsk", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceArtanis () {
    // Automatic Variable Declarations
    playergroup autoA1DFD1D8_g;
    int autoA1DFD1D8_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Artanis"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("HonorGuard");
    lib64DC5B97_gf_AddSkin("HonorGuardTaldarim", 1);
    lib64DC5B97_gf_AddSkin("HonorGuardGolden", 1);
    lib64DC5B97_gf_AddSkin("HonorGuardIhanrii", 1);
    lib64DC5B97_gf_AddSkin("HonorGuardXPR", 1);
    lib64DC5B97_gf_AddSkin("HonorGuardRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    autoA1DFD1D8_g = PlayerGroupActive();
    autoA1DFD1D8_var = -1;
    while (true) {
        autoA1DFD1D8_var = PlayerGroupNextPlayer(autoA1DFD1D8_g, autoA1DFD1D8_var);
        if (autoA1DFD1D8_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoA1DFD1D8_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoA1DFD1D8_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("PhotonCannon");
    lib64DC5B97_gf_AddSkin("PhotonCannonTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhotonCannonIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Observer");
    lib64DC5B97_gf_AddSkin("ObserverTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ObserverPurifier", 1);
    lib64DC5B97_gf_AddSkin("ObserverGolden", 1);
    lib64DC5B97_gf_AddSkin("ObserverIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Phoenix");
    lib64DC5B97_gf_AddSkin("PhoenixTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhoenixPurifier", 1);
    lib64DC5B97_gf_AddSkin("PhoenixGolden", 1);
    lib64DC5B97_gf_AddSkin("PhoenixIhanrii", 1);
    lib64DC5B97_gf_AddSkin("PhoenixGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HighTemplar");
    lib64DC5B97_gf_AddSkin("ArtanisHighTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("ArtanisHighTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("ArtanisHighTemplarIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ArtanisHighTemplarGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Immortal");
    lib64DC5B97_gf_AddSkin("ImmortalGolden", 1);
    lib64DC5B97_gf_AddSkin("ImmortalIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ImmortalAdun", 1);
    lib64DC5B97_gf_AddSkin("ImmortalGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HighArchon");
    lib64DC5B97_gf_AddSkin("HighArchonPurifier", 1);
    lib64DC5B97_gf_AddSkin("HighArchonGolden", 1);
    lib64DC5B97_gf_AddSkin("HighArchonIhanrii", 1);
    lib64DC5B97_gf_AddSkin("HighArchonGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("PurifierTempest");
    lib64DC5B97_gf_AddSkin("ArtanisTempestTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ArtanisTempestPurifier", 1);
    lib64DC5B97_gf_AddSkin("ArtanisTempestGolden", 1);
    lib64DC5B97_gf_AddSkin("ArtanisTempestIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceVorazun () {
    // Automatic Variable Declarations
    playergroup autoF548D52B_g;
    int autoF548D52B_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Vorazun"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Centurion");
    lib64DC5B97_gf_AddSkin("CenturionTaldarim", 1);
    lib64DC5B97_gf_AddSkin("CenturionPurifier", 1);
    lib64DC5B97_gf_AddSkin("CenturionGolden", 1);
    lib64DC5B97_gf_AddSkin("CenturionIhanrii", 1);
    lib64DC5B97_gf_AddSkin("CenturionXPR", 1);
    lib64DC5B97_gf_AddSkin("CenturionRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    autoF548D52B_g = PlayerGroupActive();
    autoF548D52B_var = -1;
    while (true) {
        autoF548D52B_var = PlayerGroupNextPlayer(autoF548D52B_g, autoF548D52B_var);
        if (autoF548D52B_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoF548D52B_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoF548D52B_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Stalker");
    lib64DC5B97_gf_AddSkin("StalkerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("StalkerPurifier", 1);
    lib64DC5B97_gf_AddSkin("StalkerGolden", 1);
    lib64DC5B97_gf_AddSkin("StalkerIhanrii", 1);
    lib64DC5B97_gf_AddSkin("StalkerDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("StalkerWeaponVorazun");
    lib64DC5B97_gf_AddSkin("VorazunWeaponStalkerGreen", 1);
    lib64DC5B97_gf_AddSkin("VorazunWeaponStalkerRed", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("DarkTemplar");
    lib64DC5B97_gf_AddSkin("DarkTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PhotonCannon");
    lib64DC5B97_gf_AddSkin("PhotonCannonTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhotonCannonIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("DarkArchonStarlight");
    lib64DC5B97_gf_AddSkin("DarkArchonPurifier", 1);
    lib64DC5B97_gf_AddSkin("DarkArchonGolden", 1);
    lib64DC5B97_gf_AddSkin("DarkArchonIhanrii", 1);
    lib64DC5B97_gf_AddSkin("DarkArchonGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Oracle");
    lib64DC5B97_gf_AddSkin("OracleTaldarim", 1);
    lib64DC5B97_gf_AddSkin("OraclePurifier", 1);
    lib64DC5B97_gf_AddSkin("OracleGolden", 1);
    lib64DC5B97_gf_AddSkin("OracleIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("VoidRayVorazun");
    lib64DC5B97_gf_AddSkin("VoidRayVorazunTaldarim", 1);
    lib64DC5B97_gf_AddSkin("VoidRayVorazunPurifier", 1);
    lib64DC5B97_gf_AddSkin("VoidRayVorazunGolden", 1);
    lib64DC5B97_gf_AddSkin("VoidRayVorazunIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VoidRayWeaponVorazun");
    lib64DC5B97_gf_AddSkin("VorazunWeaponVoidRayGreen", 1);
    lib64DC5B97_gf_AddSkin("VorazunWeaponVoidRayGold", 1);
    lib64DC5B97_gf_AddSkin("VorazunWeaponVoidRayRed", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceKarax () {
    // Automatic Variable Declarations
    playergroup autoD9D1B881_g;
    int autoD9D1B881_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Karax"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Energizer");
    lib64DC5B97_gf_AddSkin("EnergizerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("EnergizerPurifier", 1);
    lib64DC5B97_gf_AddSkin("EnergizerGolden", 1);
    lib64DC5B97_gf_AddSkin("EnergizerIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    autoD9D1B881_g = PlayerGroupActive();
    autoD9D1B881_var = -1;
    while (true) {
        autoD9D1B881_var = PlayerGroupNextPlayer(autoD9D1B881_g, autoD9D1B881_var);
        if (autoD9D1B881_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoD9D1B881_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoD9D1B881_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("PhotonCannon");
    lib64DC5B97_gf_AddSkin("PhotonCannonTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhotonCannonIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("ShieldBatteryPlaceholder");
    lib64DC5B97_gf_AddSkin("ShieldBatteryForged", 1);
    lib64DC5B97_gf_AddSkin("ShieldBatteryIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Observer");
    lib64DC5B97_gf_AddSkin("ObserverTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ObserverPurifier", 1);
    lib64DC5B97_gf_AddSkin("ObserverGolden", 1);
    lib64DC5B97_gf_AddSkin("ObserverIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mirage");
    lib64DC5B97_gf_AddSkin("MirageTaldarim", 1);
    lib64DC5B97_gf_AddSkin("MiragePurifier", 1);
    lib64DC5B97_gf_AddSkin("MirageGolden", 1);
    lib64DC5B97_gf_AddSkin("MirageIhanrii", 1);
    lib64DC5B97_gf_AddSkin("MirageGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Annihilator");
    lib64DC5B97_gf_AddSkin("AnnihilatorGolden", 1);
    lib64DC5B97_gf_AddSkin("AnnihilatorIhanrii", 1);
    lib64DC5B97_gf_AddSkin("AnnihilatorAdun", 1);
    lib64DC5B97_gf_AddSkin("AnnihilatorGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PurifierColossus");
    lib64DC5B97_gf_AddSkin("PurifierColossusTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierColossusGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierColossusIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("AiurCarrier");
    lib64DC5B97_gf_AddSkin("AiurCarrierTaldarim", 1);
    lib64DC5B97_gf_AddSkin("AiurCarrierGolden", 1);
    lib64DC5B97_gf_AddSkin("AiurCarrierIhanrii", 1);
    lib64DC5B97_gf_AddSkin("AiurCarrier_AmonBrood_Collection", 1);
    lib64DC5B97_gf_AddSkin("AiurCarrierRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("KaraxPurifierBeam");
    lib64DC5B97_gf_AddSkin("PurifierBeamUpgraded", 1);
    lib64DC5B97_gf_AddSkin("PurifierBeamForged", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceAlarak () {
    // Automatic Variable Declarations
    playergroup autoD134CE98_g;
    int autoD134CE98_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Alarak"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Slayer");
    lib64DC5B97_gf_AddSkin("StalkerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("StalkerPurifier", 1);
    lib64DC5B97_gf_AddSkin("StalkerGolden", 1);
    lib64DC5B97_gf_AddSkin("StalkerIhanrii", 1);
    lib64DC5B97_gf_AddSkin("StalkerDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    autoD134CE98_g = PlayerGroupActive();
    autoD134CE98_var = -1;
    while (true) {
        autoD134CE98_var = PlayerGroupNextPlayer(autoD134CE98_g, autoD134CE98_var);
        if (autoD134CE98_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoD134CE98_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoD134CE98_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("HavocStarlight");
    lib64DC5B97_gf_AddSkin("SentryTaldarim", 1);
    lib64DC5B97_gf_AddSkin("SentryPurifier", 1);
    lib64DC5B97_gf_AddSkin("SentryGolden", 1);
    lib64DC5B97_gf_AddSkin("SentryIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("PhotonCannonPermanentTaldarim");
    lib64DC5B97_gf_AddSkin("PhotonCannonTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhotonCannonIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("WarPrism");
    lib64DC5B97_gf_AddSkin("WarpPrismTaldarim", 1);
    lib64DC5B97_gf_AddSkin("WarpPrismPurifier", 1);
    lib64DC5B97_gf_AddSkin("WarpPrismGolden", 1);
    lib64DC5B97_gf_AddSkin("WarpPrismIhanrii", 1);
    lib64DC5B97_gf_AddSkin("WarpPrismNerazim", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("AscendantStarlight");
    lib64DC5B97_gf_AddSkin("HighTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Vanguard");
    lib64DC5B97_gf_AddSkin("ImmortalTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ImmortalPurifier", 1);
    lib64DC5B97_gf_AddSkin("ImmortalGolden", 1);
    lib64DC5B97_gf_AddSkin("ImmortalIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ImmortalAdun", 1);
    lib64DC5B97_gf_AddSkin("ImmortalNerazim", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Destroyer");
    lib64DC5B97_gf_AddSkin("VoidRayTaldarim", 1);
    lib64DC5B97_gf_AddSkin("VoidRayPurifier", 1);
    lib64DC5B97_gf_AddSkin("VoidRayGolden", 1);
    lib64DC5B97_gf_AddSkin("VoidRayIhanrii", 1);
    lib64DC5B97_gf_AddSkin("VoidRayShakuras", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Wrathwalker");
    lib64DC5B97_gf_AddSkin("ColossusTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ColossusPurifier", 1);
    lib64DC5B97_gf_AddSkin("ColossusGolden", 1);
    lib64DC5B97_gf_AddSkin("ColossusIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ColossusTal", 1);
    lib64DC5B97_gf_AddSkin("ColossusCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("MothershipTaldarim");
    lib64DC5B97_gf_AddSkin("MothershipTaldarim", 1);
    lib64DC5B97_gf_AddSkin("MothershipPurifier", 1);
    lib64DC5B97_gf_AddSkin("MothershipGolden", 1);
    lib64DC5B97_gf_AddSkin("MothershipIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceFenix () {
    // Automatic Variable Declarations
    playergroup auto42D8D222_g;
    int auto42D8D222_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Fenix"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Legionnaire");
    lib64DC5B97_gf_AddSkin("LegionnaireTaldarim", 1);
    lib64DC5B97_gf_AddSkin("LegionnaireGolden", 1);
    lib64DC5B97_gf_AddSkin("LegionnaireIhanrii", 1);
    lib64DC5B97_gf_AddSkin("LegionnaireXPR", 1);
    lib64DC5B97_gf_AddSkin("LegionnaireRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    auto42D8D222_g = PlayerGroupActive();
    auto42D8D222_var = -1;
    while (true) {
        auto42D8D222_var = PlayerGroupNextPlayer(auto42D8D222_g, auto42D8D222_var);
        if (auto42D8D222_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto42D8D222_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto42D8D222_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Kaldalis");
    lib64DC5B97_gf_AddSkin("KaldalisTaldarim", 1);
    lib64DC5B97_gf_AddSkin("KaldalisGolden", 1);
    lib64DC5B97_gf_AddSkin("KaldalisIhanrii", 1);
    lib64DC5B97_gf_AddSkin("KaldalisXPR", 1);
    lib64DC5B97_gf_AddSkin("KaldalisRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Conservator");
    lib64DC5B97_gf_AddSkin("ConservatorTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ConservatorGolden", 1);
    lib64DC5B97_gf_AddSkin("ConservatorIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("PurifierAdept");
    lib64DC5B97_gf_AddSkin("PurifierAdeptTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierAdeptGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierAdeptIhanrii", 1);
    lib64DC5B97_gf_AddSkin("PurifierAdeptCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PurifierTalis");
    lib64DC5B97_gf_AddSkin("TalisTaldarim", 1);
    lib64DC5B97_gf_AddSkin("TalisGolden", 1);
    lib64DC5B97_gf_AddSkin("TalisIhanrii", 1);
    lib64DC5B97_gf_AddSkin("TalisCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PhotonCannonPermanentPurifier");
    lib64DC5B97_gf_AddSkin("PurifierPhotonCannonForged", 1);
    lib64DC5B97_gf_AddSkin("PurifierPhotonCannonIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("PurifierImmortal");
    lib64DC5B97_gf_AddSkin("PurifierImmortalTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierImmortalGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierImmortalIhanrii", 1);
    lib64DC5B97_gf_AddSkin("PurifierImmortalAdun", 1);
    lib64DC5B97_gf_AddSkin("PurifierImmortalNerazim", 1);
    lib64DC5B97_gf_AddSkin("PurifierImmortalGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Taldarin");
    lib64DC5B97_gf_AddSkin("TaldarinTaldarim", 1);
    lib64DC5B97_gf_AddSkin("TaldarinGolden", 1);
    lib64DC5B97_gf_AddSkin("TaldarinIhanrii", 1);
    lib64DC5B97_gf_AddSkin("TaldarinAdun", 1);
    lib64DC5B97_gf_AddSkin("TaldarinNerazim", 1);
    lib64DC5B97_gf_AddSkin("TaldarinGreen", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PurifierObserver");
    lib64DC5B97_gf_AddSkin("PurifierObserverTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierObserverGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierObserverIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("PurifierColossusFenix");
    lib64DC5B97_gf_AddSkin("FenixColossusTaldarim", 1);
    lib64DC5B97_gf_AddSkin("FenixColossusGolden", 1);
    lib64DC5B97_gf_AddSkin("FenixColossusIhanrii", 1);
    lib64DC5B97_gf_AddSkin("FenixColossusTal", 1);
    lib64DC5B97_gf_AddSkin("FenixColossusCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Warbringer");
    lib64DC5B97_gf_AddSkin("WarbringerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("WarbringerGolden", 1);
    lib64DC5B97_gf_AddSkin("WarbringerIhanrii", 1);
    lib64DC5B97_gf_AddSkin("WarbringerTal", 1);
    lib64DC5B97_gf_AddSkin("WarbringerCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("PurifierDisruptor");
    lib64DC5B97_gf_AddSkin("PurifierDisruptorTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierDisruptorGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierDisruptorIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("PurifierCarrier");
    lib64DC5B97_gf_AddSkin("PurifierCarrierTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PurifierCarrierGolden", 1);
    lib64DC5B97_gf_AddSkin("PurifierCarrierIhanrii", 1);
    lib64DC5B97_gf_AddSkin("PurifierCarrierAmonBrood", 1);
    lib64DC5B97_gf_AddSkin("PurifierCarrierRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Clolarion");
    lib64DC5B97_gf_AddSkin("ClolarionTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ClolarionGolden", 1);
    lib64DC5B97_gf_AddSkin("ClolarionIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ClolarionAmonBrood", 1);
    lib64DC5B97_gf_AddSkin("ClolarionRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceZeratul () {
    // Automatic Variable Declarations
    playergroup autoE99AFB09_g;
    int autoE99AFB09_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    lib64DC5B97_gv_currentUnit4 = 50;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Zeratul"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Zealot");
    lib64DC5B97_gf_AddSkin("ZealotTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ZealotPurifier", 1);
    lib64DC5B97_gf_AddSkin("ZealotGolden", 1);
    lib64DC5B97_gf_AddSkin("ZealotIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ZealotXPR", 1);
    lib64DC5B97_gf_AddSkin("ZealotRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    autoE99AFB09_g = PlayerGroupActive();
    autoE99AFB09_var = -1;
    while (true) {
        autoE99AFB09_var = PlayerGroupNextPlayer(autoE99AFB09_g, autoE99AFB09_var);
        if (autoE99AFB09_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoE99AFB09_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoE99AFB09_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Stalker");
    lib64DC5B97_gf_AddSkin("StalkerTaldarim", 1);
    lib64DC5B97_gf_AddSkin("StalkerPurifier", 1);
    lib64DC5B97_gf_AddSkin("StalkerGolden", 1);
    lib64DC5B97_gf_AddSkin("StalkerIhanrii", 1);
    lib64DC5B97_gf_AddSkin("StalkerDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Sentry");
    lib64DC5B97_gf_AddSkin("SentryTaldarim", 1);
    lib64DC5B97_gf_AddSkin("SentryPurifier", 1);
    lib64DC5B97_gf_AddSkin("SentryGolden", 1);
    lib64DC5B97_gf_AddSkin("SentryIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Adept");
    lib64DC5B97_gf_AddSkin("AdeptTaldarim", 1);
    lib64DC5B97_gf_AddSkin("AdeptPurifier", 1);
    lib64DC5B97_gf_AddSkin("AdeptGolden", 1);
    lib64DC5B97_gf_AddSkin("AdeptIhanrii", 1);
    lib64DC5B97_gf_AddSkin("AdeptCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Observer");
    lib64DC5B97_gf_AddSkin("ObserverTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ObserverPurifier", 1);
    lib64DC5B97_gf_AddSkin("ObserverGolden", 1);
    lib64DC5B97_gf_AddSkin("ObserverIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("DarkTemplar");
    lib64DC5B97_gf_AddSkin("DarkTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarIhanrii", 1);
    lib64DC5B97_gf_AddSkin("DarkTemplarAiur", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Disruptor");
    lib64DC5B97_gf_AddSkin("DisruptorTaldarim", 1);
    lib64DC5B97_gf_AddSkin("DisruptorPurifier", 1);
    lib64DC5B97_gf_AddSkin("DisruptorGolden", 1);
    lib64DC5B97_gf_AddSkin("DisruptorIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Phoenix");
    lib64DC5B97_gf_AddSkin("PhoenixTaldarim", 1);
    lib64DC5B97_gf_AddSkin("PhoenixPurifier", 1);
    lib64DC5B97_gf_AddSkin("PhoenixGolden", 1);
    lib64DC5B97_gf_AddSkin("PhoenixIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HighTemplar");
    lib64DC5B97_gf_AddSkin("HighTemplarTaldarim", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarPurifier", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarGolden", 1);
    lib64DC5B97_gf_AddSkin("HighTemplarIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("Immortal");
    lib64DC5B97_gf_AddSkin("ImmortalTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ImmortalPurifier", 1);
    lib64DC5B97_gf_AddSkin("ImmortalGolden", 1);
    lib64DC5B97_gf_AddSkin("ImmortalIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ImmortalAdun", 1);
    lib64DC5B97_gf_AddSkin("ImmortalNerazim", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("VoidRay");
    lib64DC5B97_gf_AddSkin("VoidRayTaldarim", 1);
    lib64DC5B97_gf_AddSkin("VoidRayPurifier", 1);
    lib64DC5B97_gf_AddSkin("VoidRayGolden", 1);
    lib64DC5B97_gf_AddSkin("VoidRayIhanrii", 1);
    lib64DC5B97_gf_AddSkin("VoidRayShakuras", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Colossus");
    lib64DC5B97_gf_AddSkin("ColossusTaldarim", 1);
    lib64DC5B97_gf_AddSkin("ColossusPurifier", 1);
    lib64DC5B97_gf_AddSkin("ColossusGolden", 1);
    lib64DC5B97_gf_AddSkin("ColossusIhanrii", 1);
    lib64DC5B97_gf_AddSkin("ColossusTal", 1);
    lib64DC5B97_gf_AddSkin("ColossusCE", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Tempest");
    lib64DC5B97_gf_AddSkin("TempestTaldarim", 1);
    lib64DC5B97_gf_AddSkin("TempestPurifier", 1);
    lib64DC5B97_gf_AddSkin("TempestGolden", 1);
    lib64DC5B97_gf_AddSkin("TempestIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Carrier");
    lib64DC5B97_gf_AddSkin("CarrierTaldarim", 1);
    lib64DC5B97_gf_AddSkin("CarrierPurifier", 1);
    lib64DC5B97_gf_AddSkin("CarrierGolden", 1);
    lib64DC5B97_gf_AddSkin("CarrierIhanrii", 1);
    lib64DC5B97_gf_AddSkin("Carrier_AmonBrood_Collection", 1);
    lib64DC5B97_gf_AddSkin("CarrierRemastered", 1);
    lib64DC5B97_gf_AddSkin("CarrierSelendis", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mothership");
    lib64DC5B97_gf_AddSkin("MothershipTaldarim", 1);
    lib64DC5B97_gf_AddSkin("MothershipPurifier", 1);
    lib64DC5B97_gf_AddSkin("MothershipGolden", 1);
    lib64DC5B97_gf_AddSkin("MothershipIhanrii", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceKerrigan () {
    // Automatic Variable Declarations
    playergroup auto0FDE819F_g;
    int auto0FDE819F_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Kerrigan"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("Raptorling");
    lib64DC5B97_gf_AddSkin("RaptorlingWebby", 1);
    lib64DC5B97_gf_AddSkin("RaptorlingPrimal", 1);
    lib64DC5B97_gf_AddSkin("RaptorlingMecha", 1);
    lib64DC5B97_gf_AddSkin("RaptorlingRCZ", 1);
    lib64DC5B97_gf_AddSkin("RaptorlingXPR", 1);
    lib64DC5B97_gf_LoadUnit();
    auto0FDE819F_g = PlayerGroupActive();
    auto0FDE819F_var = -1;
    while (true) {
        auto0FDE819F_var = PlayerGroupNextPlayer(auto0FDE819F_g, auto0FDE819F_var);
        if (auto0FDE819F_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto0FDE819F_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto0FDE819F_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Queen");
    lib64DC5B97_gf_AddSkin("QueenWebby", 1);
    lib64DC5B97_gf_AddSkin("QueenPrimal", 1);
    lib64DC5B97_gf_AddSkin("QueenMecha", 1);
    lib64DC5B97_gf_AddSkin("QueenRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SpineCrawler");
    lib64DC5B97_gf_AddSkin("SpineCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SpineCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SporeCrawler");
    lib64DC5B97_gf_AddSkin("SporeCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SporeCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Hydralisk");
    lib64DC5B97_gf_AddSkin("HydraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("HydraliskNoxious", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Overseer");
    lib64DC5B97_gf_AddSkin("OverSeerWebby", 1);
    lib64DC5B97_gf_AddSkin("OverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("OverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("OverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("BroodMutalisk");
    lib64DC5B97_gf_AddSkin("BroodMutaliskWebby", 1);
    lib64DC5B97_gf_AddSkin("BroodMutaliskMecha", 1);
    lib64DC5B97_gf_AddSkin("BroodMutaliskRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("LurkerMP");
    lib64DC5B97_gf_AddSkin("LurkerWebby", 1);
    lib64DC5B97_gf_AddSkin("LurkerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("HeroKerriganWaveUnit");
    lib64DC5B97_gf_AddSkin("KerriganAscended", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Torrasque");
    lib64DC5B97_gf_AddSkin("TorrasqueRCZ", 1);
    lib64DC5B97_gf_AddSkin("TorrasqueRemastered", 1);
    lib64DC5B97_gf_AddSkin("TorrasqueNoxious", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("BroodLord");
    lib64DC5B97_gf_AddSkin("BroodLordWebby", 1);
    lib64DC5B97_gf_AddSkin("BroodLordPrimal", 1);
    lib64DC5B97_gf_AddSkin("BroodLordRCZ", 1);
    lib64DC5B97_gf_AddSkin("BroodLord_PremiumSkin_Aquatic", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceZagara () {
    // Automatic Variable Declarations
    playergroup auto15136A94_g;
    int auto15136A94_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Zagara"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("SwarmlingStarlight");
    lib64DC5B97_gf_AddSkin("SwarmlingPrimal", 1);
    lib64DC5B97_gf_AddSkin("SwarmlingMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmlingRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    auto15136A94_g = PlayerGroupActive();
    auto15136A94_var = -1;
    while (true) {
        auto15136A94_var = PlayerGroupNextPlayer(auto15136A94_g, auto15136A94_var);
        if (auto15136A94_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto15136A94_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto15136A94_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("Splitterling");
    lib64DC5B97_gf_AddSkin("SplitterlingPrimal", 1);
    lib64DC5B97_gf_AddSkin("SplitterlingMecha", 1);
    lib64DC5B97_gf_AddSkin("SplitterlingRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("SpineCrawler");
    lib64DC5B97_gf_AddSkin("SpineCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SpineCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SporeCrawler");
    lib64DC5B97_gf_AddSkin("SporeCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SporeCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("ZagaraQueen");
    lib64DC5B97_gf_AddSkin("ZagaraPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZagaraMecha", 1);
    lib64DC5B97_gf_AddSkin("ZagaraQueenRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("OverseerZagara");
    lib64DC5B97_gf_AddSkin("ZagaraOverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZagaraOverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("ZagaraOverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("CorruptorZagara");
    lib64DC5B97_gf_AddSkin("ZagaraCorruptorPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZagaraCorruptorMecha", 1);
    lib64DC5B97_gf_AddSkin("ZagaraCorruptorRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("ZagaraRoach");
    lib64DC5B97_gf_AddSkin("ZagaraRoachWebby", 1);
    lib64DC5B97_gf_AddSkin("ZagaraRoachPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZagaraRoachMecha", 1);
    lib64DC5B97_gf_AddSkin("ZagaraRoachRCZ", 1);
    lib64DC5B97_gf_AddSkin("ZagaraRoachDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("HunterKillerZagara");
    lib64DC5B97_gf_AddSkin("HunterKillerWebby", 1);
    lib64DC5B97_gf_AddSkin("HunterKillerPrimal", 1);
    lib64DC5B97_gf_AddSkin("HunterKillerMecha", 1);
    lib64DC5B97_gf_AddSkin("HunterKillerRCZ", 1);
    lib64DC5B97_gf_AddSkin("HunterKillerNoxious", 1);
    lib64DC5B97_gf_AddSkin("HunterKillerRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
}

void lib64DC5B97_gf_AddRaceAbathur () {
    // Automatic Variable Declarations
    playergroup auto266C4247_g;
    int auto266C4247_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Abathur"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("VileRoach");
    lib64DC5B97_gf_AddSkin("VileRoachWebby", 1);
    lib64DC5B97_gf_AddSkin("VileRoachPrimal", 1);
    lib64DC5B97_gf_AddSkin("VileRoachMecha", 1);
    lib64DC5B97_gf_AddSkin("VileRoachRCZ", 1);
    lib64DC5B97_gf_AddSkin("VileRoachDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    auto266C4247_g = PlayerGroupActive();
    auto266C4247_var = -1;
    while (true) {
        auto266C4247_var = PlayerGroupNextPlayer(auto266C4247_g, auto266C4247_var);
        if (auto266C4247_var < 0) { break; }
        lib64DC5B97_gv_playerRace[auto266C4247_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(auto266C4247_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("SwarmQueenStarlight");
    lib64DC5B97_gf_AddSkin("SwarmQueenPrimal", 1);
    lib64DC5B97_gf_AddSkin("SwarmQueenMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmQueenRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SpineCrawler");
    lib64DC5B97_gf_AddSkin("SpineCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SpineCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SporeCrawler");
    lib64DC5B97_gf_AddSkin("SporeCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SporeCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("Ravager");
    lib64DC5B97_gf_AddSkin("RavagerWebby", 1);
    lib64DC5B97_gf_AddSkin("RavagerPrimal", 1);
    lib64DC5B97_gf_AddSkin("RavagerMecha", 1);
    lib64DC5B97_gf_AddSkin("RavagerRCZ", 1);
    lib64DC5B97_gf_AddSkin("RavagerBone", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Overseer");
    lib64DC5B97_gf_AddSkin("OverSeerWebby", 1);
    lib64DC5B97_gf_AddSkin("OverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("OverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("OverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("Mutalisk");
    lib64DC5B97_gf_AddSkin("MutaliskWebby", 1);
    lib64DC5B97_gf_AddSkin("MutaliskMecha", 1);
    lib64DC5B97_gf_AddSkin("MutaliskRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("SwarmHostMP");
    lib64DC5B97_gf_AddSkin("SwarmHostWebby", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("Viper");
    lib64DC5B97_gf_AddSkin("ViperWebby", 1);
    lib64DC5B97_gf_AddSkin("ViperPrimal", 1);
    lib64DC5B97_gf_AddSkin("ViperMecha", 1);
    lib64DC5B97_gf_AddSkin("ViperRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("LeviathanStarlight");
    lib64DC5B97_gf_AddSkin("LeviathanIce", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceStukov () {
    // Automatic Variable Declarations
    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Stukov"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("Overseer");
    lib64DC5B97_gf_AddSkin("OverSeerWebby", 1);
    lib64DC5B97_gf_AddSkin("OverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("OverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("OverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
}

void lib64DC5B97_gf_AddRaceDehaka () {
    // Automatic Variable Declarations
    playergroup autoC72ED569_g;
    int autoC72ED569_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Dehaka"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("DehakaPrimalZergling");
    lib64DC5B97_gf_AddSkin("ZerglingWebby", 1);
    lib64DC5B97_gf_AddSkin("ZerglingPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZerglingMecha", 1);
    lib64DC5B97_gf_AddSkin("ZerglingRCZ", 1);
    lib64DC5B97_gf_AddSkin("ZerglingXPR", 1);
    lib64DC5B97_gf_LoadUnit();
    autoC72ED569_g = PlayerGroupActive();
    autoC72ED569_var = -1;
    while (true) {
        autoC72ED569_var = PlayerGroupNextPlayer(autoC72ED569_g, autoC72ED569_var);
        if (autoC72ED569_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoC72ED569_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoC72ED569_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("DehakaPrimalRoach");
    lib64DC5B97_gf_AddSkin("RoachWebby", 1);
    lib64DC5B97_gf_AddSkin("RoachPrimal", 1);
    lib64DC5B97_gf_AddSkin("RoachMecha", 1);
    lib64DC5B97_gf_AddSkin("RoachRCZ", 1);
    lib64DC5B97_gf_AddSkin("RoachDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("DehakaPrimalHydralisk");
    lib64DC5B97_gf_AddSkin("HydraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("HydraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("HydraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("HydraliskNoxious", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("DehakaPrimalMutalisk");
    lib64DC5B97_gf_AddSkin("MutaliskWebby", 1);
    lib64DC5B97_gf_AddSkin("MutaliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("MutaliskMecha", 1);
    lib64DC5B97_gf_AddSkin("MutaliskRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("DehakaPrimalIgniter");
    lib64DC5B97_gf_AddSkin("RoachWebby", 1);
    lib64DC5B97_gf_AddSkin("RoachPrimal", 1);
    lib64DC5B97_gf_AddSkin("RoachMecha", 1);
    lib64DC5B97_gf_AddSkin("RoachRCZ", 1);
    lib64DC5B97_gf_AddSkin("RoachDeluxe", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("DehakaImpaler");
    lib64DC5B97_gf_AddSkin("LurkerWebby", 1);
    lib64DC5B97_gf_AddSkin("LurkerPrimal", 1);
    lib64DC5B97_gf_AddSkin("LurkerMecha", 1);
    lib64DC5B97_gf_AddSkin("LurkerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("DehakaPrimalHost");
    lib64DC5B97_gf_AddSkin("SwarmHostWebby", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostPrimal", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("DehakaPrimalUltralisk");
    lib64DC5B97_gf_AddSkin("UltraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("UltraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("UltraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("UltraliskCE", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("DehakaCreeperHost");
    lib64DC5B97_gf_AddSkin("SwarmHostWebby", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostPrimal", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostMecha", 1);
    lib64DC5B97_gf_AddSkin("SwarmHostRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
}

void lib64DC5B97_gf_AddRaceStetmann () {
    // Automatic Variable Declarations
    playergroup autoD28CE3A1_g;
    int autoD28CE3A1_var;

    // Implementation
    lib64DC5B97_gv_currentUnit3 += 1;
    lib64DC5B97_gv_currentUnit = 0;
    DialogCreate(DialogGetWidth(lib64DC5B97_gv_dialogMain), DialogGetHeight(lib64DC5B97_gv_dialogMain), DialogGetAnchor(lib64DC5B97_gv_dialogMain), DialogGetOffsetX(lib64DC5B97_gv_dialogMain), DialogGetOffsetY(lib64DC5B97_gv_dialogMain), true);
    lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogControlAddItem(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), StringExternal("Commander/Name/Stetmann"));
    lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_currentUnit3] = lib64DC5B97_gv_dialogItemUnitsCurrent;
    lib64DC5B97_gv_currentUnit4 = 100;
    lib64DC5B97_gf_AddUnit("ZerglingStetmann");
    lib64DC5B97_gf_AddSkin("ZerglingWebby", 1);
    lib64DC5B97_gf_AddSkin("ZerglingPrimal", 1);
    lib64DC5B97_gf_AddSkin("ZerglingMecha", 1);
    lib64DC5B97_gf_AddSkin("ZerglingRCZ", 1);
    lib64DC5B97_gf_AddSkin("ZerglingXPR", 1);
    lib64DC5B97_gf_LoadUnit();
    autoD28CE3A1_g = PlayerGroupActive();
    autoD28CE3A1_var = -1;
    while (true) {
        autoD28CE3A1_var = PlayerGroupNextPlayer(autoD28CE3A1_g, autoD28CE3A1_var);
        if (autoD28CE3A1_var < 0) { break; }
        lib64DC5B97_gv_playerRace[autoD28CE3A1_var] = lib64DC5B97_gv_currentUnit3;
        lib64DC5B97_gf_ToggleUnitTab(autoD28CE3A1_var, (lib64DC5B97_gv_dialogItemUnitsCurrent - 1), false);
    }
    lib64DC5B97_gf_AddUnit("BanelingStetmann");
    lib64DC5B97_gf_AddSkin("BanelingWebby", 1);
    lib64DC5B97_gf_AddSkin("BanelingPrimal", 1);
    lib64DC5B97_gf_AddSkin("BanelingMecha", 1);
    lib64DC5B97_gf_AddSkin("BanelingRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 200;
    lib64DC5B97_gv_currentUnit = 3;
    lib64DC5B97_gf_AddUnit("SpineCrawlerStetmann");
    lib64DC5B97_gf_AddSkin("SpineCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SpineCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("SporeCrawlerStetmann");
    lib64DC5B97_gf_AddSkin("SporeCrawlerMecha", 1);
    lib64DC5B97_gf_AddSkin("SporeCrawlerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("OverseerStetmann");
    lib64DC5B97_gf_AddSkin("OverSeerWebby", 1);
    lib64DC5B97_gf_AddSkin("OverseerPrimal", 1);
    lib64DC5B97_gf_AddSkin("OverseerMecha", 1);
    lib64DC5B97_gf_AddSkin("OverseerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 300;
    lib64DC5B97_gv_currentUnit = 6;
    lib64DC5B97_gf_AddUnit("HydraliskStetmann");
    lib64DC5B97_gf_AddSkin("HydraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("HydraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("HydraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("HydraliskNoxious", 1);
    lib64DC5B97_gf_AddSkin("HydraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("LurkerStetmann");
    lib64DC5B97_gf_AddSkin("LurkerWebby", 1);
    lib64DC5B97_gf_AddSkin("LurkerPrimal", 1);
    lib64DC5B97_gf_AddSkin("LurkerMecha", 1);
    lib64DC5B97_gf_AddSkin("LurkerRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 400;
    lib64DC5B97_gv_currentUnit = 9;
    lib64DC5B97_gf_AddUnit("CorruptorStetmann");
    lib64DC5B97_gf_AddSkin("CorruptorWebby", 1);
    lib64DC5B97_gf_AddSkin("CorruptorPrimal", 1);
    lib64DC5B97_gf_AddSkin("CorruptorMecha", 1);
    lib64DC5B97_gf_AddSkin("CorruptorRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("InfestorStetmann");
    lib64DC5B97_gf_AddSkin("InfestorWebby", 1);
    lib64DC5B97_gf_AddSkin("InfestorPrimal", 1);
    lib64DC5B97_gf_AddSkin("InfestorMecha", 1);
    lib64DC5B97_gf_AddSkin("InfestorRCZ", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gv_currentUnit4 = 500;
    lib64DC5B97_gv_currentUnit = 12;
    lib64DC5B97_gf_AddUnit("UltraliskStetmann");
    lib64DC5B97_gf_AddSkin("UltraliskWebby", 1);
    lib64DC5B97_gf_AddSkin("UltraliskPrimal", 1);
    lib64DC5B97_gf_AddSkin("UltraliskMecha", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRCZ", 1);
    lib64DC5B97_gf_AddSkin("UltraliskCE", 1);
    lib64DC5B97_gf_AddSkin("UltraliskRemastered", 1);
    lib64DC5B97_gf_LoadUnit();
    lib64DC5B97_gf_AddUnit("BroodLordStetmann");
    lib64DC5B97_gf_AddSkin("BroodLordWebby", 1);
    lib64DC5B97_gf_AddSkin("BroodLordPrimal", 1);
    lib64DC5B97_gf_AddSkin("BroodLordMecha", 1);
    lib64DC5B97_gf_AddSkin("BroodLordRCZ", 1);
    lib64DC5B97_gf_AddSkin("BroodLord_PremiumSkin_Aquatic", 1);
    lib64DC5B97_gf_LoadUnit();
}

string lib64DC5B97_gf_RestorePlayerSkin (int lp_player, string lp_unitType) {
    // Variable Declarations
    int lv_index;
    string lv_return;

    // Automatic Variable Declarations
    string autoEAD5216C_val;

    // Variable Initialization

    // Implementation
    autoEAD5216C_val = lp_unitType;
    if (autoEAD5216C_val == "Zealot") {
        lv_index = 0;

    }
    else if (autoEAD5216C_val == "Stalker") {
        lv_index = 1;

    }
    else if (autoEAD5216C_val == "Sentry") {
        lv_index = 2;

    }
    else if (autoEAD5216C_val == "Adept") {
        lv_index = 3;

    }
    else if (autoEAD5216C_val == "Observer") {
        lv_index = 4;

    }
    else if (autoEAD5216C_val == "DarkTemplar") {
        lv_index = 5;

    }
    else if (autoEAD5216C_val == "Disruptor") {
        lv_index = 6;

    }
    else if (autoEAD5216C_val == "Phoenix") {
        lv_index = 7;

    }
    else if (autoEAD5216C_val == "HighTemplar") {
        lv_index = 8;

    }
    else if (autoEAD5216C_val == "Immortal") {
        lv_index = 9;

    }
    else if (autoEAD5216C_val == "VoidRay") {
        lv_index = 10;

    }
    else if (autoEAD5216C_val == "Colossus") {
        lv_index = 11;

    }
    else if (autoEAD5216C_val == "Tempest") {
        lv_index = 12;

    }
    else if (autoEAD5216C_val == "Carrier") {
        lv_index = 13;

    }
    else if (autoEAD5216C_val == "Mothership") {
        lv_index = 14;

    }
    else if (autoEAD5216C_val == "Marine") {
        lv_index = 0;

    }
    else if (autoEAD5216C_val == "Marauder") {
        lv_index = 1;

    }
    else if (autoEAD5216C_val == "Reaper") {
        lv_index = 2;

    }
    else if (autoEAD5216C_val == "Ghost") {
        lv_index = 3;

    }
    else if (autoEAD5216C_val == "Hellion") {
        lv_index = 4;

    }
    else if (autoEAD5216C_val == "Medivac") {
        lv_index = 5;

    }
    else if (autoEAD5216C_val == "Banshee") {
        lv_index = 6;

    }
    else if (autoEAD5216C_val == "VikingFighter") {
        lv_index = 7;

    }
    else if (autoEAD5216C_val == "Raven") {
        lv_index = 8;

    }
    else if (autoEAD5216C_val == "SiegeTank") {
        lv_index = 9;

    }
    else if (autoEAD5216C_val == "Cyclone") {
        lv_index = 10;

    }
    else if (autoEAD5216C_val == "WidowMine") {
        lv_index = 11;

    }
    else if (autoEAD5216C_val == "Liberator") {
        lv_index = 12;

    }
    else if (autoEAD5216C_val == "ThorAP") {
        lv_index = 13;

    }
    else if (autoEAD5216C_val == "Battlecruiser") {
        lv_index = 14;

    }
    else if (autoEAD5216C_val == "Zergling") {
        lv_index = 0;

    }
    else if (autoEAD5216C_val == "Baneling") {
        lv_index = 1;

    }
    else if (autoEAD5216C_val == "Roach") {
        lv_index = 2;

    }
    else if (autoEAD5216C_val == "Queen") {
        lv_index = 3;

    }
    else if (autoEAD5216C_val == "Ravager") {
        lv_index = 4;

    }
    else if (autoEAD5216C_val == "Overseer") {
        lv_index = 5;

    }
    else if (autoEAD5216C_val == "Hydralisk") {
        lv_index = 6;

    }
    else if (autoEAD5216C_val == "LurkerMP") {
        lv_index = 7;

    }
    else if (autoEAD5216C_val == "Mutalisk") {
        lv_index = 8;

    }
    else if (autoEAD5216C_val == "Corruptor") {
        lv_index = 9;

    }
    else if (autoEAD5216C_val == "Infestor") {
        lv_index = 10;

    }
    else if (autoEAD5216C_val == "SwarmHostMP") {
        lv_index = 11;

    }
    else if (autoEAD5216C_val == "Viper") {
        lv_index = 12;

    }
    else if (autoEAD5216C_val == "Ultralisk") {
        lv_index = 13;

    }
    else if (autoEAD5216C_val == "BroodLord") {
        lv_index = 14;

    }
    else {
    }
    lv_return = lib64DC5B97_gv_storedSkins[lp_player][lv_index];
    return lv_return;
}

void lib64DC5B97_gf_StorePlayerSkins (int lp_player, string lp_race) {
    // Variable Declarations
    int lv_index;
    string lv_unitType;

    // Automatic Variable Declarations
    string auto115D2092_val;

    // Variable Initialization

    // Implementation
    auto115D2092_val = lp_race;
    if (auto115D2092_val == "Prot") {
        lv_unitType = "Zealot";
        lib64DC5B97_gv_found = false;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZealotSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZealotTaldarim", "ZealotTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZealotPurifier", "ZealotPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinZealotGolden", "ZealotGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinZealotIhanrii", "ZealotIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZealotSkin", "ZealotXPR", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinZealotRemastered", "ZealotRemastered", lv_index);
        lv_unitType = "Stalker";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "StalkerSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "StalkerTaldarim", "StalkerTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "StalkerPurifier", "StalkerPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinStalkerGolden", "StalkerGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinStalkerIhanrii", "StalkerIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "StalkerSkinDeluxe", "StalkerDeluxe", lv_index);
        lv_unitType = "Sentry";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SentrySkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SentryTaldarim", "SentryTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SentryPurifier", "SentryPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinSentryGolden", "SentryGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinSentryIhanrii", "SentryIhanrii", lv_index);
        lv_unitType = "Adept";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "AdeptCEOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "AdeptTaldarim", "AdeptTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "AdeptPurifier", "AdeptPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinAdeptGolden", "AdeptGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinAdeptIhanrii", "AdeptIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "AdeptCE", "AdeptCE", lv_index);
        lv_unitType = "Observer";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ObserverSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ObserverTaldarim", "ObserverTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ObserverPurifier", "ObserverPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinObserverGolden", "ObserverGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinObserverIhanrii", "ObserverIhanrii", lv_index);
        lv_unitType = "DarkTemplar";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DarkTemplarSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DarkTemplarTaldarim", "DarkTemplarTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DarkTemplarPurifier", "DarkTemplarPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinDarkTemplarGolden", "DarkTemplarGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinDarkTemplarIhanrii", "DarkTemplarIhanrii", lv_index);
        lv_unitType = "Disruptor";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DisruptorSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DisruptorTaldarim", "DisruptorTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "DisruptorPurifier", "DisruptorPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinDisruptorGolden", "DisruptorGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinDisruptorIhanrii", "DisruptorIhanrii", lv_index);
        lv_unitType = "Phoenix";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "PhoenixSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "PhoenixTaldarim", "PhoenixTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "PhoenixPurifier", "PhoenixPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinPhoenixGolden", "PhoenixGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinPhoenixIhanrii", "PhoenixIhanrii", lv_index);
        lv_unitType = "HighTemplar";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HighTemplarSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HighTemplarTaldarim", "HighTemplarTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HighTemplarPurifier", "HighTemplarPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHighTemplarGolden", "HighTemplarGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHighTemplarIhanrii", "HighTemplarIhanrii", lv_index);
        lv_unitType = "Immortal";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ImmortalSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ImmortalTaldarim", "ImmortalTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ImmortalPurifier", "ImmortalPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinImmortalGolden", "ImmortalGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinImmortalIhanrii", "ImmortalIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ImmortalSkinAdun", "ImmortalAdun", lv_index);
        lv_unitType = "VoidRay";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VoidRaySkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VoidRayTaldarim", "VoidRayTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VoidRayPurifier", "VoidRayPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinVoidRayGolden", "VoidRayGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinVoidRayIhanrii", "VoidRayIhanrii", lv_index);
        lv_unitType = "Colossus";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ColossusCEOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ColossusTaldarim", "ColossusTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ColossusPurifier", "ColossusPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinColossusGolden", "ColossusGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinColossusIhanrii", "ColossusIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ColossusTal", "ColossusTal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ColossusCE", "ColossusCE", lv_index);
        lv_unitType = "Tempest";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "TempestSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "TempestTaldarim", "TempestTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "TempestPurifier", "TempestPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinTempestGolden", "TempestGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinTempestIhanrii", "TempestIhanrii", lv_index);
        lv_unitType = "Carrier";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CarrierSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CarrierTaldarim", "CarrierTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CarrierPurifier", "CarrierPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCarrierGolden", "CarrierGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCarrierIhanrii", "CarrierIhanrii", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "Carrier_AmonBrood_Collection", "Carrier_AmonBrood_Collection", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCarrierRemastered", "CarrierRemastered", lv_index);
        lv_unitType = "Mothership";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MothershipSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MothershipTaldarim", "MothershipTaldarim", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MothershipPurifier", "MothershipPurifier", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMothershipGolden", "MothershipGolden", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMothershipIhanrii", "MothershipIhanrii", lv_index);
    }
    else if (auto115D2092_val == "Terr") {
        lv_unitType = "Marine";
        lib64DC5B97_gv_found = false;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarineSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarineCovertOps", "MarineCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarineJunker", "MarineJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMarineUmojan", "MarineUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMarineSilver", "MarineSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarineSkin", "MarineXPR", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMarineRemastered", "MarineRemastered", lv_index);
        lv_unitType = "Marauder";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarauderSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarauderCovertOps", "MarauderCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarauderJunker", "MarauderJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMarauderUmojan", "MarauderUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMarauderSilver", "MarauderSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MarauderSkinDeluxe", "MarauderDeluxe", lv_index);
        lv_unitType = "Reaper";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ReaperSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ReaperCovertOps", "ReaperCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ReaperJunker", "ReaperJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinReaperUmojan", "ReaperUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinReaperSilver", "ReaperSilver", lv_index);
        lv_unitType = "Ghost";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "GhostSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "GhostCovertOps", "GhostCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "GhostJunker", "GhostJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinGhostUmojan", "GhostUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinGhostAcademySilver", "GhostSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "GhostSkinNova", "GhostNova", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "GhostEidolon", "GhostEidolon", lv_index);
        lv_unitType = "Hellion";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HellionSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HellionCovertOps", "HellionCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HellionJunkerMM", "HellionJunkerMM", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHellionUmojan", "HellionUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHellionSilver", "HellionSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HellionSkinJunker", "HellionJunker", lv_index);
        lv_unitType = "Medivac";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MedivacSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MedivacCovertOps", "MedivacCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MedivacJunker", "MedivacJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMedivacUmojan", "MedivacUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMedivacSilver", "MedivacSilver", lv_index);
        lv_unitType = "Banshee";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BansheeSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BansheeCovertOps", "BansheeCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BansheeJunker", "BansheeJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBansheeUmojan", "BansheeUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBansheeSilver", "BansheeSilver", lv_index);
        lv_unitType = "VikingFighter";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VikingSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VikingCovertOps", "VikingCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VikingJunker", "VikingJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinVikingUmojan", "VikingUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinVikingSilver", "VikingSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "VikingMecha", "VikingMecha", lv_index);
        lv_unitType = "Raven";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavenSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavenCovertOps", "RavenCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavenJunker", "RavenJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRavenUmojan", "RavenUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRavenSilver", "RavenSilver", lv_index);
        lv_unitType = "SiegeTank";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SiegeTankSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SiegeTankCovertOps", "SiegeTankCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SiegeTankJunker", "SiegeTankJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinSiegeTankUmojan", "SiegeTankUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SC2SkinSilverSiegeTank", "SiegeTankSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SiegeTankMerc", "SiegeTankMerc", lv_index);
        lv_unitType = "Cyclone";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CycloneSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CycloneCovertOps", "CycloneCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CycloneJunker", "CycloneJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCycloneUmojan", "CycloneUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCycloneSilver", "CycloneSilver", lv_index);
        lv_unitType = "WidowMine";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "WidowMineSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "WidowMineCovertOps", "WidowMineCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "WidowMineJunker", "WidowMineJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinWidowMineUmojan", "WidowMineUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinWidowMineSilver", "WidowMineSilver", lv_index);
        lv_unitType = "Liberator";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LiberatorSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LiberatorCovertOps", "LiberatorCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LiberatorJunker", "LiberatorJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinLiberatorUmojan", "LiberatorUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinLiberatorSilver", "LiberatorSilver", lv_index);
        lv_unitType = "ThorAP";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ThorCEOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ThorCovertOps", "ThorCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ThorJunker", "ThorJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinThorUmojan", "ThorUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinThorSilver", "ThorSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ThorCE", "ThorCE", lv_index);
        lv_unitType = "Battlecruiser";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BattlecruiserSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BattlecruiserCovertOps", "BattlecruiserCovertOps", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BattlecruiserJunker", "BattlecruiserJunker", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBattlecruiserUmojan", "BattlecruiserUmojan", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBattlecruiserSilver", "BattlecruiserSilver", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "Portrait_BlizzCon2019_Battlecruiser", "BattlecruiserRemastered", lv_index);
    }
    else if (auto115D2092_val == "Zerg") {
        lv_unitType = "Zergling";
        lib64DC5B97_gv_found = false;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZerglingSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZerglingWebby", "ZerglingWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZerglingPrimal", "ZerglingPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinZerglingMecha", "ZerglingMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinZerglingRCZ", "ZerglingRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ZerglingSkin", "ZerglingXPR", lv_index);
        lv_unitType = "Baneling";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BanelingSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BanelingWebby", "BanelingWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BanelingPrimal", "BanelingPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBanelingMecha", "BanelingMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBanelingRCZ", "BanelingRCZ", lv_index);
        lv_unitType = "Roach";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RoachSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RoachWebby", "RoachWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RoachPrimal", "RoachPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRoachMecha", "RoachMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRoachRCZ", "RoachRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RoachSkinDeluxe", "RoachDeluxe", lv_index);
        lv_unitType = "Queen";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "QueenSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "QueenWebby", "QueenWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "QueenPrimal", "QueenPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinQueenMecha", "QueenMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinQueenRCZ", "QueenRCZ", lv_index);
        lv_unitType = "Ravager";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavagerSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavagerWebby", "RavagerWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavagerPrimal", "RavagerPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRavagerMecha", "RavagerMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinRavagerRCZ", "RavagerRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "RavagerSkinBone", "RavagerBone", lv_index);
        lv_unitType = "Overseer";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "OverseerSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "OverSeerWebby", "OverSeerWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "OverseerPrimal", "OverseerPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinOverseerMecha", "OverseerMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinOverseerRCZ", "OverseerRCZ", lv_index);
        lv_unitType = "Hydralisk";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HydraliskSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HydraliskWebby", "HydraliskWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HydraliskPrimal", "HydraliskPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHydraliskMecha", "HydraliskMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHydraliskRCZ", "HydraliskRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "HydraliskNoxious", "HydraliskNoxious", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinHydraliskRemastered", "HydraliskRemastered", lv_index);
        lv_unitType = "LurkerMP";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LurkerSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LurkerWebby", "LurkerWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LurkerPrimal", "LurkerPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinLurkerMecha", "LurkerMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinLurkerRCZ", "LurkerRCZ", lv_index);
        lv_unitType = "Mutalisk";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "LurkerSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MutaliskWebby", "MutaliskWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "MutaliskPrimal", "MutaliskPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMutaliskMecha", "MutaliskMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinMutaliskRCZ", "MutaliskRCZ", lv_index);
        lv_unitType = "Corruptor";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CorruptorSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CorruptorWebby", "CorruptorWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "CorruptorPrimal", "CorruptorPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCorruptorMecha", "CorruptorMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinCorruptorRCZ", "CorruptorRCZ", lv_index);
        lv_unitType = "Infestor";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "InfestorSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "InfestorWebby", "InfestorWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "InfestorPrimal", "InfestorPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinInfestorMecha", "InfestorMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinInfestorRCZ", "InfestorRCZ", lv_index);
        lv_unitType = "SwarmHostMP";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SwarmHostSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SwarmHostWebby", "SwarmHostWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SwarmHostPrimal", "SwarmHostPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinSwarmHostMecha", "SwarmHostMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinSwarmHostRCZ", "SwarmHostRCZ", lv_index);
        lv_unitType = "Viper";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ViperSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ViperWebby", "ViperWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "ViperPrimal", "ViperPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinViperMecha", "ViperMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinViperRCZ", "ViperRCZ", lv_index);
        lv_unitType = "Ultralisk";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "UltraliskCEOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "UltraliskWebby", "UltraliskWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "UltraliskPrimal", "UltraliskPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinUltraliskMecha", "UltraliskMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinUltraliskRCZ", "UltraliskRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "UltraliskCE", "UltraliskCE", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinUltraliskRemastered", "UltraliskRemastered", lv_index);
        lv_unitType = "BroodLord";
        lib64DC5B97_gv_found = false;
        lv_index += 1;
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BroodLordSkinOff", null, lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BroodLordWebby", "BroodLordWebby", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BroodLordPrimal", "BroodLordPrimal", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBroodLordMecha", "BroodLordMecha", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "SkinBroodLordRCZ", "BroodLordRCZ", lv_index);
        lib64DC5B97_gf_StorePlayerSkinsIndividual(lp_player, lv_unitType, "BroodLord_PremiumSkin_Aquatic", "BroodLord_PremiumSkin_Aquatic", lv_index);
    }
    else {
    }
}

void lib64DC5B97_gf_StorePlayerSkinsIndividual (int lp_player, string lp_unitType, string lp_reward, string lp_skin, int lp_index) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib64DC5B97_gv_found == false) && (PlayerHasReward(lp_player, lp_reward) == true)) {
        lib64DC5B97_gv_found = true;
        lib64DC5B97_gv_storedSkins[lp_player][lp_index] = lp_skin;
    }

}

void lib64DC5B97_gf_VespeneBorder () {
    // Variable Declarations
    int lv_randomInteger;
    color lv_mainColor;
    string lv_hero;
    string lv_planet;
    int lv_border;
    int lv_background;
    int lv_temp;
    text lv_price;

    // Automatic Variable Declarations
    int auto27567031_val;

    // Variable Initialization
    lv_randomInteger = RandomInt(0, 6);
    lv_mainColor = Color(100,100,100);
    lv_hero = "Assets\\Textures\\ui_donationbackground.dds";
    lv_planet = "Assets\\Textures\\ui_void_loading_tutorial01.dds";
    lv_border = c_invalidDialogControlId;
    lv_background = c_invalidDialogControlId;
    lv_temp = c_invalidDialogControlId;
    lv_price = StringExternal("Param/Value/lib_64DC5B97_092E22A9");

    // Implementation
    lv_randomInteger = RandomInt(0, 8);
    auto27567031_val = lv_randomInteger;
    if (auto27567031_val == 0) {
        lv_mainColor = Color(100.00, 25.10, 12.55);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_alarak.dds";
        lv_planet = "Assets\\Textures\\ui_hots_loading_planetviewzerus.dds";
    }
    else if (auto27567031_val == 1) {
        lv_mainColor = Color(25.10, 75.29, 100.00);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_nova.dds";
        lv_planet = "Assets\\Textures\\ui_void_loading_tutorial01.dds";
    }
    else if (auto27567031_val == 2) {
        lv_mainColor = Color(86.27, 29.41, 98.04);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_kerrigan.dds";
        lv_planet = "Assets\\Textures\\armysetbackground.dds";
    }
    else if (auto27567031_val == 3) {
        lv_mainColor = Color(25.10, 100.00, 62.75);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_vorazun.dds";
        lv_planet = "Assets\\Textures\\loading-aiur.dds";
    }
    else if (auto27567031_val == 4) {
        lv_mainColor = Color(25.10, 100.00, 12.55);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_abathur.dds";
        lv_planet = "Assets\\Textures\\kerriganupgradesetbackground.dds";
    }
    else if (auto27567031_val == 5) {
        lv_mainColor = Color(86.27, 62.75, 25.10);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_stukov.dds";
        lv_planet = "Assets\\Textures\\ui_nova_loading_nova05.dds";
    }
    else if (auto27567031_val == 6) {
        lv_mainColor = Color(100.00, 54.90, 18.82);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_fenix.dds";
        lv_planet = "Assets\\Textures\\ui_void_loading_tutorial01.dds";
    }
    else if (auto27567031_val == 7) {
        lv_mainColor = Color(86.27, 35.29, 74.51);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_hanandhorner.dds";
        lv_planet = "Assets\\Textures\\ui_nova_loading_nova05.dds";
    }
    else {
        lv_mainColor = Color(50.20, 75.29, 25.10);
        lv_hero = "Assets\\Textures\\sc2_ui_userprofile_summary_commander_zagara.dds";
        lv_planet = "Assets\\Textures\\kerriganupgradesetbackground.dds";
    }
    DialogCreate(1100, 750, c_anchorBottomLeft, -300, 350, true);
    DialogSetRenderPriority(DialogLastCreated(), 600);
    DialogSetImageVisible(DialogLastCreated(), false);
    lib64DC5B97_gv_addMoreVespeneDialog = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, 450, 550, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogstandardbg_White.dds", c_triggerImageTypeNineSlice, true, lv_mainColor, c_triggerBlendModeNormal);
    lv_border = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), true, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, 336, libNtve_gf_ArithmeticIntClamp(872, 1, DialogControlGetHeight(lv_border, 0)), c_anchorLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_glow_colorless.dds", c_triggerImageTypeNormal, false, lv_mainColor, c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, lv_border, c_anchorLeft, 12, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, 336, libNtve_gf_ArithmeticIntClamp(872, 1, DialogControlGetHeight(lv_border, 0)), c_anchorLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_glow_colorless.dds", c_triggerImageTypeNormal, false, lv_mainColor, c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, lv_border, c_anchorRight, -12, 0);
    libNtve_gf_SetDialogItemRotation(DialogControlLastCreated(), 180, PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, (DialogControlGetWidth(lv_border, 0) - 40), (DialogControlGetHeight(lv_border, 0) - 40), c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNormal, true, Color(0,0,0), c_triggerBlendModeNormal);
    lv_background = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, (DialogControlGetWidth(lv_border, 0) - 40), 252, c_anchorTop, 0, 75, StringToText(""), lv_planet, c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_background, c_anchorTop, 0, 0);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(37.65, 37.65, 37.65), PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, (DialogControlGetWidth(lv_border, 0) - 40), 252, c_anchorTop, 0, 75, StringToText(""), lv_hero, c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_background, c_anchorTop, 0, 0);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(37.65, 37.65, 37.65), PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_addMoreVespeneDialog, (DialogControlGetWidth(lv_border, 0) - 40), 252, c_anchorTop, 0, 75, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_standardelements_artbackground_vignette.dds", c_triggerImageTypeNormal, false, Color(0,0,0), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_background, c_anchorTop, 0, 0);
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 500, 35, c_anchorTopLeft, 0, 0, StringToText(""), (StringToText("<s val=\"StandardTooltipHeaderOutline\"></c>") + TextWithColor(StringExternal("Param/Value/lib_64DC5B97_DF70FEA5"), lv_mainColor)), "");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_border, c_anchorTop, 0, 25);
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 69, 37, c_anchorTopRight, 0, 0, StringToText(""), StringToText(""), "");
    lib64DC5B97_gv_rewardsDialogClose = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopRight, lv_border, c_anchorTopRight, -9, 11);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normalpressed_white.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normaloverpressedover_white.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), lv_mainColor, PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), "Close", PlayerGroupSingle(0));
    lib64DC5B97_gf_VespeneRewardsbyMonth(lv_border);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), (DialogControlGetWidth(lv_border, 0) - 40), 35, c_anchorTop, 0, 0, (StringToText("<s val=\"DonationLink\">") + TextWithColor((StringToText(lib64DC5B97_gv_monthName) + StringToText(" ") + StringExternal("Param/Value/lib_64DC5B97_3541DD4E")), lv_mainColor)), ColorWithAlpha(0,0,0,0), false, 2.0);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lv_border, c_anchorBottom, 0, -360);
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    if ((libDDE92A83_gf_GameisEU() == true)) {
        lv_price = StringExternal("Param/Value/lib_64DC5B97_BEB7D290");
    }

    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), (DialogControlGetWidth(lv_border, 0) - 40), 35, c_anchorTop, 0, 0, (StringToText("<s val=\"DonationLink\">") + TextWithColor(StringExternal("Param/Value/lib_64DC5B97_10922593"), lv_mainColor)), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_temp = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lv_border, c_anchorBottom, 0, -210);
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    lib64DC5B97_gv_editBoxPaypalDialog = DialogControlLastCreated();
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_donation_closebutton_normalandpressed.dds", PlayerGroupAll());
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 60);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), lib64DC5B97_gv_editBoxPaypalLink, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_temp, c_anchorTop, 0, 30);
    lv_temp = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), (DialogControlGetWidth(lv_border, 0) - 40), 35, c_anchorTop, 0, 0, (StringToText("<s val=\"DonationLink\">") + TextWithColor(StringExternal("Param/Value/lib_64DC5B97_7CE188A7"), lv_mainColor)), ColorWithAlpha(0,0,0,0), false, 2.0);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_temp, c_anchorTop, 0, 80);
    lv_temp = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    lib64DC5B97_gv_editBoxHandleDialog = DialogControlLastCreated();
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_donation_closebutton_normalandpressed.dds", PlayerGroupAll());
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 60);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), "1-S2-1-10846327", PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_temp, c_anchorTop, 0, 30);
    lv_temp = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    lib64DC5B97_gv_rewardsDialogItemMax = (lib64DC5B97_gv_rewardsDialogItemCurrent - 1);
}

void lib64DC5B97_gf_VespeneRefresh () {
    // Automatic Variable Declarations
    playergroup auto86ACF251_g;
    int auto86ACF251_var;

    // Implementation
    libNtve_gf_SetDialogItemEditorValue(lib64DC5B97_gv_editBoxPaypalDialog, lib64DC5B97_gv_editBoxPaypalLink, PlayerGroupAll());
    auto86ACF251_g = PlayerGroupActive();
    auto86ACF251_var = -1;
    while (true) {
        auto86ACF251_var = PlayerGroupNextPlayer(auto86ACF251_g, auto86ACF251_var);
        if (auto86ACF251_var < 0) { break; }
        libNtve_gf_SetDialogItemEditorValue(lib64DC5B97_gv_editBoxHandleDialog, PlayerHandle(auto86ACF251_var), PlayerGroupSingle(auto86ACF251_var));
    }
}

void lib64DC5B97_gf_VespeneDialogForceOn () {
    // Variable Declarations
    int lv_i;
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup auto9425A8F0_g;
    int auto9425A8F0_var;
    int autoBEF703DA_ae;
    const int autoBEF703DA_ai = 1;

    // Variable Initialization
    lv_players = PlayerGroupActive();

    // Implementation
    if ((lib64DC5B97_gv_showVespeneStuff == true) && (libDDE92A83_gf_GameisKR() == false)) {
        auto9425A8F0_g = lv_players;
        auto9425A8F0_var = -1;
        while (true) {
            auto9425A8F0_var = PlayerGroupNextPlayer(auto9425A8F0_g, auto9425A8F0_var);
            if (auto9425A8F0_var < 0) { break; }
            if ((TechTreeUpgradeCount(auto9425A8F0_var, "UsingVespeneIncapableWorker", c_techCountCompleteOnly) >= 1)) {
                PlayerGroupRemove(lv_players, auto9425A8F0_var);
            }

            if ((TechTreeUpgradeCount(auto9425A8F0_var, "Patron", c_techCountCompleteOnly) >= 1)) {
                PlayerGroupRemove(lv_players, auto9425A8F0_var);
            }

            if ((TechTreeUpgradeCount(auto9425A8F0_var, "VespeneCustomer", c_techCountCompleteOnly) >= 1)) {
                PlayerGroupRemove(lv_players, auto9425A8F0_var);
            }

            if ((DialogIsVisible(lib64DC5B97_gv_addMoreVespeneDialog, auto9425A8F0_var) == true)) {
                PlayerGroupRemove(lv_players, auto9425A8F0_var);
            }

        }
        DialogSetVisible(lib64DC5B97_gv_addMoreVespeneDialog, lv_players, true);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[0], true, lv_players);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[1], true, lv_players);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[2], true, lv_players);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[3], true, lv_players);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[4], true, lv_players);
        autoBEF703DA_ae = lib64DC5B97_gv_rewardsDialogItemMax;
        lv_i = 0;
        for ( ; ( (autoBEF703DA_ai >= 0 && lv_i <= autoBEF703DA_ae) || (autoBEF703DA_ai < 0 && lv_i >= autoBEF703DA_ae) ) ; lv_i += autoBEF703DA_ai ) {
            DialogControlFadeTransparency(lib64DC5B97_gv_rewardsDialogItem[lv_i], lv_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib64DC5B97_gv_rewardsDialogItem[lv_i], lv_players, 2.5, 0.0);
        }
    }

}

void lib64DC5B97_gf_VespeneButton (int lp_dialog, string lp_icon, text lp_title, text lp_tooltip, int lp_x, int lp_chargeCount) {
    // Variable Declarations
    int lv_temp;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_temp = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_addMoreVespeneDialog, 76, 76, c_anchorTopLeft, 50, 50, (StringToText("<s val=\"StandardTooltipHeader\"></c>") + lp_title + StringToText("</s></n></n>") + lp_tooltip), StringToText(""), "");
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lp_dialog, c_anchorBottom, (0 - (lp_x * ((76 / 2) + 1))), -360);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_war3normal.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_war3highlight.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    lv_temp = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 76, 76, c_anchorTopLeft, 50, 50, StringToText(""), lp_icon, c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_temp, c_anchorCenter, 0, 0);
    lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    if ((lp_chargeCount > 1)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 84, 40, c_anchorTopLeft, 50, 50, (StringToText("<s val=\"ChargeLabelBold\">") + IntToText(lp_chargeCount)), ColorWithAlpha(0,0,0,0), false, 2.0);
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottomRight, lv_temp, c_anchorBottomRight, 16, 7);
        lib64DC5B97_gv_rewardsDialogItem[lib64DC5B97_gv_rewardsDialogItemCurrent] = DialogControlLastCreated();
        lib64DC5B97_gv_rewardsDialogItemCurrent += 1;
    }

}

void lib64DC5B97_gf_VespeneRewardsbyMonth (int lp_dialog) {
    // Variable Declarations
    int lv_reward1;
    int lv_reward2;

    // Automatic Variable Declarations
    int auto609DC14A_val;

    // Variable Initialization
    lv_reward2 = -2;

    // Implementation
    lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-ability-neutral-premium-gas.dds", StringExternal("UI/ResourceName1"), StringExternal("Button/Tooltip/SkinSystemOpen"), 2, 1000);
    auto609DC14A_val = GetDateTimeMonth(CurrentDateTimeGet());
    if (auto609DC14A_val == 1) {
        lib64DC5B97_gv_monthName = "January";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-templararchives.dds", StringExternal("Unit/Name/TemplarArchive"), StringExternal("Button/Tooltip/DecorationCaster"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-stargate.dds", StringExternal("Unit/Name/Stargate"), StringExternal("Button/Tooltip/DecorationAdvanced"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 2) {
        lib64DC5B97_gv_monthName = "February";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", StringExternal("Unit/Name/RoboticsBay"), StringExternal("Button/Tooltip/DecorationTech"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", StringExternal("Unit/Name/FleetBeacon"), StringExternal("Button/Tooltip/DecorationUltimate"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 3) {
        lib64DC5B97_gv_monthName = "March";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-gateway.dds", StringExternal("Unit/Name/Gateway"), StringExternal("Button/Tooltip/DecorationProduction"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", StringExternal("Unit/Name/RoboticsFacility"), StringExternal("Button/Tooltip/DecorationFoundry"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 4) {
        lib64DC5B97_gv_monthName = "April";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", StringExternal("Unit/Name/CyberneticsCore"), StringExternal("Button/Tooltip/DecorationSupport"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", StringExternal("Unit/Name/RoboticsBay"), StringExternal("Button/Tooltip/DecorationTech"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 5) {
        lib64DC5B97_gv_monthName = "May";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-templararchives.dds", StringExternal("Unit/Name/TemplarArchive"), StringExternal("Button/Tooltip/DecorationCaster"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-stargate.dds", StringExternal("Unit/Name/Stargate"), StringExternal("Button/Tooltip/DecorationAdvanced"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 6) {
        lib64DC5B97_gv_monthName = "June";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-gateway.dds", StringExternal("Unit/Name/Gateway"), StringExternal("Button/Tooltip/DecorationProduction"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-forge.dds", StringExternal("Unit/Name/Forge"), StringExternal("Button/Tooltip/DecorationUpgrades"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 7) {
        lib64DC5B97_gv_monthName = "July";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", StringExternal("Unit/Name/RoboticsFacility"), StringExternal("Button/Tooltip/DecorationFoundry"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", StringExternal("Unit/Name/FleetBeacon"), StringExternal("Button/Tooltip/DecorationUltimate"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 8) {
        lib64DC5B97_gv_monthName = "August";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-templararchives.dds", StringExternal("Unit/Name/TemplarArchive"), StringExternal("Button/Tooltip/DecorationCaster"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", StringExternal("Unit/Name/CyberneticsCore"), StringExternal("Button/Tooltip/DecorationSupport"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 9) {
        lib64DC5B97_gv_monthName = "September";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-gateway.dds", StringExternal("Unit/Name/Gateway"), StringExternal("Button/Tooltip/DecorationProduction"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-stargate.dds", StringExternal("Unit/Name/Stargate"), StringExternal("Button/Tooltip/DecorationAdvanced"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 10) {
        lib64DC5B97_gv_monthName = "October";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-forge.dds", StringExternal("Unit/Name/Forge"), StringExternal("Button/Tooltip/DecorationUpgrades"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", StringExternal("Unit/Name/RoboticsBay"), StringExternal("Button/Tooltip/DecorationTech"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 11) {
        lib64DC5B97_gv_monthName = "November";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", StringExternal("Unit/Name/RoboticsFacility"), StringExternal("Button/Tooltip/DecorationFoundry"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", StringExternal("Unit/Name/FleetBeacon"), StringExternal("Button/Tooltip/DecorationUltimate"), lv_reward2, 1);
    }
    else if (auto609DC14A_val == 12) {
        lib64DC5B97_gv_monthName = "December";
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-forge.dds", StringExternal("Unit/Name/Forge"), StringExternal("Button/Tooltip/DecorationUpgrades"), lv_reward1, 1);
        lib64DC5B97_gf_VespeneButton(lp_dialog, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", StringExternal("Unit/Name/CyberneticsCore"), StringExternal("Button/Tooltip/DecorationSupport"), lv_reward2, 1);
    }
    else {
    }
}

void lib64DC5B97_gf_VespeneDialogFallback () {
    int init_i;

    // Variable Declarations
    int lv_border;
    int[5] lv_dialogElement;

    // Automatic Variable Declarations
    playergroup autoA8F94341_g;
    int autoA8F94341_var;

    // Variable Initialization
    lv_border = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 4; init_i += 1) {
        lv_dialogElement[init_i] = c_invalidDialogControlId;
    }

    // Implementation
    DialogCreate(200, 200, c_anchorBottomLeft, 0, 550, true);
    lib64DC5B97_gv_addMoreVespeneFallbackDialog = DialogLastCreated();
    DialogSetRenderPriority(DialogLastCreated(), 500);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 100, 100, c_anchorBottom, 0, 0, StringToText(""), "Assets\\Textures\\ui_whiteborderframe.dds", c_triggerImageTypeNineSlice, true, Color(50.20, 100.00, 43.92), c_triggerBlendModeNormal);
    lv_border = DialogControlLastCreated();
    lv_dialogElement[0] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), DialogControlGetWidth(lv_border, 0), DialogControlGetHeight(lv_border, 0), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_blackborderframe.dds", c_triggerImageTypeNineSlice, false, Color(100,100,100), c_triggerBlendModeNormal);
    lv_dialogElement[1] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 790, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNormal, true, Color(0,0,0), c_triggerBlendModeNormal);
    lv_dialogElement[2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 780, PlayerGroupAll());
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringExternal("Param/Value/lib_64DC5B97_8E5ADE7F"), StringToText(""), "");
    lv_dialogElement[3] = DialogControlLastCreated();
    lib64DC5B97_gv_addMoreVespeneFallback = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 795, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_partyframe_buttonglow.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(50.20, 100.00, 43.92), PlayerGroupAll());
    libNtve_gf_SetDialogItemHotkey(DialogControlLastCreated(), c_hotkeyHeroSelect2, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\btn-ability-stetmann-topbar-healthconfiguration.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    lv_dialogElement[4] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), false, PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 794, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(87.84, 100.00, 87.84), PlayerGroupAll());
    DialogControlSetVisible(lv_dialogElement[0], PlayerGroupAll(), false);
    DialogControlSetVisible(lv_dialogElement[1], PlayerGroupAll(), false);
    DialogControlSetVisible(lv_dialogElement[2], PlayerGroupAll(), false);
    DialogControlSetVisible(lv_dialogElement[3], PlayerGroupAll(), false);
    DialogControlSetVisible(lv_dialogElement[4], PlayerGroupAll(), false);
    autoA8F94341_g = PlayerGroupActive();
    autoA8F94341_var = -1;
    while (true) {
        autoA8F94341_var = PlayerGroupNextPlayer(autoA8F94341_g, autoA8F94341_var);
        if (autoA8F94341_var < 0) { break; }
        if ((TechTreeUpgradeCount(autoA8F94341_var, "Patron", c_techCountCompleteOnly) == 0) && (TechTreeUpgradeCount(autoA8F94341_var, "VespeneCustomer", c_techCountCompleteOnly) == 0) && (lib64DC5B97_gv_showVespeneStuff == true) && (libDDE92A83_gf_GameisKR() == false)) {
            DialogControlSetVisible(lv_dialogElement[0], PlayerGroupSingle(autoA8F94341_var), true);
            DialogControlSetVisible(lv_dialogElement[1], PlayerGroupSingle(autoA8F94341_var), true);
            DialogControlSetVisible(lv_dialogElement[2], PlayerGroupSingle(autoA8F94341_var), true);
            DialogControlSetVisible(lv_dialogElement[3], PlayerGroupSingle(autoA8F94341_var), true);
            DialogControlSetVisible(lv_dialogElement[4], PlayerGroupSingle(autoA8F94341_var), true);
        }

    }
}

void lib64DC5B97_gf_RewardsNotificationCreate () {
    // Variable Declarations
    int lv_border;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_border = c_invalidDialogControlId;

    // Implementation
    if ((lib64DC5B97_gv_rewardsNotificationDialog == c_invalidDialogId)) {
        DialogCreate(1200, 800, c_anchorBottomRight, -200, 150, true);
        lib64DC5B97_gv_rewardsNotificationDialog = DialogLastCreated();
        DialogSetImageVisible(DialogLastCreated(), false);
        DialogSetObservedType(DialogLastCreated(), c_triggerObservedTypeDefaultObservedPlayerId);
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 600, 300, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogstandardbg.dds", c_triggerImageTypeNineSlice, true, Color(100,100,100), c_triggerBlendModeNormal);
        lib64DC5B97_gv_rewardsNotificationDialogItem[8] = DialogControlLastCreated();
        lv_border = DialogControlLastCreated();
        libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), true, PlayerGroupAll());
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), libNtve_gf_ArithmeticIntClamp(700, 1, DialogControlGetWidth(lv_border, 0)), 264, c_anchorTop, 0, 12, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialog_hexpattern.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
        lib64DC5B97_gv_rewardsNotificationDialogItem[7] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_border, c_anchorTop, 0, 12);
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), libNtve_gf_ArithmeticIntClamp(700, 1, DialogControlGetWidth(lv_border, 0)), 264, c_anchorBottom, 0, 12, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialog_hexpattern.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
        lib64DC5B97_gv_rewardsNotificationDialogItem[6] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lv_border, c_anchorBottom, 0, -12);
        libNtve_gf_SetDialogItemRotation(DialogControlLastCreated(), 180, PlayerGroupAll());
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 336, libNtve_gf_ArithmeticIntClamp(872, 1, DialogControlGetHeight(lv_border, 0)), c_anchorLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_glow.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
        lib64DC5B97_gv_rewardsNotificationDialogItem[5] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, lv_border, c_anchorLeft, 12, 0);
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 336, libNtve_gf_ArithmeticIntClamp(872, 1, DialogControlGetHeight(lv_border, 0)), c_anchorLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_glow.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
        lib64DC5B97_gv_rewardsNotificationDialogItem[4] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, lv_border, c_anchorRight, -12, 0);
        libNtve_gf_SetDialogItemRotation(DialogControlLastCreated(), 180, PlayerGroupAll());
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), DialogControlGetWidth(lv_border, 0), 60, c_anchorTop, 1, 33, (StringToText("<s val=\"MasterySelectTitle\">") + StringToText("Rewards Applied") + StringToText("</s>")), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib64DC5B97_gv_rewardsNotificationDialogItem[3] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_border, c_anchorTop, 1, 33);
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 710, PlayerGroupAll());
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), DialogControlGetWidth(lv_border, 0), 60, c_anchorTop, 1, 70, (StringToText("<s val=\"MasterySelectSubtitle\">") + StringExternal("Param/Value/lib_64DC5B97_01AAB99A") + StringToText("</s>")), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib64DC5B97_gv_rewardsNotificationDialogItem[2] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_border, c_anchorTop, 1, 110);
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 710, PlayerGroupAll());
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 69, 37, c_anchorTopRight, 0, 0, StringToText(""), StringToText(""), "");
        lib64DC5B97_gv_rewardsNotificationDialogItem[0] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopRight, lv_border, c_anchorTopRight, -9, 11);
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normalpressed.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normaloverpressedover.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 288, 75, c_anchorTopLeft, 50, 50, StringToText(""), (StringToText("<s val=\"MasterySelectCancel\">") + StringExternal("UI/StandardDialog_Ok_Control") + StringToText("</s>")), "");
        lib64DC5B97_gv_rewardsNotificationDialogItem[1] = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lv_border, c_anchorBottom, 0, -35);
        libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normalpressed.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normaloverpressedover.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 710, PlayerGroupAll());
    }

}

void lib64DC5B97_gf_RewardsNotificationShow (int lp_player) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoE38E9672_ae = 8;
    const int autoE38E9672_ai = 1;

    // Variable Initialization

    // Implementation
    if ((libDBB0BE4A_gf_SettingsLoadInteger(lp_player, "RewardsNotification") != 1)) {
        DialogSetVisible(lib64DC5B97_gv_rewardsNotificationDialog, PlayerGroupSingle(lp_player), true);
        lv_i = 0;
        for ( ; ( (autoE38E9672_ai >= 0 && lv_i <= autoE38E9672_ae) || (autoE38E9672_ai < 0 && lv_i >= autoE38E9672_ae) ) ; lv_i += autoE38E9672_ai ) {
            DialogControlFadeTransparency(lib64DC5B97_gv_rewardsNotificationDialogItem[lv_i], PlayerGroupSingle(lp_player), 0.0, 100.0);
            DialogControlFadeTransparency(lib64DC5B97_gv_rewardsNotificationDialogItem[lv_i], PlayerGroupSingle(lp_player), 0.5, 0.0);
        }
    }

}

void lib64DC5B97_gf_VespenePatronsStart () {
    // Variable Declarations
    int lv_i;
    const int lv_userDataHandle = 1;

    // Automatic Variable Declarations
    playergroup auto5481BE01_g;
    int auto5481BE01_var;
    int auto678818D7_ae;
    const int auto678818D7_ai = 1;

    // Variable Initialization

    // Implementation
    auto5481BE01_g = PlayerGroupActive();
    auto5481BE01_var = -1;
    while (true) {
        auto5481BE01_var = PlayerGroupNextPlayer(auto5481BE01_g, auto5481BE01_var);
        if (auto5481BE01_var < 0) { break; }
        auto678818D7_ae = UserDataInstanceCount(lib64DC5B97_gv_decorationData);
        lv_i = 1;
        for ( ; ( (auto678818D7_ai >= 0 && lv_i <= auto678818D7_ae) || (auto678818D7_ai < 0 && lv_i >= auto678818D7_ae) ) ; lv_i += auto678818D7_ai ) {
            if ((GameIsTestMap(false) == false) && (lib474957E9_gv_decorationData != null) && ((PlayerHandle(auto5481BE01_var) == UserDataGetString(lib64DC5B97_gv_decorationData, UserDataInstance(lib64DC5B97_gv_decorationData, lv_i), UserDataField(lib64DC5B97_gv_decorationData, lv_userDataHandle), 1)) || (PlayerHandle(auto5481BE01_var) == UserDataGetString(lib64DC5B97_gv_decorationData, UserDataInstance(lib64DC5B97_gv_decorationData, lv_i), UserDataField(lib64DC5B97_gv_decorationData, lv_userDataHandle), 2)))) {
                lib64DC5B97_gf_VespenePatronsSet(auto5481BE01_var, lv_i);
            }

        }
    }
}

void lib64DC5B97_gf_VespenePatronsSet (int lp_player, int lp_instance) {
    // Variable Declarations
    const int lv_userDataDate01Begin = 2;
    const int lv_userDataDate01End = 3;
    int lv_field;

    // Automatic Variable Declarations
    const int auto7A5E8DCA_ae = 2;
    const int auto7A5E8DCA_ai = 1;

    // Variable Initialization
    lv_field = 1;

    // Implementation
    lv_field = 1;
    for ( ; ( (auto7A5E8DCA_ai >= 0 && lv_field <= auto7A5E8DCA_ae) || (auto7A5E8DCA_ai < 0 && lv_field >= auto7A5E8DCA_ae) ) ; lv_field += auto7A5E8DCA_ai ) {
        if ((StringLength((UserDataGetUserInstance(lib64DC5B97_gv_decorationData, UserDataInstance(lib64DC5B97_gv_decorationData, lp_instance), UserDataField(lib64DC5B97_gv_decorationData, lv_userDataDate01Begin), lv_field))) > 0)) {
            lib64DC5B97_gf_VespenePatronsApply(lp_player, (UserDataGetUserInstance(lib64DC5B97_gv_decorationData, UserDataInstance(lib64DC5B97_gv_decorationData, lp_instance), UserDataField(lib64DC5B97_gv_decorationData, lv_userDataDate01Begin), lv_field)), (UserDataGetUserInstance(lib64DC5B97_gv_decorationData, UserDataInstance(lib64DC5B97_gv_decorationData, lp_instance), UserDataField(lib64DC5B97_gv_decorationData, lv_userDataDate01End), lv_field)));
        }

    }
}

void lib64DC5B97_gf_VespenePatronsApply (int lp_player, string lp_begin, string lp_end) {
    // Variable Declarations
    int lv_i;
    int lv_x;
    bool lv_dateCorrected;
    string lv_monthEnd;
    int lv_monthDifference;
    int lv_yearDifference;
    int lv_months;
    int lv_startingMonth;
    datetime lv_date;

    // Automatic Variable Declarations
    int auto97E435A3_ae;
    const int auto97E435A3_ai = 1;

    // Variable Initialization
    lv_monthEnd = "";
    lv_date = CurrentDateTimeGet();

    // Implementation
    if ((lp_begin != "[Default]") && (lp_end != "[Default]") && (StringLength(lp_begin) > 0) && (StringLength(lp_end) > 0)) {
        if ((lp_end == "[Active]")) {
            lv_monthEnd = (IntToString(GetDateTimeYear(lv_date)) + "/" + IntToString(GetDateTimeMonth(lv_date)));
            lv_dateCorrected = true;
        }
        else {
            lv_monthEnd = lp_end;
        }
        if ((lv_dateCorrected == false) && (StringToInt(StringSub(lv_monthEnd, 1, 4)) > GetDateTimeYear(lv_date))) {
            lv_monthEnd = (IntToString(GetDateTimeYear(lv_date)) + "/" + IntToString(GetDateTimeMonth(lv_date)));
        }

        if ((lv_dateCorrected == false) && (StringToInt(StringSub(lv_monthEnd, 1, 4)) == GetDateTimeYear(lv_date)) && (StringToInt(StringSub(lv_monthEnd, 6, 7)) > GetDateTimeMonth(lv_date))) {
            lv_monthEnd = (IntToString(GetDateTimeYear(lv_date)) + "/" + IntToString(GetDateTimeMonth(lv_date)));
        }

        lv_monthDifference = (StringToInt(StringSub(lv_monthEnd, 6, 7)) - StringToInt(StringSub(lp_begin, 6, 7)));
        lv_yearDifference = (StringToInt(StringSub(lv_monthEnd, 1, 4)) - StringToInt(StringSub(lp_begin, 1, 4)));
        lv_months = (lv_monthDifference + (lv_yearDifference * 12));
        lv_startingMonth = StringToInt(StringSub(lp_begin, 6, 7));
        lv_x = lv_startingMonth;
        auto97E435A3_ae = (lv_startingMonth + lv_months);
        lv_i = lv_startingMonth;
        for ( ; ( (auto97E435A3_ai >= 0 && lv_i <= auto97E435A3_ae) || (auto97E435A3_ai < 0 && lv_i >= auto97E435A3_ae) ) ; lv_i += auto97E435A3_ai ) {
            lib64DC5B97_gf_AddVespene(lp_player, 1000);
        }
    }

}

void lib64DC5B97_gf_StartBank () {
    // Automatic Variable Declarations
    playergroup autoD7209047_g;
    int autoD7209047_var;

    // Implementation
    autoD7209047_g = PlayerGroupActive();
    autoD7209047_var = -1;
    while (true) {
        autoD7209047_var = PlayerGroupNextPlayer(autoD7209047_g, autoD7209047_var);
        if (autoD7209047_var < 0) { break; }
        if ((PlayerType(autoD7209047_var) == c_playerTypeUser)) {
            BankLoad("Starlight", autoD7209047_var);
            lib64DC5B97_gv_skinsBank[autoD7209047_var] = BankLastCreated();
            BankSave(lib64DC5B97_gv_skinsBank[autoD7209047_var]);
        }

    }
}

void lib64DC5B97_gf_Settings () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib64DC5B97_gv_allowOtherRaces == true)) {
        TriggerEnable(lib64DC5B97_gt_RaceDropdown, true);
        DialogControlSetVisible(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), true);
    }
    else {
        DialogControlSetVisible(lib64DC5B97_gv_raceDropdown, PlayerGroupAll(), false);
    }
}

void lib64DC5B97_gf_AddUnit (string lp_unitType) {
    // Variable Declarations
    int lv_offsetX;

    // Automatic Variable Declarations
    playergroup auto42B824D1_g;
    int auto42B824D1_var;
    string auto7A2E421A_val;
    playergroup auto906962E9_g;
    int auto906962E9_var;
    string auto632D2AD4_val;
    playergroup autoD9723E50_g;
    int autoD9723E50_var;
    string auto1E29D662_val;

    // Variable Initialization
    lv_offsetX = (30 + ((lib64DC5B97_gv_currentUnit * 82) + (((lib64DC5B97_gv_currentUnit - ModI(lib64DC5B97_gv_currentUnit, 3)) / 3) * 12)));

    // Implementation
    lib64DC5B97_gv_raceUnit[lib64DC5B97_gv_currentUnit3][lib64DC5B97_gv_raceUnitCurrent[lib64DC5B97_gv_currentUnit3]] = lp_unitType;
    lib64DC5B97_gv_raceUnitCurrent[lib64DC5B97_gv_currentUnit3] += 1;
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorBottomLeft, lv_offsetX, 110, StringToText(""), StringToText(""), "");
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1000, PlayerGroupAll());
    lib64DC5B97_gv_dialogItemUnitButton[lib64DC5B97_gv_dialogItemUnitsCurrent] = DialogControlLastCreated();
    lib64DC5B97_gv_currentUnitDialog = DialogControlLastCreated();
    lib64DC5B97_gv_currentUnitSkin = 0;
    lib64DC5B97_gv_currentUnit2 = lp_unitType;
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_partyframe_buttonglow.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, lp_unitType, "Name", c_playerAny)) + StringToText("</s></n>") + StringExternal("UI/Default")), PlayerGroupAll());
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(0), PlayerGroupSingle(lib64DC5B97_gv_editValueIsSkin));
    auto42B824D1_g = PlayerGroupActive();
    auto42B824D1_var = -1;
    while (true) {
        auto42B824D1_var = PlayerGroupNextPlayer(auto42B824D1_g, auto42B824D1_var);
        if (auto42B824D1_var < 0) { break; }
        auto7A2E421A_val = PlayerRace(auto42B824D1_var);
        if (auto7A2E421A_val == "Terr") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(25.49, 70.59, 43.14), PlayerGroupSingle(auto42B824D1_var));
        }
        else if (auto7A2E421A_val == "Zerg") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(96.08, 54.90, 27.45), PlayerGroupSingle(auto42B824D1_var));
        }
        else {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(35.29, 62.75, 94.12), PlayerGroupSingle(auto42B824D1_var));
        }
    }
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], (76 + 32), (76 + 32), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_whiteborderframe.dds", c_triggerImageTypeNineSlice, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnits[lib64DC5B97_gv_dialogItemUnitsCurrent][0][2] = DialogControlLastCreated();
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1000, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, 0);
    auto906962E9_g = PlayerGroupActive();
    auto906962E9_var = -1;
    while (true) {
        auto906962E9_var = PlayerGroupNextPlayer(auto906962E9_g, auto906962E9_var);
        if (auto906962E9_var < 0) { break; }
        auto632D2AD4_val = PlayerRace(auto906962E9_var);
        if (auto632D2AD4_val == "Terr") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(25.49, 70.59, 43.14), PlayerGroupSingle(auto906962E9_var));
        }
        else if (auto632D2AD4_val == "Zerg") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(96.08, 54.90, 27.45), PlayerGroupSingle(auto906962E9_var));
        }
        else {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(35.29, 62.75, 94.12), PlayerGroupSingle(auto906962E9_var));
        }
    }
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], (76 + 32), (76 + 32), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_blackborderframe.dds", c_triggerImageTypeNineSlice, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 990, PlayerGroupAll());
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNormal, false, Color(0,0,0), c_triggerBlendModeNormal);
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 970, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 119, 94, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_collection_tab_arrow_black.dds", c_triggerImageTypeNormal, false, Color(0.39, 0.39, 0.39), c_triggerBlendModeNormal);
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 890, PlayerGroupAll());
    libNtve_gf_SetDialogItemRotation(DialogControlLastCreated(), 270, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, -6);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 119, 94, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_collection_tab_arrow.dds", c_triggerImageTypeNormal, false, Color(0.39, 0.39, 0.39), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnits[lib64DC5B97_gv_dialogItemUnitsCurrent][0][1] = DialogControlLastCreated();
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, -6);
    libNtve_gf_SetDialogItemRotation(DialogControlLastCreated(), 270, PlayerGroupAll());
    autoD9723E50_g = PlayerGroupActive();
    autoD9723E50_var = -1;
    while (true) {
        autoD9723E50_var = PlayerGroupNextPlayer(autoD9723E50_g, autoD9723E50_var);
        if (autoD9723E50_var < 0) { break; }
        auto1E29D662_val = PlayerRace(autoD9723E50_var);
        if (auto1E29D662_val == "Terr") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(25.49, 70.59, 43.14), PlayerGroupSingle(autoD9723E50_var));
        }
        else if (auto1E29D662_val == "Zerg") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(96.08, 54.90, 27.45), PlayerGroupSingle(autoD9723E50_var));
        }
        else {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(35.29, 62.75, 94.12), PlayerGroupSingle(autoD9723E50_var));
        }
    }
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 100, 100, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_coop_selecttile_mastery_selected_small.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    lib64DC5B97_gv_dialogItemUnitHighlight[lib64DC5B97_gv_dialogItemUnitsCurrent] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(0), PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), (CatalogFieldValueGet(c_gameCatalogActor, (CatalogFieldValueGet(c_gameCatalogUnit, lp_unitType, "SelectAlias", c_playerAny)), "UnitIcon", c_playerAny)), c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1100, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_currentUnitDialog, c_anchorCenter, 0, 0);
    lib64DC5B97_gv_dialogItemUnits[lib64DC5B97_gv_dialogItemUnitsCurrent][0][0] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lp_unitType), PlayerGroupSingle(lib64DC5B97_gv_editValueUnitType));
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 32, 32, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\icon-gas-terran-small.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnitVespene[lib64DC5B97_gv_dialogItemUnitsCurrent] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lib64DC5B97_gv_currentUnitDialog, c_anchorBottom, 0, 16);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1200, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib64DC5B97_gv_currentUnit += 1;
    lib64DC5B97_gv_dialogItemUnitsCurrent += 1;
    lib64DC5B97_gf_AddSkinNone();
}

void lib64DC5B97_gf_AddSkin (string lp_skin, int lp_multiplier) {
    // Variable Declarations
    int lv_offset;
    int lv_cost;
    int lv_button;

    // Automatic Variable Declarations
    playergroup autoABC3DB36_g;
    int autoABC3DB36_var;
    string autoB17B0953_val;

    // Variable Initialization
    lv_offset = (-12 - ((lib64DC5B97_gv_currentUnitSkin + 1) * 77));
    lv_cost = (lib64DC5B97_gv_currentUnit4 * lp_multiplier);
    lv_button = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 600, PlayerGroupAll());
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][0] = DialogControlLastCreated();
    lib64DC5B97_gv_dialogItemUnitsSkin[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)] = lp_skin;
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogSkin, lp_skin, "Name", c_playerAny)) + StringToText("</n></n>") + StringToText("<img path=\"Assets\\Textures\\icon-gas-terran-nobg.dds\" height=\"28\" width=\"28\"/> <s val=\"SkinSystem_Vespene_Tooltip\"></c>") + IntToText(lv_cost)), PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lib64DC5B97_gv_currentUnit2), PlayerGroupSingle(0));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lp_skin), PlayerGroupSingle(1));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lv_cost), PlayerGroupSingle(lib64DC5B97_gv_editValueVespeneCosts));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(1), PlayerGroupSingle(lib64DC5B97_gv_editValueIsSkin));
    autoABC3DB36_g = PlayerGroupActive();
    autoABC3DB36_var = -1;
    while (true) {
        autoABC3DB36_var = PlayerGroupNextPlayer(autoABC3DB36_g, autoABC3DB36_var);
        if (autoABC3DB36_var < 0) { break; }
        autoB17B0953_val = PlayerRace(autoABC3DB36_var);
        if (autoB17B0953_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normalpressed.dds", PlayerGroupSingle(autoABC3DB36_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normaloverpressedover.dds", PlayerGroupSingle(autoABC3DB36_var));
        }
        else if (autoB17B0953_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normalpressed.dds", PlayerGroupSingle(autoABC3DB36_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normaloverpressedover.dds", PlayerGroupSingle(autoABC3DB36_var));
        }
        else {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normalpressed.dds", PlayerGroupSingle(autoABC3DB36_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normaloverpressedover.dds", PlayerGroupSingle(autoABC3DB36_var));
        }
    }
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lib64DC5B97_gv_currentUnitDialog, c_anchorBottom, 0, lv_offset);
    lv_button = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_buttonblack.dds", c_triggerImageTypeNormal, true, Color(0,0,0), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][1] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_button, c_anchorCenter, 0, 0);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), (CatalogFieldValueGet(c_gameCatalogSkin, lp_skin, "VariationIcon", c_playerAny)), c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_button, c_anchorCenter, 0, 0);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetSize(lib64DC5B97_gv_dialogItemUnitBackground[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)], PlayerGroupAll(), 96, (((lib64DC5B97_gv_currentUnitSkin + 1) * 77) + 20));
    lib64DC5B97_gv_currentUnitSkin += 1;
}

void lib64DC5B97_gf_AddSkinNone () {
    // Variable Declarations
    int lv_offset;
    int lv_button;

    // Automatic Variable Declarations
    playergroup auto6E85A6F8_g;
    int auto6E85A6F8_var;
    string auto4131B2DF_val;
    playergroup auto6F5527B0_g;
    int auto6F5527B0_var;
    string auto204DC43D_val;
    playergroup autoF7272763_g;
    int autoF7272763_var;
    string autoC9301888_val;

    // Variable Initialization
    lv_offset = (-12 - ((lib64DC5B97_gv_currentUnitSkin + 1) * 77));
    lv_button = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 600, PlayerGroupAll());
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][0] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 100.0);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal("UI/Default")), PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lib64DC5B97_gv_currentUnit2), PlayerGroupSingle(0));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), "", PlayerGroupSingle(1));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(0), PlayerGroupSingle(lib64DC5B97_gv_editValueVespeneCosts));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(1), PlayerGroupSingle(lib64DC5B97_gv_editValueIsSkin));
    auto6E85A6F8_g = PlayerGroupActive();
    auto6E85A6F8_var = -1;
    while (true) {
        auto6E85A6F8_var = PlayerGroupNextPlayer(auto6E85A6F8_g, auto6E85A6F8_var);
        if (auto6E85A6F8_var < 0) { break; }
        auto4131B2DF_val = PlayerRace(auto6E85A6F8_var);
        if (auto4131B2DF_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normalpressed.dds", PlayerGroupSingle(auto6E85A6F8_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normaloverpressedover.dds", PlayerGroupSingle(auto6E85A6F8_var));
        }
        else if (auto4131B2DF_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normalpressed.dds", PlayerGroupSingle(auto6E85A6F8_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normaloverpressedover.dds", PlayerGroupSingle(auto6E85A6F8_var));
        }
        else {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normalpressed.dds", PlayerGroupSingle(auto6E85A6F8_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normaloverpressedover.dds", PlayerGroupSingle(auto6E85A6F8_var));
        }
    }
    DialogControlSetPositionRelative(lib64DC5B97_gv_dialogItemUnitHighlight[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)], PlayerGroupAll(), c_anchorCenter, DialogControlLastCreated(), c_anchorCenter, 0, 0);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lib64DC5B97_gv_currentUnitDialog, c_anchorBottom, 0, lv_offset);
    lv_button = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\btn-command-cancel.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][1] = DialogControlLastCreated();
    lib64DC5B97_gv_dialogItemUnits[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)][(lib64DC5B97_gv_currentUnitSkin + 1)][2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_button, c_anchorCenter, 0, 0);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    auto6F5527B0_g = PlayerGroupActive();
    auto6F5527B0_var = -1;
    while (true) {
        auto6F5527B0_var = PlayerGroupNextPlayer(auto6F5527B0_g, auto6F5527B0_var);
        if (auto6F5527B0_var < 0) { break; }
        auto204DC43D_val = PlayerRace(auto6F5527B0_var);
        if (auto204DC43D_val == "Terr") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(25.49, 70.59, 43.14), PlayerGroupSingle(auto6F5527B0_var));
        }
        else if (auto204DC43D_val == "Zerg") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(96.08, 54.90, 27.45), PlayerGroupSingle(auto6F5527B0_var));
        }
        else {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(35.29, 62.75, 94.12), PlayerGroupSingle(auto6F5527B0_var));
        }
    }
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_currentUnit3], 1, 1, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_tooltip_frame_protoss.dds", c_triggerImageTypeBorder, true, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_dialogItemUnitBackground[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 550, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lib64DC5B97_gv_currentUnitDialog, c_anchorBottom, 0, (lv_offset + 10));
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    autoF7272763_g = PlayerGroupActive();
    autoF7272763_var = -1;
    while (true) {
        autoF7272763_var = PlayerGroupNextPlayer(autoF7272763_g, autoF7272763_var);
        if (autoF7272763_var < 0) { break; }
        autoC9301888_val = PlayerRace(autoF7272763_var);
        if (autoC9301888_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_tooltip_frame_terran.dds", PlayerGroupSingle(autoF7272763_var));
        }
        else if (autoC9301888_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_tooltip_frame_zerg.dds", PlayerGroupSingle(autoF7272763_var));
        }
        else {
        }
    }
    DialogControlSetSize(lib64DC5B97_gv_dialogItemUnitBackground[(lib64DC5B97_gv_dialogItemUnitsCurrent - 1)], PlayerGroupAll(), 96, (((lib64DC5B97_gv_currentUnitSkin + 1) * 77) + 20));
    lib64DC5B97_gv_currentUnitSkin += 1;
}

trigger auto_lib64DC5B97_gf_LoadUnit_Trigger = null;

void lib64DC5B97_gf_LoadUnit () {
    if (auto_lib64DC5B97_gf_LoadUnit_Trigger == null) {
        auto_lib64DC5B97_gf_LoadUnit_Trigger = TriggerCreate("auto_lib64DC5B97_gf_LoadUnit_TriggerFunc");
    }

    TriggerExecute(auto_lib64DC5B97_gf_LoadUnit_Trigger, false, false);
}

bool auto_lib64DC5B97_gf_LoadUnit_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    bool lv_switchbreaker;
    int lv_vespeneChange;

    // Automatic Variable Declarations
    playergroup auto421C0CDF_g;
    int auto421C0CDF_var;
    const int autoA46BED7D_ae = lib64DC5B97_gv_skin;
    const int autoA46BED7D_ai = 1;

    // Variable Initialization
    lv_x = (lib64DC5B97_gv_dialogItemUnitsCurrent - 1);

    // Implementation
    auto421C0CDF_g = PlayerGroupActive();
    auto421C0CDF_var = -1;
    while (true) {
        auto421C0CDF_var = PlayerGroupNextPlayer(auto421C0CDF_g, auto421C0CDF_var);
        if (auto421C0CDF_var < 0) { break; }
        if ((lib64DC5B97_gv_playerRaceMain[auto421C0CDF_var] == lib64DC5B97_gv_currentUnit3) && (PlayerType(auto421C0CDF_var) == c_playerTypeUser) && (BankKeyExists(lib64DC5B97_gv_skinsBank[auto421C0CDF_var], "Skins", ((lib64DC5B97_gv_currentUnit2))) == true) && (TechTreeUpgradeCount(auto421C0CDF_var, "WorkerCommanderSelect", c_techCountCompleteOnly) == 0)) {
            lv_y = 1;
            for ( ; ( (autoA46BED7D_ai >= 0 && lv_y <= autoA46BED7D_ae) || (autoA46BED7D_ai < 0 && lv_y >= autoA46BED7D_ae) ) ; lv_y += autoA46BED7D_ai ) {
                if ((libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], 1) == BankValueGetAsString(lib64DC5B97_gv_skinsBank[auto421C0CDF_var], "Skins", (lib64DC5B97_gv_currentUnit2)))) {
                    lv_switchbreaker = true;
                    break;
                }

            }
            if ((lv_switchbreaker == true)) {
                lv_vespeneChange = StringToInt(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], lib64DC5B97_gv_editValueVespeneCosts));
                if ((lib64DC5B97_gv_playerVespene[auto421C0CDF_var][lib64DC5B97_gv_currentUnit3] >= lv_vespeneChange)) {
                    lib64DC5B97_gv_playerVespene[auto421C0CDF_var][lib64DC5B97_gv_currentUnit3] -= lv_vespeneChange;
                    PlayerModifyPropertyInt(auto421C0CDF_var, c_playerPropVespene, c_playerPropOperSetTo, lib64DC5B97_gv_playerVespene[auto421C0CDF_var][lib64DC5B97_gv_currentUnit3]);
                    libNtve_gf_SetDialogItemEditorValue(lib64DC5B97_gv_dialogItemUnitHighlight[lv_x], libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], lib64DC5B97_gv_editValueVespeneCosts), PlayerGroupSingle(auto421C0CDF_var));
                    DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitVespene[lv_x], PlayerGroupSingle(auto421C0CDF_var), true);
                    DialogControlSetPositionRelative(lib64DC5B97_gv_dialogItemUnitHighlight[lv_x], PlayerGroupSingle(auto421C0CDF_var), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], c_anchorCenter, 0, 0);
                    libNtve_gf_SetDialogItemImage(lib64DC5B97_gv_dialogItemUnits[lv_x][0][0], (CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_x][lv_y], "VariationIcon", c_playerAny)), PlayerGroupSingle(auto421C0CDF_var));
                    libNtve_gf_SetDialogItemTooltip(lib64DC5B97_gv_dialogItemUnitButton[lv_x], (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][0][0], lib64DC5B97_gv_editValueUnitType), "Name", c_playerAny)) + StringToText("</s></n>") + StringExternal(CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_x][lv_y], "Name", c_playerAny))), PlayerGroupSingle(auto421C0CDF_var));
                    DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], PlayerGroupSingle(auto421C0CDF_var), 0.0, 0.0);
                    DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_x][1][0], PlayerGroupSingle(auto421C0CDF_var), 0.0, 0.0);
                    libNtve_gf_PlayerApplySkinReplacingExistingUnit(auto421C0CDF_var, (BankValueGetAsString(lib64DC5B97_gv_skinsBank[auto421C0CDF_var], "Skins", (lib64DC5B97_gv_currentUnit2))), true);
                    lib64DC5B97_gf_SkinAdditions(auto421C0CDF_var, lib64DC5B97_gv_currentUnit2, (BankValueGetAsString(lib64DC5B97_gv_skinsBank[auto421C0CDF_var], "Skins", (lib64DC5B97_gv_currentUnit2))));
                }
                else {
                    BankKeyRemove(lib64DC5B97_gv_skinsBank[auto421C0CDF_var], "Skins", ((lib64DC5B97_gv_currentUnit2)));
                }
            }

        }

    }
    return true;
}

void lib64DC5B97_gf_LoadCommanderSkins (int lp_player) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int autoB88D27EA_ae;
    const int autoB88D27EA_ai = 1;

    // Variable Initialization

    // Implementation
    lib64DC5B97_gv_dialogItemUnitsCurrentTEMP = (lib64DC5B97_gv_raceDialogCurrentUnitOffset[lib64DC5B97_gv_playerRaceMain[lp_player]] - 1);
    autoB88D27EA_ae = (lib64DC5B97_gv_raceUnitCurrent[lib64DC5B97_gv_playerRaceMain[lp_player]] - 1);
    lv_i = 0;
    for ( ; ( (autoB88D27EA_ai >= 0 && lv_i <= autoB88D27EA_ae) || (autoB88D27EA_ai < 0 && lv_i >= autoB88D27EA_ae) ) ; lv_i += autoB88D27EA_ai ) {
        lib64DC5B97_gf_LoadUnitSinglePlayer(lp_player, lib64DC5B97_gv_raceUnit[lib64DC5B97_gv_playerRaceMain[lp_player]][lv_i]);
    }
}

trigger auto_lib64DC5B97_gf_LoadUnitSinglePlayer_Trigger = null;
int auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_player;
string auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_unit;

void lib64DC5B97_gf_LoadUnitSinglePlayer (int lp_player, string lp_unit) {
    auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_player = lp_player;
    auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_unit = lp_unit;

    if (auto_lib64DC5B97_gf_LoadUnitSinglePlayer_Trigger == null) {
        auto_lib64DC5B97_gf_LoadUnitSinglePlayer_Trigger = TriggerCreate("auto_lib64DC5B97_gf_LoadUnitSinglePlayer_TriggerFunc");
    }

    TriggerExecute(auto_lib64DC5B97_gf_LoadUnitSinglePlayer_Trigger, false, false);
}

bool auto_lib64DC5B97_gf_LoadUnitSinglePlayer_TriggerFunc (bool testConds, bool runActions) {
    int lp_player = auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_player;
    string lp_unit = auto_lib64DC5B97_gf_LoadUnitSinglePlayer_lp_unit;

    // Variable Declarations
    int lv_x;
    int lv_y;
    bool lv_switchbreaker;
    int lv_vespeneChange;

    // Automatic Variable Declarations
    const int autoA16E02D9_ae = lib64DC5B97_gv_skin;
    const int autoA16E02D9_ai = 1;

    // Variable Initialization
    lv_x = lib64DC5B97_gv_dialogItemUnitsCurrentTEMP;

    // Implementation
    lib64DC5B97_gv_dialogItemUnitsCurrentTEMP += 1;
    lv_x = lib64DC5B97_gv_dialogItemUnitsCurrentTEMP;
    if ((PlayerType(lp_player) == c_playerTypeUser) && (BankKeyExists(lib64DC5B97_gv_skinsBank[lp_player], "Skins", ((lp_unit))) == true)) {
        lv_y = 1;
        for ( ; ( (autoA16E02D9_ai >= 0 && lv_y <= autoA16E02D9_ae) || (autoA16E02D9_ai < 0 && lv_y >= autoA16E02D9_ae) ) ; lv_y += autoA16E02D9_ai ) {
            if ((libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], 1) == BankValueGetAsString(lib64DC5B97_gv_skinsBank[lp_player], "Skins", (lp_unit)))) {
                lv_switchbreaker = true;
                break;
            }

        }
        if ((lv_switchbreaker == true)) {
            lv_vespeneChange = StringToInt(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], lib64DC5B97_gv_editValueVespeneCosts));
            if ((lib64DC5B97_gv_playerVespene[lp_player][lib64DC5B97_gv_playerRaceMain[lp_player]] >= lv_vespeneChange)) {
                lib64DC5B97_gv_playerVespene[lp_player][lib64DC5B97_gv_playerRaceMain[lp_player]] -= lv_vespeneChange;
                PlayerModifyPropertyInt(lp_player, c_playerPropVespene, c_playerPropOperSetTo, lib64DC5B97_gv_playerVespene[lp_player][lib64DC5B97_gv_playerRaceMain[lp_player]]);
                libNtve_gf_SetDialogItemEditorValue(lib64DC5B97_gv_dialogItemUnitHighlight[lv_x], libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], lib64DC5B97_gv_editValueVespeneCosts), PlayerGroupSingle(lp_player));
                DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitVespene[lv_x], PlayerGroupSingle(lp_player), true);
                DialogControlSetPositionRelative(lib64DC5B97_gv_dialogItemUnitHighlight[lv_x], PlayerGroupSingle(lp_player), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], c_anchorCenter, 0, 0);
                libNtve_gf_SetDialogItemImage(lib64DC5B97_gv_dialogItemUnits[lv_x][0][0], (CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_x][lv_y], "VariationIcon", c_playerAny)), PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemTooltip(lib64DC5B97_gv_dialogItemUnitButton[lv_x], (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_x][0][0], lib64DC5B97_gv_editValueUnitType), "Name", c_playerAny)) + StringToText("</s></n>") + StringExternal(CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_x][lv_y], "Name", c_playerAny))), PlayerGroupSingle(lp_player));
                DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0], PlayerGroupSingle(lp_player), 0.0, 0.0);
                DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_x][1][0], PlayerGroupSingle(lp_player), 0.0, 0.0);
                libNtve_gf_PlayerApplySkinReplacingExistingUnit(lp_player, (BankValueGetAsString(lib64DC5B97_gv_skinsBank[lp_player], "Skins", (lp_unit))), true);
                lib64DC5B97_gf_SkinAdditions(lp_player, lp_unit, (BankValueGetAsString(lib64DC5B97_gv_skinsBank[lp_player], "Skins", (lp_unit))));
            }
            else {
                BankKeyRemove(lib64DC5B97_gv_skinsBank[lp_player], "Skins", ((lp_unit)));
            }
        }

    }

    return true;
}

void lib64DC5B97_gf_CreateVespeneTab () {
    // Variable Declarations
    int lv_border;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_border = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib64DC5B97_gv_dialogMain, 245, 50, c_anchorBottom, 0, 40, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib64DC5B97_gv_vespeneTabCurrent = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, (DialogControlGetWidth(lib64DC5B97_gv_vespeneTabCurrent, 0) + 45), 70, c_anchorBottom, 0, 0, StringToText(""), "Assets\\Textures\\ui_whiteborderframe.dds", c_triggerImageTypeNineSlice, true, Color(50.20, 100.00, 43.92), c_triggerBlendModeNormal);
    lv_border = DialogControlLastCreated();
    lib64DC5B97_gv_vespeneTabElement[0] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_vespeneTabCurrent, c_anchorCenter, 0, -2);
    libNtve_gf_SetDialogItemDesaturationColor(DialogControlLastCreated(), Color(62.75, 62.75, 62.75), PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 64, 64, c_anchorBottom, 0, 0, StringToText(""), "Assets\\Textures\\icon-gas-terran_nobg_border.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_vespeneTabElement[1] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, lv_border, c_anchorLeft, -8, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 810, PlayerGroupAll());
    libNtve_gf_SetDialogItemDesaturationColor(DialogControlLastCreated(), Color(62.75, 62.75, 62.75), PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, DialogControlGetWidth(lv_border, 0), DialogControlGetHeight(lv_border, 0), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_blackborderframe.dds", c_triggerImageTypeNineSlice, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 790, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNormal, true, Color(0,0,0), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 780, PlayerGroupAll());
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogMain, (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal("UI/ResourceName1") + StringToText("</s></n></n>") + StringExternal("Param/Value/lib_64DC5B97_29DA267D")), PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 795, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_vespeneTabCurrent, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_partyframe_buttonglow.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(50.20, 100.00, 43.92), PlayerGroupAll());
}

void lib64DC5B97_gf_UpdateVespeneTab (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemText(lib64DC5B97_gv_vespeneTabCurrent, ((StringToText("<s val=\"SkinSystem_Vespene\">") + IntToText(lib64DC5B97_gv_playerVespene[lp_player][lib64DC5B97_gv_playerRace[lp_player]])) + StringToText("<c val=\"A0A0A0\">/") + IntToText(lib64DC5B97_gv_playerVespeneMax[lp_player])), PlayerGroupSingle(lp_player));
}

void lib64DC5B97_gf_CreateVespenePlus () {
    // Variable Declarations
    int lv_border;

    // Automatic Variable Declarations
    playergroup auto9B6546A3_g;
    int auto9B6546A3_var;

    // Variable Initialization
    lv_border = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 100, 100, c_anchorBottom, 0, 0, StringToText(""), "Assets\\Textures\\ui_whiteborderframe.dds", c_triggerImageTypeNineSlice, true, Color(50.20, 100.00, 43.92), c_triggerBlendModeNormal);
    lv_border = DialogControlLastCreated();
    lib64DC5B97_gv_addMoreVespeneButton[0] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, lib64DC5B97_gv_vespeneTabElement[0], c_anchorRight, -16, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, DialogControlGetWidth(lv_border, 0), DialogControlGetHeight(lv_border, 0), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_blackborderframe.dds", c_triggerImageTypeNineSlice, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_addMoreVespeneButton[1] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 790, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNormal, true, Color(0,0,0), c_triggerBlendModeNormal);
    lib64DC5B97_gv_addMoreVespeneButton[2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 780, PlayerGroupAll());
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), true);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogMain, (DialogControlGetWidth(lv_border, 0) - 32), (DialogControlGetHeight(lv_border, 0) - 32), c_anchorTopLeft, 0, 0, StringExternal("Param/Value/lib_64DC5B97_DFE2BB88"), StringToText(""), "");
    lib64DC5B97_gv_addMoreVespeneButton[3] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 795, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_partyframe_buttonglow.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(50.20, 100.00, 43.92), PlayerGroupAll());
    libNtve_gf_SetDialogItemHotkey(DialogControlLastCreated(), c_hotkeyHeroSelect2, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\btn-ability-stetmann-topbar-healthconfiguration.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib64DC5B97_gv_addMoreVespeneButton[4] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), false, PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 794, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_border, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(87.84, 100.00, 87.84), PlayerGroupAll());
    DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[0], PlayerGroupAll(), false);
    DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[1], PlayerGroupAll(), false);
    DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[2], PlayerGroupAll(), false);
    DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[3], PlayerGroupAll(), false);
    DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[4], PlayerGroupAll(), false);
    auto9B6546A3_g = PlayerGroupActive();
    auto9B6546A3_var = -1;
    while (true) {
        auto9B6546A3_var = PlayerGroupNextPlayer(auto9B6546A3_g, auto9B6546A3_var);
        if (auto9B6546A3_var < 0) { break; }
        if ((TechTreeUpgradeCount(auto9B6546A3_var, "Patron", c_techCountCompleteOnly) == 0) && (TechTreeUpgradeCount(auto9B6546A3_var, "VespeneCustomer", c_techCountCompleteOnly) == 0) && (lib64DC5B97_gv_showVespeneStuff == true) && (libDDE92A83_gf_GameisKR() == false)) {
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[0], PlayerGroupSingle(auto9B6546A3_var), true);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[1], PlayerGroupSingle(auto9B6546A3_var), true);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[2], PlayerGroupSingle(auto9B6546A3_var), true);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[3], PlayerGroupSingle(auto9B6546A3_var), true);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[4], PlayerGroupSingle(auto9B6546A3_var), true);
        }

    }
}

void lib64DC5B97_gf_CreateRaceSelect () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlCreate(lib64DC5B97_gv_dialogMain, c_triggerControlTypePulldown);
    lib64DC5B97_gv_raceDropdown = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottomLeft, 50, 50);
}

void lib64DC5B97_gf_AddVespene (int lp_player, int lp_vespene) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoA8C77F03_ae = lib64DC5B97_gv_races;
    const int autoA8C77F03_ai = 1;

    // Variable Initialization

    // Implementation
    lib64DC5B97_gv_playerVespeneMax[lp_player] = libNtve_gf_ArithmeticIntClamp((lib64DC5B97_gv_playerVespeneMax[lp_player] + lp_vespene), 500, lib64DC5B97_gv_vespeneLimit);
    lv_i = 0;
    for ( ; ( (autoA8C77F03_ai >= 0 && lv_i <= autoA8C77F03_ae) || (autoA8C77F03_ai < 0 && lv_i >= autoA8C77F03_ae) ) ; lv_i += autoA8C77F03_ai ) {
        lib64DC5B97_gv_playerVespene[lp_player][lv_i] = libNtve_gf_ArithmeticIntClamp((lib64DC5B97_gv_playerVespene[lp_player][lv_i] + lp_vespene), 500, lib64DC5B97_gv_vespeneLimit);
    }
}

void lib64DC5B97_gf_ToggleAddVespeneDialog (int lp_player, bool lp_forceClose) {
    // Automatic Variable Declarations
    // Implementation
    if (((DialogIsVisible(lib64DC5B97_gv_addMoreVespeneDialog, lp_player) == true) || (lp_forceClose == true))) {
        DialogSetVisible(lib64DC5B97_gv_addMoreVespeneDialog, PlayerGroupSingle(lp_player), false);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[0], false, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[1], false, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[2], false, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[3], false, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[4], false, PlayerGroupSingle(lp_player));
        if ((libDDE92A83_gv_gameOver == false)) {
            SoundPlayForPlayer(SoundLink("UI_MenuSounds_Premium_Close", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
        }
        else {
            DialogSetVisible(lib64DC5B97_gv_addMoreVespeneFallbackDialog, PlayerGroupSingle(lp_player), true);
        }
    }
    else {
        DialogSetVisible(lib64DC5B97_gv_addMoreVespeneDialog, PlayerGroupSingle(lp_player), true);
        DialogSetVisible(lib64DC5B97_gv_addMoreVespeneFallbackDialog, PlayerGroupSingle(lp_player), false);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[0], true, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[1], true, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[2], true, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[3], true, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_addMoreVespeneButton[4], true, PlayerGroupSingle(lp_player));
        SoundPlayForPlayer(SoundLink("UI_MenuSounds_Premium_Open", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
    }
}

void lib64DC5B97_gf_SkinSystemSetRace (int lp_player) {
    // Variable Declarations
    int lv_race;

    // Automatic Variable Declarations
    string autoC3CB2743_val;

    // Variable Initialization

    // Implementation
    TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
    libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 0);
    autoC3CB2743_val = UnitGetType(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(lp_player), 1));
    if (autoC3CB2743_val == "WorkerProtoss") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 0;
    }
    else if (autoC3CB2743_val == "WorkerTerran") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 1;
    }
    else if (autoC3CB2743_val == "WorkerZerg") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 2;
    }
    else if (autoC3CB2743_val == "WorkerRaynor") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 3;
    }
    else if (autoC3CB2743_val == "WorkerSwann") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 4;
    }
    else if (autoC3CB2743_val == "WorkerNova") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 5;
    }
    else if (autoC3CB2743_val == "WorkerHorner") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 6;
    }
    else if (autoC3CB2743_val == "WorkerTychus") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 7;
    }
    else if (autoC3CB2743_val == "WorkerMengsk") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 8;
    }
    else if (autoC3CB2743_val == "WorkerArtanis") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 9;
    }
    else if (autoC3CB2743_val == "WorkerVorazun") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 10;
    }
    else if (autoC3CB2743_val == "WorkerKarax") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 11;
    }
    else if (autoC3CB2743_val == "WorkerAlarak") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 12;
    }
    else if (autoC3CB2743_val == "WorkerFenix") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 13;
    }
    else if (autoC3CB2743_val == "WorkerZeratul") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 14;
    }
    else if (autoC3CB2743_val == "WorkerKerrigan") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 15;
    }
    else if (autoC3CB2743_val == "WorkerZagara") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 16;
    }
    else if (autoC3CB2743_val == "WorkerAbathur") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
        lv_race = 17;
    }
    else if (autoC3CB2743_val == "WorkerStukov") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 18;
    }
    else if (autoC3CB2743_val == "WorkerDehaka") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 19;
    }
    else if (autoC3CB2743_val == "WorkerStetmann") {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), false);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "UsingVespeneIncapableWorker", 1);
        lv_race = 20;
    }
    else {
    }
    if ((GameIsTestMap(false) == true)) {
        TechTreeAbilityAllow(lp_player, AbilityCommand("SkinSystemOpen", 0), true);
    }

    lib64DC5B97_gv_playerRaceMain[lp_player] = lv_race;
}

void lib64DC5B97_gf_SkinSystemStart () {
    // Variable Declarations
    int lv_i;
    int lv_borderBackground;

    // Automatic Variable Declarations
    playergroup autoA9F4A325_g;
    int autoA9F4A325_var;
    const int autoCA16D1B5_ae = lib64DC5B97_gv_races;
    const int autoCA16D1B5_ai = 1;
    playergroup autoE4C6741F_g;
    int autoE4C6741F_var;
    string auto696B76B5_val;
    playergroup autoA45AAAE7_g;
    int autoA45AAAE7_var;
    string auto3DC77E3A_val;
    playergroup autoB9BE4F45_g;
    int autoB9BE4F45_var;

    // Variable Initialization
    lv_borderBackground = c_invalidDialogControlId;

    // Implementation
    TriggerEnable(lib64DC5B97_gt_DialogItemUnitsUsed, true);
    TriggerEnable(lib64DC5B97_gt_Close, true);
    TriggerEnable(lib64DC5B97_gt_CloseRewards, true);
    TriggerEnable(lib64DC5B97_gt_VespeneToggle, true);
    TriggerEnable(lib64DC5B97_gt_AddMoreVespene, true);
    TriggerEnable(lib64DC5B97_gt_AddMoreVespeneFallback, true);
    TriggerEnable(lib64DC5B97_gt_RewardsNotification, true);
    TriggerEnable(lib64DC5B97_gt_RewardsNotificationClose, true);
    autoA9F4A325_g = PlayerGroupActive();
    autoA9F4A325_var = -1;
    while (true) {
        autoA9F4A325_var = PlayerGroupNextPlayer(autoA9F4A325_g, autoA9F4A325_var);
        if (autoA9F4A325_var < 0) { break; }
        lib64DC5B97_gf_StorePlayerSkins(autoA9F4A325_var, PlayerRace(autoA9F4A325_var));
        lv_i = 0;
        for ( ; ( (autoCA16D1B5_ai >= 0 && lv_i <= autoCA16D1B5_ae) || (autoCA16D1B5_ai < 0 && lv_i >= autoCA16D1B5_ae) ) ; lv_i += autoCA16D1B5_ai ) {
            lib64DC5B97_gv_playerVespene[autoA9F4A325_var][lv_i] = lib64DC5B97_gv_playerVespeneMax[autoA9F4A325_var];
        }
    }
    lib64DC5B97_gf_StartBank();
    DialogCreate(1370, 950, c_anchorBottom, 0, 200, true);
    lib64DC5B97_gv_dialogMain = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 1320, 135, c_anchorBottom, -20, 25, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg.dds", c_triggerImageTypeHorizontalBorder, true, Color(100,100,100), c_triggerBlendModeNormal);
    lv_borderBackground = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    autoE4C6741F_g = PlayerGroupActive();
    autoE4C6741F_var = -1;
    while (true) {
        autoE4C6741F_var = PlayerGroupNextPlayer(autoE4C6741F_g, autoE4C6741F_var);
        if (autoE4C6741F_var < 0) { break; }
        auto696B76B5_val = PlayerRace(autoE4C6741F_var);
        if (auto696B76B5_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_terran.dds", PlayerGroupSingle(autoE4C6741F_var));
        }
        else if (auto696B76B5_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glues_pageassets_dialogbg_error.dds", PlayerGroupSingle(autoE4C6741F_var));
        }
        else {
        }
    }
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 100, c_anchorBottom, -235, 20, (StringToText("<s val=\"SkinSystem_WrongRace\">") + StringExternal("Param/Value/lib_64DC5B97_1A6E6748")), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib64DC5B97_gv_vespeneTabWrongRace = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogMain, 69, 37, c_anchorTopRight, 0, 0, StringToText(""), StringToText(""), "");
    lib64DC5B97_gv_closeButton = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottomRight, lv_borderBackground, c_anchorBottomRight, -9, -11);
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normalpressed_white_upsidedown.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\sc2_ui_glues_bluebuttons_close_normaloverpressedover_white_upsidedown.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    autoA45AAAE7_g = PlayerGroupActive();
    autoA45AAAE7_var = -1;
    while (true) {
        autoA45AAAE7_var = PlayerGroupNextPlayer(autoA45AAAE7_g, autoA45AAAE7_var);
        if (autoA45AAAE7_var < 0) { break; }
        auto3DC77E3A_val = PlayerRace(autoA45AAAE7_var);
        if (auto3DC77E3A_val == "Terr") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(25.49, 70.59, 43.14), PlayerGroupSingle(autoA45AAAE7_var));
        }
        else if (auto3DC77E3A_val == "Zerg") {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(96.08, 54.90, 27.45), PlayerGroupSingle(autoA45AAAE7_var));
        }
        else {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(35.29, 62.75, 94.12), PlayerGroupSingle(autoA45AAAE7_var));
        }
    }
    lib64DC5B97_gf_CreateRaceSelect();
    lib64DC5B97_gf_AddRaceProtoss();
    lib64DC5B97_gf_AddRaceTerran();
    lib64DC5B97_gf_AddRaceZerg();
    lib64DC5B97_gf_AddRaceRaynor();
    lib64DC5B97_gf_AddRaceSwann();
    lib64DC5B97_gf_AddRaceNova();
    lib64DC5B97_gf_AddRaceHorner();
    lib64DC5B97_gf_AddRaceTychus();
    lib64DC5B97_gf_AddRaceMengsk();
    lib64DC5B97_gf_AddRaceArtanis();
    lib64DC5B97_gf_AddRaceVorazun();
    lib64DC5B97_gf_AddRaceKarax();
    lib64DC5B97_gf_AddRaceAlarak();
    lib64DC5B97_gf_AddRaceFenix();
    lib64DC5B97_gf_AddRaceZeratul();
    lib64DC5B97_gf_AddRaceKerrigan();
    lib64DC5B97_gf_AddRaceZagara();
    lib64DC5B97_gf_AddRaceAbathur();
    lib64DC5B97_gf_AddRaceStukov();
    lib64DC5B97_gf_AddRaceDehaka();
    lib64DC5B97_gf_AddRaceStetmann();
    lib64DC5B97_gf_CreateVespeneTab();
    lib64DC5B97_gf_CreateVespenePlus();
    lib64DC5B97_gf_VespeneBorder();
    lib64DC5B97_gf_VespeneDialogFallback();
    autoB9BE4F45_g = PlayerGroupActive();
    autoB9BE4F45_var = -1;
    while (true) {
        autoB9BE4F45_var = PlayerGroupNextPlayer(autoB9BE4F45_g, autoB9BE4F45_var);
        if (autoB9BE4F45_var < 0) { break; }
        PlayerModifyPropertyInt(autoB9BE4F45_var, c_playerPropVespene, c_playerPropOperSetTo, lib64DC5B97_gv_playerVespene[autoB9BE4F45_var][lib64DC5B97_gv_playerRace[autoB9BE4F45_var]]);
        lib64DC5B97_gf_UpdateVespeneTab(autoB9BE4F45_var);
        BankSave(lib64DC5B97_gv_skinsBank[autoB9BE4F45_var]);
    }
    lib64DC5B97_gf_Settings();
}

void lib64DC5B97_gf_ToggleUnitTab (int lp_player, int lp_index, bool lp_forceClose) {
    // Variable Declarations
    int lv_i;
    bool lv_showHide;
    bool lv_desaturated;

    // Automatic Variable Declarations
    const int autoC6C90735_ae = lib64DC5B97_gv_skin;
    const int autoC6C90735_ai = 1;

    // Variable Initialization
    lv_desaturated = true;

    // Implementation
    if (((DialogControlIsVisible(lib64DC5B97_gv_dialogItemUnitHighlight[lp_index], lp_player) == true) || (lp_forceClose == true))) {
        lv_showHide = false;
        lv_desaturated = false;
        lib64DC5B97_gv_dialogItemTabIsOpen[lp_player][lp_index] = false;
    }
    else {
        lib64DC5B97_gv_playerCurrentTab[lp_player][lib64DC5B97_gv_playerRace[lp_player]] = lp_index;
        lv_showHide = true;
        lv_desaturated = true;
        lib64DC5B97_gv_dialogItemTabIsOpen[lp_player][lp_index] = true;
    }
    DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitHighlight[lp_index], PlayerGroupSingle(lp_player), lv_showHide);
    DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitBackground[lp_index], PlayerGroupSingle(lp_player), lv_showHide);
    libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_dialogItemUnitButton[lp_index], lv_desaturated, PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_dialogItemUnits[lp_index][0][0], lv_desaturated, PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_dialogItemUnits[lp_index][0][1], lv_desaturated, PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_dialogItemUnits[lp_index][0][2], lv_desaturated, PlayerGroupSingle(lp_player));
    lv_i = 1;
    for ( ; ( (autoC6C90735_ai >= 0 && lv_i <= autoC6C90735_ae) || (autoC6C90735_ai < 0 && lv_i >= autoC6C90735_ae) ) ; lv_i += autoC6C90735_ai ) {
        if ((lib64DC5B97_gv_dialogItemUnits[lp_index][lv_i][0] != c_invalidDialogControlId)) {
            DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnits[lp_index][lv_i][0], PlayerGroupSingle(lp_player), lv_showHide);
            DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnits[lp_index][lv_i][1], PlayerGroupSingle(lp_player), lv_showHide);
            DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnits[lp_index][lv_i][2], PlayerGroupSingle(lp_player), lv_showHide);
        }

    }
}

void lib64DC5B97_gf_SaveSkin (int lp_player, string lp_unitType, string lp_skin) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_skin != (""))) {
        BankValueSetFromString(lib64DC5B97_gv_skinsBank[lp_player], "Skins", (lp_unitType), (lp_skin));
    }
    else {
        BankKeyRemove(lib64DC5B97_gv_skinsBank[lp_player], "Skins", (lp_unitType));
    }
    BankSave(lib64DC5B97_gv_skinsBank[lp_player]);
}

trigger auto_lib64DC5B97_gf_VespeneTabFlash_Trigger = null;
int auto_lib64DC5B97_gf_VespeneTabFlash_lp_player;

void lib64DC5B97_gf_VespeneTabFlash (int lp_player) {
    auto_lib64DC5B97_gf_VespeneTabFlash_lp_player = lp_player;

    if (auto_lib64DC5B97_gf_VespeneTabFlash_Trigger == null) {
        auto_lib64DC5B97_gf_VespeneTabFlash_Trigger = TriggerCreate("auto_lib64DC5B97_gf_VespeneTabFlash_TriggerFunc");
    }

    TriggerExecute(auto_lib64DC5B97_gf_VespeneTabFlash_Trigger, false, false);
}

bool auto_lib64DC5B97_gf_VespeneTabFlash_TriggerFunc (bool testConds, bool runActions) {
    int lp_player = auto_lib64DC5B97_gf_VespeneTabFlash_lp_player;

    // Variable Declarations
    int lv_dialogItem;
    string lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dialogItem = c_invalidDialogControlId;
    lv_color = "<c val=\"FF4040\">";

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib64DC5B97_gv_dialogMain, 205, 50, c_anchorBottom, 0, 40, ((StringToText("<s val=\"SkinSystem_Vespene\">") + StringToText(lv_color) + IntToText(lib64DC5B97_gv_playerVespene[lp_player][lib64DC5B97_gv_playerRace[lp_player]])) + StringToText("<c val=\"A0A0A0\">/") + IntToText(lib64DC5B97_gv_playerVespeneMax[lp_player])), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_dialogItem = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1100, PlayerGroupAll());
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.5, 100.0);
    Wait(1.0, c_timeGame);
    DialogControlDestroy(lv_dialogItem);
    return true;
}

trigger auto_lib64DC5B97_gf_SelectSkinFlash_Trigger = null;
int auto_lib64DC5B97_gf_SelectSkinFlash_lp_player;
int auto_lib64DC5B97_gf_SelectSkinFlash_lp_unit;
int auto_lib64DC5B97_gf_SelectSkinFlash_lp_skin;

void lib64DC5B97_gf_SelectSkinFlash (int lp_player, int lp_unit, int lp_skin) {
    auto_lib64DC5B97_gf_SelectSkinFlash_lp_player = lp_player;
    auto_lib64DC5B97_gf_SelectSkinFlash_lp_unit = lp_unit;
    auto_lib64DC5B97_gf_SelectSkinFlash_lp_skin = lp_skin;

    if (auto_lib64DC5B97_gf_SelectSkinFlash_Trigger == null) {
        auto_lib64DC5B97_gf_SelectSkinFlash_Trigger = TriggerCreate("auto_lib64DC5B97_gf_SelectSkinFlash_TriggerFunc");
    }

    TriggerExecute(auto_lib64DC5B97_gf_SelectSkinFlash_Trigger, false, false);
}

bool auto_lib64DC5B97_gf_SelectSkinFlash_TriggerFunc (bool testConds, bool runActions) {
    int lp_player = auto_lib64DC5B97_gf_SelectSkinFlash_lp_player;
    int lp_unit = auto_lib64DC5B97_gf_SelectSkinFlash_lp_unit;
    int lp_skin = auto_lib64DC5B97_gf_SelectSkinFlash_lp_skin;

    // Variable Declarations
    int lv_skinButton;
    int lv_skinIcon;
    int lv_skinHighlight;
    int lv_skinBackground;

    // Automatic Variable Declarations
    string autoC29C7D6F_val;

    // Variable Initialization
    lv_skinButton = c_invalidDialogControlId;
    lv_skinIcon = c_invalidDialogControlId;
    lv_skinHighlight = c_invalidDialogControlId;
    lv_skinBackground = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemButton(lib64DC5B97_gv_dialogMain, 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    lv_skinButton = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1600, PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(lp_player), true);
    libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), false, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][0], c_anchorCenter, 0, 0);
    autoC29C7D6F_val = PlayerRace(lp_player);
    if (autoC29C7D6F_val == "Terr") {
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normalpressed.dds", PlayerGroupSingle(lp_player));
    }
    else if (autoC29C7D6F_val == "Zerg") {
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normalpressed.dds", PlayerGroupSingle(lp_player));
    }
    else {
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normalpressed.dds", PlayerGroupSingle(lp_player));
    }
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_buttonblack.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lv_skinBackground = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1650, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][0], c_anchorCenter, 0, 0);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 76, 76, c_anchorTopLeft, 50, 50, StringToText(""), (libNtve_gf_DialogItemImage(lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][2], 0)), c_triggerImageTypeNormal, true, libNtve_gf_DialogItemColor(lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][2], lp_player), c_triggerBlendModeNormal);
    lv_skinIcon = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][0], c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1700, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(lp_player), true);
    libNtve_gf_CreateDialogItemImage(lib64DC5B97_gv_dialogMain, 100, 100, c_anchorTopLeft, 50, 50, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_coop_selecttile_mastery_selected_small.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lv_skinHighlight = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lp_unit][lp_skin][0], c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 1800, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(lp_player), true);
    Wait(0.25, c_timeGame);
    DialogControlFadeTransparency(lv_skinButton, PlayerGroupAll(), 0.25, 100.0);
    DialogControlFadeTransparency(lv_skinHighlight, PlayerGroupAll(), 0.25, 100.0);
    DialogControlFadeTransparency(lv_skinIcon, PlayerGroupAll(), 0.25, 100.0);
    DialogControlFadeTransparency(lv_skinBackground, PlayerGroupAll(), 0.25, 100.0);
    Wait(2.0, c_timeGame);
    DialogControlDestroy(lv_skinButton);
    DialogControlDestroy(lv_skinHighlight);
    DialogControlDestroy(lv_skinIcon);
    DialogControlDestroy(lv_skinBackground);
    return true;
}

void lib64DC5B97_gf_VespeneCustomers () {
    // Automatic Variable Declarations
    // Implementation
    lib64DC5B97_gf_VespenePatronsStart();
    if ((libDDE92A83_gf_GameisEU() == true)) {
        lib64DC5B97_gf_VespeneCustomersEU();
    }

    if ((libDDE92A83_gf_GameisKR() == true)) {
        lib64DC5B97_gf_VespeneCustomersKR();
    }

    if ((libDDE92A83_gf_GameisUS() == true)) {
        lib64DC5B97_gf_VespeneCustomersUS();
    }

}

void lib64DC5B97_gf_VespeneCustomersEU () {
    // Variable Declarations
    string lv_data;
    int lv_i;

    // Automatic Variable Declarations
    playergroup auto2BF84959_g;
    int auto2BF84959_var;
    int auto8D85991A_ae;
    const int auto8D85991A_ai = 1;

    // Variable Initialization
    lv_data = "VespeneHandlesEU";

    // Implementation
    auto2BF84959_g = PlayerGroupActive();
    auto2BF84959_var = -1;
    while (true) {
        auto2BF84959_var = PlayerGroupNextPlayer(auto2BF84959_g, auto2BF84959_var);
        if (auto2BF84959_var < 0) { break; }
        auto8D85991A_ae = UserDataInstanceCount(lv_data);
        lv_i = 1;
        for ( ; ( (auto8D85991A_ai >= 0 && lv_i <= auto8D85991A_ae) || (auto8D85991A_ai < 0 && lv_i >= auto8D85991A_ae) ) ; lv_i += auto8D85991A_ai ) {
            if ((GameIsTestMap(false) == false) && (PlayerHandle(auto2BF84959_var) == UserDataGetString(lv_data, UserDataInstance(lv_data, lv_i), UserDataField(lv_data, 1), 1))) {
                lib64DC5B97_gf_AddVespene(auto2BF84959_var, 4000);
                TechTreeUpgradeAddLevel(auto2BF84959_var, "VespeneCustomer", 1);
            }

        }
    }
}

void lib64DC5B97_gf_VespeneCustomersUS () {
    // Variable Declarations
    string lv_data;
    int lv_i;

    // Automatic Variable Declarations
    playergroup auto2D63FFA6_g;
    int auto2D63FFA6_var;
    int auto5D0FC7EF_ae;
    const int auto5D0FC7EF_ai = 1;

    // Variable Initialization
    lv_data = "VespeneHandlesUS";

    // Implementation
    auto2D63FFA6_g = PlayerGroupActive();
    auto2D63FFA6_var = -1;
    while (true) {
        auto2D63FFA6_var = PlayerGroupNextPlayer(auto2D63FFA6_g, auto2D63FFA6_var);
        if (auto2D63FFA6_var < 0) { break; }
        auto5D0FC7EF_ae = UserDataInstanceCount(lv_data);
        lv_i = 1;
        for ( ; ( (auto5D0FC7EF_ai >= 0 && lv_i <= auto5D0FC7EF_ae) || (auto5D0FC7EF_ai < 0 && lv_i >= auto5D0FC7EF_ae) ) ; lv_i += auto5D0FC7EF_ai ) {
            if ((GameIsTestMap(false) == false) && (PlayerHandle(auto2D63FFA6_var) == UserDataGetString(lv_data, UserDataInstance(lv_data, lv_i), UserDataField(lv_data, 1), 1))) {
                lib64DC5B97_gf_AddVespene(auto2D63FFA6_var, 4000);
                TechTreeUpgradeAddLevel(auto2D63FFA6_var, "VespeneCustomer", 1);
            }

        }
    }
}

void lib64DC5B97_gf_VespeneCustomersKR () {
    // Variable Declarations
    string lv_data;
    int lv_i;

    // Automatic Variable Declarations
    playergroup auto3E852411_g;
    int auto3E852411_var;
    int autoD5BDCF65_ae;
    const int autoD5BDCF65_ai = 1;

    // Variable Initialization
    lv_data = "VespeneHandlesKR";

    // Implementation
    auto3E852411_g = PlayerGroupActive();
    auto3E852411_var = -1;
    while (true) {
        auto3E852411_var = PlayerGroupNextPlayer(auto3E852411_g, auto3E852411_var);
        if (auto3E852411_var < 0) { break; }
        autoD5BDCF65_ae = UserDataInstanceCount(lv_data);
        lv_i = 1;
        for ( ; ( (autoD5BDCF65_ai >= 0 && lv_i <= autoD5BDCF65_ae) || (autoD5BDCF65_ai < 0 && lv_i >= autoD5BDCF65_ae) ) ; lv_i += autoD5BDCF65_ai ) {
            if ((GameIsTestMap(false) == false) && (PlayerHandle(auto3E852411_var) == UserDataGetString(lv_data, UserDataInstance(lv_data, lv_i), UserDataField(lv_data, 1), 1))) {
                lib64DC5B97_gf_AddVespene(auto3E852411_var, 4000);
                TechTreeUpgradeAddLevel(auto3E852411_var, "VespeneCustomer", 1);
            }

        }
    }
}

void lib64DC5B97_gf_SkinAdditions (int lp_player, string lp_unitType, string lp_skin) {
    // Automatic Variable Declarations
    string auto0F2E54D3_val;
    string autoA659176F_val;
    unitgroup auto5E0209C3_g;
    int auto5E0209C3_u;
    unit auto5E0209C3_var;
    string autoDBD5DB6E_val;
    string autoE9E42CFF_val;
    string auto5A39F6DC_val;
    string auto59326C30_val;
    string auto9D7768A1_val;
    string autoF4C1F47E_val;
    string auto15C7F8DC_val;
    string autoEB8B3413_val;
    string auto569DFD3D_val;
    string auto813D7AFD_val;

    // Implementation
    auto0F2E54D3_val = lp_unitType;
    if (auto0F2E54D3_val == "HeroKerriganWaveUnit") {
        autoA659176F_val = lp_skin;
        if (autoA659176F_val == "KerriganAscended") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinKerriganAscended", 1);
        }
        else if (autoA659176F_val == "KerriganGhost") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinKerriganGhost", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinKerriganAscended", 0);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinKerriganGhost", 0);
        }
    }
    else if (auto0F2E54D3_val == "Torrasque") {
        auto5E0209C3_g = UnitGroupFilter("Torrasque", lp_player, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0);
        auto5E0209C3_u = UnitGroupCount(auto5E0209C3_g, c_unitCountAll);
        for (;; auto5E0209C3_u -= 1) {
            auto5E0209C3_var = UnitGroupUnitFromEnd(auto5E0209C3_g, auto5E0209C3_u);
            if (auto5E0209C3_var == null) { break; }
            UnitCreateEffectUnit(auto5E0209C3_var, "SkinUpdateA", auto5E0209C3_var);
        }
    }
    else if (auto0F2E54D3_val == "SpecOpsGhost") {
        autoDBD5DB6E_val = lp_skin;
        if (autoDBD5DB6E_val == "NovaGhostEidolon") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SpecOpsGhostMale", 1);
        }
        else if (autoDBD5DB6E_val == "NovaGhostUmojan") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SpecOpsGhostMale", 1);
        }
        else if (autoDBD5DB6E_val == "NovaGhostCovertOps") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SpecOpsGhostMale", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SpecOpsGhostMale", 0);
        }
    }
    else if (auto0F2E54D3_val == "LeviathanStarlight") {
        autoE9E42CFF_val = lp_skin;
        if (autoE9E42CFF_val == "LeviathanIce") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinLeviathan_Ice", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinLeviathan_Ice", 0);
        }
    }
    else if (auto0F2E54D3_val == "Brutalisk") {
        auto5A39F6DC_val = lp_skin;
        if (auto5A39F6DC_val == "BrutaliskIce") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinBrutalisk_Ice", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "SkinBrutalisk_Ice", 0);
        }
    }
    else if (auto0F2E54D3_val == "VoidRayWeaponVorazun") {
        auto59326C30_val = lp_skin;
        if (auto59326C30_val == "VorazunWeaponVoidRayPurple") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponVoidRayPurple", 1);
        }
        else if (auto59326C30_val == "VorazunWeaponVoidRayRed") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponVoidRayRed", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponVoidRayPurple", 0);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponVoidRayRed", 0);
        }
    }
    else if (auto0F2E54D3_val == "StalkerWeaponVorazun") {
        auto9D7768A1_val = lp_skin;
        if (auto9D7768A1_val == "VorazunWeaponStalkerGold") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponStalkerGold", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "VorazunWeaponStalkerGold", 0);
        }
    }
    else if (auto0F2E54D3_val == "Kaldalis") {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_None", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_Forged", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_Ihanrii", 0);
        autoF4C1F47E_val = lp_skin;
        if (autoF4C1F47E_val == "KaldalisTaldarim") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_Forged", 1);
        }
        else if (autoF4C1F47E_val == "KaldalisIhanrii") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_Ihanrii", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "KaldalisSkin_None", 1);
        }
    }
    else if (auto0F2E54D3_val == "PurifierTalis") {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_None", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_Forged", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_Ihanrii", 0);
        auto15C7F8DC_val = lp_skin;
        if (auto15C7F8DC_val == "TalisCE") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_None", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_RingAlternate", 1);
        }
        else if (auto15C7F8DC_val == "TalisGolden") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_None", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_RingAlternate", 1);
        }
        else if (auto15C7F8DC_val == "TalisTaldarim") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_Forged", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_RingAlternate", 1);
        }
        else if (auto15C7F8DC_val == "TalisIhanrii") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_Ihanrii", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_RingAlternate", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_RingAlternate", 0);
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TalisSkin_None", 1);
        }
    }
    else if (auto0F2E54D3_val == "Taldarin") {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_None", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_Forged", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_Ihanrii", 0);
        autoEB8B3413_val = lp_skin;
        if (autoEB8B3413_val == "TaldarinTaldarim") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_Forged", 1);
        }
        else if (autoEB8B3413_val == "TaldarinIhanrii") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_Ihanrii", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "TaldarinSkin_None", 1);
        }
    }
    else if (auto0F2E54D3_val == "Warbringer") {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_None", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_Forged", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_Ihanrii", 0);
        auto569DFD3D_val = lp_skin;
        if (auto569DFD3D_val == "WarbringerTaldarim") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_Forged", 1);
        }
        else if (auto569DFD3D_val == "WarbringerTal") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_Forged", 1);
        }
        else if (auto569DFD3D_val == "WarbringerIhanrii") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_Ihanrii", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "WarbringerSkin_None", 1);
        }
    }
    else if (auto0F2E54D3_val == "Clolarion") {
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_None", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_Forged", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_Ihanrii", 0);
        auto813D7AFD_val = lp_skin;
        if (auto813D7AFD_val == "ClolarionTaldarim") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_Forged", 1);
        }
        else if (auto813D7AFD_val == "ClolarionIhanrii") {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_Ihanrii", 1);
        }
        else {
            libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "ClolarionSkin_None", 1);
        }
    }
    else {
    }
}

void lib64DC5B97_gf_ToggleDialog (int lp_player, bool lp_hide) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_hide == false) && (DialogIsVisible(lib64DC5B97_gv_dialogMain, lp_player) == false)) {
        DialogSetVisible(lib64DC5B97_gv_dialogMain, PlayerGroupSingle(lp_player), true);
        DialogSetVisible(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_playerRaceMain[lp_player]], PlayerGroupSingle(lp_player), true);
        DialogControlSetVisible(lib64DC5B97_gv_vespeneTabWrongRace, PlayerGroupSingle(lp_player), false);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[0], false, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[1], false, PlayerGroupSingle(lp_player));
        lib64DC5B97_gv_playerRace[lp_player] = lib64DC5B97_gv_playerRaceMain[lp_player];
        lib64DC5B97_gf_UpdateVespeneTab(lp_player);
        UISetFrameVisible(PlayerGroupSingle(lp_player), c_syncFrameTypeControlGroupPanel, false);
        SoundPlayForPlayer(SoundLink("UI_MenuSounds_WorkerMenu_Open", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
        CatalogFieldValueSet(c_gameCatalogButton, "SkinSystemOpen", "Icon", lp_player, ("Assets\\Textures\\btn-ability-neutral-vespene-terran-desaturated.dds"));
        if (((TechTreeUpgradeCount(lp_player, "Patron", c_techCountCompleteOnly) == 1) || (TechTreeUpgradeCount(lp_player, "VespeneCustomer", c_techCountCompleteOnly) == 1))) {
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[0], PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[1], PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[2], PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[3], PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(lib64DC5B97_gv_addMoreVespeneButton[4], PlayerGroupSingle(lp_player), false);
        }

    }
    else {
        lib64DC5B97_gf_SkinSystemClose(lp_player);
        SoundPlayForPlayer(SoundLink("UI_MenuSounds_WorkerMenu_Close", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
    }
}

void lib64DC5B97_gf_SkinSystemClose (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    UISetFrameVisible(PlayerGroupSingle(lp_player), c_syncFrameTypeControlGroupPanel, true);
    DialogSetVisible(lib64DC5B97_gv_dialogMain, PlayerGroupSingle(lp_player), false);
    DialogSetVisible(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_playerRace[lp_player]], PlayerGroupSingle(lp_player), false);
    DialogSetVisible(lib64DC5B97_gv_dialogRace[lib64DC5B97_gv_playerRaceMain[lp_player]], PlayerGroupSingle(lp_player), false);
    CatalogFieldValueSet(c_gameCatalogButton, "SkinSystemOpen", "Icon", lp_player, ("Assets\\Textures\\btn-ability-neutral-vespene-terran.dds"));
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Rewards Notification Close
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_RewardsNotificationClose_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib64DC5B97_gv_rewardsNotificationDialogItem[0]) || (EventDialogControl() == lib64DC5B97_gv_rewardsNotificationDialogItem[1])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib64DC5B97_gv_rewardsNotificationDialog, PlayerGroupSingle(EventPlayer()), false);
    libDBB0BE4A_gf_SettingsSaveInteger(EventPlayer(), "RewardsNotification", 1);
    libDBB0BE4A_gf_SettingsSave(EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_RewardsNotificationClose_Init () {
    lib64DC5B97_gt_RewardsNotificationClose = TriggerCreate("lib64DC5B97_gt_RewardsNotificationClose_Func");
    TriggerEnable(lib64DC5B97_gt_RewardsNotificationClose, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_RewardsNotificationClose, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rewards Notification
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_RewardsNotification_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto17B7954D_g;
    int auto17B7954D_var;

    // Conditions
    if (testConds) {
        if (!((GameIsTestMap(false) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib64DC5B97_gf_RewardsNotificationCreate();
    auto17B7954D_g = PlayerGroupActive();
    auto17B7954D_var = -1;
    while (true) {
        auto17B7954D_var = PlayerGroupNextPlayer(auto17B7954D_g, auto17B7954D_var);
        if (auto17B7954D_var < 0) { break; }
        if (((TechTreeUpgradeCount(auto17B7954D_var, "Patron", c_techCountCompleteOnly) >= 1) || (TechTreeUpgradeCount(auto17B7954D_var, "VespeneCustomer", c_techCountCompleteOnly) >= 1))) {
            lib64DC5B97_gf_RewardsNotificationShow(auto17B7954D_var);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_RewardsNotification_Init () {
    lib64DC5B97_gt_RewardsNotification = TriggerCreate("lib64DC5B97_gt_RewardsNotification_Func");
    TriggerEnable(lib64DC5B97_gt_RewardsNotification, false);
    TriggerAddEventTimeElapsed(lib64DC5B97_gt_RewardsNotification, 2.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_Close_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib64DC5B97_gv_closeButton)) {
        lib64DC5B97_gf_SkinSystemClose(EventPlayer());
    }
    else {
        if ((!((DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogMain) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_addMoreVespeneDialog) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[0]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[1]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[2]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[3]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[4]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[5]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[6]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[7]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[8]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[9]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[10]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[11]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[12]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[13]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[14]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[15]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[16]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[17]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[18]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[19]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[20])))) {
            lib64DC5B97_gf_SkinSystemClose(EventPlayer());
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_Close_Init () {
    lib64DC5B97_gt_Close = TriggerCreate("lib64DC5B97_gt_Close_Func");
    TriggerEnable(lib64DC5B97_gt_Close, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_Close, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Rewards
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_CloseRewards_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib64DC5B97_gv_rewardsDialogClose))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib64DC5B97_gf_ToggleAddVespeneDialog(EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_CloseRewards_Init () {
    lib64DC5B97_gt_CloseRewards = TriggerCreate("lib64DC5B97_gt_CloseRewards_Func");
    TriggerEnable(lib64DC5B97_gt_CloseRewards, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_CloseRewards, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add More Vespene
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_AddMoreVespene_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((EventDialogControl() == lib64DC5B97_gv_addMoreVespeneButton[3]))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "VespeneCustomer", c_techCountCompleteOnly) == 0))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "Patron", c_techCountCompleteOnly) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib64DC5B97_gf_ToggleAddVespeneDialog(EventPlayer(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_AddMoreVespene_Init () {
    lib64DC5B97_gt_AddMoreVespene = TriggerCreate("lib64DC5B97_gt_AddMoreVespene_Func");
    TriggerEnable(lib64DC5B97_gt_AddMoreVespene, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_AddMoreVespene, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
    TriggerAddEventDialogControl(lib64DC5B97_gt_AddMoreVespene, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeHotkeyPressed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add More Vespene Fallback
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_AddMoreVespeneFallback_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib64DC5B97_gv_addMoreVespeneFallback))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "VespeneCustomer", c_techCountCompleteOnly) == 0))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "Patron", c_techCountCompleteOnly) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib64DC5B97_gf_ToggleAddVespeneDialog(EventPlayer(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_AddMoreVespeneFallback_Init () {
    lib64DC5B97_gt_AddMoreVespeneFallback = TriggerCreate("lib64DC5B97_gt_AddMoreVespeneFallback_Func");
    TriggerEnable(lib64DC5B97_gt_AddMoreVespeneFallback, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_AddMoreVespeneFallback, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
    TriggerAddEventDialogControl(lib64DC5B97_gt_AddMoreVespeneFallback, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeHotkeyPressed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Vespene Toggle
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_VespeneToggle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib038F51B7_gf_AbilityControlShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libD6A97973_gf_MasteryPanelShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib479C7CBB_gf_LiveScoreboardShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libCA960273_gf_StagingAreaCustomizationShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libF58A3325_gf_MasteryCodeShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib57FF8648_gf_BlacklistShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libCA960273_gf_PremiumDialogShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false, false);
    libBBFED31C_gf_EndGameShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib2A8CE4F7_gf_StatsMenuShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib948F000A_gf_WorkerSelectShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib64DC5B97_gf_ToggleDialog(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_VespeneToggle_Init () {
    lib64DC5B97_gt_VespeneToggle = TriggerCreate("lib64DC5B97_gt_VespeneToggle_Func");
    TriggerEnable(lib64DC5B97_gt_VespeneToggle, false);
    TriggerAddEventPlayerEffectUsed(lib64DC5B97_gt_VespeneToggle, c_playerAny, "SkinSystemOpen");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dialog Item - Units Used
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_DialogItemUnitsUsed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_unitIndex;
    int lv_skinIndex;
    int lv_vespeneChange;
    string lv_defaultSkin;

    // Automatic Variable Declarations
    int auto8F58FFD6_ae;
    const int auto8F58FFD6_ai = 1;
    int auto8D13195F_ae;
    const int auto8D13195F_ai = 1;
    const int autoD45A09D0_ae = lib64DC5B97_gv_skin;
    const int autoD45A09D0_ai = 1;
    const int auto1D1E6927_ae = lib64DC5B97_gv_skin;
    const int auto1D1E6927_ai = 1;
    string autoC9BBC38E_val;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!(((DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[0]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[1]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[2]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[3]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[4]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[5]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[6]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[7]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[8]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[9]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[10]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[11]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[12]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[13]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[14]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[15]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[16]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[17]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[18]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[19]) || (DialogControlGetDialog(EventDialogControl()) == lib64DC5B97_gv_dialogRace[20])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_DialogItemEditValue(EventDialogControl(), lib64DC5B97_gv_editValueIsSkin) == "1")) {
        auto8D13195F_ae = (lib64DC5B97_gv_dialogItemUnitsCurrent - 1);
        lv_x = 0;
        for ( ; ( (auto8D13195F_ai >= 0 && lv_x <= auto8D13195F_ae) || (auto8D13195F_ai < 0 && lv_x >= auto8D13195F_ae) ) ; lv_x += auto8D13195F_ai ) {
            lv_y = 0;
            for ( ; ( (autoD45A09D0_ai >= 0 && lv_y <= autoD45A09D0_ae) || (autoD45A09D0_ai < 0 && lv_y >= autoD45A09D0_ae) ) ; lv_y += autoD45A09D0_ai ) {
                if ((EventDialogControl() == lib64DC5B97_gv_dialogItemUnits[lv_x][lv_y][0])) {
                    lv_unitIndex = lv_x;
                    lv_skinIndex = lv_y;
                    break;
                }

            }
        }
        if ((lv_skinIndex == 0)) {
        }
        else {
            lv_vespeneChange = (StringToInt(libNtve_gf_DialogItemEditValue(EventDialogControl(), lib64DC5B97_gv_editValueVespeneCosts)) - StringToInt(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnitHighlight[lv_unitIndex], EventPlayer())));
            if ((lib64DC5B97_gv_playerVespene[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]] >= lv_vespeneChange)) {
                if (((lv_skinIndex == 1) || (UnitGroupCount(UnitGroupFilter((libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)), EventPlayer(), lib7A9A9B22_gf_StagingAreaSpawns(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) == 0) || (TechTreeUpgradeCount(EventPlayer(), "GameModeTutorial", c_techCountCompleteOnly) == 1) || (PlayerGroupCount(PlayerGroupActive()) <= 1))) {
                    SoundPlayForPlayer(SoundLink("UI_WorkerSelect_Equip", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                    DialogControlSetPositionRelative(lib64DC5B97_gv_dialogItemUnitHighlight[lv_unitIndex], PlayerGroupSingle(EventPlayer()), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], c_anchorCenter, 0, 0);
                    DialogControlSetPositionRelative(lib64DC5B97_gv_dialogItemUnitHighlight[lv_unitIndex], PlayerGroupSingle(EventPlayer()), c_anchorCenter, lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], c_anchorCenter, 0, 0);
                    libNtve_gf_SetDialogItemEditorValue(lib64DC5B97_gv_dialogItemUnitHighlight[lv_unitIndex], libNtve_gf_DialogItemEditValue(EventDialogControl(), lib64DC5B97_gv_editValueVespeneCosts), PlayerGroupSingle(EventPlayer()));
                    lv_y = 2;
                    for ( ; ( (auto1D1E6927_ai >= 0 && lv_y <= auto1D1E6927_ae) || (auto1D1E6927_ai < 0 && lv_y >= auto1D1E6927_ae) ) ; lv_y += auto1D1E6927_ai ) {
                        if ((lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_y][0] != c_invalidDialogControlId)) {
                            libNtve_gf_PlayerApplySkinReplacingExistingUnit(EventPlayer(), lib64DC5B97_gv_dialogItemUnitsSkin[lv_unitIndex][lv_y], false);
                            DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_y][0], PlayerGroupSingle(EventPlayer()), 0.0, 0.0);
                            DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_y][0], PlayerGroupSingle(EventPlayer()), true);
                        }

                    }
                    DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], PlayerGroupSingle(EventPlayer()), 0.0, 0.0);
                    if ((lv_skinIndex != 1)) {
                        DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][1][0], PlayerGroupSingle(EventPlayer()), 0.0, 0.0);
                        libNtve_gf_PlayerApplySkinReplacingExistingUnit(EventPlayer(), lib64DC5B97_gv_dialogItemUnitsSkin[lv_unitIndex][lv_skinIndex], true);
                        lib64DC5B97_gf_SaveSkin(EventPlayer(), UnitTypeFromString(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)), (libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 1)));
                        lib64DC5B97_gf_SkinAdditions(EventPlayer(), UnitTypeFromString(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)), (libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 1)));
                        libNtve_gf_SetDialogItemImage(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][0][0], (CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_unitIndex][lv_skinIndex], "VariationIcon", c_playerAny)), PlayerGroupSingle(EventPlayer()));
                        DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitVespene[lv_unitIndex], PlayerGroupSingle(EventPlayer()), true);
                        libNtve_gf_SetDialogItemTooltip(lib64DC5B97_gv_dialogItemUnitButton[lv_unitIndex], (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][0][0], lib64DC5B97_gv_editValueUnitType), "Name", c_playerAny)) + StringToText("</s></n>") + StringExternal(CatalogFieldValueGet(c_gameCatalogSkin, lib64DC5B97_gv_dialogItemUnitsSkin[lv_unitIndex][lv_skinIndex], "Name", c_playerAny))), PlayerGroupSingle(EventPlayer()));
                    }
                    else {
                        DialogControlFadeTransparency(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][1][0], PlayerGroupSingle(EventPlayer()), 0.0, 100.0);
                        lib64DC5B97_gf_SaveSkin(EventPlayer(), UnitTypeFromString(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)), (""));
                        lib64DC5B97_gf_SkinAdditions(EventPlayer(), UnitTypeFromString(libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)), (""));
                        libNtve_gf_SetDialogItemImage(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][0][0], (CatalogFieldValueGet(c_gameCatalogActor, libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][0][0], lib64DC5B97_gv_editValueUnitType), "UnitIcon", c_playerAny)), PlayerGroupSingle(EventPlayer()));
                        DialogControlSetVisible(lib64DC5B97_gv_dialogItemUnitVespene[lv_unitIndex], PlayerGroupSingle(EventPlayer()), false);
                        libNtve_gf_SetDialogItemTooltip(lib64DC5B97_gv_dialogItemUnitButton[lv_unitIndex], (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][0][0], lib64DC5B97_gv_editValueUnitType), "Name", c_playerAny)) + StringToText("</s></n>") + StringExternal("UI/Default")), PlayerGroupAll());
                        lv_defaultSkin = lib64DC5B97_gf_RestorePlayerSkin(EventPlayer(), (libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0)));
                        if ((lv_defaultSkin != null)) {
                            libNtve_gf_PlayerApplySkinReplacingExistingUnit(EventPlayer(), lib64DC5B97_gf_RestorePlayerSkin(EventPlayer(), (libNtve_gf_DialogItemEditValue(lib64DC5B97_gv_dialogItemUnits[lv_unitIndex][lv_skinIndex][0], 0))), true);
                        }

                    }
                    lib64DC5B97_gv_playerVespene[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]] -= lv_vespeneChange;
                    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperSetTo, lib64DC5B97_gv_playerVespene[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]]);
                    lib64DC5B97_gf_UpdateVespeneTab(EventPlayer());
                    lib64DC5B97_gf_SelectSkinFlash(EventPlayer(), lv_unitIndex, lv_skinIndex);
                    lib64DC5B97_gf_ToggleUnitTab(EventPlayer(), lib64DC5B97_gv_playerCurrentTab[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]], true);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/lib_64DC5B97_084F9FA6"));
                    SoundPlayForPlayer(SoundLink("UI_SoA_SpellClick", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("e_cmdNotEnoughVespene"));
                lib64DC5B97_gf_VespeneTabFlash(EventPlayer());
                autoC9BBC38E_val = PlayerRace(EventPlayer());
                if (autoC9BBC38E_val == "Terr") {
                    SoundPlayForPlayer(SoundLink("e_cmdNotEnoughVespene", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }
                else if (autoC9BBC38E_val == "Zerg") {
                    SoundPlayForPlayer(SoundLink("Alert_ZergNeedMoreGas", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }
                else {
                    SoundPlayForPlayer(SoundLink("e_cmdNotEnoughVespene_Prot", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }
                SoundPlayForPlayer(SoundLink("UI_SoA_SpellClick", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            }
        }
    }
    else {
        auto8F58FFD6_ae = (lib64DC5B97_gv_dialogItemUnitsCurrent - 1);
        lv_x = 0;
        for ( ; ( (auto8F58FFD6_ai >= 0 && lv_x <= auto8F58FFD6_ae) || (auto8F58FFD6_ai < 0 && lv_x >= auto8F58FFD6_ae) ) ; lv_x += auto8F58FFD6_ai ) {
            if ((EventDialogControl() == lib64DC5B97_gv_dialogItemUnitButton[lv_x])) {
                lv_unitIndex = lv_x;
                break;
            }

        }
        if ((lib64DC5B97_gv_dialogItemTabIsOpen[EventPlayer()][lv_unitIndex] == true)) {
            SoundPlayForPlayer(SoundLink("UI_MercenaryBriefcase_SelectMerc", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            if ((lib64DC5B97_gv_playerCurrentTab[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]] != lv_unitIndex)) {
            }
            else {
                lib64DC5B97_gf_ToggleUnitTab(EventPlayer(), lib64DC5B97_gv_playerCurrentTab[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]], true);
            }
        }
        else {
            SoundPlayForPlayer(SoundLink("UI_MenuSounds_WorkerMenu_Tab", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            lib64DC5B97_gf_ToggleUnitTab(EventPlayer(), lib64DC5B97_gv_playerCurrentTab[EventPlayer()][lib64DC5B97_gv_playerRace[EventPlayer()]], true);
            lib64DC5B97_gf_ToggleUnitTab(EventPlayer(), lv_unitIndex, false);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_DialogItemUnitsUsed_Init () {
    lib64DC5B97_gt_DialogItemUnitsUsed = TriggerCreate("lib64DC5B97_gt_DialogItemUnitsUsed_Func");
    TriggerEnable(lib64DC5B97_gt_DialogItemUnitsUsed, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_DialogItemUnitsUsed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Race Dropdown
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_gt_RaceDropdown_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_newRace;

    // Automatic Variable Declarations
    const int auto52F5F812_ae = lib64DC5B97_gv_races;
    const int auto52F5F812_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((EventDialogControl() == lib64DC5B97_gv_raceDropdown))) {
            return false;
        }

        if (!((lib64DC5B97_gv_allowOtherRaces == true))) {
            return false;
        }

        if (!((GameGetMissionTime() > 1))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(PlayerGroupActive(), EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_newRace = (DialogControlGetSelectedItem(EventDialogControl(), EventPlayer()) - 1);
    lib64DC5B97_gv_playerRace[EventPlayer()] = lv_newRace;
    lv_i = 0;
    for ( ; ( (auto52F5F812_ai >= 0 && lv_i <= auto52F5F812_ae) || (auto52F5F812_ai < 0 && lv_i >= auto52F5F812_ae) ) ; lv_i += auto52F5F812_ai ) {
        if ((lib64DC5B97_gv_dialogRace[lv_i] != c_invalidDialogId)) {
            DialogSetVisible(lib64DC5B97_gv_dialogRace[lv_i], PlayerGroupSingle(EventPlayer()), false);
        }

    }
    DialogSetVisible(lib64DC5B97_gv_dialogRace[lv_newRace], PlayerGroupSingle(EventPlayer()), true);
    lib64DC5B97_gf_UpdateVespeneTab(EventPlayer());
    if ((lv_newRace != lib64DC5B97_gv_playerRaceMain[EventPlayer()])) {
        DialogControlSetVisible(lib64DC5B97_gv_vespeneTabWrongRace, PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[0], true, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[1], true, PlayerGroupSingle(EventPlayer()));
    }
    else {
        DialogControlSetVisible(lib64DC5B97_gv_vespeneTabWrongRace, PlayerGroupSingle(EventPlayer()), false);
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[0], false, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemDesaturated(lib64DC5B97_gv_vespeneTabElement[1], false, PlayerGroupSingle(EventPlayer()));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib64DC5B97_gt_RaceDropdown_Init () {
    lib64DC5B97_gt_RaceDropdown = TriggerCreate("lib64DC5B97_gt_RaceDropdown_Func");
    TriggerEnable(lib64DC5B97_gt_RaceDropdown, false);
    TriggerAddEventDialogControl(lib64DC5B97_gt_RaceDropdown, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

void lib64DC5B97_InitTriggers () {
    lib64DC5B97_gt_RewardsNotificationClose_Init();
    lib64DC5B97_gt_RewardsNotification_Init();
    lib64DC5B97_gt_Close_Init();
    lib64DC5B97_gt_CloseRewards_Init();
    lib64DC5B97_gt_AddMoreVespene_Init();
    lib64DC5B97_gt_AddMoreVespeneFallback_Init();
    lib64DC5B97_gt_VespeneToggle_Init();
    lib64DC5B97_gt_DialogItemUnitsUsed_Init();
    lib64DC5B97_gt_RaceDropdown_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib64DC5B97_InitLib_completed = false;

void lib64DC5B97_InitLib () {
    if (lib64DC5B97_InitLib_completed) {
        return;
    }

    lib64DC5B97_InitLib_completed = true;

    lib64DC5B97_InitLibraries();
    lib64DC5B97_InitVariables();
    lib64DC5B97_InitTriggers();
}

include "LibDDE92A83"
include "Lib474957E9"
include "LibDBB0BE4A"
include "Lib948F000A"
include "Lib2A8CE4F7"
include "Lib57FF8648"
include "Lib7A9A9B22"
include "LibCA960273"
include "Lib038F51B7"
include "Lib479C7CBB"
include "LibF58A3325"
include "LibD6A97973"
include "LibBBFED31C"

