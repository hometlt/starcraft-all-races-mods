include "TriggerLibs/NativeLib"
include "LibARRA"
include "LibDDE92A83_h"
include "Lib948F000A_h"
include "LibBBFED31C_h"
include "Lib57FF8648_h"
include "Lib2A8CE4F7_h"
include "LibCA960273_h"
include "Lib479C7CBB_h"
include "LibF58A3325_h"
include "LibD6A97973_h"

include "Lib038F51B7_h"

//--------------------------------------------------------------------------------------------------
// Library: Ability Control
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib038F51B7_InitLibraries () {
    libNtve_InitVariables();
    libARRA_InitVariables();
    libDDE92A83_InitVariables();
    lib948F000A_InitVariables();
    libBBFED31C_InitVariables();
    lib57FF8648_InitVariables();
    lib2A8CE4F7_InitVariables();
    libCA960273_InitVariables();
    lib479C7CBB_InitVariables();
    libF58A3325_InitVariables();
    libD6A97973_InitVariables();
}

// Variable Initialization
bool lib038F51B7_InitVariables_completed = false;

void lib038F51B7_InitVariables () {
    int init_i;

    if (lib038F51B7_InitVariables_completed) {
        return;
    }

    lib038F51B7_InitVariables_completed = true;

    for (init_i = 0; init_i <= 4; init_i += 1) {
        lib038F51B7_gv_controlCenter[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= lib038F51B7_gv_race; init_i += 1) {
        lib038F51B7_gv_controlDialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= lib038F51B7_gv_race; init_i += 1) {
        lib038F51B7_gv_controlDialogBackground[init_i] = c_invalidDialogControlId;
    }
}

// Functions
void lib038F51B7_gf_AddAbility (int lp_race, string lp_unit, string lp_button, string lp_upgrade, bool lp_custom) {
    // Variable Declarations
    int lv_button;

    // Automatic Variable Declarations
    playergroup auto9AAF6629_g;
    int auto9AAF6629_var;
    string auto47D29CAF_val;

    // Variable Initialization
    lv_button = c_invalidDialogControlId;

    // Implementation
    libNtve_gf_CreateDialogItemImage(lib038F51B7_gv_controlDialog[lp_race], 76, 76, c_anchorTopLeft, ((ModI(lib038F51B7_gv_racialButtons[lp_race], 3) * (76 + 1)) + 12), ((((lib038F51B7_gv_racialButtons[lp_race] - ModI(lib038F51B7_gv_racialButtons[lp_race], 3)) / 3) * (76 + 1)) + 12), StringToText(""), (CatalogFieldValueGet(c_gameCatalogButton, lp_button, "Icon", c_playerAny)), c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    lv_button = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 620, PlayerGroupAll());
    libNtve_gf_CreateDialogItemButton(lib038F51B7_gv_controlDialog[lp_race], 76, 76, c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_button, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemDesaturationColor(DialogControlLastCreated(), Color(50.20, 50.20, 50.20), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + (StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lp_button, "Name", c_playerAny)) + StringToText(" (<c val=\"FFFFFF\">") + UnitTypeGetName(lp_unit) + StringToText("</c>)")) + StringToText("</s><n/><n/><s val=\"CommandTargetName\"></c>") + StringExternal("UI/ScoreScreen/PlayerFrame/AI") + StringToText("- <c val=\"00FF00\">") + StringExternal("UI/Active") + StringToText("</s></c><n/><n/><c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_038F51B7_C8F0D438")), PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 610, PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lp_upgrade), PlayerGroupSingle(0));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lib038F51B7_gv_racialButtons[lp_race]), PlayerGroupSingle(1));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lp_race), PlayerGroupSingle(2));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lp_unit), PlayerGroupSingle(3));
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), (lp_button), PlayerGroupSingle(4));
    auto9AAF6629_g = PlayerGroupActive();
    auto9AAF6629_var = -1;
    while (true) {
        auto9AAF6629_var = PlayerGroupNextPlayer(auto9AAF6629_g, auto9AAF6629_var);
        if (auto9AAF6629_var < 0) { break; }
        auto47D29CAF_val = PlayerRace(auto9AAF6629_var);
        if (auto47D29CAF_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normalpressed.dds", PlayerGroupSingle(auto9AAF6629_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_terran_normaloverpressedover.dds", PlayerGroupSingle(auto9AAF6629_var));
        }
        else if (auto47D29CAF_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normalpressed.dds", PlayerGroupSingle(auto9AAF6629_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_zerg_normaloverpressedover.dds", PlayerGroupSingle(auto9AAF6629_var));
        }
        else {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normalpressed.dds", PlayerGroupSingle(auto9AAF6629_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_abilitycontrol_protoss_normaloverpressedover.dds", PlayerGroupSingle(auto9AAF6629_var));
        }
    }
    libNtve_gf_CreateDialogItemImage(lib038F51B7_gv_controlDialog[lp_race], 100, 100, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_abilitycontrol_background.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 590, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_button, c_anchorCenter, 0, 0);
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 33.3333);
    DialogControlSetSize(lib038F51B7_gv_controlDialogBackground[lp_race], PlayerGroupAll(), ((3 * (76 + 1)) + (12 * 2)), (((((lib038F51B7_gv_racialButtons[lp_race] - ModI(lib038F51B7_gv_racialButtons[lp_race], 3)) / 3) + 1) * (76 + 1)) + (12 * 2)));
    DialogSetSize(lib038F51B7_gv_controlDialog[lp_race], DialogControlGetWidth(lib038F51B7_gv_controlDialogBackground[lp_race], 1), DialogControlGetHeight(lib038F51B7_gv_controlDialogBackground[lp_race], 1));
    lib038F51B7_gv_racialButtons[lp_race] += 1;
    if ((lp_custom == false)) {
        return ;
    }

}

void lib038F51B7_gf_CreateMainButton () {
    // Automatic Variable Declarations
    playergroup auto55FC6D63_g;
    int auto55FC6D63_var;
    string auto3087A722_val;
    playergroup auto9CB6DDD8_g;
    int auto9CB6DDD8_var;
    string auto7297DD6D_val;

    // Implementation
    DialogCreate(100, 100, c_anchorBottomLeft, 156, 295, true);
    DialogSetRenderPriority(DialogLastCreated(), 580);
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetObservedType(DialogLastCreated(), c_triggerObservedTypeDefaultObservedPlayerId);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 46, 46, c_anchorCenter, 0, 10, (StringToText("<s val=\"StandardTooltipHeader\"></c>") + StringExternal("Param/Value/lib_038F51B7_B861F77D") + StringToText(" ") + StringExternal("UI/Control") + StringToText("<k val=\"HeroSelect0\"/>") + StringToText("</s><n/><n/>") + StringExternal("Button/Tooltip/WorkerSubmenuAbilityControl")), StringToText(""), "");
    lib038F51B7_gv_controlCenter[0] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 600, PlayerGroupAll());
    auto55FC6D63_g = PlayerGroupActive();
    auto55FC6D63_var = -1;
    while (true) {
        auto55FC6D63_var = PlayerGroupNextPlayer(auto55FC6D63_g, auto55FC6D63_var);
        if (auto55FC6D63_var < 0) { break; }
        auto3087A722_val = PlayerRace(auto55FC6D63_var);
        if (auto3087A722_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_terran_normalpressed.dds", PlayerGroupSingle(auto55FC6D63_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_terran_normaloverpressedover.dds", PlayerGroupSingle(auto55FC6D63_var));
        }
        else if (auto3087A722_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_zerg_normalpressed.dds", PlayerGroupSingle(auto55FC6D63_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_zerg_normaloverpressedover.dds", PlayerGroupSingle(auto55FC6D63_var));
        }
        else {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_protoss_normalpressed.dds", PlayerGroupSingle(auto55FC6D63_var));
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_workerbuttonsmall_protoss_normaloverpressedover.dds", PlayerGroupSingle(auto55FC6D63_var));
        }
    }
    libNtve_gf_SetDialogItemHotkey(DialogControlLastCreated(), c_hotkeyHeroSelect0, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 46, 46, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\btn-menu-abilitycontrol_rounded.dds", c_triggerImageTypeNormal, false, Color(0,0,0), c_triggerBlendModeNormal);
    lib038F51B7_gv_controlCenter[3] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib038F51B7_gv_controlCenter[0], c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 610, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 46, 46, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\btn-menu-abilitycontrol_rounded.dds", c_triggerImageTypeNormal, false, Color(0,0,0), c_triggerBlendModeNormal);
    lib038F51B7_gv_controlCenter[4] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib038F51B7_gv_controlCenter[0], c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 610, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 46, 46, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\btn-menu-abilitycontrol_rounded.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib038F51B7_gv_controlCenter[1] = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib038F51B7_gv_controlCenter[0], c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 610, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 60, 62, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_unitbuttons_small_frame_protoss.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    lib038F51B7_gv_controlCenter[2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 590, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lib038F51B7_gv_controlCenter[0], c_anchorCenter, 0, 2);
    auto9CB6DDD8_g = PlayerGroupActive();
    auto9CB6DDD8_var = -1;
    while (true) {
        auto9CB6DDD8_var = PlayerGroupNextPlayer(auto9CB6DDD8_g, auto9CB6DDD8_var);
        if (auto9CB6DDD8_var < 0) { break; }
        auto7297DD6D_val = PlayerRace(auto9CB6DDD8_var);
        if (auto7297DD6D_val == "Terr") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_unitbuttons_small_frame_terran.dds", PlayerGroupSingle(auto9CB6DDD8_var));
        }
        else if (auto7297DD6D_val == "Zerg") {
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_unitbuttons_small_frame_zerg.dds", PlayerGroupSingle(auto9CB6DDD8_var));
        }
        else {
        }
    }
}

void lib038F51B7_gf_AbilityControlChangeIcon (int lp_player, string lp_file) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_file != null)) {
        libNtve_gf_SetDialogItemImage(lib038F51B7_gv_controlCenter[1], lp_file, PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemImage(lib038F51B7_gv_controlCenter[4], lp_file, PlayerGroupSingle(lp_player));
        DialogControlSetSize(lib038F51B7_gv_controlCenter[1], PlayerGroupSingle(lp_player), 60, 60);
        DialogControlSetSize(lib038F51B7_gv_controlCenter[4], PlayerGroupSingle(lp_player), (DialogControlGetWidth(lib038F51B7_gv_controlCenter[1], lp_player) + 2), (DialogControlGetHeight(lib038F51B7_gv_controlCenter[1], lp_player) + 2));
        CatalogFieldValueSet(c_gameCatalogButton, "WorkerSubmenuAbilityControl", "Icon", lp_player, (lp_file));
        CatalogFieldValueSet(c_gameCatalogButton, "WorkerSubmenuAbilityControl", "AlertIcon", lp_player, (lp_file));
    }
    else {
        libNtve_gf_SetDialogItemImage(lib038F51B7_gv_controlCenter[1], "Assets\\Textures\\btn-menu-abilitycontrol_rounded.dds", PlayerGroupSingle(lp_player));
        libNtve_gf_SetDialogItemImage(lib038F51B7_gv_controlCenter[4], "Assets\\Textures\\btn-menu-abilitycontrol_rounded.dds", PlayerGroupSingle(lp_player));
        DialogControlSetSize(lib038F51B7_gv_controlCenter[1], PlayerGroupSingle(lp_player), 46, 46);
        DialogControlSetSize(lib038F51B7_gv_controlCenter[4], PlayerGroupSingle(lp_player), 46, 46);
        CatalogFieldValueSet(c_gameCatalogButton, "WorkerSubmenuAbilityControl", "Icon", lp_player, ("Assets\\Textures\\btn-menu-abilitycontrol.dds"));
        CatalogFieldValueSet(c_gameCatalogButton, "WorkerSubmenuAbilityControl", "AlertIcon", lp_player, ("Assets\\Textures\\btn-menu-abilitycontrol.dds"));
    }
}

void lib038F51B7_gf_AbilityControlShowHide (int lp_player, bool lp_toggle, bool lp_sound) {
    // Automatic Variable Declarations
    bool autoF208308C_val;

    // Implementation
    if ((lib038F51B7_gv_created == true)) {
        autoF208308C_val = lp_toggle;
        if (autoF208308C_val == true) {
            libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[0], true, PlayerGroupSingle(lp_player));
            libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[1], true, PlayerGroupSingle(lp_player));
            lib038F51B7_gf_AbilityControlSwitchRaceModified(lp_player);
            lib038F51B7_gv_open[lp_player] = true;
            if ((DialogIsVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], lp_player) == false)) {
                DialogSetVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], PlayerGroupSingle(lp_player), true);
                if ((lp_sound == true)) {
                    SoundPlayForPlayer(SoundLink("UI_MenuSounds_AbilityControl_Open", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }

            }

        }
        else if (autoF208308C_val == false) {
            libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[0], false, PlayerGroupSingle(lp_player));
            libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[1], false, PlayerGroupSingle(lp_player));
            lib038F51B7_gv_open[lp_player] = false;
            if ((DialogIsVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], lp_player) == true)) {
                DialogSetVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], PlayerGroupSingle(lp_player), false);
                if ((lp_sound == true)) {
                    SoundPlayForPlayer(SoundLink("UI_MenuSounds_AbilityControl_Close", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
                }

            }

        }
        else {
        }
    }

}

void lib038F51B7_gf_AbilityControlForceClose (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[0], false, PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemDesaturated(lib038F51B7_gv_controlCenter[1], false, PlayerGroupSingle(lp_player));
    lib038F51B7_gv_open[lp_player] = false;
    if ((DialogIsVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], lp_player) == true)) {
        DialogSetVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[lp_player]], PlayerGroupSingle(lp_player), false);
    }

}

void lib038F51B7_gf_AbilityControlFade (playergroup lp_players, bool lp_fade, fixed lp_fadeTime) {
    // Automatic Variable Declarations
    bool auto2BB256B0_val;

    // Implementation
    if ((lib038F51B7_gv_created == true)) {
        auto2BB256B0_val = lp_fade;
        if (auto2BB256B0_val == false) {
            libNtve_gf_SetDialogItemAcceptMouse(lib038F51B7_gv_controlCenter[0], false, lp_players);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[0], lp_players, lp_fadeTime, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[1], lp_players, lp_fadeTime, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[2], lp_players, lp_fadeTime, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[3], lp_players, lp_fadeTime, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[4], lp_players, lp_fadeTime, 100.0);
        }
        else if (auto2BB256B0_val == true) {
            libNtve_gf_SetDialogItemAcceptMouse(lib038F51B7_gv_controlCenter[0], true, lp_players);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[0], lp_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[0], lp_players, lp_fadeTime, 0.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[1], lp_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[1], lp_players, lp_fadeTime, 0.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[2], lp_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[2], lp_players, lp_fadeTime, 0.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[3], lp_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[3], lp_players, lp_fadeTime, 0.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[4], lp_players, 0.0, 100.0);
            DialogControlFadeTransparency(lib038F51B7_gv_controlCenter[4], lp_players, lp_fadeTime, 0.0);
        }
        else {
        }
    }

}

void lib038F51B7_gf_AbilityControlEnable (bool lp_toggle, playergroup lp_players) {
    // Automatic Variable Declarations
    playergroup autoD11C9B61_g;
    int autoD11C9B61_var;

    // Implementation
    if ((lib038F51B7_gv_created == true)) {
        DialogControlSetEnabled(lib038F51B7_gv_controlCenter[0], lp_players, lp_toggle);
        DialogControlSetEnabled(lib038F51B7_gv_controlCenter[1], lp_players, lp_toggle);
        if ((lp_toggle == false)) {
            autoD11C9B61_g = lp_players;
            autoD11C9B61_var = -1;
            while (true) {
                autoD11C9B61_var = PlayerGroupNextPlayer(autoD11C9B61_g, autoD11C9B61_var);
                if (autoD11C9B61_var < 0) { break; }
                lib038F51B7_gf_AbilityControlShowHide(autoD11C9B61_var, false, false);
            }
        }

    }

}

void lib038F51B7_gf_AbilityControlStartModified () {
    // Variable Declarations
    int lv_i;
    int lv_race;
    string lv_customRace;
    string lv_customUnit;
    abilcmd lv_customAbilcmd;
    string lv_customAbil;
    string lv_customButton;

    // Automatic Variable Declarations
    playergroup autoF15F4FD3_g;
    int autoF15F4FD3_var;
    const int autoBBF3F819_ae = lib038F51B7_gv_race;
    const int autoBBF3F819_ai = 1;
    playergroup auto2C1E9EE3_g;
    int auto2C1E9EE3_var;
    string autoA0D25DDC_val;
    int autoE0F82362_i;
    string auto02D68044_builder;
    int auto02D68044_buttons;
    int auto02D68044_j;
    string auto02D68044_type;

    // Variable Initialization

    // Implementation
    if ((lib038F51B7_gv_created == false)) {
        lib038F51B7_gv_created = true;
        autoF15F4FD3_g = PlayerGroupActive();
        autoF15F4FD3_var = -1;
        while (true) {
            autoF15F4FD3_var = PlayerGroupNextPlayer(autoF15F4FD3_g, autoF15F4FD3_var);
            if (autoF15F4FD3_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(autoF15F4FD3_var, "WorkerSubmenuAbilityControl", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(autoF15F4FD3_var, "WorkerSubmenuMastery", 1);
        }
        TriggerEnable(lib038F51B7_gt_AbilityControlOpen, true);
        TriggerEnable(lib038F51B7_gt_AbilityControlSelect, true);
        lv_i = 0;
        for ( ; ( (autoBBF3F819_ai >= 0 && lv_i <= autoBBF3F819_ae) || (autoBBF3F819_ai < 0 && lv_i >= autoBBF3F819_ae) ) ; lv_i += autoBBF3F819_ai ) {
            DialogCreate(1000, 400, c_anchorBottomLeft, 9, 376, true);
            lib038F51B7_gv_controlDialog[lv_i] = DialogLastCreated();
            DialogSetImageVisible(DialogLastCreated(), false);
            DialogSetRenderPriority(DialogLastCreated(), 600);
            DialogSetObservedType(DialogLastCreated(), c_triggerObservedTypeDefaultObservedPlayerId);
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 1000, 400, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\ui_tooltip_frame_protoss.dds", c_triggerImageTypeBorder, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib038F51B7_gv_controlDialogBackground[lv_i] = DialogControlLastCreated();
            auto2C1E9EE3_g = PlayerGroupActive();
            auto2C1E9EE3_var = -1;
            while (true) {
                auto2C1E9EE3_var = PlayerGroupNextPlayer(auto2C1E9EE3_g, auto2C1E9EE3_var);
                if (auto2C1E9EE3_var < 0) { break; }
                autoA0D25DDC_val = PlayerRace(auto2C1E9EE3_var);
                if (autoA0D25DDC_val == "Terr") {
                    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_tooltip_frame_terran.dds", PlayerGroupSingle(auto2C1E9EE3_var));
                }
                else if (autoA0D25DDC_val == "Zerg") {
                    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_tooltip_frame_zerg.dds", PlayerGroupSingle(auto2C1E9EE3_var));
                }
                else {
                    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_tooltip_frame_protoss.dds", PlayerGroupSingle(auto2C1E9EE3_var));
                }
            }
        }
        autoE0F82362_i = 1;
        for ( ; autoE0F82362_i <= UserDataInstanceCount("Races"); autoE0F82362_i += 1 ) {
            lv_customRace = UserDataInstance("Races", autoE0F82362_i);
            auto02D68044_builder = UserDataGetGameLink("Races", lv_customRace , "Builder", 1);
            auto02D68044_buttons = (CatalogFieldValueCount(c_gameCatalogUnit, auto02D68044_builder, "CardLayouts[3].LayoutButtons", c_playerAny) - 1);
            auto02D68044_j = 1;
            for ( ; auto02D68044_j <= auto02D68044_buttons; auto02D68044_j += 1 ) {
                auto02D68044_type     = CatalogFieldValueGet(c_gameCatalogUnit, auto02D68044_builder, "CardLayouts[3].LayoutButtons[" + IntToString(auto02D68044_j) + "].Type", c_playerAny);
                if ( (auto02D68044_type == "AbilCmd")) {
                    lv_customAbilcmd  = StringToAbilCmd(CatalogFieldValueGet(c_gameCatalogUnit, auto02D68044_builder, "CardLayouts[3].LayoutButtons[" + IntToString(auto02D68044_j) + "].AbilCmd", c_playerAny));
                    lv_customUnit     = CatalogFieldValueGet(c_gameCatalogUnit, auto02D68044_builder, "CardLayouts[3].LayoutButtons[" + IntToString(auto02D68044_j) + "].Requirements", c_playerAny);
                    lv_customButton     = CatalogFieldValueGet(c_gameCatalogUnit, auto02D68044_builder, "CardLayouts[3].LayoutButtons[" + IntToString(auto02D68044_j) + "].Face", c_playerAny);
                    lv_customAbil = AbilityCommandGetAbility(lv_customAbilcmd);
                    lib038F51B7_gf_AddAbility(lv_race, lv_customUnit, lv_customButton, lv_customAbil + "Disable", true);
                }
            }
            lv_race += 1;
        }
        lib038F51B7_gf_CreateMainButton();
    }

}

void lib038F51B7_gf_AbilityControlSwitchRaceModified (int lp_player) {
    // Variable Declarations
    string lv_customRace;
    string lv_builderUnit;
    int lv_race;
    string lv_playerBuilder;

    // Automatic Variable Declarations
    int autoA6C62535_i;

    // Variable Initialization
    lv_playerBuilder = UnitGetType(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(lp_player), 1));

    // Implementation
    autoA6C62535_i = 1;
    for ( ; autoA6C62535_i <= UserDataInstanceCount("Races"); autoA6C62535_i += 1 ) {
        lv_customRace = UserDataInstance("Races", autoA6C62535_i);
        lv_builderUnit = UserDataGetGameLink("Races", lv_customRace, "Builder", 1);
        if ((lv_builderUnit != null) && (lv_playerBuilder == lv_builderUnit)) {
            lib038F51B7_gv_controlPlayerRace[lp_player] = lv_race;

        }
        lv_race += 1;
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Ability Control Open
//--------------------------------------------------------------------------------------------------
bool lib038F51B7_gt_AbilityControlOpen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib038F51B7_gv_controlCenter[0])) {
        if ((DialogIsVisible(lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[EventPlayer()]], EventPlayer()) == false)) {
            lib038F51B7_gf_AbilityControlShowHide(EventPlayer(), true, true);
        }
        else {
            lib038F51B7_gf_AbilityControlShowHide(EventPlayer(), false, true);
        }
    }
    else {
        if ((DialogControlGetDialog(EventDialogControl()) != lib038F51B7_gv_controlDialog[lib038F51B7_gv_controlPlayerRace[EventPlayer()]])) {
            lib038F51B7_gf_AbilityControlShowHide(EventPlayer(), false, false);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib038F51B7_gt_AbilityControlOpen_Init () {
    lib038F51B7_gt_AbilityControlOpen = TriggerCreate("lib038F51B7_gt_AbilityControlOpen_Func");
    TriggerEnable(lib038F51B7_gt_AbilityControlOpen, false);
    TriggerAddEventDialogControl(lib038F51B7_gt_AbilityControlOpen, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
    TriggerAddEventDialogControl(lib038F51B7_gt_AbilityControlOpen, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeHotkeyPressed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ability Control Select
//--------------------------------------------------------------------------------------------------
bool lib038F51B7_gt_AbilityControlSelect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_race;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_race = lib038F51B7_gv_controlPlayerRace[EventPlayer()];

    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((DialogControlGetDialog(EventDialogControl()) == lib038F51B7_gv_controlDialog[lv_race]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TechTreeUpgradeCount(EventPlayer(), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 0)), c_techCountCompleteOnly) == 0)) {
        SoundPlayForPlayer(SoundLink("UI_MenuSounds_AbilityControl_Off", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        libNtve_gf_SetDialogItemTooltip(EventDialogControl(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + (StringExternal(CatalogFieldValueGet(c_gameCatalogButton, libNtve_gf_DialogItemEditValue(EventDialogControl(), 4), "Name", c_playerAny)) + StringToText(" (<c val=\"FFFFFF\">") + UnitTypeGetName((libNtve_gf_DialogItemEditValue(EventDialogControl(), 3))) + StringToText("</c>)")) + StringToText("</s><n/><n/><s val=\"CommandTargetName\"></c>") + StringExternal("UI/ScoreScreen/PlayerFrame/AI") + StringToText("- <c val=\"FF0000\">") + StringExternal("UI/Disabled") + StringToText("</s></c><n/><n/><c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_038F51B7_E8602E13")), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemDesaturated(EventDialogControl(), true, PlayerGroupSingle(EventPlayer()));
        DialogControlSetEnabled(DialogControlGetRelativeControl(EventDialogControl(), 0), PlayerGroupSingle(EventPlayer()), false);
        DialogControlFadeTransparency(EventDialogControl(), PlayerGroupSingle(EventPlayer()), 0.0, 35.0);
        DialogControlFadeTransparency(DialogControlGetRelativeControl(EventDialogControl(), 0), PlayerGroupSingle(EventPlayer()), 0.0, 35.0);
        libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 0)), 1);
    }
    else {
        SoundPlayForPlayer(SoundLink("UI_MenuSounds_AbilityControl_On", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        libNtve_gf_SetDialogItemTooltip(EventDialogControl(), (StringToText("<s val=\"StandardTooltipHeader\"></c>") + (StringExternal(CatalogFieldValueGet(c_gameCatalogButton, libNtve_gf_DialogItemEditValue(EventDialogControl(), 4), "Name", c_playerAny)) + StringToText(" (<c val=\"FFFFFF\">") + UnitTypeGetName((libNtve_gf_DialogItemEditValue(EventDialogControl(), 3))) + StringToText("</c>)")) + StringToText("</s><n/><n/><s val=\"CommandTargetName\"></c>") + StringExternal("UI/ScoreScreen/PlayerFrame/AI") + StringToText("- <c val=\"00FF00\">") + StringExternal("UI/Active") + StringToText("</s></c><n/><n/><c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_038F51B7_6A42DA6C")), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemDesaturated(EventDialogControl(), false, PlayerGroupSingle(EventPlayer()));
        DialogControlSetEnabled(DialogControlGetRelativeControl(EventDialogControl(), 0), PlayerGroupSingle(EventPlayer()), true);
        DialogControlFadeTransparency(EventDialogControl(), PlayerGroupSingle(EventPlayer()), 0.0, 0.0);
        DialogControlFadeTransparency(DialogControlGetRelativeControl(EventDialogControl(), 0), PlayerGroupSingle(EventPlayer()), 0.0, 0.0);
        libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 0)), 0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib038F51B7_gt_AbilityControlSelect_Init () {
    lib038F51B7_gt_AbilityControlSelect = TriggerCreate("lib038F51B7_gt_AbilityControlSelect_Func");
    TriggerEnable(lib038F51B7_gt_AbilityControlSelect, false);
    TriggerAddEventDialogControl(lib038F51B7_gt_AbilityControlSelect, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Worker Submenu Ability Control
//--------------------------------------------------------------------------------------------------
bool lib038F51B7_gt_WorkerSubmenuAbilityControl_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((lib038F51B7_gv_created == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libD6A97973_gf_MasteryPanelShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib479C7CBB_gf_LiveScoreboardShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib948F000A_gf_WorkerSelectShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libCA960273_gf_StagingAreaCustomizationShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libCA960273_gf_PremiumDialogShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false, false);
    libF58A3325_gf_MasteryCodeShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib57FF8648_gf_BlacklistShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    libBBFED31C_gf_EndGameShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    lib2A8CE4F7_gf_StatsMenuShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, false);
    if ((lib038F51B7_gv_open[EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster)] == true)) {
        lib038F51B7_gf_AbilityControlShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), false, true);
    }
    else {
        lib038F51B7_gf_AbilityControlShowHide(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), true, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib038F51B7_gt_WorkerSubmenuAbilityControl_Init () {
    lib038F51B7_gt_WorkerSubmenuAbilityControl = TriggerCreate("lib038F51B7_gt_WorkerSubmenuAbilityControl_Func");
    TriggerAddEventPlayerEffectUsed(lib038F51B7_gt_WorkerSubmenuAbilityControl, c_playerAny, "WorkerSubmenuAbilityControl");
}

void lib038F51B7_InitTriggers () {
    lib038F51B7_gt_AbilityControlOpen_Init();
    lib038F51B7_gt_AbilityControlSelect_Init();
    lib038F51B7_gt_WorkerSubmenuAbilityControl_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib038F51B7_InitLib_completed = false;

void lib038F51B7_InitLib () {
    if (lib038F51B7_InitLib_completed) {
        return;
    }

    lib038F51B7_InitLib_completed = true;

    lib038F51B7_InitLibraries();
    lib038F51B7_InitVariables();
    lib038F51B7_InitTriggers();
}

include "LibDDE92A83"
include "Lib948F000A"
include "LibBBFED31C"
include "Lib57FF8648"
include "Lib2A8CE4F7"
include "LibCA960273"
include "Lib479C7CBB"
include "LibF58A3325"
include "LibD6A97973"

