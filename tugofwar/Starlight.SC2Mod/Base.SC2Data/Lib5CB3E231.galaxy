include "TriggerLibs/NativeLib"
include "LibDDE92A83_h"

include "Lib5CB3E231_h"

//--------------------------------------------------------------------------------------------------
// Library: Treasures
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib5CB3E231_InitLibraries () {
    libNtve_InitVariables();
    libDDE92A83_InitVariables();
}

// Variable Initialization
bool lib5CB3E231_InitVariables_completed = false;

void lib5CB3E231_InitVariables () {
    int init_i;
    int init_j;

    if (lib5CB3E231_InitVariables_completed) {
        return;
    }

    lib5CB3E231_InitVariables_completed = true;

    for (init_i = 0; init_i <= 15; init_i += 1) {
        for (init_j = 0; init_j <= 9; init_j += 1) {
            lib5CB3E231_gv_treasureCards[init_i][init_j] = c_invalidDialogId;
        }
    }
}

// Functions
trigger auto_lib5CB3E231_gf_CreateCard_Trigger = null;
int auto_lib5CB3E231_gf_CreateCard_lp_player;
int auto_lib5CB3E231_gf_CreateCard_lp_offsetX;
string auto_lib5CB3E231_gf_CreateCard_lp_button;
color auto_lib5CB3E231_gf_CreateCard_lp_color;
string auto_lib5CB3E231_gf_CreateCard_lp_effect;
string auto_lib5CB3E231_gf_CreateCard_lp_behavior;
string auto_lib5CB3E231_gf_CreateCard_lp_picture;
bool auto_lib5CB3E231_gf_CreateCard_lp_outro;

void lib5CB3E231_gf_CreateCard (int lp_player, int lp_offsetX, string lp_button, color lp_color, string lp_effect, string lp_behavior, string lp_picture, bool lp_outro) {
    auto_lib5CB3E231_gf_CreateCard_lp_player = lp_player;
    auto_lib5CB3E231_gf_CreateCard_lp_offsetX = lp_offsetX;
    auto_lib5CB3E231_gf_CreateCard_lp_button = lp_button;
    auto_lib5CB3E231_gf_CreateCard_lp_color = lp_color;
    auto_lib5CB3E231_gf_CreateCard_lp_effect = lp_effect;
    auto_lib5CB3E231_gf_CreateCard_lp_behavior = lp_behavior;
    auto_lib5CB3E231_gf_CreateCard_lp_picture = lp_picture;
    auto_lib5CB3E231_gf_CreateCard_lp_outro = lp_outro;

    if (auto_lib5CB3E231_gf_CreateCard_Trigger == null) {
        auto_lib5CB3E231_gf_CreateCard_Trigger = TriggerCreate("auto_lib5CB3E231_gf_CreateCard_TriggerFunc");
    }

    TriggerExecute(auto_lib5CB3E231_gf_CreateCard_Trigger, false, false);
}

bool auto_lib5CB3E231_gf_CreateCard_TriggerFunc (bool testConds, bool runActions) {
    int lp_player = auto_lib5CB3E231_gf_CreateCard_lp_player;
    int lp_offsetX = auto_lib5CB3E231_gf_CreateCard_lp_offsetX;
    string lp_button = auto_lib5CB3E231_gf_CreateCard_lp_button;
    color lp_color = auto_lib5CB3E231_gf_CreateCard_lp_color;
    string lp_effect = auto_lib5CB3E231_gf_CreateCard_lp_effect;
    string lp_behavior = auto_lib5CB3E231_gf_CreateCard_lp_behavior;
    string lp_picture = auto_lib5CB3E231_gf_CreateCard_lp_picture;
    bool lp_outro = auto_lib5CB3E231_gf_CreateCard_lp_outro;

    // Variable Declarations
    int lv_mainBorder;
    int lv_iconBorder;
    int lv_button;
    int lv_picture;
    const int lv_width = 228;
    const int lv_height = 320;
    const fixed lv_fadeOut = 0.5;
    const fixed lv_fadeIn = 0.125;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_mainBorder = c_invalidDialogControlId;
    lv_iconBorder = c_invalidDialogControlId;
    lv_button = c_invalidDialogControlId;
    lv_picture = c_invalidDialogControlId;

    // Implementation
    DialogCreate((lv_width + 200), (lv_height + 200), c_anchorBottom, lp_offsetX, (0 - 100), true);
    if ((lp_outro == true)) {
    }
    else {
        lib5CB3E231_gv_treasureCards[lp_player][lib5CB3E231_gv_treasureCardCurrent[lp_player]] = DialogLastCreated();
    }
    DialogSetRenderPriority(DialogLastCreated(), 512);
    DialogSetVisible(DialogLastCreated(), PlayerGroupSingle(lp_player), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), lv_width, lv_height, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_multiplayerload_avatarborder_white.dds", c_triggerImageTypeNineSlice, true, lp_color, c_triggerBlendModeNormal);
    lv_mainBorder = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 720, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (DialogControlGetWidth(lv_mainBorder, 0) + 4), (DialogControlGetHeight(lv_mainBorder, 0) + 4), c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_multiplayerload_avatarborder_white.dds", c_triggerImageTypeNineSlice, true, Color(0.39, 0.39, 0.39), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 510, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (DialogControlGetWidth(lv_mainBorder, 0) + 28), (DialogControlGetHeight(lv_mainBorder, 0) + 28), c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_standardelements_artbuttons_border_outerglow.dds", c_triggerImageTypeNineSlice, true, Color(0.39, 0.39, 0.39), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_mainBorder, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 500, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), (DialogControlGetWidth(lv_mainBorder, 0) - 38), (DialogControlGetHeight(lv_mainBorder, 0) - 42), c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
    lv_button = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_mainBorder, c_anchorCenter, 0, -2);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 710, PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNineSlice, PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), lp_color, PlayerGroupAll());
    libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "Assets\\Textures\\ui_card_border_glow.dds", PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_card_border_glow.dds", PlayerGroupAll());
        libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), false, PlayerGroupAll());
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
        libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\black.dds", PlayerGroupAll());
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (DialogControlGetWidth(lv_mainBorder, 0) - 42), (DialogControlGetHeight(lv_mainBorder, 0) - 42), c_anchorCenter, 0, 0, StringToText(""), lp_picture, c_triggerImageTypeNormal, true, Color((ColorGetComponent(lp_color, c_colorComponentRed) / 2.0), (ColorGetComponent(lp_color, c_colorComponentGreen) / 2.0), (ColorGetComponent(lp_color, c_colorComponentBlue) / 2.0)), c_triggerBlendModeNormal);
    lv_picture = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_mainBorder, c_anchorCenter, 0, -1);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 690, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_SetDialogItemEditorValue(lv_button, "Card", PlayerGroupSingle(0));
    libNtve_gf_SetDialogItemEditorValue(lv_button, (lp_effect), PlayerGroupSingle(1));
    libNtve_gf_SetDialogItemEditorValue(lv_button, IntToString(lib5CB3E231_gv_treasureCardCurrent[lp_player]), PlayerGroupSingle(2));
    libNtve_gf_SetDialogItemEditorValue(lv_button, (lp_button), PlayerGroupSingle(3));
    libNtve_gf_SetDialogItemEditorValue(lv_button, FixedToString(ColorGetComponent(lp_color, c_colorComponentRed), c_fixedPrecisionAny), PlayerGroupSingle(4));
    libNtve_gf_SetDialogItemEditorValue(lv_button, FixedToString(ColorGetComponent(lp_color, c_colorComponentGreen), c_fixedPrecisionAny), PlayerGroupSingle(5));
    libNtve_gf_SetDialogItemEditorValue(lv_button, FixedToString(ColorGetComponent(lp_color, c_colorComponentBlue), c_fixedPrecisionAny), PlayerGroupSingle(6));
    libNtve_gf_SetDialogItemEditorValue(lv_button, libNtve_gf_DialogItemImage(DialogControlLastCreated(), 0), PlayerGroupSingle(7));
    libNtve_gf_SetDialogItemEditorValue(lv_button, (lp_behavior), PlayerGroupSingle(8));
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), DialogControlGetWidth(lv_picture, 0), DialogControlGetHeight(lv_picture, 0), c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_standardelements_artbuttons_border_innerglow.dds", c_triggerImageTypeNineSlice, false, Color(0,0,0), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_picture, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 700, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 116, 116, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_multiplayerload_avatarborder_colorless.dds", c_triggerImageTypeNineSlice, false, lp_color, c_triggerBlendModeNormal);
    lv_iconBorder = DialogControlLastCreated();
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_mainBorder, c_anchorTop, 0, 20);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 800, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 80, 80, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\white.dds", c_triggerImageTypeNineSlice, true, Color(0,0,0), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_iconBorder, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 750, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 128, 128, c_anchorCenter, 0, 0, StringToText(""), (CatalogFieldValueGet(c_gameCatalogButton, lp_button, "Icon", lp_player)), c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_iconBorder, c_anchorCenter, 0, -2);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 810, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (DialogControlGetWidth(lv_iconBorder, 0) + 24), (DialogControlGetHeight(lv_iconBorder, 0) + 24), c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_pageassets_standardelements_artbuttons_border_outerglow.dds", c_triggerImageTypeNineSlice, true, Color(0.39, 0.39, 0.39), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, lv_iconBorder, c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 750, PlayerGroupAll());
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), DialogGetWidth(DialogLastCreated()), 50, c_anchorTopLeft, 0, 0, (StringExternal("Param/Value/lib_5CB3E231_9BAAD24E") + TextWithColor(StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lp_button, "Name", lp_player)), lp_color)), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_iconBorder, c_anchorBottom, 0, -10);
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), (DialogControlGetWidth(lv_mainBorder, 0) - 40), 160, c_anchorTopLeft, 0, 0, (StringExternal("Param/Value/lib_5CB3E231_0F066FF3") + StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lp_button, "Tooltip", lp_player))), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemRenderPriority(DialogControlLastCreated(), 900, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_iconBorder, c_anchorBottom, 0, 11);
    if ((lp_outro == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeOut, 100.0);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(lp_player), lv_fadeIn, 0.0);
    }
    if ((lp_outro == true)) {
    }
    else {
        lib5CB3E231_gv_treasureCardCurrent[lp_player] += 1;
    }
    return true;
}

void lib5CB3E231_gf_CreateCardAura (int lp_player, int lp_index, int lp_offsetX, string lp_data) {
    // Variable Declarations
    string lv_data;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_data = lp_data;

    // Implementation
    lib5CB3E231_gf_CreateCard(lp_player, lp_offsetX, UserDataGetGameLink("AuraData", UserDataInstance(lv_data, lp_index), UserDataField(lv_data, 1), 1), UserDataGetColor(lv_data, UserDataInstance(lv_data, lp_index), UserDataField(lv_data, 2), 1), UserDataGetGameLink(lv_data, UserDataInstance(lv_data, lp_index), UserDataField(lv_data, 5), 1), UserDataGetGameLink(lv_data, UserDataInstance(lv_data, lp_index), UserDataField(lv_data, 6), 1), UserDataGetImagePath(lv_data, UserDataInstance(lv_data, lp_index), UserDataField(lv_data, 3), 1), false);
}

void lib5CB3E231_gf_DestroyCardsExcept (int lp_player, int lp_index) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto33C43FA1_ae;
    const int auto33C43FA1_ai = 1;

    // Variable Initialization

    // Implementation
    auto33C43FA1_ae = (lib5CB3E231_gv_treasureCardCurrent[lp_player] - 1);
    lv_i = 0;
    for ( ; ( (auto33C43FA1_ai >= 0 && lv_i <= auto33C43FA1_ae) || (auto33C43FA1_ai < 0 && lv_i >= auto33C43FA1_ae) ) ; lv_i += auto33C43FA1_ai ) {
        if ((lv_i != lp_index)) {
            DialogDestroy(lib5CB3E231_gv_treasureCards[lp_player][lv_i]);
        }

    }
    lib5CB3E231_gv_treasureCardCurrent[lp_player] = 0;
}

void lib5CB3E231_gf_CreateHand (int lp_player, int lp_card1, int lp_card2, int lp_card3, string lp_data) {
    // Variable Declarations
    fixed lv_startPoint;
    fixed lv_separation;
    int lv_index;
    int lv_handSize;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_separation = 210.0;

    // Implementation
    lib5CB3E231_gf_DestroyCardsExcept(lp_player, 0);
    lv_handSize = 3;
    if ((lv_handSize > 7)) {
        lv_separation = (1610.0 / IntToFixed(lv_handSize));
    }

    lv_startPoint = (0.0 - (lv_separation * ((lv_handSize - 1) / 2.0)));
    lib5CB3E231_gf_CreateCardAura(lp_player, lp_card1, FixedToInt((lv_startPoint + (lv_separation * IntToFixed(lib5CB3E231_gv_treasureCardCurrent[lp_player])))), lp_data);
    lib5CB3E231_gf_CreateCardAura(lp_player, lp_card2, FixedToInt((lv_startPoint + (lv_separation * IntToFixed(lib5CB3E231_gv_treasureCardCurrent[lp_player])))), lp_data);
    lib5CB3E231_gf_CreateCardAura(lp_player, lp_card3, FixedToInt((lv_startPoint + (lv_separation * IntToFixed(lib5CB3E231_gv_treasureCardCurrent[lp_player])))), lp_data);
}

void lib5CB3E231_gf_DecideAuras (int lp_player, string lp_data) {
    // Variable Declarations
    int lv_index;
    string lv_data;
    unitgroup lv_units;
    unit lv_pick;
    int[10] lv_card;

    // Automatic Variable Declarations
    int autoBE6DC13E_ae;
    const int autoBE6DC13E_ai = 1;
    const int auto77EAED0B_ae = 2;
    const int auto77EAED0B_ai = 1;
    unitgroup autoEA1E382A_g;
    int autoEA1E382A_u;
    unit autoEA1E382A_var;

    // Variable Initialization
    lv_data = lp_data;
    lv_units = UnitGroupEmpty();

    // Implementation
    SoundPlayForPlayer(SoundLink("UI_Rewind", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("UI_Rewind_Button_Stinger", -1), c_maxPlayers, PlayerGroupSingle(lp_player), 100.0, 0.0);
    TriggerEnable(lib5CB3E231_gt_CardUsed, true);
    lib5CB3E231_gv_treasuresDecided[lp_player] = true;
    autoBE6DC13E_ae = UserDataInstanceCount(lv_data);
    lv_index = 1;
    for ( ; ( (autoBE6DC13E_ai >= 0 && lv_index <= autoBE6DC13E_ae) || (autoBE6DC13E_ai < 0 && lv_index >= autoBE6DC13E_ae) ) ; lv_index += autoBE6DC13E_ai ) {
        if ((UserDataGetInt(lv_data, UserDataInstance(lv_data, lv_index), UserDataField(lv_data, 4), 1) != 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "TrainDummy", c_unitCreateIgnorePlacement, 0, Point(0.0, 0.0));
            UnitSetCustomValue(UnitLastCreated(), 0, IntToFixed(lv_index));
            UnitGroupAdd(lv_units, UnitLastCreated());
        }

    }
    lv_index = 0;
    for ( ; ( (auto77EAED0B_ai >= 0 && lv_index <= auto77EAED0B_ae) || (auto77EAED0B_ai < 0 && lv_index >= auto77EAED0B_ae) ) ; lv_index += auto77EAED0B_ai ) {
        lv_pick = UnitGroupRandomUnit(lv_units, c_unitCountAlive);
        lv_card[lv_index] = FixedToInt(UnitGetCustomValue(lv_pick, 0));
        UnitGroupRemove(lv_units, lv_pick);
        UnitRemove(lv_pick);
    }
    autoEA1E382A_g = lv_units;
    autoEA1E382A_u = UnitGroupCount(autoEA1E382A_g, c_unitCountAll);
    for (;; autoEA1E382A_u -= 1) {
        autoEA1E382A_var = UnitGroupUnitFromEnd(autoEA1E382A_g, autoEA1E382A_u);
        if (autoEA1E382A_var == null) { break; }
        UnitRemove(lv_pick);
    }
    lib5CB3E231_gf_CreateHand(lp_player, lv_card[0], lv_card[1], lv_card[2], lp_data);
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Card Used
//--------------------------------------------------------------------------------------------------
bool lib5CB3E231_gt_CardUsed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_DialogItemEditValue(EventDialogControl(), 0) == "Card"))) {
            return false;
        }

        if (!((lib5CB3E231_gv_treasureClickDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemImage(EventDialogControl(), "Assets\\Textures\\ui_card_border_glow.dds", PlayerGroupSingle(EventPlayer()));
    PlayerCreateEffectPoint(EventPlayer(), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 1)), Point(0.0, 0.0));
    libNtve_gf_SetDialogItemAcceptMouse(EventDialogControl(), false, PlayerGroupAll());
    lib5CB3E231_gf_DestroyCardsExcept(EventPlayer(), StringToInt(libNtve_gf_DialogItemEditValue(EventDialogControl(), 2)));
    SoundPlayForPlayer(SoundLink("UI_AC_HornerHan_screen_on", -1), c_maxPlayers, PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
    UnitBehaviorAdd(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(EventPlayer()), 1), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 8)), UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(EventPlayer()), 1), 1);
    lib5CB3E231_gv_treasureClickDelay[EventPlayer()] = true;
    Wait(0.0, c_timeGame);
    lib5CB3E231_gf_CreateCard(EventPlayer(), DialogGetOffsetX(DialogControlGetDialog(EventDialogControl())), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 3)), Color(StringToFixed(libNtve_gf_DialogItemEditValue(EventDialogControl(), 4)), StringToFixed(libNtve_gf_DialogItemEditValue(EventDialogControl(), 5)), StringToFixed(libNtve_gf_DialogItemEditValue(EventDialogControl(), 6))), (libNtve_gf_DialogItemEditValue(EventDialogControl(), 1)), null, (libNtve_gf_DialogItemEditValue(EventDialogControl(), 7)), true);
    DialogDestroy(lib5CB3E231_gv_treasureCards[EventPlayer()][StringToInt(libNtve_gf_DialogItemEditValue(EventDialogControl(), 2))]);
    Wait(0.25, c_timeGame);
    lib5CB3E231_gv_treasureClickDelay[EventPlayer()] = false;
    lib5CB3E231_gv_treasuresDecided[EventPlayer()] = false;
    TechTreeAbilityAllow(EventPlayer(), AbilityCommand("SkinSpecializePremium", 18), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5CB3E231_gt_CardUsed_Init () {
    lib5CB3E231_gt_CardUsed = TriggerCreate("lib5CB3E231_gt_CardUsed_Func");
    TriggerEnable(lib5CB3E231_gt_CardUsed, false);
    TriggerAddEventDialogControl(lib5CB3E231_gt_CardUsed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Activate
//--------------------------------------------------------------------------------------------------
bool lib5CB3E231_gt_Activate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib5CB3E231_gv_treasuresDecided[EventPlayerEffectUsedUnitOwner(c_effectPlayerSource)] == false)) {
        lib5CB3E231_gf_DecideAuras(EventPlayerEffectUsedUnitOwner(c_effectPlayerSource), "AuraData");
        TechTreeAbilityAllow(EventPlayerEffectUsedUnitOwner(c_effectPlayerSource), AbilityCommand("SkinSpecializePremium", 18), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5CB3E231_gt_Activate_Init () {
    lib5CB3E231_gt_Activate = TriggerCreate("lib5CB3E231_gt_Activate_Func");
    TriggerAddEventPlayerEffectUsed(lib5CB3E231_gt_Activate, c_playerAny, "WorkerAuraAvailableUsed");
}

void lib5CB3E231_InitTriggers () {
    lib5CB3E231_gt_CardUsed_Init();
    lib5CB3E231_gt_Activate_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib5CB3E231_InitLib_completed = false;

void lib5CB3E231_InitLib () {
    if (lib5CB3E231_InitLib_completed) {
        return;
    }

    lib5CB3E231_InitLib_completed = true;

    lib5CB3E231_InitLibraries();
    lib5CB3E231_InitVariables();
    lib5CB3E231_InitTriggers();
}

include "LibDDE92A83"

