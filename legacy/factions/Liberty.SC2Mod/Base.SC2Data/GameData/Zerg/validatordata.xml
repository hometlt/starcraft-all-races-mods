<Catalog>
    <CValidatorFunction default="1" id="TacticalBurrowSharedDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Ignored="TacticalBurrowHostileSearchEmpty"/>
        <Line Failure="TacticalBurrow##unitLink##ThreatTest"/>
        <!-- <Line Success="TacticalBurrowMeleeHighDiffucltyNoHostiles"/> -->
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Success="CasterSuggestBurrow"/>
        <Line Success="TacticalBurrow##unitLink##CampaignNoHostilesBullyBurrow"/>
        <Line Failure="CasterCampaign"/>
        <Line Failure="CasterDifficultyLT3"/>
        <Line Failure="CasterLifeGT##maxVitals##Percent"/>
        <Line Failure="CasterLifeLT##minVitals##Percent"/>
        <Line Failure="TacticalBurrowLifeTest"/>
    </CValidatorFunction>
    <CValidatorFunction default="1" id="TacticalBurrowSharedUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Ignored="TacticalBurrowHostileSearchEmpty"/>
        <Line Success="TacticalBurrow##unitLink##ThreatTest"/>
        <!-- <Line Failure="TacticalBurrowMeleeHighDiffucltyNoHostiles"/> -->
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowNoCampaignCasterDetected"/>
        <Line Failure="CasterSuggestBurrow"/>
        <Line Success="TacticalBurrow##unitLink##CampaignBullyUnburrow"/>
        <Line Success="TacticalBurrowCampaignHostiles"/>
        <Line Failure="CasterCampaign"/>
        <Line Success="CasterDifficultyLT3"/>
        <Line Failure="CasterLifeLT##maxVitals##Percent"/>
    </CValidatorFunction>
    <CValidatorCombine default="1" id="TacticalBurrowThreatTest">
        <Type value="And"/>
        <CombineArray value="CasterWantsToMoveOrHasOrders"/>
        <CombineArray value="TacticalBurrow##unitLink##ThreatSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea default="1" id="TacticalBurrowSearchEmpty" parent="HostileSearchEmpty">
        <CachedSearch value="TacticalBurrow"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea default="1" id="TacticalBurrowThreatSearchEmpty" parent="TacticalBurrowSearchEmpty">
        <AreaArray Radius="8" Validator="Threatens##unitLink##"/>
    </CValidatorLocationEnumArea>
    <CValidatorUnitType default="1" id="TacticalBurrowBullyTest">
        <Type value="AIBully"/>
        <Value value="##unitLink##"/>
    </CValidatorUnitType>
    <CValidatorCombine default="1" id="TacticalBurrowCampaignNoHostilesBullyBurrow">
        <Type value="And"/>
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
        <CombineArray value="TacticalBurrow##unitLink##BullyTest"/>
    </CValidatorCombine>
    <CValidatorCombine default="1" id="TacticalBurrowCampaignBullyUnburrow">
        <Type value="And"/>
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrow##unitLink##BullyTest"/>
    </CValidatorCombine>
    <CValidatorUnitOrder id="CasterCantBurrow">
        <AbilLink value="BurrowZerglingDown"/>
    </CValidatorUnitOrder>
    <CValidatorUnitCompareOrderCount id="LairNotMorphing">
        <AbilLink value="UpgradeToHive"/>
    </CValidatorUnitCompareOrderCount>
    <CValidatorCombine id="NeuralParasitePeriodicValidator">
        <Type value="And"/>
        <CombineArray value="NotHidden"/>
        <CombineArray value="CasterHasEnergyAndNotDead"/>
        <CombineArray value="NotFrenzied"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="NotContaminated">
        <ResultFailed value="CantTargetThatUnit,Error/Contaminated"/>
        <Behavior value="Contaminated"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitType id="NotLarva">
        <ResultFailed value="CantTargetThatUnit,Error/CantTargetLarva"/>
        <Value value="Larva"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitCompareBehaviorCount id="NotLeechd">
        <ResultFailed value="Error,Error/CantTargetLeechedUnits"/>
        <Behavior value="Leech"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitType id="NotSpineCrawlerUprooted">
        <Value value="SpineCrawlerUprooted"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotSporeCrawlerUprooted">
        <Value value="SporeCrawlerUprooted"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorPlayerRequirement id="HasObverseIncubation">
        <Find value="1"/>
    </CValidatorPlayerRequirement>
    <CValidatorUnitType id="NotWorkerDrone">
        <Value value="Drone"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsLarva">
        <Value value="Larva"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsInfestationPit">
        <Value value="InfestationPit"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsSpawningPool">
        <Value value="SpawningPool"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsEvolutionChamber">
        <Value value="EvolutionChamber"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsHydraliskDen">
        <Value value="HydraliskDen"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsBanelingNest">
        <Value value="BanelingNest"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsRoachWarren">
        <Value value="RoachWarren"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsLurkerDen">
        <Value value="LurkerDen"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsUltraliskCavern">
        <Value value="UltraliskCavern"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotSpire">
        <ResultNoUnit value="CantTargetThatUnit"/>
        <Value value="Spire"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotGreaterSpire">
        <ResultNoUnit value="CantTargetThatUnit"/>
        <Value value="GreaterSpire"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotBanelingNest">
        <ResultNoUnit value="CantTargetThatUnit"/>
        <Value value="BanelingNest"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorCombine id="IsSpireOrGreaterSpire">
        <CombineArray value="IsGreaterSpire"/>
        <CombineArray value="IsSpire"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsSpire">
        <Value value="Spire"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsGreaterSpire">
        <Value value="GreaterSpire"/>
    </CValidatorUnitType>
    <CValidatorUnitCompareBehaviorCount id="IsNotFungalGrowthRooted">
        <ResultFailed value="CantTargetThatUnit"/>
        <Behavior value="FungalGrowth"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="IsNotFungalGrowthSnared">
        <ResultFailed value="CantTargetThatUnit"/>
        <Behavior value="FungalGrowth"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorCombine id="IsNotFungalGrowthed">
        <ResultFailed value="CantTargetThatUnit"/>
        <CombineArray value="IsNotFungalGrowthSnared"/>
        <CombineArray value="IsNotFungalGrowthRooted"/>
        <Type value="And"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsEgg">
        <Value value="Egg"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsDrone">
        <Value value="Drone"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsUltralisk">
        <Value value="Ultralisk"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsMutalisk">
        <Value value="Mutalisk"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsCorruptor">
        <Value value="Corruptor"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsRoach">
        <Value value="Roach"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsInfestor">
        <Value value="Infestor"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsOverlord">
        <Value value="Overlord"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsZergling">
        <Value value="Zergling"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsHydralisk">
        <Value value="Hydralisk"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotHydraGMissile">
        <Value value="HydraliskGroundWeapon"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotHydraAMissile">
        <Value value="HydraliskAirWeapon"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorPlayerRequirement id="CentrificalHooksResearched">
        <ResultNoPlayer value="Error"/>
        <Find value="1"/>
        <Value value="HaveCentrificalHooks"/>
    </CValidatorPlayerRequirement>
    <CValidatorUnitType id="IsInfestorBurrowed">
        <WhichUnit Value="Caster"/>
        <Value value="InfestorBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotInfestorBurrowed">
        <Value value="InfestorBurrowed"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitCompareBehaviorCount id="NotSpawningMutantLarva">
        <Behavior value="QueenSpawnLarvaTimer"/>
        <ResultFailed value="AlreadySpawningLarva"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorCombine id="IsHatcheryLairOrHive">
        <ResultFailed value="MustTargetStructures,Error/MustTargetHatchery"/>
        <CombineArray value="IsHatchery"/>
        <CombineArray value="IsLair"/>
        <CombineArray value="IsHive"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsLair">
        <ResultFailed value="CantTargetThatUnit"/>
        <Value value="Lair"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsHive">
        <ResultFailed value="CantTargetThatUnit"/>
        <Value value="Hive"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsHatchery">
        <ResultFailed value="CantTargetThatUnit"/>
        <Value value="Hatchery"/>
    </CValidatorUnitType>
    <CValidatorCombine id="IsZergUnit">
        <Type value="And"/>
        <CombineArray value="NotStructure"/>
        <CombineArray value="IsZerg"/>
    </CValidatorCombine>
    <CValidatorUnitCompareOrderCount id="HatcheryNotMorphing">
        <AbilLink value="UpgradeToLair"/>
    </CValidatorUnitCompareOrderCount>
    <CValidatorCombine id="ZerglingUpgradedDeathByEviscerate">
        <Type value="And"/>
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByEviscerate"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZerglingUpgradedDeathByFire">
        <Type value="And"/>
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByFire"/>
    </CValidatorCombine>
    <CValidatorPlayerRequirement id="ZerglingUpgraded">
        <ResultNoPlayer value="Error"/>
        <Find value="1"/>
        <Value value="HaveMetabolicBoost"/>
    </CValidatorPlayerRequirement>
    <CValidatorPlayerRequirement id="RoachUpgraded">
        <ResultNoPlayer value="Error"/>
        <Find value="1"/>
        <Value value="HaveOrganicCarapace"/>
    </CValidatorPlayerRequirement>
    <CValidatorCombine id="ZerglingUpgradedDeathByAcid">
        <Type value="And"/>
        <CombineArray value="ZerglingUpgraded"/>
        <CombineArray value="DeathByAcid"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="CorruptorInfectedTargetFiltersSource">
        <WhichUnit Value="Source"/>
        <Filters value="-;Self,Player,Ally,Structure,Destructible,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
    </CValidatorUnitFilters>
    <CValidatorUnitFilters id="CorruptorInfectedTargetFiltersTarget">
        <Filters value="-;Self,Player,Ally,Structure,Destructible,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorUnitFilters>
    <CValidatorUnitCompareField id="RequiresZerg">
        <Field value="Race"/>
        <Value value="Zerg"/>
        <ResultFailed value="Error,e_cmdMustTargetZerg"/>
    </CValidatorUnitCompareField>
    <CValidatorCombine id="ZergBleedNormal">
        <Type value="And"/>
        <CombineArray value="LifeGETwoThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedLight">
        <Type value="And"/>
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTTwoThird"/>
        <CombineArray value="LifeGEHalf"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedHeavy">
        <Type value="And"/>
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTHalf"/>
        <CombineArray value="LifeGEOneThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorCombine id="ZergBleedProfusely">
        <Type value="And"/>
        <CombineArray value="LairNotMorphing"/>
        <CombineArray value="HatcheryNotMorphing"/>
        <CombineArray value="LifeLTOneThird"/>
        <CombineArray value="ZergBleedingValid"/>
    </CValidatorCombine>
    <CValidatorUnitFilters id="ZergBleedingValid">
        <Filters value="-;UnderConstruction,Dead"/>
    </CValidatorUnitFilters>
    <CValidatorUnitType id="NotRoachMissile">
        <Find value="0"/>
        <Value value="AcidSalivaWeapon"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotHatchery">
        <Find value="0"/>
        <Value value="Hatchery"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotLair">
        <Find value="0"/>
        <Value value="Lair"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotHive">
        <Find value="0"/>
        <Value value="Hive"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotLarvaEgg">
        <Find value="0"/>
        <Value value="Egg"/>
        <ResultFailed value="CantTargetThatUnit,Error/CantTargetZergCocoons"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotRoachEgg">
        <Find value="0"/>
        <Value value="RoachEgg"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotCorruptorEgg">
        <Find value="0"/>
        <Value value="CorruptorEgg"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotCorruptor">
        <Find value="0"/>
        <Value value="Corruptor"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotOverlord">
        <Find value="0"/>
        <Value value="Overlord"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotOverlordCocoon">
        <Find value="0"/>
        <Value value="OverlordCocoon"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotQueenCocoon">
        <Find value="0"/>
        <Value value="QueenCocoon"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsQueen">
        <Value value="Queen"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotQueen">
        <Find value="0"/>
        <Value value="Queen"/>
    </CValidatorUnitType>
    <CValidatorUnitFilters id="InfestationTargetFilters">
        <Filters value="Ground,Structure;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorUnitFilters>
    <CValidatorCombine id="Infestation">
        <Type value="And"/>
        <CombineArray value="NotDead"/>
        <CombineArray value="CasterNotDead"/>
        <CombineArray value="InfestationTargetFilters"/>
        <CombineArray value="HasVision"/>
    </CValidatorCombine>
    <CValidatorUnitCompareField id="DisguiseAsZealot">
        <Field value="Race"/>
        <Value value="Prot"/>
    </CValidatorUnitCompareField>
    <CValidatorUnitCompareField id="DisguiseAsMarine">
        <Field value="Race"/>
        <Value value="Terr"/>
    </CValidatorUnitCompareField>
    <CValidatorLocationPlacement id="InfestedTerransPlacementCheck">
        <Unit value="InfestedTerransEggPlacement"/>
        <Range value="3"/>
    </CValidatorLocationPlacement>
    <CValidatorCombine id="IsNotEggUnit">
        <Type value="And"/>
        <CombineArray value="IsNotEgg"/>
        <CombineArray value="IsNotBanelingCocoon"/>
        <CombineArray value="IsNotBroodLordCocoon"/>
        <CombineArray value="IsNotInfestedTerransEgg"/>
        <CombineArray value="IsNotOverlordCocoon"/>
        <ResultFailed value="Error,Error/CantTargetEggUnit"/>
    </CValidatorCombine>
    <CValidatorUnitType id="IsNotEgg">
        <Value value="Egg"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsNotOverlordCocoon">
        <Value value="OverlordCocoon"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsNotBanelingCocoon">
        <Value value="BanelingCocoon"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsNotBroodLordCocoon">
        <Value value="BroodLordCocoon"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsNotInfestedTerransEgg">
        <Value value="InfestedTerransEgg"/>
        <Find value="0"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsBanelingCocoon">
        <Value value="BanelingCocoon"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsOverseer">
        <Value value="Overseer"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsBroodLord">
        <Value value="BroodLord"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsUltraliskBurrowed">
        <Value value="UltraliskBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsQueenBurrowed">
        <Value value="QueenBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsDroneBurrowed">
        <Value value="DroneBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsHydraliskBurrowed">
        <Value value="HydraliskBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsRoachBurrowed">
        <Value value="RoachBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsZerglingBurrowed">
        <Value value="ZerglingBurrowed"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsInfestedTerran">
        <Value value="InfestedTerran"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="IsInfestorTerran">
        <Value value="InfestorTerran"/>
    </CValidatorUnitType>
    <CValidatorLocationEnumArea id="SporeHostileSearchEmpty" parent="HostileSearchEmpty">
        <!--Sunken/Spore Attack Range = 7-->
        <AreaArray Radius="7"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Air,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SunkenHostileSearchEmpty" parent="SporeHostileSearchEmpty">
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SporeHostileSearch" parent="HostileSearch">
        <!--Spore/Spore Attack Range = 7-->
        <AreaArray Radius="7"/>
        <SearchFlags index="ExtendByUnitRadius" value="1"/>
        <SearchFilters value="Air,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="SunkenHostileSearch" parent="SporeHostileSearch">
        <SearchFilters value="Ground,Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>

    <!--

    Overlord Generate Creep Start

    if (!nearby nonzerg ally building or worker) AND
       (!nearby enemy zerg units)

        Start

    -->
    <CValidatorCombine id="TacticalGenerateCreepStart">
        <Type value="And"/>
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="OverlordNoAllyBuildingSearch"/>
        <CombineArray value="OverlordNoAllyWorkerSearch"/>
        <CombineArray value="OverlordNoEnemyZergSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="OverlordNoEnemyZergSearch" parent="HostileSearchEmpty">
        <AreaArray Radius="11" Validator="IsZerg"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordNoAllyBuildingSearch" parent="HostileSearchEmpty">
        <!--Overlord vision = 11-->
        <AreaArray Radius="11" Validator="NotZerg"/>
        <SearchFilters value="Structure,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordNoAllyWorkerSearch" parent="OverlordNoAllyBuildingSearch">
        <SearchFilters value="Worker,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <!--

    Overlord Generate Creep Stop

    if (nearby nonzerg ally building or worker) OR
       (nearby enemy zerg units)

        Stop

    -->
    <CValidatorCombine id="TacticalGenerateCreepStop">
        <Type value="And"/>
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="GenerateCreepStopValidator"/>
    </CValidatorCombine>
    <CValidatorCombine id="GenerateCreepStopValidator">
        <CombineArray value="OverlordAllyBuildingSearch"/>
        <CombineArray value="OverlordAllyWorkerSearch"/>
        <CombineArray value="OverlordEnemyZergSearch"/>
    </CValidatorCombine>
    <CValidatorLocationEnumArea id="OverlordEnemyZergSearch" parent="HostileSearch">
        <AreaArray Radius="11" Validator="IsZerg"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordAllyBuildingSearch" parent="HostileSearch">
        <!--Overlord vision = 11-->
        <AreaArray Radius="11" Validator="NotZerg"/>
        <SearchFilters value="Structure,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="OverlordAllyWorkerSearch" parent="OverlordAllyBuildingSearch">
        <SearchFilters value="Worker,Visible;Player,Neutral,Enemy,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>

    <!--

    Drone Burrow

        if (force unburrow)
            return false;

        if (no threatening units)
            return false;

        if (suggest unburrow)
            return false;

        if (detected)
            return false;

        if (!campaign)
            return life < 90%;

        if (!suggest burrow)
            return false;

        return true;
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensDrone" parent="Threatens">
        <AttackerAlternateType value="Drone"/>
    </CValidatorUnitCompareAttackPriority>
    <CValidatorLocationEnumArea id="TacticalBurrowDroneHostileSearchEmpty" parent="HostileSearchEmpty">
        <AreaArray Radius="8" Validator="ThreatensDrone"/>
        <SearchFilters value="Visible;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Hallucination,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorFunction id="TacticalBurrowDroneDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Failure="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeLT90Percent"/>
        <Line Failure="CasterNotSuggestBurrow"/>
    </CValidatorFunction>
    <!--

    Drone Unburrow

        if (force unburrow)
            return true;

        if (no threatening units)
            return true;

        if (suggest unburrow)
            return true;

        if (detected)
            return true;

        if (!campaign)
            return life == 100%

        if (suggest burrow)
            return false;

        return true;
    -->
    <CValidatorFunction id="TacticalBurrowDroneUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Success="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeFull"/>
        <Line Failure="CasterSuggestBurrow"/>
    </CValidatorFunction>
    <!--

    Shared Burrow

        if (force unburrow)
            return false;

        if (no threatening units) {
            if (wants to move)
                return false;
            if (has orders)
                return false;
        }

        //// harder melee stay burrowed when idle  (no longer doing this)
        //if (!campaign)
        //    if (difficulty >= hard)
        //        if (no enemy units)
        //            return false;

        if (suggest unburrow)
            return false;

        if (detected)
            return false;

        if (suggest burrow)
            return true;

        if (campaign) {
            if (bully should be burrowed)
                if (no enemy units)
                    return true;

            // campaign default is stay in current mode
            return false;
        }

        // melee only below here
        if (difficulty < hard)
            return false;

        if (vitals >= MAXVITALITY%)
            return false;

        if (vitals <= MINVITALITY%)
            return false;

        if (vitals > 20)
            if (vitals > enemyVit)
                return false;

        return true;
    -->
    <CValidatorLocationEnumArea id="TacticalBurrowHostileSearchEmpty" parent="TacticalBurrowSearchEmpty">
        <AreaArray Radius="8"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowHostileSearch" parent="HostileSearch">
        <AreaArray Radius="8"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowCasterDetected">
        <AreaArray Radius="8"/>
        <CachedSearch value="TacticalBurrow"/>
        <Compare value="GE"/>
        <Count value="1"/>
        <SearchFilters value="Visible,Detector;Player,Ally,Neutral,Worker,Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorLocationEnumArea>
    <CValidatorLocationEnumArea id="TacticalBurrowHostileLifeSearch" parent="HostileSearch">
        <AreaArray Radius="8" Validator="TargetAttackingCaster"/>
        <Count value="0"/>
        <CombinedVital value="Life"/>
        <CombinedVitalCompare value="LE"/>
        <CachedSearch value="TacticalBurrow"/>
    </CValidatorLocationEnumArea>
    <CValidatorCombine id="TacticalBurrowMeleeHighDiffucltyNoHostiles">
        <Type value="And"/>
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="CasterDifficultyGE3"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowCampaignNoHostiles">
        <Type value="And"/>
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearchEmpty"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowCampaignHostiles">
        <Type value="And"/>
        <CombineArray value="CasterCampaign"/>
        <CombineArray value="TacticalBurrowHostileSearch"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowLifeTest">
        <Type value="And"/>
        <CombineArray value="CasterLifeGT20Percent"/>
        <CombineArray value="TacticalBurrowHostileLifeSearch"/>
    </CValidatorCombine>
    <CValidatorCombine id="TacticalBurrowNoCampaignCasterDetected">
        <Type value="And"/>
        <CombineArray value="CasterNotCampaign"/>
        <CombineArray value="TacticalBurrowCasterDetected"/>
    </CValidatorCombine>
    <!--

    Shared Unburrow

        if (force unburrow)
            return true;

        if (no threatening units) {
            if (wants to move)
                return true;
            if (has orders)
                return true;
        }

        //// harder melee stay burrowed when idle  (no longer doing this)
        //if (!campaign)
        //    if (difficulty >= hard)
        //        if (no enemy units)
        //            return false;

        if (suggest unburrow)
            return true;

        if (!campaign && detected)
            return true;

        if (suggest burrow)
            return false;

        if (campaign) {
            if (bully should be unburrowed)
                return true;

            if (enemy units)
                return true;

            // campaign default is stay in current mode
            return false;
        }

        if (difficulty < hard)
            return true;

        if (vitals < VITALITY%)
            return false;

        //if (vitals > 20)
        //    if (vitals > enemyVit)
        //        return true;

        return true;
    -->
    <!--

    Lurker Burrow

        if (force unburow)
            return false;

        if (no enemy units) {
            if (wants to move)
                return false;
        }

        return true;
    -->
    <CValidatorFunction id="TacticalBurrowLurkerDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Test="TacticalBurrowHostileSearchEmpty" Failure="CasterWantsToMove"/>
    </CValidatorFunction>
    <!--

    Lurker Unburrow

        return !Lurker Burrow;
    -->
    <CValidatorCombine id="TacticalBurrowLurkerUp">
        <Negate value="1"/>
        <CombineArray value="TacticalBurrowLurkerDown"/>
    </CValidatorCombine>
    <!--

    Queen Burrow & Unburrow

        Queen Burrow is very similar to drone burrow, default is up, only burrow to live
    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensQueen" parent="ThreatensUnit" unitLink="Queen"/>
    <CValidatorCombine id="TacticalBurrowQueenThreatTest" parent="TacticalBurrowThreatTest" unitLink="Queen"/>
    <CValidatorLocationEnumArea id="TacticalBurrowQueenThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Queen"/>
    <CValidatorUnitType id="TacticalBurrowQueenBullyTest" parent="TacticalBurrowBullyTest" unitLink="Queen"/>
    <CValidatorFunction id="TacticalBurrowQueenDown">
        <Line Failure="CasterForceUnburrow"/>
        <Line Failure="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Failure="CasterSuggestUnburrow"/>
        <Line Failure="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeLT50Percent"/>
        <Line Failure="CasterNotSuggestBurrow"/>
    </CValidatorFunction>
    <CValidatorFunction id="TacticalBurrowQueenUp">
        <Line Success="CasterForceUnburrow"/>
        <Line Success="TacticalBurrowDroneHostileSearchEmpty"/>
        <Line Success="CasterSuggestUnburrow"/>
        <Line Success="TacticalBurrowCasterDetected"/>
        <Line Test="CasterNotCampaign" Return="CasterLifeGT75Percent"/>
        <Line Failure="CasterSuggestBurrow"/>
    </CValidatorFunction>
    <!--

    Zergling Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensZergling" parent="ThreatensUnit" unitLink="Zergling"/>
    <CValidatorCombine id="TacticalBurrowZerglingThreatTest" parent="TacticalBurrowThreatTest" unitLink="Zergling"/>
    <CValidatorLocationEnumArea id="TacticalBurrowZerglingThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Zergling"/>
    <CValidatorCombine id="TacticalBurrowZerglingCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="ZerglingBurrowed"/>
    <CValidatorCombine id="TacticalBurrowZerglingCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Zergling"/>
    <CValidatorUnitType id="TacticalBurrowZerglingBullyTest" parent="TacticalBurrowBullyTest" unitLink="Zergling"/>
    <CValidatorUnitType id="TacticalBurrowZerglingBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="ZerglingBurrowed"/>
    <CValidatorFunction id="TacticalBurrowZerglingDown" parent="TacticalBurrowSharedDown" maxVitals="100" minVitals="0" unitLink="Zergling"/>
    <CValidatorFunction id="TacticalBurrowZerglingUp" parent="TacticalBurrowSharedUp" maxVitals="100" unitLink="Zergling"/>
    <!--

    Baneling Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensBaneling" parent="ThreatensUnit" unitLink="Baneling"/>
    <CValidatorCombine id="TacticalBurrowBanelingThreatTest" parent="TacticalBurrowThreatTest" unitLink="Baneling"/>
    <CValidatorLocationEnumArea id="TacticalBurrowBanelingThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Baneling"/>
    <CValidatorCombine id="TacticalBurrowBanelingCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="BanelingBurrowed"/>
    <CValidatorCombine id="TacticalBurrowBanelingCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Baneling"/>
    <CValidatorUnitType id="TacticalBurrowBanelingBullyTest" parent="TacticalBurrowBullyTest" unitLink="Baneling"/>
    <CValidatorUnitType id="TacticalBurrowBanelingBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="BanelingBurrowed"/>
    <CValidatorFunction id="TacticalBurrowBanelingDown" parent="TacticalBurrowSharedDown" maxVitals="75" minVitals="50" unitLink="Baneling"/>
    <CValidatorFunction id="TacticalBurrowBanelingUp" parent="TacticalBurrowSharedUp" maxVitals="90" unitLink="Baneling"/>
    <!--

    Hydralisk Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensHydralisk" parent="ThreatensUnit" unitLink="Hydralisk"/>
    <CValidatorCombine id="TacticalBurrowHydraliskThreatTest" parent="TacticalBurrowThreatTest" unitLink="Hydralisk"/>
    <CValidatorLocationEnumArea id="TacticalBurrowHydraliskThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Hydralisk"/>
    <CValidatorCombine id="TacticalBurrowHydraliskCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="HydraliskBurrowed"/>
    <CValidatorCombine id="TacticalBurrowHydraliskCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Hydralisk"/>
    <CValidatorUnitType id="TacticalBurrowHydraliskBullyTest" parent="TacticalBurrowBullyTest" unitLink="Hydralisk"/>
    <CValidatorUnitType id="TacticalBurrowHydraliskBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="HydraliskBurrowed"/>
    <CValidatorFunction id="TacticalBurrowHydraliskDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Hydralisk"/>
    <CValidatorFunction id="TacticalBurrowHydraliskUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Hydralisk"/>
    <!--

    Roach Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensRoach" parent="ThreatensUnit" unitLink="Roach"/>
    <CValidatorCombine id="TacticalBurrowRoachThreatTest" parent="TacticalBurrowThreatTest" unitLink="Roach"/>
    <CValidatorLocationEnumArea id="TacticalBurrowRoachThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Roach"/>
    <CValidatorCombine id="TacticalBurrowRoachCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="RoachBurrowed"/>
    <CValidatorCombine id="TacticalBurrowRoachCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Roach"/>
    <CValidatorUnitType id="TacticalBurrowRoachBullyTest" parent="TacticalBurrowBullyTest" unitLink="Roach"/>
    <CValidatorUnitType id="TacticalBurrowRoachBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="RoachBurrowed"/>
    <CValidatorFunction id="TacticalBurrowRoachDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Roach"/>
    <CValidatorFunction id="TacticalBurrowRoachUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Roach"/>
    <!--

    Infestor Burrow & Unburrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensInfestor" parent="ThreatensUnit" unitLink="Infestor"/>
    <CValidatorCombine id="TacticalBurrowInfestorThreatTest" parent="TacticalBurrowThreatTest" unitLink="Infestor"/>
    <CValidatorLocationEnumArea id="TacticalBurrowInfestorThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Infestor"/>
    <CValidatorCombine id="TacticalBurrowInfestorCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="InfestorBurrowed"/>
    <CValidatorCombine id="TacticalBurrowInfestorCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Infestor"/>
    <CValidatorUnitType id="TacticalBurrowInfestorBullyTest" parent="TacticalBurrowBullyTest" unitLink="Infestor"/>
    <CValidatorUnitType id="TacticalBurrowInfestorBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="InfestorBurrowed"/>
    <CValidatorFunction id="TacticalBurrowInfestorDown" parent="TacticalBurrowSharedDown" maxVitals="50" minVitals="30" unitLink="Infestor"/>
    <CValidatorFunction id="TacticalBurrowInfestorUp" parent="TacticalBurrowSharedUp" maxVitals="60" unitLink="Infestor"/>
    <!--

    Ultralisk Burrow

    -->
    <CValidatorUnitCompareAttackPriority id="ThreatensUltralisk" parent="ThreatensUnit" unitLink="Ultralisk"/>
    <CValidatorCombine id="TacticalBurrowUltraliskThreatTest" parent="TacticalBurrowThreatTest" unitLink="Ultralisk"/>
    <CValidatorLocationEnumArea id="TacticalBurrowUltraliskThreatSearchEmpty" parent="TacticalBurrowThreatSearchEmpty" unitLink="Ultralisk"/>
    <CValidatorCombine id="TacticalBurrowUltraliskCampaignNoHostilesBullyBurrow" parent="TacticalBurrowCampaignNoHostilesBullyBurrow" unitLink="UltraliskBurrowed"/>
    <CValidatorCombine id="TacticalBurrowUltraliskCampaignBullyUnburrow" parent="TacticalBurrowCampaignBullyUnburrow" unitLink="Ultralisk"/>
    <CValidatorUnitType id="TacticalBurrowUltraliskBullyTest" parent="TacticalBurrowBullyTest" unitLink="Ultralisk"/>
    <CValidatorUnitType id="TacticalBurrowUltraliskBurrowedBullyTest" parent="TacticalBurrowBullyTest" unitLink="UltraliskBurrowed"/>
    <CValidatorFunction id="TacticalBurrowUltraliskDown" parent="TacticalBurrowSharedDown" maxVitals="30" minVitals="10" unitLink="Ultralisk"/>
    <CValidatorFunction id="TacticalBurrowUltraliskUp" parent="TacticalBurrowSharedUp" maxVitals="40" unitLink="Ultralisk"/>
    <!--

    Infestor Mind Control

    -->
    <CValidatorUnitCompareVital id="InfestedTerranEnergyCheck">
        <WhichUnit Value="Caster"/>
        <Compare value="GE"/>
        <Value value="200"/>
        <Vital value="Energy"/>
    </CValidatorUnitCompareVital>
    <CValidatorUnitCompareVital id="InfestorLowVitality" parent="CasterLifeLT75Percent"/>
    <CValidatorCombine id="InfestorInDanger">
        <Type value="And"/>
        <CombineArray value="CasterInCombat"/>
        <CombineArray value="CasterLifeLT75Percent"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="IsNotNeuralParasited">
        <Behavior value="NeuralParasite"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorCombine id="NeuralParasiteDroneChecks">
        <Type value="And"/>
        <CombineArray value="NotHidden"/>
        <CombineArray value="IsNotNeuralParasited"/>
    </CValidatorCombine>
    <CValidatorPlayerCompareRace id="RaceIsZerg">
        <Value value="Zerg"/>
    </CValidatorPlayerCompareRace>
    <CValidatorUnitCompareBehaviorCount id="TargetIsNeuralParasited">
        <Compare value="GE"/>
        <Value value="1"/>
        <Behavior value="NeuralParasite"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="NotCorruptioned">
        <ResultFailed value="CantTargetThatUnit"/>
        <Behavior value="Corruption"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="NotUnstableMutation">
        <Behavior value="UnstableMutation"/>
        <ResultFailed value="CantTargetThatUnit"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="HasGenerateCreepBehavior">
        <Value value="1"/>
        <Behavior value="GenerateCreep"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitFilters id="BroodlingEscortFilters">
        <WhichUnit Effect="BroodlingEscort"/>
        <Filters value="Ground,Visible;Missile,Stasis,Dead,Hidden,Invulnerable"/>
    </CValidatorUnitFilters>
    <CValidatorCombine id="SiphonChannelValidators">
        <Type value="And"/>
        <CombineArray value="TargetIsVisible"/>
        <CombineArray value="NotDead"/>
        <CombineArray value="IsNotPhaseShifted"/>
    </CValidatorCombine>
    <CValidatorLocationCreep id="TargetPointIsCreep">
        <ResultFailed value="CantBuildTooFarFromCreepSource"/>
    </CValidatorLocationCreep>
    <CValidatorUnitType id="TargetNotChangeling">
        <Value value="Changeling"/>
        <Find value="0"/>
        <Type value="SelectAlias"/>
    </CValidatorUnitType>
    <CValidatorUnitType id="NotSpawnling">
        <Find value="0"/>
        <Value value="InfestedTerran"/>
    </CValidatorUnitType>



    <CValidatorPlayerRequirement id="MissingMarineShieldUpgrade">
        <WhichPlayer Value="Target"/>
        <Value value="UseShieldWall"/>
    </CValidatorPlayerRequirement>
    <CValidatorPlayerRequirement id="HasMarineShieldUpgrade">
        <WhichPlayer Value="Target"/>
        <Find value="1"/>
        <Value value="UseShieldWall"/>
    </CValidatorPlayerRequirement>
    <CValidatorCombine id="DisguiseAsMarineWithoutShield">
        <Type value="And"/>
        <CombineArray value="DisguiseAsMarine"/>
        <CombineArray value="MissingMarineShieldUpgrade"/>
    </CValidatorCombine>
    <CValidatorCombine id="DisguiseAsMarineWithShield">
        <Type value="And"/>
        <CombineArray value="DisguiseAsMarine"/>
        <CombineArray value="HasMarineShieldUpgrade"/>
    </CValidatorCombine>
    <CValidatorUnitCompareField id="DisguiseAsZergling">
        <Field value="Race"/>
        <Value value="Zerg"/>
    </CValidatorUnitCompareField>
    <CValidatorPlayerRequirement id="MissingZerglingWingsUpgrade">
        <WhichPlayer Value="Target"/>
        <Value value="HaveMetabolicBoost"/>
    </CValidatorPlayerRequirement>
    <CValidatorPlayerRequirement id="HasZerglingWingsUpgrade">
        <WhichPlayer Value="Target"/>
        <Find value="1"/>
        <Value value="HaveMetabolicBoost"/>
    </CValidatorPlayerRequirement>
    <CValidatorPlayerRequirement id="HasHighCapacityBarrels">
        <WhichPlayer Value="Caster"/>
        <Find value="1"/>
        <Value value="UseHighCapacityBarrels"/>
    </CValidatorPlayerRequirement>
    <CValidatorCombine id="DisguiseAsZerglingWithoutWings">
        <Type value="And"/>
        <CombineArray value="DisguiseAsZergling"/>
        <CombineArray value="MissingZerglingWingsUpgrade"/>
    </CValidatorCombine>
    <CValidatorCombine id="DisguiseAsZerglingWithWings">
        <Type value="And"/>
        <CombineArray value="DisguiseAsZergling"/>
        <CombineArray value="HasZerglingWingsUpgrade"/>
    </CValidatorCombine>



    <CValidatorCombine id="DiseaseTestBuff">
        <Type value="And"/>
        <CombineArray value="noMarkers"/>
        <CombineArray value="InfestorDiseaseTestBuff"/>
    </CValidatorCombine>
    <CValidatorUnitCompareBehaviorCount id="InfestorDiseaseTestBuff">
        <Behavior value="InfestorDisease"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="NotFrenzied">
        <Behavior value="Frenzy"/>
        <ResultFailed value="MustTargetStructures,Error/CantTargetFrenziedUnits"/>
    </CValidatorUnitCompareBehaviorCount>
    <CValidatorUnitCompareBehaviorCount id="NotFungalGrowthed">
        <Behavior value="FungalGrowth"/>
        <Value value="1"/>
    </CValidatorUnitCompareBehaviorCount>


    <CValidatorUnitType id="NotSiegeTankBullyTest" parent="TacticalBurrowBullyTest">
        <Find value="0"/>
    </CValidatorUnitType>
</Catalog>