include "TriggerLibs/NativeLib"

include "LibScio_h"

//--------------------------------------------------------------------------------------------------
// Library: Scion
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libScio_InitLibraries () {
    libNtve_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Genetron Interface
//--------------------------------------------------------------------------------------------------
bool libScio_gt_GenetronInterface_Func (bool testConds, bool runActions) {
    // Variable Declarations
    playergroup lv_players;
    int lv_genetron_energy_panel_ui;
    int lv_genetron_energy_current_ui;
    int lv_genetron_energy_max_ui;
    int lv_genetron_energy_label_ui;
    unit[17] lv_genetron_power_dummies;

    // Automatic Variable Declarations
    playergroup auto364873CF_g;
    int auto364873CF_var;
    playergroup auto19BA3B9C_g;
    int auto19BA3B9C_var;
    playergroup auto7CC7ECD8_g;
    int auto7CC7ECD8_var;
    const int autoAA32B496_n = 16;
    int autoAA32B496_i;
    playergroup autoE2D53D8D_g;
    int autoE2D53D8D_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();
    lv_genetron_energy_panel_ui = c_invalidDialogControlId;
    lv_genetron_energy_current_ui = c_invalidDialogControlId;
    lv_genetron_energy_max_ui = c_invalidDialogControlId;
    lv_genetron_energy_label_ui = c_invalidDialogControlId;

    // Actions
    if (!runActions) {
        return true;
    }

    auto364873CF_g = PlayerGroupAll();
    auto364873CF_var = -1;
    while (true) {
        auto364873CF_var = PlayerGroupNextPlayer(auto364873CF_g, auto364873CF_var);
        if (auto364873CF_var < 0) { break; }
        if ((TechTreeUnitCount(auto364873CF_var, "GenetronPowerSupplyDummy", c_techCountCompleteOnly) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "GenetronPowerSupplyDummy", 0, auto364873CF_var, Point(0.0, 0.0));
            lv_genetron_power_dummies[auto364873CF_var] = UnitLastCreated();
        }
        else {
            lv_genetron_power_dummies[auto364873CF_var] = UnitGroupUnit(UnitGroup("GenetronPowerSupplyDummy", auto364873CF_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
        }
    }
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/GenetronEnergyPanel");
    lv_genetron_energy_panel_ui = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeCountdownLabel, "UIContainer/FullscreenUpperContainer/GenetronEnergyPanel/EnergyCurrent");
    lv_genetron_energy_current_ui = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeCountdownLabel, "UIContainer/FullscreenUpperContainer/GenetronEnergyPanel/EnergyMax");
    lv_genetron_energy_max_ui = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeCountdownLabel, "UIContainer/FullscreenUpperContainer/GenetronEnergyPanel/EnergyLabel");
    lv_genetron_energy_label_ui = DialogControlLastCreated();
    auto19BA3B9C_g = PlayerGroupAll();
    auto19BA3B9C_var = -1;
    while (true) {
        auto19BA3B9C_var = PlayerGroupNextPlayer(auto19BA3B9C_g, auto19BA3B9C_var);
        if (auto19BA3B9C_var < 0) { break; }
        if ((PlayerType(auto19BA3B9C_var) == c_playerTypeUser)) {
            PlayerGroupAdd(lv_players, auto19BA3B9C_var);
        }

    }
    Wait(0.0625, c_timeGame);
    while (true) {
        auto7CC7ECD8_g = lv_players;
        auto7CC7ECD8_var = -1;
        while (true) {
            auto7CC7ECD8_var = PlayerGroupNextPlayer(auto7CC7ECD8_g, auto7CC7ECD8_var);
            if (auto7CC7ECD8_var < 0) { break; }
            if ((UnitGetPropertyFixed(lv_genetron_power_dummies[auto7CC7ECD8_var], c_unitPropEnergyMax, c_unitPropCurrent) > 0.0)) {
                libNtve_gf_SetDialogItemTooltip(lv_genetron_energy_label_ui, (StringExternal("Param/Value/lib_Scio_2601AD90") + (IntToText(TechTreeUnitCount(auto7CC7ECD8_var, "ProcessingCore", c_techCountCompleteOnly)) + ((StringExternal("Param/Value/lib_Scio_92248EAF") + (StringExternal("Param/Value/lib_Scio_F2A716C5") + IntToText(TechTreeUnitCount(auto7CC7ECD8_var, "Node", c_techCountCompleteOnly)))) + (StringExternal("Param/Value/lib_Scio_E691DBFF") + (StringExternal("Param/Value/lib_Scio_654828AB") + IntToText(TechTreeUnitCount(auto7CC7ECD8_var, "Generator", c_techCountCompleteOnly))))))), PlayerGroupAll());
                DialogControlSetVisible(lv_genetron_energy_panel_ui, PlayerGroupSingle(auto7CC7ECD8_var), true);
            }
            else {
                DialogControlSetVisible(lv_genetron_energy_panel_ui, PlayerGroupSingle(auto7CC7ECD8_var), false);
            }
        }
        for (autoAA32B496_i = 1; autoAA32B496_i <= autoAA32B496_n; autoAA32B496_i += 1) {
            autoE2D53D8D_g = lv_players;
            autoE2D53D8D_var = -1;
            while (true) {
                autoE2D53D8D_var = PlayerGroupNextPlayer(autoE2D53D8D_g, autoE2D53D8D_var);
                if (autoE2D53D8D_var < 0) { break; }
                libNtve_gf_SetDialogItemCurrentValue(lv_genetron_energy_max_ui, UnitGetPropertyFixed(lv_genetron_power_dummies[autoE2D53D8D_var], c_unitPropEnergyMax, c_unitPropCurrent), PlayerGroupSingle(autoE2D53D8D_var));
                libNtve_gf_SetDialogItemCurrentValue(lv_genetron_energy_current_ui, UnitGetPropertyFixed(lv_genetron_power_dummies[autoE2D53D8D_var], c_unitPropEnergy, c_unitPropCurrent), PlayerGroupSingle(autoE2D53D8D_var));
            }
            Wait(0.0625, c_timeGame);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libScio_gt_GenetronInterface_Init () {
    libScio_gt_GenetronInterface = TriggerCreate("libScio_gt_GenetronInterface_Func");
    TriggerAddEventGeneric(libScio_gt_GenetronInterface, "GAME START");
}

void libScio_InitTriggers () {
    libScio_gt_GenetronInterface_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libScio_InitLib_completed = false;

void libScio_InitLib () {
    if (libScio_InitLib_completed) {
        return;
    }

    libScio_InitLib_completed = true;

    libScio_InitLibraries();
    libScio_InitTriggers();
}

