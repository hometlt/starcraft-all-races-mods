include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: COOP
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCOMI_ge_UnitBuffMultiplierMethod_Exponential = 0;
const int libCOMI_ge_UnitBuffMultiplierMethod_Linear = 1;
const int libCOMI_ge_SleepWakeUpExcludeOption_Always = 0;
const int libCOMI_ge_SleepWakeUpExcludeOption_RespectExclusions = 1;
const int libCOMI_ge_CM_SoATargetingPhaseType_None = 0;
const int libCOMI_ge_CM_SoATargetingPhaseType_Location = 1;
const int libCOMI_ge_CM_SoATargetingPhaseType_Direction = 2;
const int libCOMI_ge_CC_CommanderVOLines_None = 0;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOResourcesSent = 1;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOResourcesRequested = 2;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOMineralsSent = 3;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOMineralsRequested = 4;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOVespeneSent = 5;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOVespeneRequested = 6;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOThankyou = 7;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOEnemyIsProtoss = 8;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOEnemyIsTerran = 9;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOEnemyIsZerg = 10;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOEnemyIsCloaked = 11;
const int libCOMI_ge_CC_CommanderVOLines_CC_CommanderVOArmyLost = 12;
const int libCOMI_ge_VolumeChannelModeCampaign_Cinematic = 0;
const int libCOMI_ge_VolumeChannelModeCampaign_Speech = 1;
const int libCOMI_ge_VolumeChannelModeCampaign_Game = 2;
const int libCOMI_ge_VolumeChannelModeCampaign_Victory = 3;
const int libCOMI_ge_VolumeChannelModeCampaign_Speech2 = 4;
const int libCOMI_ge_VolumeChannelModeCampaign_Speech3 = 5;
const int libCOMI_ge_VolumeChannelModeCampaign_SpeechAndMusicNoEffects = 6;
const int libCOMI_ge_VolumeChannelModeCampaign_LowHealthBegin = 7;
const int libCOMI_ge_VolumeChannelModeCampaign_LowHealthEnd = 8;
const int libCOMI_ge_VolumeChannelModeCampaign_Game2 = 9;
const int libCOMI_ge_VolumeChannelModeCampaign_Game3 = 10;
const int libCOMI_ge_VolumeChannelModeCampaign_MissionLaunchUI = 11;
const int libCOMI_ge_VolumeChannelModeCampaign_EvolutionUI = 12;
const int libCOMI_ge_MissionTransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libCOMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libCOMI_ge_MissionTransmissionPortraitOptioins_DontShowPortrait = 2;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_PlayCueSound = 1;
const int libCOMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libCOMI_ge_MissionTransmissionOptions_ChatBubble = 0;
const int libCOMI_ge_ObjectivePingType_Primary = 0;
const int libCOMI_ge_ObjectivePingType_Secondary = 1;
const int libCOMI_ge_ObjectivePingType_POI = 2;
const int libCOMI_ge_CacheResourceType_CustomResource = 0;
const int libCOMI_ge_CacheResourceType_Mineral = 1;
const int libCOMI_ge_CacheResourceType_Vespene = 2;

// Constants
const int libCOMI_gv_cCC_PLAYERPRESTIGEMAXRANK = 5;
const int libCOMI_gv_cCC_MASTERY_CATEGORIES = 3;
const int libCOMI_gv_cCC_MASTERY_UPGRADE_MAX_LEVEL = 30;
const int libCOMI_gv_cCC_MASTERY_MAX_LEVEL = 90;
const int libCOMI_gv_cCC_MASTERIES_PER_COMMANDER = 6;
const int libCOMI_gv_cMC_CoopAI_MaxNumUpgrades = 500;
const int libCOMI_gv_cCC_DISREGARDPLAYER = 1;
const int libCOMI_gv_cCC_MAXPLAYERS = 15;
const int libCOMI_gv_mAX_TEAM_PLAYERS = 8;
const int libCOMI_gv_mAX_TEAMS = 2;
const string libCOMI_gv_cM_CargoDeathNotifyEffect = "CoopCargoDeathDummy";
const string libCOMI_gv_cM_CargoDeathKillEffect = "CoopCargoDeathKill";
const int libCOMI_gv_mAX_HERO_UNITS = 36;
const fixed libCOMI_gv_cUC_HeroUpdateFrequency = 0.25;
const int libCOMI_gv_cUC_HEROUILIFEBARHEIGHT = 20;
const int libCOMI_gv_cUC_HEROUISHIELDBARHEIGHT = 8;
const int libCOMI_gv_cUC_HEROUIENERGYBARHEIGHT = 8;
const int libCOMI_gv_cUC_HEROUIBARWIDTH = 200;
const int libCOMI_gv_oBSOLETE_CUC_HeroMaxCount = 2;
const fixed libCOMI_gv_cURRENT_VERSION = 0.0711;
const int libCOMI_gv_mAX_FACTIONS = 56;
const string libCOMI_gv_cUC_CommChoiceEventClosed = "CU_CommChoiceEventClosed";
const int libCOMI_gv_mAX_COMMANDERCOUNT = 56;
const int libCOMI_gv_mAX_PLAYERLEVEL = 15;
const int libCOMI_gv_vU_MAXMUTATORSSELECTED = 24;
const int libCOMI_gv_vU_MAXMAPOPTIONS = 10;
const int libCOMI_gv_cUC_ABILITIESMAXCOUNT = 8;
const int libCOMI_gv_cUC_UNITSMAXCOUNT = 24;
const int libCOMI_gv_cMC_SOATARGETCOUNTMAX = 5;
const string libCOMI_gv_cUC_TargetingEventCancel = "PU_TargetingEventCancel";
const string libCOMI_gv_cUC_TargetingParamPlayer = "PU_TargetingParamPlayer";
const int libCOMI_gv_cMC_CoopAI_MaxPingCount = 25;
const fixed libCOMI_gv_cM_CoopAI_PingCombineDist = 20.0;
const int libCOMI_gv_cC_BankVersion = 8;
const string libCOMI_gv_mISSIONPREPARED = "INIT_COOP_MISSION_STAGE1";
const string libCOMI_gv_mISSIONINITIALIZED = "INIT_COOP_MISSION_STAGE2";
const string libCOMI_gv_mISSIONREADY = "INIT_COOP_MISSION_STAGE3";
const string libCOMI_gv_COOP_MISSION_STARTED_EVENT = "Coop Mission Started";
const string libCOMI_gv_COOP_MISSION_STARTED_EVENT2 = "Coop Mission Ended";
const string libCOMI_gv_pMC_SoundDataTableIdentifier = "CM_SoundDataTable_";
const fixed libCOMI_gv_campaignObjectiveDelay = 2.0;
const fixed libCOMI_gv_campaignSecretDelay = 5.0;
const fixed libCOMI_gv_campaignAchievementDelay = 2.0;
const fixed libCOMI_gv_campaignVictoryDelay = 1.0;
const int libCOMI_gv_uT_Bank_MaxPlayers = 15;
const string libCOMI_gv_uT_Bank_DefaultBankName = "MS";
const string libCOMI_gv_uT_Bank_RefillSectionName = "RefillSec";

// Structures
struct libCOMI_gs_CM_CoopAI_CachedUpgradeRecord {
    bool lv_initialized;
    int lv_cachedDifficulty;
    int lv_numUpgrades;
    string[libCOMI_gv_cMC_CoopAI_MaxNumUpgrades + 1] lv_upgrade;
    fixed[libCOMI_gv_cMC_CoopAI_MaxNumUpgrades + 1] lv_time;
};

struct libCOMI_gs_HeroUnitData {
    unit lv_heroUnit;
    unit lv_reviverUnit;
    fixed lv_reviveTimer;
    string lv_userData;
    point lv_reviveTargetLocation;
    int lv_deathCount;
};

struct libCOMI_gs_CommanderOption {
    int lv_button;
    int lv_portrait;
    int lv_title;
    int lv_selection;
    int lv_lock;
    int lv_ready;
};

struct libCOMI_gs_UnitIcon {
    int lv_button;
    int lv_icon;
    int lv_title;
    int lv_description;
};

// Variable Declarations
trigger libCOMI_gv_cM_CampaignMissionStartTrigger;
int libCOMI_gv_gameMode;
bool libCOMI_gv_gameHasBegun;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cCX_PlayerPrestigeIndex;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cCX_PlayerMasteryLevel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1][libCOMI_gv_mAX_COMMANDERCOUNT + 1][libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cCX_PlayerMasteryPointsSpent;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cC_PlayerMasteryEnabled;
libCOMI_gs_CM_CoopAI_CachedUpgradeRecord[2] libCOMI_gv_cM_CoopAI_CachedUpgradeData;
timer libCOMI_gv_cM_CombatTimer;
playergroup libCOMI_gv_cC_NondefeatedPlayerGroup;
int[libCOMI_gv_cCC_MAXPLAYERS + 1][libCOMI_gv_mAX_COMMANDERCOUNT + 1] libCOMI_gv_cC_PlayerLevel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1][libCOMI_gv_mAX_COMMANDERCOUNT + 1] libCOMI_gv_cCX_PlayerExperience;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cCX_PlayerCommander;
int libCOMI_gv_maxAlliesPlayersOnMap;
int libCOMI_gv_maxAmonPlayersOnMap;
int libCOMI_gv_totalPlayersOnMap;
playergroup libCOMI_gv_vU_Enemies;
playergroup libCOMI_gv_vU_Allies;
playergroup libCOMI_gv_vU_EnemyPlayers;
playergroup libCOMI_gv_vU_EnemyAI;
playergroup libCOMI_gv_vU_AlliedCommanders;
playergroup libCOMI_gv_vU_HumanPlayers;
playergroup libCOMI_gv_vU_SlotsPlayers;
playergroup libCOMI_gv_vU_SlotsEnemy;
playergroup libCOMI_gv_vU_AllyNPC;
playergroup libCOMI_gv_vU_BonusNPC;
playergroup libCOMI_gv_vU_EnemyNPC;
playergroup libCOMI_gv_vU_NeutralNPC;
playergroup libCOMI_gv_vU_HostileNPC;
playergroup libCOMI_gv_all;
int libCOMI_gv_vU_PLAYER_NEUTRAL;
int libCOMI_gv_vU_PLAYER_HOSTILE;
point[16] libCOMI_gv_playerStartPoint;
int libCOMI_gv_observer;
playergroup libCOMI_gv_observerGroup;
playergroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SharedVisionPlayers;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_playerColor;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_VisionShareUnits;
bool libCOMI_gv_cM_VisionShareEnabled;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_PrimaryTownHall;
unitgroup libCOMI_gv_heroUnits;
libCOMI_gs_HeroUnitData[libCOMI_gv_mAX_HERO_UNITS + 1] libCOMI_gv_heroUnitsData;
fixed libCOMI_gv_cU_HeroCooldownTime;
unit[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_HeroUnit;
string[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_HeroIcon;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_HeroPositionX;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_HeroPositionY;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1][libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroExists;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroPanel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogBorderImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogBorderImageNoEnergy;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogBorderImageAll;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogIconImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogCooldownImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogDamageTakenImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogDamageTakenLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogNameLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogLevelLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogHealthBarImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogHealthBarBackground;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogShieldBarImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogShieldBarBackground;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogEnergyBarImage;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogEnergyBarBackground;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogHealthLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogEnergyLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogShieldLabel;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogButton;
int[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1] libCOMI_gv_cU_HeroDialogLevelBox;
fixed[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_VoidHeroUIDamageTimer;
bool[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_VoidHeroUIRevivable;
int libCOMI_gv_cU_HeroAutomaticIndex;
unit libCOMI_gv_diedHeroUnit;
fixed[libCOMI_gv_oBSOLETE_CUC_HeroMaxCount + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_oBSOLETE_CU_HeroReviveTimer;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_oBSOLETE_CM_HeroUnit;
unit[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_yY_GPCasterUnit;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_yY_GPCasterGroup;
int[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdButtonBackgroundImage;
int[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdButtonActiveImage;
int[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdButtonArrows;
int[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdButtons;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCutscene;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdPanel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCmdPanelUnitStatus;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPVisible;
int libCOMI_gv_cU_GPPanelHolder;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPPanel;
bool[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPButtonHighlighted;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPInitialized;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPCutsceneFilter;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GlobalCast2D;
int[5][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPUnitEnergyLinks;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyLabel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyGlassScene;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyBarScene;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyTooltip;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyBar;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPEnergyHighlighting;
fixed[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_GPLastEnergyUpdate;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_GPRemindersOn;
int[5][3] libCOMI_gv_topbarButton;
int libCOMI_gv__FadeDialog;
int libCOMI_gv__FadeImage;
text libCOMI_gv_wEBSITE;
bool libCOMI_gv_nEWCOMER;
int libCOMI_gv_enemyFactionsCount;
int libCOMI_gv_enemyPersonalitiesCount;
int libCOMI_gv_vU_CommanderEnemyFactionPulldown;
string[libCOMI_gv_mAX_FACTIONS + 1] libCOMI_gv_vU_EnemyFactionsList;
int libCOMI_gv_amonFactionsDialog;
int libCOMI_gv_totalFactions;
int[libCOMI_gv_mAX_FACTIONS + 1] libCOMI_gv_raceButton;
string[libCOMI_gv_mAX_FACTIONS + 1] libCOMI_gv_raceFaction;
int libCOMI_gv_aF_CS_PatchDialog;
text libCOMI_gv_aF_CS_News;
int libCOMI_gv_aF_CS_NewsDialog;
int libCOMI_gv_aF_CS_NewsControlButton;
bool libCOMI_gv_aF_CS_NewsControlButtonClicked;
int libCOMI_gv_aF_CS_NewsDialogPanel;
int libCOMI_gv_cC_WorldCoverDlg;
int[2] libCOMI_gv_aF_CS_CutsceneDialog;
int libCOMI_gv_aF_CS_CommanderMiraDialog;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_aF_CS_CommanderCutscenes;
int libCOMI_gv_uT_CommandsButton;
int libCOMI_gv_playAmonButton;
int libCOMI_gv_playRandomButton;
int libCOMI_gv_amonPlayersCount;
int[9] libCOMI_gv_amonPlayers;
int libCOMI_gv_randomPlayersCount;
int[9] libCOMI_gv_randomPlayers;
int[16] libCOMI_gv_chosenTeam;
libCOMI_gs_CommanderOption[libCOMI_gv_mAX_COMMANDERCOUNT + 1] libCOMI_gv_commanderOption;
libCOMI_gs_CommanderOption[9] libCOMI_gv_amonOption;
libCOMI_gs_CommanderOption[9] libCOMI_gv_randomOption;
int libCOMI_gv_cU_CommanderSelectionPanel;
string[libCOMI_gv_mAX_COMMANDERCOUNT + 1] libCOMI_gv_cU_CommanderList;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cutsceneLastActiveCommander;
int libCOMI_gv_uT_PrestigeIndex;
int libCOMI_gv_uT_AllyMasteryButton;
int libCOMI_gv_vU_DetailsContainer;
int libCOMI_gv_vU_DetailsTabControl;
int libCOMI_gv_vU_DetailsTabInfoButton;
int libCOMI_gv_vU_DetailsTabUnitsButton;
int libCOMI_gv_vU_DetailsTabResearchButton;
int libCOMI_gv_vU_DetailsBackground;
int libCOMI_gv_vU_DetailsInfoContainer;
int libCOMI_gv_vU_DetailsUnitsContainer;
int libCOMI_gv_vU_DetailsResearchContainer;
int libCOMI_gv_cU_CommanderDialog;
int libCOMI_gv_cU_CommanderPanel;
int libCOMI_gv_cU_CommanderReadyButton;
int libCOMI_gv_cU_CommanderReadyCheckMark;
int libCOMI_gv_cU_CommanderReadyLabelSelf;
int libCOMI_gv_cU_CommanderSelect_RefCount;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_CommanderSelect_PlayerReady;
int libCOMI_gv_cU_CommanderInfoPanel;
int libCOMI_gv_cU_CommanderSelectedNameSelf;
int libCOMI_gv_cU_CommanderAccountNameSelf;
int libCOMI_gv_cU_CommanderSelectedPrestigeSelf;
int libCOMI_gv_cU_CommanderLevelLabelSelf;
int libCOMI_gv_cU_CommanderMasteryLabelSelf;
libCOMI_gs_UnitIcon[libCOMI_gv_cUC_UNITSMAXCOUNT + 1] libCOMI_gv_cU_CommanderAbilitiesButtons;
libCOMI_gs_UnitIcon[libCOMI_gv_cUC_UNITSMAXCOUNT + 1] libCOMI_gv_cU_CommanderUnitsButtons;
libCOMI_gs_UnitIcon[libCOMI_gv_cUC_UNITSMAXCOUNT + 1] libCOMI_gv_cU_CommanderUpgradesButtons;
int libCOMI_gv_cU_CommanderLevelUpButton;
int libCOMI_gv_cU_CommanderLevelDownButton;
int libCOMI_gv_cU_CommanderPanelUpgrade;
int libCOMI_gv_cU_CommanderMasteryButton;
int libCOMI_gv_cU_CommanderMasteryCheckbox;
libCOMI_gs_UnitIcon[libCOMI_gv_cCC_PLAYERPRESTIGEMAXRANK + 1] libCOMI_gv_cU_CommanderPrestigesButtons;
int libCOMI_gv_aF_CS_AllyPrestigeButton;
int libCOMI_gv_cU_MasteryDialog;
int libCOMI_gv_cU_MasteryPanel;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryItemPanels;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryNameLabels;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryPointLabels;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryValueLabels;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryPlusButtons;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOMI_gv_cU_MasteryMinusButtons;
int[libCOMI_gv_cCC_MASTERY_CATEGORIES + 1] libCOMI_gv_cU_MasteryCategoryPoints;
int libCOMI_gv_cU_MasteryAcceptButton;
int libCOMI_gv_cU_MasteryResetButton;
int libCOMI_gv_cU_MasteryLevelUpButton;
int libCOMI_gv_cU_MasteryLevelDownButton;
int libCOMI_gv_cU_MasteryLevelLabel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_MasteryLevelCurrent;
int[libCOMI_gv_cCC_MASTERY_CATEGORIES + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_MasteryCategoryPointsLeft;
int[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_MasteryUpgradePointsSpent;
string[libCOMI_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_MasteryUpgrades;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_MasteryShiftPressed;
int libCOMI_gv_cU_MasteryRefCount;
int libCOMI_gv_vU_GameModePulldown;
int libCOMI_gv_vU_CommanderDifficultyPulldown;
int libCOMI_gv_vU_CommanderPanelSettings;
int libCOMI_gv_cU_CommanderMutatorButton;
int libCOMI_gv_cU_CommanderMutatorCountLabel;
int libCOMI_gv_cU_CommanderMutatorChallengePulldown;
string[51] libCOMI_gv_cU_CommanderMutatorChallengeList;
int libCOMI_gv_cU_ArmyButton;
int libCOMI_gv_cU_ArmyButtonTipPanel;
bool libCOMI_gv_cU_ArmyButtonTipReady;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_targetingTemplate;
int libCOMI_gv_targetingPlayer;
bool libCOMI_gv_cM_SoAExitInstantly;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingChargesSpent;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingChargesTotal;
int libCOMI_gv_cM_SoATargetingUsageCount;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingPhase;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingTransitioning;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnrefundableStageEntered;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingAlreadyCanceled;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingModel;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnitType;
unit[libCOMI_gv_cMC_SOATARGETCOUNTMAX + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingUnit;
actor[libCOMI_gv_cMC_SOATARGETCOUNTMAX + 1][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingActors;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingBehavior;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingActivateAbility;
abilcmd[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingExecuteCommand;
text[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingInstructionsPrimary;
text[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingInstructionsSecondary;
string[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingCooldown;
order[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingOrder;
unitgroup[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingDirectionGroup;
bool[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_SoATargetingCycling;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingCurrentCharges;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingOverlayDialog;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingOverlayPortrait;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingAbilityDialog;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingPanel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingCancelButton;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingChargesPanel;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingInstructionsLabel;
int[6][libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cU_TargetingChargeSinglePanel;
string libCOMI_gv_defferedTransmissionLink;
fixed libCOMI_gv_defferedTransmissionDelay;
fixed libCOMI_gv_defferedTransmissionDefer;
int libCOMI_gv_defferedTask;
int libCOMI_gv_cM_VOGroupGender;
bool libCOMI_gv_cC_VolumeChannelModeInSpeech;
bool libCOMI_gv_cC_VolumeChannelModeInLowHP;
bool libCOMI_gv_cM_HeroReviveQueue_ActiveListeners;
int libCOMI_gv_cM_VOResourceReqSendButton;
string libCOMI_gv_cM_TransmissionCurrentType;
int libCOMI_gv_cM_TransmissionSource;
int libCOMI_gv_cM_TransmissionCount;
playergroup libCOMI_gv_cM_TransmissionPrimaryPlayers;
playergroup libCOMI_gv_cM_TransmissionSecondaryPlayers;
int libCOMI_gv_cM_SendTransmissionCampaignIndex;
int libCOMI_gv_cM_SendTransmissionCampaignPortrait;
unit libCOMI_gv_cM_SendTransmissionCampaignSpeaker;
trigger libCOMI_gv_cM_SendTransmissionCampaignTrigger;
int libCOMI_gv_cM_SendTransmissionCampaignPlayingTick;
bool libCOMI_gv_cM_SendTransmissionCampaignChatBubbleOn;
bool libCOMI_gv_cM_CoopAI_WavePingShowAll;
bool[2][2] libCOMI_gv_cM_CoopAI_WaveShowPing;
bool[2][2] libCOMI_gv_cM_CoopAI_DontPingWaves;
unitgroup libCOMI_gv_cM_CoopAI_DontPingUnits;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_APlayer;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_AWave;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_BPlayer;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_CombinedPing_BWave;
unitgroup[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_PingGroups;
int[libCOMI_gv_cMC_CoopAI_MaxPingCount + 1] libCOMI_gv_cM_CoopAI_PingGroupPing;
playergroup libCOMI_gv_cM_CoopAI_DontPingPlayers;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cCX_PlayerBankVersion;
string libCOMI_gv_cC_CoopBankName;
bank[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cC_CoopBank;
string libCOMI_gv_cC_CurrentMap;
bool libCOMI_gv_cM_InCinematic;
int[libCOMI_gv_cCC_MAXPLAYERS + 1] libCOMI_gv_cM_ScreenMode;
int libCOMI_gv_cM_SoundDataTableIndex;
int libCOMI_gv_selectedDifficulty;
bool libCOMI_gv_cC_TimeMissionPaused;
bool libCOMI_gv_cC_TimeAIPaused;
int libCOMI_gv_cM_CybCoreTextTag;
bool libCOMI_gv_pCX_UpgradesTaught;
unit libCOMI_gv_teachingUnit;
int libCOMI_gv_cM_MissionAutoSaveIndex;
bool libCOMI_gv_cM_MissionAutoSaveDone;
unitgroup libCOMI_gv_uT_Horde_UG_Wave;
unitgroup libCOMI_gv_uT_Horde_UG;
fixed libCOMI_gv_uT_Horde_Chance;
int libCOMI_gv_horde_Owner_Player;
int libCOMI_gv_horde_Target_Player;
int libCOMI_gv_uT_encompsDialogs;
int[7] libCOMI_gv_uT_MasteryBoxes;
int[7] libCOMI_gv_uT_MasteryLabels;
int libCOMI_gv_uT_MasteryButton;
int libCOMI_gv_uT_MasteryDialog;
int libCOMI_gv_uT_MasteryTargetPlayer;
unitgroup libCOMI_gv_uT_LastAttackWave;
string[101] libCOMI_gv_uT_GL_ScoresUsed;
bool libCOMI_gv_showAIDebugging;
bool libCOMI_gv_cU_DebugMovieCaptureMode;
bool libCOMI_gv_cM_DebugAITargetSpawners;
unitfilter libCOMI_gv_uT_Bank_UnitFilter;

// Function Declarations
void libCOMI_gf_LoadCoopMission (string lp_map, trigger lp_startTrigger);
void libCOMI_gf_ApplyMissionTime ();
void libCOMI_gf_AllowToBuildOnCreep (int lp_player, bool lp_allow);
bool libCOMI_gf_TechUnitAvailable (int lp_player, string lp_unit);
void libCOMI_gf_CC_ApplyTechNew (int lp_player, int lp_player2, string lp_commander, string lp_prestige);
void libCOMI_gf_CC_PlayerResponseEnable (int lp_player, string lp_response, bool lp_enforceMinLvl);
string libCOMI_gf_CC_CommanderPrestigeIndexFace (string lp_commander, int lp_index);
int libCOMI_gf_CC_PlayerActivePrestigeIndex (int lp_player);
string libCOMI_gf_CC_PlayerActivePrestigeInstance (int lp_player);
string libCOMI_gf_CC_PrestigeCommanderTableKey (string lp_commander, int lp_player);
void libCOMI_gf_CC_SetPlayerPrestigeIndex (int lp_player, int lp_index);
int libCOMI_gf_CC_PlayerMasteryLevel (int lp_player);
int libCOMI_gf_CC_PlayerMasteryCategory (string lp_masteryUpgrade);
int libCOMI_gf_CC_PlayerMasteryCategoryPointsAtLevel (int lp_player, int lp_categoryIndex, int lp_level);
int libCOMI_gf_CC_PlayerMasteryCategoryPointsSpent (int lp_player, int lp_categoryIndex);
int libCOMI_gf_CC_PlayerMasteryCategoryPointsAvailable (int lp_player, int lp_categoryIndex);
int libCOMI_gf_CC_PlayerMasteryUpgradeLevel (int lp_player, string lp_masteryUpgrade);
string libCOMI_gf_CC_PlayerMasteryCommander (string lp_masteryUpgrade);
string libCOMI_gf_CC_PlayerMasteryUpgradeData (string lp_masteryUpgrade);
string libCOMI_gf_CC_PlayerMasteryTalent (string lp_masteryUpgrade);
int libCOMI_gf_CC_PlayerMasteryInternalIndex (string lp_masteryUpgrade);
text libCOMI_gf_CC_PlayerMasteryName (string lp_masteryUpgrade);
text libCOMI_gf_CC_PlayerMasteryTooltip (string lp_masteryUpgrade);
text libCOMI_gf_CC_PlayerMasteryValueFormat (string lp_masteryUpgrade);
fixed libCOMI_gf_CC_PlayerMasteryValueIncrement (string lp_masteryUpgrade, int lp_index);
bool libCOMI_gf_CC_PlayerMasteryEnabled (int lp_player);
void libCOMI_gf_CC_PlayerMasteryUpgradeLevelSet (int lp_player, string lp_masteryUpgrade, int lp_level);
void libCOMI_gf_CC_PlayerMasteryLevelSet (int lp_player, int lp_level);
void libCOMI_gf_CC_PlayerMasteryEnabledSet (int lp_player, bool lp_enabled);
void libCOMI_gf_CC_ApplyMasteryTech (int lp_player);
void libCOMI_gf_CC_SharedUpgradesEnable ();
void libCOMI_gf_CC_SharedUpgradesCheckAndApply (string lp_checkUpgrade);
void libCOMI_gf_CC_ApplyUpgradeSupplemental (int lp_player, string lp_upgradeSupplemental);
void libCOMI_gf_CM_CoopAI_CacheUpgradeData (int lp_player, int lp_difficulty);
void libCOMI_gf_CM_CoopAI_Upgrades (int lp_player);
void libCOMI_gf_CM_MasteryResearchCostReduction (int lp_player, string lp_masteryUpgrade, fixed lp_percentReductionPerPoint);
void libCOMI_gf_PlayersandAllienceSettings ();
void libCOMI_gf_ShareVisionAmongPlayers (playergroup lp_players);
void libCOMI_gf_SetAllianceCoop (int lp_sourcePlayer, int lp_targetPlayer, int lp_alliance);
void libCOMI_gf_SetAllianceOneWayCoop (int lp_sourcePlayer, int lp_targetPlayer, int lp_alliance);
void libCOMI_gf_SetAllianceAspectCoop (int lp_inSourcePlayer, int lp_inAllianceId, int lp_inTargetPlayer, bool lp_ally);
void libCOMI_gf_SetPlayerGroupAlliance (playergroup lp_players, int lp_alliance);
void libCOMI_gf_CM_RestorePlayerVision ();
void libCOMI_gf_SetPlayerColors ();
int libCOMI_gf_EnemyPlayerColor ();
int libCOMI_gf_AllyPlayerColor ();
int libCOMI_gf_CC_CommanderLevel (int lp_player, string lp_commander);
string libCOMI_gf_CC_PlayerLevelCommander (string lp_playerLevel);
int libCOMI_gf_CC_PlayerLevelValue (string lp_playerLevel);
int libCOMI_gf_CC_PlayerExperience (int lp_player, string lp_commander);
fixed libCOMI_gf_CC_PlayerExperienceResultModifier (int lp_result);
fixed libCOMI_gf_CC_PlayerExperienceInLevelPct (int lp_player, string lp_commander);
int libCOMI_gf_CC_PlayerExperienceToNextLevel (int lp_player, string lp_commander);
int libCOMI_gf_CC_PlayerLevelExperienceNeededDelta (int lp_level);
int libCOMI_gf_CC_PlayerLevelExperienceNeededTotal (int lp_level);
int libCOMI_gf_CC_PlayerLevelFromExperience (int lp_experience);
void libCOMI_gf_CC_PlayerAwardMissionXP (int lp_result, int lp_player);
void libCOMI_gf_CC_PlayerSetXPScores (int lp_result, int lp_player);
void libCOMI_gf_CC_PlayerExperienceSet (int lp_player, int lp_experience, string lp_commander);
void libCOMI_gf_CC_PlayerCommanderSet (int lp_player, string lp_commander);
void libCOMI_gf_CC_UpdatePlayerLevel (int lp_player);
void libCOMI_gf_CC_PlayerLevelSet (int lp_player, int lp_level, string lp_commander);
void libCOMI_gf_CC_PlayerExperienceAdd (int lp_player, int lp_experience);
void libCOMI_gf_CC_PlayerExperienceSetToLevel (int lp_player, int lp_level, string lp_commander);
void libCOMI_gf_CC_ResetCurrency (int lp_player);
playergroup libCOMI_gf_CC_PlayersOfCommander (string lp_commander);
playergroup libCOMI_gf_GetAlliedCommandersPlayers ();
int libCOMI_gf_GetRolePlayer (int lp_slot);
playergroup libCOMI_gf_GetAlliedCommandersPlayersCopy ();
playergroup libCOMI_gf_HumanPlayers ();
int libCOMI_gf_CC_PlayerAlly (int lp_player);
int libCOMI_gf_CC_PlayerAllyNew (int lp_player);
int libCOMI_gf_CC_PlayerAllyNew2 (int lp_player);
playergroup libCOMI_gf_MutualAlliedCommandersofPlayerCoutInactiveAndSelf (int lp_player);
bool libCOMI_gf_PlayerIsCommander (int lp_player);
string libCOMI_gf_ActiveCommanderForPlayer (int lp_player);
string libCOMI_gf_GetPlayerCommanderGameLink (int lp_player);
string libCOMI_gf_GetCommanderRace (string lp_commander);
string libCOMI_gf_GetPlayerRaceVO (int lp_player);
playergroup libCOMI_gf_GetEnemyPlayers ();
playergroup libCOMI_gf_GetAlliesPlayers ();
playergroup libCOMI_gf_GetEnemyHumanPlayers ();
playergroup libCOMI_gf_GetEnemyAIPlayers ();
void libCOMI_gf_AddAlliedCommanderPlayer (int lp_player);
playergroup libCOMI_gf_GetHumanPlayers ();
void libCOMI_gf_RegisterPlayers ();
int libCOMI_gf_GetAlliedPlayer (int lp_slot);
playergroup libCOMI_gf_GetNonDefeatedPlayers ();
void libCOMI_gf_CC_InitNonDefeatedPlayers ();
void libCOMI_gf_SetPlayerDefeated (int lp_player);
void libCOMI_gf_TurnPlayerFlagOnOffForGroup (playergroup lp_players, int lp_playerFlag, bool lp_onOff);
playergroup libCOMI_gf_GetTeammates (int lp_player);
playergroup libCOMI_gf_PlayersOfCommander (string lp_commander);
playergroup libCOMI_gf_PlayersOfCommanderInaTeam (string lp_commander, int lp_team);
int libCOMI_gf_GetNearestCommanderPlayerInATeam (string lp_commander, int lp_player, point lp_point);
bool libCOMI_gf_PlayerIsInCombat (int lp_player);
void libCOMI_gf_ShareVisionofUnitCoop (unit lp_unit, bool lp_shareUnshare, int lp_player);
void libCOMI_gf_ShareVisionofUnitWithHumansCoop (unit lp_unit, bool lp_shareUnshare);
void libCOMI_gf_CM_VisionShareEnable (bool lp_enable);
void libCOMI_gf_InheritDmgandAttackSpeedFromParenttoChild (unit lp_parent, unit lp_child);
bool libCOMI_gf_CC_UnitTypeIsTownHall (string lp_unitType);
unitgroup libCOMI_gf_CC_TownHallsForPlayer (int lp_player);
unit libCOMI_gf_CM_PrimaryTownHall (int lp_player);
void libCOMI_gf_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
void libCOMI_gf_CreateStartingUnitsForPlayer (int lp_player, point lp_location);
string libCOMI_gf_UnitUserData (string lp_unit);
bool libCOMI_gf_UnitMoverExists (string lp_unitType, string lp_mover);
string libCOMI_gf_TraingingUnitTypeInAbilCommand (abilcmd lp_abilityCommand, int lp_p, int lp_unitIndex);
bool libCOMI_gf_HeroCanSpendSkillPoint (unit lp_hero, string lp_learnAbility);
void libCOMI_gf_SetUnitBuffMultiplier (unit lp_unit, fixed lp_multiplierAmount, string lp_behavior, fixed lp_baseValue, int lp_method);
void libCOMI_gf_SetUnitAttributePoints (string lp_attribute, unit lp_unit, int lp_points);
void libCOMI_gf_PlayerApplySkinSignal (int lp_player, string lp_skin, bool lp_activateDeactivate, string lp_extraMessage);
void libCOMI_gf_ButtonReplacement (int lp_player, string lp_button, string lp_buttonReplacement);
unitgroup libCOMI_gf_ConjoinedTrainsofTrainCar (unit lp_trainCar);
void libCOMI_gf_SynchronizeConjoinedTrainHealth (unitgroup lp_trainCars, fixed lp_maxHealth);
void libCOMI_gf_FindandAttackNearestEnemy (unit lp_attacker, fixed lp_searchRadius, fixed lp_satisfiedPathingDistance, fixed lp_thinkPeriod, unitfilter lp_targetFilter, unitfilter lp_fallbackTargetFilter);
void libCOMI_gf_InitializePathDisplay (int lp_path);
void libCOMI_gf_SleepWakeUpUnitCoop (unit lp_unit, bool lp_sleepWakeUp, int lp_alwaysExclusions);
void libCOMI_gf_SetHeroPanelUnit (int lp_index, unit lp_heroUnit, int lp_player);
void libCOMI_gf_SetHeroPanelUnitOverride (int lp_index, unit lp_heroUnit, int lp_player);
void libCOMI_gf_CU_ShowHideHeroPanel (bool lp_showHide, int lp_index);
void libCOMI_gf_CU_CreateHeroPanel (int lp_index);
void libCOMI_gf_CU_UpdateHeroPanel (int lp_index, int lp_player);
void libCOMI_gf_CreateHeroes ();
void libCOMI_gf_HeroHandleDeath (unit lp_heroUnit);
unit libCOMI_gf_OBSOLETE_AF_GetHeroUnit (int lp_pPlayer);
unit libCOMI_gf_GetHeroUnitBad (int lp_player, string lp_unit);
unit libCOMI_gf_GetHeroUnit (int lp_player, string lp_hero);
int libCOMI_gf_GetHeroUnitIndex (unit lp_unit);
string libCOMI_gf_GetHeroUserDataInstance (unit lp_unit);
unit libCOMI_gf_GetHeroReviverUnit (unit lp_unit);
string libCOMI_gf_GetHeroReviveLink (unit lp_unit);
string libCOMI_gf_GetHeroUserDataInstanceByUnitType (string lp_unit);
abilcmd libCOMI_gf_HeroReviveAbilityCommand (string lp_heroUnit);
string libCOMI_gf_HeroUnitType (string lp_heroUnit);
string libCOMI_gf_HeroUnitSpawner (string lp_heroUnit);
string libCOMI_gf_HeroUnitReviver (string lp_heroUnit);
string libCOMI_gf_HeroReviveLink (string lp_heroUnit);
string libCOMI_gf_HeroFirstReviveBehavior (string lp_heroUnit);
string libCOMI_gf_HeroNormalReviveBehavior (string lp_heroUnit);
void libCOMI_gf_CreateACStructure (int lp_player, string lp_heroUnit);
void libCOMI_gf_CreateACCaster (int lp_player, string lp_heroUnit);
unit libCOMI_gf_CM_PlayerGetGlobalCaster2 (int lp_player);
void libCOMI_gf_CU_GPShowHide (bool lp_showHide, int lp_player, fixed lp_duration);
void libCOMI_gf_CU_GPVisibilityAutoUpdate (bool lp_showHide, int lp_player, fixed lp_duration);
void libCOMI_gf_CU_GPVisibilitySet (bool lp_showHide, int lp_player, fixed lp_duration);
abilcmd libCOMI_gf_CU_GPActiveAbilityCommand (int lp_slot, int lp_player);
void libCOMI_gf_CU_GPHighlightButton (int lp_slot, bool lp_on, int lp_player);
void libCOMI_gf_CU_GPInitCommonCaster (int lp_player, string lp_heroUnit, string lp_holderTemplate, string lp_template, int lp_buttons, string lp_cutscene, string lp_cutsceneFilter);
void libCOMI_gf_LinkUnitEnergyToGlobalCasterButton (unit lp_unit, int lp_player, int lp_index);
void libCOMI_gf_CU_GPInitEnergyCaster (int lp_player, string lp_heroUnit);
void libCOMI_gf_CU_GPCheckForEnergyHighlight (int lp_player);
void libCOMI_gf_CU_GPEnergyHighlight (bool lp_enable, int lp_player);
void libCOMI_gf_CU_GPSoAUpdateVitals (int lp_player);
void libCOMI_gf_CM_GPReminderDisable (int lp_player);
string libCOMI_gf_GetCasterDataForUnit (string lp_caster);
void libCOMI_gf_TopBarNotificationsInitialization (int lp_player);
int libCOMI_gf_GetClickedTopBarButtonIndex (int lp_button, int lp_player);
text libCOMI_gf_TooltipTextofButton (int lp_player, string lp_button);
void libCOMI_gf_CinematicFade (bool lp_fadeIn, fixed lp_duration, color lp_color, bool lp_waitUntilDone);
void libCOMI_gf_CinematicFade3 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libCOMI_gf_CinematicFade4 (bool lp_fadeIn, fixed lp_duration, color lp_color);
void libCOMI_gf__FadeCreateDialog ();
void libCOMI_gf_VU_UpdateEnemyFactionsList ();
void libCOMI_gf_VU_SetEnemyFaction (string lp_faction);
void libCOMI_gf_CreateFactionsDialog ();
void libCOMI_gf_CreateGameBriefingRoom ();
void libCOMI_gf_CreateCommandersList ();
void libCOMI_gf_AF_CS_NewsCreate ();
void libCOMI_gf_ShowHideWorldCover (bool lp_showHide, fixed lp_transparency, int lp_player);
void libCOMI_gf_AF_CS_CommanderCutscenes ();
void libCOMI_gf_AF_CS_MiraDialogCreate ();
void libCOMI_gf_SetFreeCommander (int lp_player, string lp_commander);
playergroup libCOMI_gf_GetPlayingPlayers ();
void libCOMI_gf_UpdateCommandersList ();
void libCOMI_gf_CU_CommanderSelect (int lp_player, string lp_chosenCommander);
void libCOMI_gf_UpdatePlayerCommander (int lp_player);
void libCOMI_gf_PreparingMapProgress (text lp_text);
void libCOMI_gf_CU_CommanderClosed (trigger t);
void libCOMI_gf_CU_CommanderPlayerReadySet (int lp_player, bool lp_ready);
void libCOMI_gf_VU_Ready ();
void libCOMI_gf_UT_ChangeAllyPrestige ();
string libCOMI_gf_CC_CommanderPrestigeIndexFace3 (string lp_commander, int lp_index);
text libCOMI_gf_CC_CommanderPrestigeIndexFace2 (string lp_commander, int lp_index);
void libCOMI_gf_CU_PrestigeUpdate2 (int lp_player);
void libCOMI_gf_CU_PrestigeUpdate3 (int lp_player);
string libCOMI_gf_RandomCommander ();
void libCOMI_gf_CU_MasteryDisplay (int lp_player);
void libCOMI_gf_CU_MasteryCreate ();
void libCOMI_gf_CU_MasteryUpdateData (int lp_player);
void libCOMI_gf_CU_MasteryInitFromData (int lp_player);
void libCOMI_gf_CU_MasteryClose (int lp_player);
void libCOMI_gf_CU_MasteryUpdate (int lp_player);
void libCOMI_gf_CU_MasteryUpdatePoints (int lp_player);
void libCOMI_gf_CU_CommanderUpdatePrestigeLabels (int lp_player);
text libCOMI_gf_GetPlayerPrestigeName (int lp_player);
void libCOMI_gf_CU_PrestigeUpdate (int lp_player);
void libCOMI_gf_CU_PrestigeSelect (int lp_player, int lp_index);
string libCOMI_gf_CC_CommanderPrestigeIndexFace5 (string lp_commander, int lp_index);
string libCOMI_gf_CC_CommanderPrestigeIndexFace4 (string lp_commander, int lp_index);
void libCOMI_gf_SetGameMode (int lp_gamemode);
void libCOMI_gf_UpdateGameModeList ();
void libCOMI_gf_SetDifficulty (int lp_difficulty);
void libCOMI_gf_UpdateDifficultiesList ();
void libCOMI_gf_DisplayArmyButton (bool lp_doDoNot);
void libCOMI_gf_CU_TargetingCancel (trigger t);
int libCOMI_gf_CU_TargetingTriggeringPlayer ();
void libCOMI_gf_PU_TargetingUI_EnterTargetingMode (bool lp_showHide, bool lp_instant, int lp_player);
void libCOMI_gf_CU_TargetingCreate (int lp_player);
void libCOMI_gf_CU_TargetingSetCharges (int lp_current, int lp_max, int lp_player);
void libCOMI_gf_CU_TargetingSetInstructionText (text lp_instructions, int lp_player);
void libCOMI_gf_CM_SoATargetingModeEnter (int lp_player);
void libCOMI_gf_CM_SoATargetingModeExit (int lp_player);
void libCOMI_gf_CM_SoATargetingCleanupActorsAndUnits (int lp_player);
void libCOMI_gf_CM_SetFogAlphaOverTime (fixed lp_targetAlpha, fixed lp_duration, int lp_player);
void libCOMI_gf_CM_ResetFogAlphaOverTime (fixed lp_duration, int lp_player);
void libCOMI_gf_CM_SoATargetingCancel (int lp_player);
void libCOMI_gf_TaskTransmission (int lp_task, string lp_transmission, fixed lp_delay, fixed lp_defer);
void libCOMI_gf_DefferedTransmission (string lp_transmission, fixed lp_defer);
void libCOMI_gf_ThankYou (int lp_caster, int lp_target);
void libCOMI_gf_TeamThankYou (int lp_caster);
void libCOMI_gf_CM_CommanderVOSend (int lp_listenerPlayer, soundlink lp_vOSound, playergroup lp_targetPlayers);
void libCOMI_gf_CM_CommanderVOAbilityWatch (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, abilcmd lp_abilityCommand);
void libCOMI_gf_CM_CommanderVOAbilityWatchUnit (int lp_player, soundlink lp_vOSound, string lp_cooldownLink, unit lp_unit, string lp_ability);
soundlink libCOMI_gf_CC_CommanderVOLine (string lp_commander, int lp_line);
void libCOMI_gf_CM_CommanderVOInit ();
void libCOMI_gf_CC_MuteUnmuteExclusive (bool lp_muteUnmute, int lp_muteChannel, int lp_ignoredChannel, playergroup lp_players);
void libCOMI_gf_SetAllSoundChannelVolumesCampaign (int lp_mode);
void libCOMI_gf_SetAllSoundChannelVolumesForPlayerGroupCampaign (int lp_mode, playergroup lp_playerGroup);
void libCOMI_gf_MuteUnmuteAllSoundChannelsExcept (bool lp_muteUnmute, int lp_ignoredChannel, playergroup lp_players);
bool libCOMI_gf_ValidAntiAirUnitIsNearUnit (int lp_player, unit lp_unit);
void libCOMI_gf_RemindPlayertoCreateAntiAirUnits ();
void libCOMI_gf_CM_HeroReviveQueue_PlaySound (soundlink lp_soundLink, fixed lp_soundDelay, playergroup lp_listeningPlayers);
void libCOMI_gf_CM_VOResourceInit ();
void libCOMI_gf_SendMissionTransmission (string lp_transmissionType, bool lp_waitUntilDone, int lp_sourcePlayer);
void libCOMI_gf_SendVictoryTransmission (string lp_mapVictoryTransmission);
void libCOMI_gf_SendSplitMissionTransmission (string lp_transmissionType, bool lp_waitUntilDone, int lp_primaryPlayer, int lp_sourcePlayer);
void libCOMI_gf_WaitForMissionTransmission ();
void libCOMI_gf_CM_TransmissionUpdateConvoPlayers (string lp_conversation);
bool libCOMI_gf_CM_PlayerHasTransmission (int lp_player);
void libCOMI_gf_CM_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libCOMI_gf_CM_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, int lp_ping, int lp_localIndex);
void libCOMI_gf_HideCampaignTransmissionPortrait ();
void libCOMI_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
fixed libCOMI_gf_ConvesationLineDuration (string lp_conversationLine);
void libCOMI_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libCOMI_gf_SendTransmissionCampaignPlaceHolder (unit lp_unit, string lp_model, text lp_speaker, text lp_message, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libCOMI_gf_EnableDisableCoopAIWavePings (bool lp_enableDisable);
void libCOMI_gf_EnableDisableCoopAIWavePing (wave lp_attackWave, bool lp_enableDisable);
void libCOMI_gf_EnableDisableCoopAIPlayerAttackPings (playergroup lp_players, bool lp_enableDisable);
bool libCOMI_gf_CM_CoopAI_PingWorthyUnit (unit lp_pingableUnit);
bool libCOMI_gf_VU_isPingException (string lp_unit);
bool libCOMI_gf_UnitisValidforanAttackWavePing (unit lp_pingableUnit);
int libCOMI_gf_PingTypeFromObjectiveType (bool lp_objectiveType);
void libCOMI_gf_AttentionGrabbingObjectivePing (point lp_pingLocation);
void libCOMI_gf_CreateObjectivePing (bool lp_objectiveType, point lp_position, text lp_tooltip);
void libCOMI_gf_CreateObjectivePingAC (int lp_objectiveType, point lp_position, text lp_tooltip);
void libCOMI_gf_PingMinimapCampaign (playergroup lp_players, point lp_pos, fixed lp_dur, color lp_color);
void libCOMI_gf_DestroyPingCoop (int lp_ping);
void libCOMI_gf_CreatePingFacingAngleCoop (playergroup lp_players, point lp_position, fixed lp_angle, string lp_model, color lp_color, fixed lp_duration);
void libCOMI_gf_CreatePingWithPointFacingCoop (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration, int lp_playerId);
void libCOMI_gf_CreatePingCoop (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration);
void libCOMI_gf_ShowHidePingCoop (int lp_ping, bool lp_visible);
void libCOMI_gf_CreateAlertAtPointCampaign (string lp_alertType, text lp_text, string lp_icon, point lp_point);
void libCOMI_gf_CreateAlertAtUnitCampaign (string lp_alertType, text lp_text, string lp_icon, unit lp_unit);
void libCOMI_gf_CC_SaveAllTransitionData ();
void libCOMI_gf_CC_LoadAllTransitionData ();
void libCOMI_gf_ResetCampaignData (int lp_player);
void libCOMI_gf_CC_OpenCoopBank (int lp_player);
bool libCOMI_gf_CC_CoopBankExists (int lp_player);
void libCOMI_gf_CC_SaveCoopBank (int lp_player);
int libCOMI_gf_CC_LoadTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_default);
bool libCOMI_gf_CC_LoadTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_default);
string libCOMI_gf_CC_LoadTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_default);
void libCOMI_gf_CC_SaveTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_value, int lp_default);
void libCOMI_gf_CC_SaveTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_value, bool lp_default);
void libCOMI_gf_CC_SaveTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_value, string lp_default);
void libCOMI_gf_CC_SaveTransitionVars (int lp_player, bank lp_targetBank);
void libCOMI_gf_CC_LoadTransitionVars (int lp_player, bank lp_sourceBank);
fixed libCOMI_gf_ResourcesRadius ();
fixed libCOMI_gf_SafetyRadius ();
string libCOMI_gf_CC_CurrentMap ();
void libCOMI_gf_SetCurrentMap (string lp_map);
string libCOMI_gf_CC_MapAchievementTerm (string lp_map, int lp_difficulty);
string libCOMI_gf_CC_CampaignMapFile (string lp_map);
text libCOMI_gf_CC_CampaignMapName (string lp_map, int lp_player);
string libCOMI_gf_CC_MapScoreStatistic (string lp_map);
string libCOMI_gf_CC_MapUserDataInstance (string lp_map);
bool libCOMI_gf_PlayerInCinematicModeCampaign ();
void libCOMI_gf_SetScreenModeCoop (int lp_mode, fixed lp_duration, int lp_player);
void libCOMI_gf_CinematicModeCampaign (bool lp_onOff, fixed lp_duration, bool lp_waitOptions);
void libCOMI_gf_CM_CinematicModeNoWait (bool lp_onOff, fixed lp_duration);
void libCOMI_gf_CM_CinematicModeInternal (bool lp_onOff, fixed lp_duration);
void libCOMI_gf_CM_CinematicModeActivate ();
string libCOMI_gf_CM_SoundDataTableName ();
void libCOMI_gf_PlaySoundCinematic (soundlink lp_soundLink, playergroup lp_players, fixed lp_volume, fixed lp_offset);
void libCOMI_gf_StopCinematicSounds ();
void libCOMI_gf_MoveCameraForAllPlayers (point lp_point, fixed lp_time);
int libCOMI_gf_CC_DifficultyIndex (int lp_difficulty);
int libCOMI_gf_CC_DifficultyFromIndex (int lp_index);
void libCOMI_gf_InitDifficulty ();
void libCOMI_gf_CM_DifficultyApplySettings (int lp_player);
int libCOMI_gf_GetMissionDifficulty ();
int libCOMI_gf_DifficultyLevelForPlayerCoop (int lp_player);
int libCOMI_gf_GetDifficulty ();
int libCOMI_gf_DifficultyAsInteger (int lp_player);
int libCOMI_gf_IntegerToDifficulty (int lp_difficulty);
int libCOMI_gf_DifficultyValueInt2 (int lp_difficulty, int lp_beginner, int lp_normal, int lp_advanced, int lp_expert, int lp_virtuoso, int lp_master);
fixed libCOMI_gf_DifficultyValueFixed2 (int lp_difficulty, fixed lp_beginner, fixed lp_normal, fixed lp_advanced, fixed lp_expert, fixed lp_virtuoso, fixed lp_master);
string libCOMI_gf_DifficultyValueFixed3 (int lp_difficulty, string lp_beginner, string lp_normal, string lp_advanced, string lp_expert, string lp_virtuoso, string lp_master);
bool libCOMI_gf_DifficultyValueFixed4 (int lp_difficulty, bool lp_beginner, bool lp_normal, bool lp_advanced, bool lp_expert, bool lp_virtuoso, bool lp_master);
int libCOMI_gf_MinimumDifficultyValueCoopInteger (int lp_casual, int lp_normal, int lp_hard, int lp_brutal, int lp_extreme, int lp_unlikely);
fixed libCOMI_gf_MinimumDifficultyValueCoopReal (fixed lp_beginner, fixed lp_normal, fixed lp_advanced, fixed lp_expert, fixed lp_virtuoso, fixed lp_master);
string libCOMI_gf_CC_CommanderUserInstance (string lp_commander);
string libCOMI_gf_CC_CommanderData (string lp_commander);
string libCOMI_gf_CC_CommanderRace (string lp_commander);
int libCOMI_gf_CC_CommanderInternalIndex (string lp_commander);
string libCOMI_gf_CC_CommanderConversationLink (string lp_characterInstance);
string libCOMI_gf_CC_CommanderPortraitModel (string lp_commander);
string libCOMI_gf_CC_CommanderPortraitActor (string lp_commander);
string libCOMI_gf_CC_CommanderCustomImage (string lp_commander);
text libCOMI_gf_CC_CommanderName (string lp_commander);
int libCOMI_gf_CC_CommanderGender (string lp_commander);
text libCOMI_gf_CC_CommanderDescription (string lp_commander);
string libCOMI_gf_CC_CommanderSelectCutscene (string lp_commander);
string libCOMI_gf_CC_CommanderConvoTag (string lp_commander);
bool libCOMI_gf_CC_CommanderInGame (string lp_commander);
text libCOMI_gf_CC_CommanderGeneralTipTitle (string lp_tipID);
text libCOMI_gf_CC_CommanderGeneralTipDetails (string lp_tipID);
string libCOMI_gf_CC_CommanderGeneralTipIcon (string lp_tipID);
void libCOMI_gf_CreateExplosionatPointAdvanced (point lp_point, string lp_actor, soundlink lp_sound);
void libCOMI_gf_ResourcePickupAlly (int lp_player, int lp_minerals, int lp_vespene);
void libCOMI_gf_SendActorMessageToDoodadsInRegion (string lp_message, string lp_doodadType, region lp_target);
void libCOMI_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libCOMI_gf_GivePlayerResources (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libCOMI_gf_DisplayRewardFloatingText (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
text libCOMI_gf_FormatTimeCampaign (int lp_second);
void libCOMI_gf_PauseAITimeCampaign (bool lp_pauseUnpause);
void libCOMI_gf_CC_TimeAITemporarySet (bool lp_pauseUnpause);
void libCOMI_gf_CC_TimeAITemporaryRestore ();
void libCOMI_gf_PauseMissionTimeCampaign (bool lp_pauseUnpause);
void libCOMI_gf_CC_TimeMissionTemporarySet (bool lp_pauseUnpause);
void libCOMI_gf_CC_TimeMissionTemporaryRestore ();
void libCOMI_gf_Unpause ();
void libCOMI_gf_Pause ();
void libCOMI_gf_CM_UseUnitNameAsUnitTip (unit lp_unit);
void libCOMI_gf_CM_ApplyCampaignTeachingToUnit (unit lp_teachUnit);
void libCOMI_gf_SetUnitInfoTextCampaign (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libCOMI_gf_SetUnitInfoTextCampaignDetailed (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libCOMI_gf_CM_MissionAutoSave (text lp_description);
void libCOMI_gf_CreateMissionAutosavePoint (text lp_description);
void libCOMI_gf_CreateWarpInEffect (unit lp_unit);
void libCOMI_gf_RunTriggeratMissionTime (fixed lp_time, trigger lp_trigger);
point libCOMI_gf_CM_NearbyGroundPathablePoint (point lp_initialDropPoint, fixed lp_distanceOffsetMin, fixed lp_distanceOffsetMax);
void libCOMI_gf_CM_DetectionUpgradesApply ();
fixed libCOMI_gf_Lerp (fixed lp_valueZero, fixed lp_valueOne, fixed lp_amount);
string libCOMI_gf_CC_CatalogGetFieldArrayValue (int lp_catalog, string lp_entry, string lp_field, int lp_index, int lp_player);
string libCOMI_gf_CC_AICommanderByUniqueIndex (int lp_uniqueIndex);
void libCOMI_gf_UT_Cooldown (int lp_pPlayer);
void libCOMI_gf_UT_Horde_Multiply (unit lp_pUnit, fixed lp_pCoef);
void libCOMI_gf_UT_MasteryPointsUpdate (int lp_pTargetPlayer);
void libCOMI_gf_UT_MasteryChoiceCreateUpdate (int lp_vTargetPlayer);
void libCOMI_gf_UT_ApplyMasteryTech (int lp_player);
void libCOMI_gf_UT_PlayerMasteryUpgradeLevelSet (int lp_player, string lp_masteryUpgrade, int lp_level);
int libCOMI_gf_UT_PlayerMasteryUpgradeLevel (int lp_player, string lp_masteryUpgrade);
text libCOMI_gf_UT_PlayerMasteryName (string lp_masteryUpgrade);
bool libCOMI_gf_UT_GL_ScoreUsed (string lp_pScore);
string libCOMI_gf_UT_GL_PlayerMasteryTalent (string lp_masteryUpgrade);
text libCOMI_gf_UT_GL_MasteryButtonName (string lp_masteryUpgrade);
text libCOMI_gf_UT_GL_AddScoreValueToText (text lp_pText, string lp_pScore, int lp_pIndex);
text libCOMI_gf_UT_GL_AddVariableValueToText (text lp_pText, text lp_pVariable, text lp_pVariableDescription, int lp_pIndex);
bool libCOMI_gf_UT_GL_IsSharedMissionScore (string lp_pScore);
void libCOMI_gf_UT_GL_GenerateNewLayout ();
string libCOMI_gf_ActiveCommanderForPlayer3 (int lp_player);
playergroup libCOMI_gf_UT_ActiveCommanderPlayers ();
string libCOMI_gf_UT_CommanderLoadingImage (string lp_pCommander);
string libCOMI_gf_ActiveCommanderForPlayer2 (string lp_pUserDataInstance);
int libCOMI_gf_UT_OtherPlayer (int lp_pPlayer);
unit libCOMI_gf_CM_PlayerGetGlobalCaster3 (int lp_player);
void libCOMI_gf_UT_CommanderHide (int lp_pCommanderMax);
bool libCOMI_gf_UT_Bank_UnitExcluded (unit lp_pUnit);
void libCOMI_gf_UT_Bank_SaveBank (int lp_pPlayer, string lp_pSaveName, string lp_pBankName);
void libCOMI_gf_UT_Bank_RestoreBank (int lp_pPlayer, string lp_pSaveName, playergroup lp_pPlayerGroup, string lp_pBankName);

// Trigger Declarations
trigger libCOMI_gt_DefaultMapInitializeTrigger;
trigger libCOMI_gt_DefaultGameStartTrigger;
trigger libCOMI_gt_InitialExploration;
trigger libCOMI_gt_CM_CampaignMissionInitialize;
trigger libCOMI_gt_CM_CampaignMissionInitialize2;
trigger libCOMI_gt_CheckStartingResources;
trigger libCOMI_gt_CheckStartingSupplies;
trigger libCOMI_gt_SuppliesMaxUpgrades;
trigger libCOMI_gt_SuppliesMadeUpgrades;
trigger libCOMI_gt_CC_SharedUpgradesRecheck;
trigger libCOMI_gt_CC_PrestigeUpgradeSupplement;
trigger libCOMI_gt_SkinUpgrades;
trigger libCOMI_gt_Autocasting;
trigger libCOMI_gt_setobserver;
trigger libCOMI_gt_AttackFastBuffHack;
trigger libCOMI_gt_DmgandAttackSpeedInheritNew;
trigger libCOMI_gt_DmgandAttackSpeedInheritExisting;
trigger libCOMI_gt_CM_CargoDeath;
trigger libCOMI_gt_UnitBehaviors;
trigger libCOMI_gt_BehaviorPermanentlyChangesOwner;
trigger libCOMI_gt_DeathPreventGrantKillCredit;
trigger libCOMI_gt_CU_HeroPanelUpdate;
trigger libCOMI_gt_CU_HeroUnitDamaged;
trigger libCOMI_gt_CU_HeroUnitVitalChange;
trigger libCOMI_gt_CU_HeroMouseHoverText;
trigger libCOMI_gt_HeroDied;
trigger libCOMI_gt_SamePlaceRevive;
trigger libCOMI_gt_CM_InstantRevive;
trigger libCOMI_gt_CU_GPBirthFinished;
trigger libCOMI_gt_CU_GPDeathRemove2D;
trigger libCOMI_gt_CU_GPVitalChanges;
trigger libCOMI_gt_TopBarNotificationsEnableDisable;
trigger libCOMI_gt_AF_TopBarClicked;
trigger libCOMI_gt_AF_MouseEntersTopBar;
trigger libCOMI_gt_AF_MouseExitsTopBar;
trigger libCOMI_gt_VU_EnemyFactionChanged;
trigger libCOMI_gt_FactionButtonClicked;
trigger libCOMI_gt_AF_CS_NewsControlButtonClicked;
trigger libCOMI_gt_UT_CommandsButtonClicked;
trigger libCOMI_gt_CU_PlayerLeftInLobby;
trigger libCOMI_gt_CommanderButtonClicked;
trigger libCOMI_gt_UT_PrestigeAlly;
trigger libCOMI_gt_UT_CommanderClicked;
trigger libCOMI_gt_CU_CommanderLevelUpClicked;
trigger libCOMI_gt_CU_CommanderLevelDownClicked;
trigger libCOMI_gt_CU_CommanderMutatorChallengeSelected;
trigger libCOMI_gt_AF_CS_AllyPrestigeChanged;
trigger libCOMI_gt_UT_AllyMasteryButtonClicked;
trigger libCOMI_gt_CU_CommanderMasteryClicked;
trigger libCOMI_gt_CU_CommanderMasteryCheckboxToggle;
trigger libCOMI_gt_ReadyButtonClicked;
trigger libCOMI_gt_CU_CommandeAllyLeft;
trigger libCOMI_gt_CU_MasteryShiftTrackDown;
trigger libCOMI_gt_CU_MasteryShiftTrackUp;
trigger libCOMI_gt_CU_MasteryLevelUpPressed;
trigger libCOMI_gt_CU_MasteryLevelDownPressed;
trigger libCOMI_gt_CU_MasteryItemPlusPressed;
trigger libCOMI_gt_CU_MasteryItemMinusPressed;
trigger libCOMI_gt_CU_MasteryResetPressed;
trigger libCOMI_gt_CU_MasteryAcceptPressed;
trigger libCOMI_gt_CU_PrestigeButtonClicked;
trigger libCOMI_gt_GameModePulldownUsed;
trigger libCOMI_gt_DifficultyPulldownUsed;
trigger libCOMI_gt_AF_SlimUI_Delayed;
trigger libCOMI_gt_CU_FlashArmyButtonHelpTip;
trigger libCOMI_gt_CU_ArmyButtonUsed;
trigger libCOMI_gt_CS_ArmyButtonMissionInit;
trigger libCOMI_gt_CU_TargetingCancelButtonUsed;
trigger libCOMI_gt_CM_SoATargetingForceOff;
trigger libCOMI_gt_CM_SoATargetingCancelFromUI;
trigger libCOMI_gt_DefferedTransmission;
trigger libCOMI_gt_CM_HeroReviveQueue_HeroRevived;
trigger libCOMI_gt_CM_VOResourceSent;
trigger libCOMI_gt_CM_VOResourceRequest;
trigger libCOMI_gt_CM_VOUnitsLostCheck;
trigger libCOMI_gt_CM_VOEnemySpotted;
trigger libCOMI_gt_CM_VOEnemyCloakedSpotted;
trigger libCOMI_gt_CM_TransmissionSend;
trigger libCOMI_gt_CM_SendTransmissionCampaignTick;
trigger libCOMI_gt_CM_CoopAI_AttackWavePingManager;
trigger libCOMI_gt_VoidPingSound;
trigger libCOMI_gt_CM_CinematicModeOn;
trigger libCOMI_gt_CM_CinematicModeOff;
trigger libCOMI_gt_CM_CampaignMissionIntroZoomIn;
trigger libCOMI_gt_ResourcePickupAllyNew;
trigger libCOMI_gt_CM_CampaignUnitTeaching;
trigger libCOMI_gt_CM_CampaignUnitCreated;
trigger libCOMI_gt_CM_CampaignUnitChangeOwner;
trigger libCOMI_gt_CM_CampaignUnitInfoUnitMorphes;
trigger libCOMI_gt_UT_Cooldown;
trigger libCOMI_gt_UT_Horde_Init;
trigger libCOMI_gt_UT_Horde_Remove;
trigger libCOMI_gt_UT_Horde_UnitCreated;
trigger libCOMI_gt_UT_Horde_SendWave;
trigger libCOMI_gt_UT_encomps;
trigger libCOMI_gt_UT_Mastery;
trigger libCOMI_gt_UT_MasteryButtonClicked;
trigger libCOMI_gt_UT_CommanderSwitched;
trigger libCOMI_gt_UT_SpawnAttackWave;
trigger libCOMI_gt_UT_AttackWaveAttack;
trigger libCOMI_gt_UT_RemoveWave;
trigger libCOMI_gt_UT_NukeTest;
trigger libCOMI_gt_AF_BileLauncherBombardment;
trigger libCOMI_gt_ToggleAIDebugMessages;
trigger libCOMI_gt_CM_CoopAI_InitAIDebugging;
trigger libCOMI_gt_CU_DebugMovieCaptureModeToggle;
trigger libCOMI_gt_CU_DebugMutatorSelect;
trigger libCOMI_gt_CU_DebugRandomMutationSelect;
trigger libCOMI_gt_CU_DebugCinMode;
trigger libCOMI_gt_CU_DebugScreenmode;
trigger libCOMI_gt_CU_DebugTogSoA;
trigger libCOMI_gt_CM_DebugTargetSpawnersSet;
trigger libCOMI_gt_CT_DebugSelectCommanders;
trigger libCOMI_gt_SimpleDropAttackExample2;
trigger libCOMI_gt_CM_DebugVictoryS;
trigger libCOMI_gt_CM_CampaignMissionPerfLog;
trigger libCOMI_gt_UT_DebugMutatorSelect;
trigger libCOMI_gt_UT_ShareControl;
trigger libCOMI_gt_UT_AllySupply;
trigger libCOMI_gt_UT_Unlock;
trigger libCOMI_gt_UT_Trigdebug;
trigger libCOMI_gt_UT_Ally;
trigger libCOMI_gt_UT_PvP;
trigger libCOMI_gt_CU_DebugMovieCaptureModeSuppressCC;
trigger libCOMI_gt_CU_DebugMovieCaptureModeSupressUnits;
trigger libCOMI_gt_UT_StartTrigger;
trigger libCOMI_gt_UT_sbank;
trigger libCOMI_gt_UT_rbank;
trigger libCOMI_gt_UT_RefillInit;
trigger libCOMI_gt_UT_Refill;
trigger libCOMI_gt_UT_UI;
trigger libCOMI_gt_UT_UI_CtrlH;
trigger libCOMI_gt_MM_UnitDeath8;
trigger libCOMI_gt_MM_UnitRemovedFix2;

// Library Initialization
void libCOMI_InitVariables ();

