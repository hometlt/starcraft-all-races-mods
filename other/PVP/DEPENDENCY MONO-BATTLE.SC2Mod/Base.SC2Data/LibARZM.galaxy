include "TriggerLibs/NativeLib"
include "LibARMB_h"

include "LibARZM_h"

//--------------------------------------------------------------------------------------------------
// Library: ZOMBIES
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libARZM_InitLibraries () {
    libNtve_InitVariables();
    libARMB_InitVariables();
}

// Variable Initialization
bool libARZM_InitVariables_completed = false;

void libARZM_InitVariables () {
    if (libARZM_InitVariables_completed) {
        return;
    }

    libARZM_InitVariables_completed = true;

    libARZM_gv_ixfyspgrkualbftn = 0.9;
    libARZM_gv_lkwcbkbnhgesqbbv = UnitGroupEmpty();
}

// Functions
bool libARZM_gf_ValidPoint (point lp_vPoint) {
    // Variable Declarations
    int lv_bdjnhqamaalbadke;
    point lv_ghrfprkmjtwxpggw;
    unitgroup lv_envqpehkteslodby;

    // Automatic Variable Declarations
    playergroup auto54591C72_g;

    // Variable Initialization
    lv_envqpehkteslodby = UnitGroupEmpty();

    // Implementation
    if ((PointPathingPassable(lp_vPoint) == false)) {
        return false;
    }

    auto54591C72_g = PlayerGroupAll();
    lv_bdjnhqamaalbadke = -1;
    while (true) {
        lv_bdjnhqamaalbadke = PlayerGroupNextPlayer(auto54591C72_g, lv_bdjnhqamaalbadke);
        if (lv_bdjnhqamaalbadke < 0) { break; }
        if ((libARZM_gv_gabiqnidvlsbuyit < 5) && ((UnitGroupCount(UnitGroupSearch("Nexus", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("CommandCenter", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("PlanetaryFortress", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("OrbitalCommand", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("Hatchery", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("Hive", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("Lair", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("ScavengerNest", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("ProcessingCore", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("Citadel", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("CitadelCharged", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("NHbrTemple", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0) || (UnitGroupCount(UnitGroupSearch("OperationHeadquarters", 15, lp_vPoint, 25.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 1), c_unitCountAlive) > 0))) {
            return false;
        }

        lv_envqpehkteslodby = UnitGroupSearch(null, 15, lp_vPoint, 16.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        if ((libARZM_gv_gabiqnidvlsbuyit < 4) && (UnitGroupCount(lv_envqpehkteslodby, c_unitCountAlive) > 0)) {
            return false;
        }

    }
    return true;
}

bool libARZM_gf_ValidPointScourge (point lp_vPoint) {
    // Variable Declarations
    int lv_giiibsbdnpuvsqwo;
    unitgroup lv_ygwktmlqmvkejmuk;

    // Automatic Variable Declarations
    playergroup auto9B9893E9_g;

    // Variable Initialization
    lv_ygwktmlqmvkejmuk = UnitGroupEmpty();

    // Implementation
    auto9B9893E9_g = PlayerGroupAll();
    lv_giiibsbdnpuvsqwo = -1;
    while (true) {
        lv_giiibsbdnpuvsqwo = PlayerGroupNextPlayer(auto9B9893E9_g, lv_giiibsbdnpuvsqwo);
        if (lv_giiibsbdnpuvsqwo < 0) { break; }
        lv_ygwktmlqmvkejmuk = UnitGroupSearch(null, 15, lp_vPoint, 16.0, UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        if ((UnitGroupCount(lv_ygwktmlqmvkejmuk, c_unitCountAlive) > 0)) {
            return false;
        }

    }
    return true;
}

void libARZM_gf_mutate () {
    // Variable Declarations
    int lv_dciwhyvwwkrmhxnl;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TechTreeUpgradeAddLevel(15, "ZombieArmor", 1);
    TechTreeUpgradeAddLevel(15, "ZombieDamage", 1);
}

void libARZM_gf_Spawn (point lp_point, int lp_num, string lp_unit) {
    // Variable Declarations
    point lv_rfcsmaufggitkiku;
    fixed lv_edxyobaafkwuwdaf;

    // Automatic Variable Declarations
    unitgroup autoA7B38555_g;
    int autoA7B38555_u;
    unit autoA7B38555_var;
    string autoFE3103B8_val;

    // Variable Initialization

    // Implementation
    if (((UnitGroupCount(libARZM_gv_lkwcbkbnhgesqbbv, c_unitCountAlive) > 350) || (lp_num == 0) || (lp_point == null))) {
        return ;
    }

    UnitCreate(lp_num, lp_unit, 0, 15, lp_point, libNtve_gf_RandomAngle());
    lv_edxyobaafkwuwdaf = RandomFixed(0.0, 1.0);
    if ((lv_edxyobaafkwuwdaf > 0.8)) {
        UnitSetPosition(libARZM_gv_tujmvcahkfujnyly, lp_point, false);
        UnitIssueOrder(libARZM_gv_tujmvcahkfujnyly, OrderTargetingPoint(AbilityCommand("AmorphousArmorcloud", 0), lp_point), c_orderQueueReplace);
    }

    autoA7B38555_g = UnitLastCreatedGroup();
    autoA7B38555_u = UnitGroupCount(autoA7B38555_g, c_unitCountAll);
    for (;; autoA7B38555_u -= 1) {
        autoA7B38555_var = UnitGroupUnitFromEnd(autoA7B38555_g, autoA7B38555_u);
        if (autoA7B38555_var == null) { break; }
        UnitBehaviorAdd(autoA7B38555_var, "CritterWander", autoA7B38555_var, 1);
        UnitBehaviorAdd(autoA7B38555_var, "InfestedTerranTimedLife", autoA7B38555_var, 1);
        lv_edxyobaafkwuwdaf = RandomFixed(-0.25, 0.25);
        if ((lv_edxyobaafkwuwdaf > 0.23)) {
            lv_edxyobaafkwuwdaf = RandomFixed(1.5, 2.0);
            UnitBehaviorAdd(autoA7B38555_var, "Detector13p75", autoA7B38555_var, 1);
        }

        autoFE3103B8_val = UnitGetType(autoA7B38555_var);
        if (autoFE3103B8_val == "ScourgeMP") {
            UnitSetPropertyFixed(autoA7B38555_var, c_unitPropLifeMax, ((12.5 * libARZM_gv_okunxwgidxvfvvnp) * (1.0 + lv_edxyobaafkwuwdaf)));
        }
        else if (autoFE3103B8_val == "Broodling") {
            UnitSetPropertyFixed(autoA7B38555_var, c_unitPropLifeMax, ((15.0 * libARZM_gv_okunxwgidxvfvvnp) * (1.0 + lv_edxyobaafkwuwdaf)));
            UnitSetPropertyFixed(autoA7B38555_var, c_unitPropMovementSpeed, 2.0);
            UnitWeaponRemove(autoA7B38555_var, "NeedleClaws");
            UnitWeaponAdd(autoA7B38555_var, "NeedleClaws2", null);
        }
        else if (autoFE3103B8_val == "InfestorTerranBurrowed") {
            Wait(RandomFixed(1.0, 3.0), c_timeGame);
            UnitIssueOrder(autoA7B38555_var, Order(AbilityCommand("BurrowInfestorTerranUp", 0)), c_orderQueueReplace);
            UnitSetPropertyFixed(autoA7B38555_var, c_unitPropLifeMax, ((25.0 * libARZM_gv_okunxwgidxvfvvnp) * (1.0 + lv_edxyobaafkwuwdaf)));
        }
        else {
        }
        UnitSetPropertyFixed(autoA7B38555_var, c_unitPropLifePercent, 100.0);
        UnitSetScale(autoA7B38555_var, (100.0 + (30.0 * lv_edxyobaafkwuwdaf)), (100.0 + (30.0 * lv_edxyobaafkwuwdaf)), (100.0 + (30.0 * lv_edxyobaafkwuwdaf)));
    }
    UnitGroupAddUnitGroup(libARZM_gv_lkwcbkbnhgesqbbv, UnitLastCreatedGroup());
}

point libARZM_gf_randomPoint () {
    // Variable Declarations
    int lv_bufrchcksekymdrq;
    point lv_gekdslercvnoxgju;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    do {
        if ((lv_bufrchcksekymdrq > 10)) {
            return null;
        }

        lv_gekdslercvnoxgju = RegionRandomPoint(RegionPlayableMap());
        lv_bufrchcksekymdrq += 1;
    }while ((!(libARZM_gf_ValidPoint(lv_gekdslercvnoxgju))));
    return lv_gekdslercvnoxgju;
}

point libARZM_gf_randomMiddlePoint () {
    // Variable Declarations
    int lv_sqdsrwlamtbqvimr;
    point lv_ahrbwlryuyskftgt;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    do {
        if ((lv_sqdsrwlamtbqvimr > 10)) {
            return null;
        }

        lv_ahrbwlryuyskftgt = RegionRandomPoint(RegionCircle(RegionGetCenter(RegionPlayableMap()), 30.0));
        lv_sqdsrwlamtbqvimr += 1;
    }while ((!(libARZM_gf_ValidPoint(lv_ahrbwlryuyskftgt))));
    return lv_ahrbwlryuyskftgt;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Run Zombiecatastrophe
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_RunZombiecatastrophe_Func (bool testConds, bool runActions) {
    // Variable Declarations
    revealer[libARMB_gv_pLAYERS + 1] lv_lhupflumjyxvefdj;

    // Automatic Variable Declarations
    playergroup autoFEF235FF_g;
    int autoFEF235FF_var;
    playergroup auto37D55F5B_g;
    int auto37D55F5B_var;
    playergroup auto10460334_g;
    int auto10460334_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoFEF235FF_g = PlayerGroupAll();
    autoFEF235FF_var = -1;
    while (true) {
        autoFEF235FF_var = PlayerGroupNextPlayer(autoFEF235FF_g, autoFEF235FF_var);
        if (autoFEF235FF_var < 0) { break; }
        PlayerSetAlliance(autoFEF235FF_var, c_allianceIdVision, 15, true);
    }
    PlayerSetColorIndex(15, 14, true);
    UnitCreate(1, "InfestedCaster", 0, 15, Point(0.0, 0.0), libNtve_gf_RandomAngle());
    libARZM_gv_tujmvcahkfujnyly = UnitLastCreated();
    libNtve_gf_ShowHideUnit(libARZM_gv_tujmvcahkfujnyly, false);
    Wait(8.0, c_timeGame);
    if (((libARZM_gv_heqkteoxpmtafqim > 0) || (libARZM_gv_hvwseiqqxowffjfn > 0))) {
        TriggerEnable(libARZM_gt_ZombieKillBounty, true);
    }

    auto37D55F5B_g = PlayerGroupActive();
    auto37D55F5B_var = -1;
    while (true) {
        auto37D55F5B_var = PlayerGroupNextPlayer(auto37D55F5B_g, auto37D55F5B_var);
        if (auto37D55F5B_var < 0) { break; }
        VisRevealerCreate(auto37D55F5B_var, RegionCircle(RegionGetCenter(RegionPlayableMap()), 12.0));
        lv_lhupflumjyxvefdj[auto37D55F5B_var] = VisRevealerLastCreated();
    }
    MinimapPing(PlayerGroupAll(), RegionGetCenter(RegionPlayableMap()), 5.0, Color(100.00, 100.00, 0.00));
    TriggerExecute(libARZM_gt_InitialZombiesSpawn, true, false);
    Wait(2.0, c_timeGame);
    TriggerExecute(libARZM_gt_InitialBroodlingSpawn, true, false);
    Wait(2.0, c_timeGame);
    TriggerExecute(libARZM_gt_InitialScourgeSpawn, true, false);
    libARZM_gv_gabiqnidvlsbuyit = 1;
    TriggerEnable(libARZM_gt_BroodlingSpawn, true);
    TriggerEnable(libARZM_gt_ZombieSpawn, true);
    TriggerEnable(libARZM_gt_ScourgeSpawn, true);
    Wait(28.0, c_timeGame);
    auto10460334_g = PlayerGroupActive();
    auto10460334_var = -1;
    while (true) {
        auto10460334_var = PlayerGroupNextPlayer(auto10460334_g, auto10460334_var);
        if (auto10460334_var < 0) { break; }
        VisRevealerDestroy(lv_lhupflumjyxvefdj[auto10460334_var]);
    }
    Wait(200.0, c_timeGame);
    libARZM_gv_gabiqnidvlsbuyit = 2;
    TriggerEnable(libARZM_gt_ZombieAttacks, true);
    TriggerEnable(libARZM_gt_ParasiticBomb, true);
    TriggerEnable(libARZM_gt_ZombieChanceIncrease, true);
    Wait(60.0, c_timeGame);
    TriggerEnable(libARZM_gt_ScourgeSpawn, true);
    libARZM_gv_gabiqnidvlsbuyit = 3;
    TriggerEnable(libARZM_gt_ZombieMutate, true);
    Wait(600.0, c_timeGame);
    libARZM_gv_gabiqnidvlsbuyit = 4;
    Wait(2000.0, c_timeGame);
    libARZM_gv_gabiqnidvlsbuyit = 5;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_RunZombiecatastrophe_Init () {
    libARZM_gt_RunZombiecatastrophe = TriggerCreate("libARZM_gt_RunZombiecatastrophe_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ZombieSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ZombieSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((libARZM_gv_gabiqnidvlsbuyit >= 4) && ((RandomInt(0, 1) == 1))) {
        libARZM_gf_Spawn(libARZM_gf_randomPoint(), RandomInt(0, 15), "InfestorTerranBurrowed");
    }
    else {
        libARZM_gf_Spawn(libARZM_gf_randomMiddlePoint(), RandomInt(0, 15), "InfestorTerranBurrowed");
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ZombieSpawn_Init () {
    libARZM_gt_ZombieSpawn = TriggerCreate("libARZM_gt_ZombieSpawn_Func");
    TriggerEnable(libARZM_gt_ZombieSpawn, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ZombieSpawn, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodlingSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_BroodlingSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_fftkwqgpbygxmang;
    int lv_grxeqaiguctxguap;
    fixed lv_ewgcrkkppxqedprx;
    fixed lv_exydenjcxmidmwyg;
    point lv_wldjrwtoiwgidnkv;
    point lv_tbiexxqyudwutjky;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wldjrwtoiwgidnkv = RegionGetBoundsMax(RegionPlayableMap());
    lv_tbiexxqyudwutjky = RegionGetBoundsMin(RegionPlayableMap());

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libARZM_gv_gabiqnidvlsbuyit >= 4) && ((RandomInt(0, 1) == 1))) {
        libARZM_gf_Spawn(libARZM_gf_randomPoint(), RandomInt(0, 15), "Broodling");
    }
    else {
        libARZM_gf_Spawn(libARZM_gf_randomMiddlePoint(), RandomInt(0, 15), "Broodling");
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_BroodlingSpawn_Init () {
    libARZM_gt_BroodlingSpawn = TriggerCreate("libARZM_gt_BroodlingSpawn_Func");
    TriggerEnable(libARZM_gt_BroodlingSpawn, false);
    TriggerAddEventTimePeriodic(libARZM_gt_BroodlingSpawn, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ScourgeSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ScourgeSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_jeyxbjtkmvvrxunw;
    int lv_gbvgoeghlobvpnpl;
    fixed lv_jgumwhifnqrjimos;
    fixed lv_dqbxnmiqbiulrqsd;
    point lv_rdpcfuihvneyhsiu;
    point lv_lrijjiycnbfrgets;

    // Automatic Variable Declarations
    int auto4516EBC8_val;

    // Variable Initialization
    lv_rdpcfuihvneyhsiu = RegionGetBoundsMax(RegionPlayableMap());
    lv_lrijjiycnbfrgets = RegionGetBoundsMin(RegionPlayableMap());

    // Actions
    if (!runActions) {
        return true;
    }

    auto4516EBC8_val = RandomInt(1, 4);
    if (auto4516EBC8_val == 1) {
        lv_jgumwhifnqrjimos = PointGetX(lv_rdpcfuihvneyhsiu);
        lv_dqbxnmiqbiulrqsd = RandomFixed((PointGetY(lv_rdpcfuihvneyhsiu) + 15.0), (PointGetY(lv_lrijjiycnbfrgets) - 15.0));
    }
    else if (auto4516EBC8_val == 2) {
        lv_jgumwhifnqrjimos = PointGetX(lv_lrijjiycnbfrgets);
        lv_dqbxnmiqbiulrqsd = RandomFixed((PointGetY(lv_rdpcfuihvneyhsiu) + 15.0), (PointGetY(lv_lrijjiycnbfrgets) - 15.0));
    }
    else if (auto4516EBC8_val == 3) {
        lv_jgumwhifnqrjimos = RandomFixed((PointGetX(lv_lrijjiycnbfrgets) + 15.0), (PointGetX(lv_rdpcfuihvneyhsiu) - 15.0));
        lv_dqbxnmiqbiulrqsd = PointGetY(lv_rdpcfuihvneyhsiu);
    }
    else if (auto4516EBC8_val == 4) {
        lv_jgumwhifnqrjimos = RandomFixed((PointGetX(lv_lrijjiycnbfrgets) + 15.0), (PointGetX(lv_rdpcfuihvneyhsiu) - 15.0));
        lv_dqbxnmiqbiulrqsd = PointGetY(lv_lrijjiycnbfrgets);
    }
    else {
    }
    if (libARZM_gf_ValidPointScourge(Point(lv_jgumwhifnqrjimos, lv_dqbxnmiqbiulrqsd))) {
        libARZM_gf_Spawn(Point(lv_jgumwhifnqrjimos, lv_dqbxnmiqbiulrqsd), RandomInt(1, 4), "ScourgeMP");
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ScourgeSpawn_Init () {
    libARZM_gt_ScourgeSpawn = TriggerCreate("libARZM_gt_ScourgeSpawn_Func");
    TriggerEnable(libARZM_gt_ScourgeSpawn, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ScourgeSpawn, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InitialZombiesSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_InitialZombiesSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libARZM_gf_Spawn(RegionGetCenter(RegionPlayableMap()), RandomInt(10, 20), "InfestorTerranBurrowed");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_InitialZombiesSpawn_Init () {
    libARZM_gt_InitialZombiesSpawn = TriggerCreate("libARZM_gt_InitialZombiesSpawn_Func");
    TriggerEnable(libARZM_gt_InitialZombiesSpawn, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InitialBroodlingSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_InitialBroodlingSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libARZM_gf_Spawn(RegionGetCenter(RegionPlayableMap()), RandomInt(5, 15), "Broodling");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_InitialBroodlingSpawn_Init () {
    libARZM_gt_InitialBroodlingSpawn = TriggerCreate("libARZM_gt_InitialBroodlingSpawn_Func");
    TriggerEnable(libARZM_gt_InitialBroodlingSpawn, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InitialScourgeSpawn
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_InitialScourgeSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libARZM_gf_Spawn(RegionGetCenter(RegionPlayableMap()), RandomInt(4, 8), "ScourgeMP");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_InitialScourgeSpawn_Init () {
    libARZM_gt_InitialScourgeSpawn = TriggerCreate("libARZM_gt_InitialScourgeSpawn_Func");
    TriggerEnable(libARZM_gt_InitialScourgeSpawn, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ParasiticBomb
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ParasiticBomb_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_bgjtpnrdnibdsull;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bgjtpnrdnibdsull = UnitGroupRandomUnit(UnitGroup("ScourgeMP", 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lv_bgjtpnrdnibdsull != null)) {
        UnitBehaviorAdd(lv_bgjtpnrdnibdsull, "ParasiticBomb", lv_bgjtpnrdnibdsull, 1);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ParasiticBomb_Init () {
    libARZM_gt_ParasiticBomb = TriggerCreate("libARZM_gt_ParasiticBomb_Func");
    TriggerEnable(libARZM_gt_ParasiticBomb, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ParasiticBomb, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ZombieAttacks
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ZombieAttacks_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_rwwjjamijjrrours;
    point lv_bfanugruygjicobv;
    unitgroup lv_rpnrqjnhxqcswpbk;
    unitfilter lv_pdnqmgewloihhtid;
    fixed lv_bnxenmlveelkrwjl;
    fixed lv_coqoxyblawfghrpb;

    // Automatic Variable Declarations
    unitgroup autoF74FF721_g;
    int autoF74FF721_u;
    unit autoF74FF721_var;
    string auto8600A028_val;

    // Variable Initialization
    lv_rpnrqjnhxqcswpbk = UnitGroupEmpty();
    lv_pdnqmgewloihhtid = UnitFilter(0, 0, 0, 0);
    lv_bnxenmlveelkrwjl = 25.0;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF74FF721_g = UnitGroupIdle(15, false);
    autoF74FF721_u = UnitGroupCount(autoF74FF721_g, c_unitCountAll);
    for (;; autoF74FF721_u -= 1) {
        autoF74FF721_var = UnitGroupUnitFromEnd(autoF74FF721_g, autoF74FF721_u);
        if (autoF74FF721_var == null) { break; }
        if ((libARZM_gv_gabiqnidvlsbuyit == 5)) {
            lv_rwwjjamijjrrours = RandomFixed(30.0, 100.0);
        }
        else {
            lv_rwwjjamijjrrours = RandomFixed(0.0, 100.0);
        }
        auto8600A028_val = UnitGetType(autoF74FF721_var);
        if (auto8600A028_val == "ScourgeMP") {
            lv_pdnqmgewloihhtid = UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterGround) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterCloaked), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterGroundUnit - 32)));
            if ((lv_rwwjjamijjrrours > 95.0)) {
                lv_bnxenmlveelkrwjl = 25.0;
            }
            else if ((lv_rwwjjamijjrrours > 50.0)) {
                UnitIssueOrder(autoF74FF721_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionCircle(UnitGetPosition(autoF74FF721_var), 5.0))), c_orderQueueReplace);
                continue;
            }
            else if ((lv_rwwjjamijjrrours <= 50.0)) {
                continue;
            }
        }
        else {
            lv_pdnqmgewloihhtid = UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)));
            if ((lv_rwwjjamijjrrours > 99.0)) {
                lv_bnxenmlveelkrwjl = 1000.0;
            }
            else if ((lv_rwwjjamijjrrours > 98.0)) {
                lv_bnxenmlveelkrwjl = 60.0;
            }
            else if ((lv_rwwjjamijjrrours > 96.0)) {
                lv_bnxenmlveelkrwjl = 40.0;
            }
            else if ((lv_rwwjjamijjrrours <= 95.0)) {
                continue;
            }
        }
        if ((libARZM_gv_ixfyspgrkualbftn > RandomFixed(0.0, 1.0))) {
        }

        lv_rpnrqjnhxqcswpbk = UnitGroupSearch(null, 15, UnitGetPosition(autoF74FF721_var), lv_bnxenmlveelkrwjl, lv_pdnqmgewloihhtid, 0);
        if ((UnitGroupCount(lv_rpnrqjnhxqcswpbk, c_unitCountAlive) > 0)) {
            UnitIssueOrder(autoF74FF721_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lv_rpnrqjnhxqcswpbk, c_unitCountAlive))), c_orderQueueReplace);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ZombieAttacks_Init () {
    libARZM_gt_ZombieAttacks = TriggerCreate("libARZM_gt_ZombieAttacks_Func");
    TriggerEnable(libARZM_gt_ZombieAttacks, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ZombieAttacks, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ZombieChanceIncrease
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ZombieChanceIncrease_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((libARZM_gv_ixfyspgrkualbftn <= 0.0)) {
        TriggerEnable(TriggerGetCurrent(), false);
    }
    else {
        libARZM_gv_ixfyspgrkualbftn -= 0.1;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ZombieChanceIncrease_Init () {
    libARZM_gt_ZombieChanceIncrease = TriggerCreate("libARZM_gt_ZombieChanceIncrease_Func");
    TriggerEnable(libARZM_gt_ZombieChanceIncrease, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ZombieChanceIncrease, 15.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ZombieMutate
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ZombieMutate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_daamyureqaqvetrp;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libARZM_gf_mutate();
    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ZombieMutate_Init () {
    libARZM_gt_ZombieMutate = TriggerCreate("libARZM_gt_ZombieMutate_Func");
    TriggerEnable(libARZM_gt_ZombieMutate, false);
    TriggerAddEventTimePeriodic(libARZM_gt_ZombieMutate, 250.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zombie Kill Bounty
//--------------------------------------------------------------------------------------------------
bool libARZM_gt_ZombieKillBounty_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_ygsbfuktbqhxijgi;
    int lv_uscbbsbjhufsrvtt;
    int lv_larymeomymxveoqk;
    playergroup lv_bwjwkoxmhkdvqxci;

    // Automatic Variable Declarations
    string autoF4C0F249_val;
    playergroup autoF9B851ED_g;
    int autoF9B851ED_var;
    playergroup autoF6547D10_g;
    int autoF6547D10_var;

    // Variable Initialization
    lv_larymeomymxveoqk = UnitGetOwner(libNtve_gf_KillingUnit());
    lv_bwjwkoxmhkdvqxci = PlayerGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupRemove(libARZM_gv_lkwcbkbnhgesqbbv, EventUnit());
    lv_bwjwkoxmhkdvqxci = PlayerGroupAlliance(c_playerGroupAlly, lv_larymeomymxveoqk);
    PlayerGroupAdd(lv_bwjwkoxmhkdvqxci, lv_larymeomymxveoqk);
    autoF4C0F249_val = UnitGetType(EventUnit());
    if (autoF4C0F249_val == "ScourgeMP") {
        lv_uscbbsbjhufsrvtt = 1;
    }
    else if (autoF4C0F249_val == "InfestorTerran") {
        lv_ygsbfuktbqhxijgi = 2;
        lv_uscbbsbjhufsrvtt = 1;
    }
    else if (autoF4C0F249_val == "InfestorTerranBurrowed") {
        lv_ygsbfuktbqhxijgi = 2;
        lv_uscbbsbjhufsrvtt = 1;
    }
    else if (autoF4C0F249_val == "Broodling") {
        lv_ygsbfuktbqhxijgi = 1;
    }
    else {
    }
    lv_ygsbfuktbqhxijgi = (lv_ygsbfuktbqhxijgi * libARZM_gv_heqkteoxpmtafqim);
    lv_uscbbsbjhufsrvtt = (lv_uscbbsbjhufsrvtt * libARZM_gv_hvwseiqqxowffjfn);
    if ((UnitHasBehavior2(EventUnit(), "Detector13p75") == true)) {
        lv_ygsbfuktbqhxijgi += 1;
        lv_uscbbsbjhufsrvtt += 1;
    }

    if ((lv_uscbbsbjhufsrvtt > 0)) {
        TextExpressionSetToken("Param/Expression/lib_ARZM_74A0BA31", "A", IntToText(lv_uscbbsbjhufsrvtt));
        TextTagCreate(TextExpressionAssemble("Param/Expression/lib_ARZM_74A0BA31"), 24, UnitGetPosition(EventUnit()), 1.0, true, false, lv_bwjwkoxmhkdvqxci);
        TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 100.00, 0.00));
        TextTagSetVelocity(TextTagLastCreated(), 1.0, 90.0);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 5.0);
        autoF9B851ED_g = lv_bwjwkoxmhkdvqxci;
        autoF9B851ED_var = -1;
        while (true) {
            autoF9B851ED_var = PlayerGroupNextPlayer(autoF9B851ED_g, autoF9B851ED_var);
            if (autoF9B851ED_var < 0) { break; }
            PlayerModifyPropertyInt(autoF9B851ED_var, c_playerPropVespene, c_playerPropOperAdd, lv_uscbbsbjhufsrvtt);
        }
    }

    if ((lv_ygsbfuktbqhxijgi > 0)) {
        TextExpressionSetToken("Param/Expression/lib_ARZM_DA9D0359", "A", IntToText(lv_ygsbfuktbqhxijgi));
        TextTagCreate(TextExpressionAssemble("Param/Expression/lib_ARZM_DA9D0359"), 24, UnitGetPosition(EventUnit()), 1.5, true, false, lv_bwjwkoxmhkdvqxci);
        TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 100.00, 100.00));
        TextTagSetVelocity(TextTagLastCreated(), 1.0, 90.0);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 5.0);
        autoF6547D10_g = lv_bwjwkoxmhkdvqxci;
        autoF6547D10_var = -1;
        while (true) {
            autoF6547D10_var = PlayerGroupNextPlayer(autoF6547D10_g, autoF6547D10_var);
            if (autoF6547D10_var < 0) { break; }
            PlayerModifyPropertyInt(autoF6547D10_var, c_playerPropMinerals, c_playerPropOperAdd, lv_ygsbfuktbqhxijgi);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libARZM_gt_ZombieKillBounty_Init () {
    libARZM_gt_ZombieKillBounty = TriggerCreate("libARZM_gt_ZombieKillBounty_Func");
    TriggerEnable(libARZM_gt_ZombieKillBounty, false);
    TriggerAddEventUnitDied(libARZM_gt_ZombieKillBounty, null);
}

void libARZM_InitTriggers () {
    libARZM_gt_RunZombiecatastrophe_Init();
    libARZM_gt_ZombieSpawn_Init();
    libARZM_gt_BroodlingSpawn_Init();
    libARZM_gt_ScourgeSpawn_Init();
    libARZM_gt_InitialZombiesSpawn_Init();
    libARZM_gt_InitialBroodlingSpawn_Init();
    libARZM_gt_InitialScourgeSpawn_Init();
    libARZM_gt_ParasiticBomb_Init();
    libARZM_gt_ZombieAttacks_Init();
    libARZM_gt_ZombieChanceIncrease_Init();
    libARZM_gt_ZombieMutate_Init();
    libARZM_gt_ZombieKillBounty_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libARZM_InitLib_completed = false;

void libARZM_InitLib () {
    if (libARZM_InitLib_completed) {
        return;
    }

    libARZM_InitLib_completed = true;

    libARZM_InitLibraries();
    libARZM_InitVariables();
    libARZM_InitTriggers();
}

include "LibARMB"

