include "TriggerLibs/NativeLib"

include "LibD98B6E43_h"

//--------------------------------------------------------------------------------------------------
// Library: Attack Wave Generator (AWG)
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libD98B6E43_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libD98B6E43_InitVariables_completed = false;

void libD98B6E43_InitVariables () {
    int init_i;

    if (libD98B6E43_InitVariables_completed) {
        return;
    }

    libD98B6E43_InitVariables_completed = true;

    for (init_i = 0; init_i <= 100; init_i += 1) {
        libD98B6E43_gv_aWG_UnitGroup[init_i] = UnitGroupEmpty();
    }
}

// Functions
bool libD98B6E43_gf_AWG_BuildInProgress_BlackList (unit lp_aWGUnit) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitFilterMatch(lp_aWGUnit, UnitGetOwner(lp_aWGUnit), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)))) == true) && (UnitGetType(lp_aWGUnit) != "OrbitalCommand") && (UnitGetType(lp_aWGUnit) != "PlanetaryFortress") && (UnitGetType(lp_aWGUnit) != "CommandCenterFlying") && (UnitGetType(lp_aWGUnit) != "OrbitalCommandFlying") && (UnitGetType(lp_aWGUnit) != "BarracksFlying") && (UnitGetType(lp_aWGUnit) != "BioDomeCommandFlying") && (UnitGetType(lp_aWGUnit) != "FactoryFlying") && (UnitGetType(lp_aWGUnit) != "MengskBarracksFlying") && (UnitGetType(lp_aWGUnit) != "OrbitalCommandCenterMengskFlying") && (UnitGetType(lp_aWGUnit) != "MengskCommandCenterFlying") && (UnitGetType(lp_aWGUnit) != "FactoryMengskFlying") && (UnitGetType(lp_aWGUnit) != "MengskStarportFlying") && (UnitGetType(lp_aWGUnit) != "NovaBarracksFlying") && (UnitGetType(lp_aWGUnit) != "NovaCommandCenterFlying") && (UnitGetType(lp_aWGUnit) != "NovaFactoryFlying") && (UnitGetType(lp_aWGUnit) != "NovaStarportFlying") && (UnitGetType(lp_aWGUnit) != "TechScienceFacilityFlying") && (UnitGetType(lp_aWGUnit) != "StarportFlying") && (UnitGetType(lp_aWGUnit) != "TychusCommandCenterFlying") && (UnitGetType(lp_aWGUnit) != "SpineCrawlerUprooted") && (UnitGetType(lp_aWGUnit) != "SporeCrawlerUprooted") && (UnitGetType(lp_aWGUnit) != "SpineCrawlerUprootedStetmann") && (UnitGetType(lp_aWGUnit) != "SporeCrawlerUprootedStetmann") && (UnitGetType(lp_aWGUnit) != "StukovInfestedBarracksFlying") && (UnitGetType(lp_aWGUnit) != "StukovInfestedColonistCompoundFlying") && (UnitGetType(lp_aWGUnit) != "StukovInfestedCommandCenterFlying") && (UnitGetType(lp_aWGUnit) != "StukovInfestedFactoryFlying") && (UnitGetType(lp_aWGUnit) != "BlasterBillyACGluescreenDummy") && (UnitGetType(lp_aWGUnit) != "StukovInfestedStarportFlying") && (UnitGetType(lp_aWGUnit) != "InfestedSupply") && (UnitGetType(lp_aWGUnit) != "InfestedArmory") && (UnitGetType(lp_aWGUnit) != "InfestedBarracks") && (UnitGetType(lp_aWGUnit) != "InfestedBunker") && (UnitGetType(lp_aWGUnit) != "InfestedCC") && (UnitGetType(lp_aWGUnit) != "InfestedEngBay") && (UnitGetType(lp_aWGUnit) != "InfestedFactory") && (UnitGetType(lp_aWGUnit) != "InfestedMissileTurret") && (UnitGetType(lp_aWGUnit) != "InfestedRefinery") && (UnitGetType(lp_aWGUnit) != "InfestedStarport") && (UnitGetType(lp_aWGUnit) != "InfestedTechLab") && (UnitGetType(lp_aWGUnit) != "BarracksTechLabInfested") && (UnitGetType(lp_aWGUnit) != "FactoryTechLabInfested") && (UnitGetType(lp_aWGUnit) != "StarportTechLabInfested")) {
        return true;
    }
    else {
        return false;
    }
}

trigger auto_libD98B6E43_gf_AWG_Launch_03_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_casterU;
unit auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnU;
point auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnP;

void libD98B6E43_gf_AWG_Launch_03_Create (unit lp_casterU, unit lp_spawnU, point lp_spawnP) {
    auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnU = lp_spawnU;
    auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnP = lp_spawnP;

    if (auto_libD98B6E43_gf_AWG_Launch_03_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_03_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_03_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_03_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_03_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_casterU;
    unit lp_spawnU = auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_03_Create_lp_spawnP;

    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(lp_spawnU)) {
        UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateConstruct, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
    }
    else {
        UnitCreate(1, UnitGetType(lp_spawnU), 0, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
    }
    UnitBehaviorAdd(UnitLastCreated(), "AWGProtossRecall", UnitLastCreated(), 1);
    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_04_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_casterU;
unit auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnU;
point auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnP;

void libD98B6E43_gf_AWG_Launch_04_Create (unit lp_casterU, unit lp_spawnU, point lp_spawnP) {
    auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnU = lp_spawnU;
    auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnP = lp_spawnP;

    if (auto_libD98B6E43_gf_AWG_Launch_04_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_04_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_04_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_04_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_04_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_casterU;
    unit lp_spawnU = auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_04_Create_lp_spawnP;

    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(lp_spawnU)) {
        UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateConstruct | c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
    }
    else {
        UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
    }
    UnitBehaviorAdd(UnitLastCreated(), "SOAWarpInReinforcements", UnitLastCreated(), 1);
    libNtve_gf_CreateModelAtPoint("AWG_Singular_ProtossWarpIn", UnitGetPosition(UnitLastCreated()));
    ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleSingular(lp_spawnU));
    ActorSend(libNtve_gf_ActorLastCreated(), "AnimSetTimeScale BSD 0.350000");
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_05_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_casterU;
unit auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnU;
point auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnP;

void libD98B6E43_gf_AWG_Launch_05_Create (unit lp_casterU, unit lp_spawnU, point lp_spawnP) {
    auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnU = lp_spawnU;
    auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnP = lp_spawnP;

    if (auto_libD98B6E43_gf_AWG_Launch_05_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_05_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_05_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_05_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_05_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_casterU;
    unit lp_spawnU = auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_05_Create_lp_spawnP;

    // Automatic Variable Declarations
    // Implementation
    if ((PowerLevel(UnitGetOwner(lp_casterU), lp_spawnP, "PowerSource") > 0)) {
        if ((PowerLevel(UnitGetOwner(lp_casterU), lp_spawnP, "PowerSource") >= 2)) {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(lp_spawnU)) {
                UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateConstruct | c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            UnitBehaviorAdd(UnitLastCreated(), "SOAWarpInReinforcements", UnitLastCreated(), 1);
            UnitBehaviorAdd(UnitLastCreated(), "PowerUserWarpable", UnitLastCreated(), 1);
            libNtve_gf_CreateModelAtPoint("AWG_Singular_ProtossWarpIn", UnitGetPosition(UnitLastCreated()));
            ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleSingular(lp_spawnU));
            ActorSend(libNtve_gf_ActorLastCreated(), "AnimSetTimeScale BSD 0.350000");
            Wait(5.0, c_timeGame);
            libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
            UnitBehaviorRemove(UnitLastCreated(), "PowerUserWarpable", 1);
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
        }
        else {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(lp_spawnU)) {
                UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateConstruct | c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(lp_spawnU), c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            UnitBehaviorAdd(UnitLastCreated(), "SOAWarpInReinforcements", UnitLastCreated(), 1);
            UnitBehaviorSetDuration(UnitLastCreated(), "SOAWarpInReinforcements", 15.0);
            UnitBehaviorAdd(UnitLastCreated(), "PowerUserWarpable", UnitLastCreated(), 1);
            libNtve_gf_CreateModelAtPoint("AWG_Singular_ProtossWarpIn", UnitGetPosition(UnitLastCreated()));
            ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleSingular(lp_spawnU));
            ActorSend(libNtve_gf_ActorLastCreated(), "AnimSetTimeScale BSD 0.100000");
            Wait(15.0, c_timeGame);
            libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
            UnitBehaviorRemove(UnitLastCreated(), "PowerUserWarpable", 1);
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
        }
    }

    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_06_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_casterU;
point auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_spawnP;
int auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_laID;

void libD98B6E43_gf_AWG_Launch_06_Create (unit lp_casterU, point lp_spawnP, int lp_laID) {
    auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_spawnP = lp_spawnP;
    auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_laID = lp_laID;

    if (auto_libD98B6E43_gf_AWG_Launch_06_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_06_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_06_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_06_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_06_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_casterU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_spawnP;
    int lp_laID = auto_libD98B6E43_gf_AWG_Launch_06_Create_lp_laID;

    // Automatic Variable Declarations
    unitgroup auto7591F44D_g;
    int auto7591F44D_u;
    unit auto7591F44D_var;

    // Implementation
    libNtve_gf_CreateModelAtPoint("AWG_Core_TerranDropPod", lp_spawnP);
    ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleTerranDropPod(lp_laID));
    ActorSend(libNtve_gf_ActorLastCreated(), libNtve_gf_SetTeamColor(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false))));
    Wait(RandomFixed(3.3, 3.75), c_timeGame);
    auto7591F44D_g = libD98B6E43_gv_aWG_UnitGroup[lp_laID];
    auto7591F44D_u = UnitGroupCount(auto7591F44D_g, c_unitCountAll);
    for (;; auto7591F44D_u -= 1) {
        auto7591F44D_var = UnitGroupUnitFromEnd(auto7591F44D_g, auto7591F44D_u);
        if (auto7591F44D_var == null) { break; }
        if ((UnitFilterMatch(auto7591F44D_var, UnitGetOwner(auto7591F44D_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto7591F44D_var)) {
                UnitCreate(1, UnitGetType(auto7591F44D_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(auto7591F44D_var), c_unitCreateIgnorePlacement, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
        }

    }
    Wait(1.0, c_timeGame);
    ActorSend(libNtve_gf_ActorLastCreated(), "SetOpacity 0.800000 3.000000");
    Wait(RandomFixed(1.0, 3.0), c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_08_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_casterU;
point auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_spawnP;
int auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_laID;

void libD98B6E43_gf_AWG_Launch_08_Create (unit lp_casterU, point lp_spawnP, int lp_laID) {
    auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_spawnP = lp_spawnP;
    auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_laID = lp_laID;

    if (auto_libD98B6E43_gf_AWG_Launch_08_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_08_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_08_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_08_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_08_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_casterU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_spawnP;
    int lp_laID = auto_libD98B6E43_gf_AWG_Launch_08_Create_lp_laID;

    // Automatic Variable Declarations
    unitgroup auto85FE8482_g;
    int auto85FE8482_u;
    unit auto85FE8482_var;

    // Implementation
    libNtve_gf_CreateModelAtPoint("AWG_Core_TerranDropPod", lp_spawnP);
    ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleTerranDropPod(lp_laID));
    ActorSend(libNtve_gf_ActorLastCreated(), libNtve_gf_SetTeamColor(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false))));
    Wait(RandomFixed(3.3, 3.75), c_timeGame);
    auto85FE8482_g = libD98B6E43_gv_aWG_UnitGroup[lp_laID];
    auto85FE8482_u = UnitGroupCount(auto85FE8482_g, c_unitCountAll);
    for (;; auto85FE8482_u -= 1) {
        auto85FE8482_var = UnitGroupUnitFromEnd(auto85FE8482_g, auto85FE8482_u);
        if (auto85FE8482_var == null) { break; }
        if ((UnitFilterMatch(auto85FE8482_var, UnitGetOwner(auto85FE8482_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto85FE8482_var)) {
                UnitCreate(1, UnitGetType(auto85FE8482_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(auto85FE8482_var), c_unitCreateIgnorePlacement, UnitGetOwner(lp_casterU), lp_spawnP, 270.0);
            }
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
        }

    }
    Wait(1.0, c_timeGame);
    ActorSend(libNtve_gf_ActorLastCreated(), "SetOpacity 0.800000 3.000000");
    Wait(RandomFixed(1.0, 3.0), c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_09_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_casterU;
point auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_spawnP;
int auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_laID;

void libD98B6E43_gf_AWG_Launch_09_Create (unit lp_casterU, point lp_spawnP, int lp_laID) {
    auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_spawnP = lp_spawnP;
    auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_laID = lp_laID;

    if (auto_libD98B6E43_gf_AWG_Launch_09_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_09_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_09_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_09_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_09_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_casterU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_spawnP;
    int lp_laID = auto_libD98B6E43_gf_AWG_Launch_09_Create_lp_laID;

    // Automatic Variable Declarations
    unitgroup auto951070B2_g;
    int auto951070B2_u;
    unit auto951070B2_var;

    // Implementation
    libNtve_gf_CreateModelAtPoint("AWG_Core_ZergDropPod", lp_spawnP);
    ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleZergDropPod(lp_laID));
    ActorSend(libNtve_gf_ActorLastCreated(), libNtve_gf_SetTeamColor(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lp_casterU), false))));
    Wait(RandomFixed(3.5, 4.2), c_timeGame);
    auto951070B2_g = libD98B6E43_gv_aWG_UnitGroup[lp_laID];
    auto951070B2_u = UnitGroupCount(auto951070B2_g, c_unitCountAll);
    for (;; auto951070B2_u -= 1) {
        auto951070B2_var = UnitGroupUnitFromEnd(auto951070B2_g, auto951070B2_u);
        if (auto951070B2_var == null) { break; }
        if ((UnitFilterMatch(auto951070B2_var, UnitGetOwner(auto951070B2_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto951070B2_var)) {
                UnitCreate(1, UnitGetType(auto951070B2_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement | c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), RegionRandomPoint(RegionCircle(lp_spawnP, 0.6)), 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(auto951070B2_var), c_unitCreateIgnorePlacement | c_unitCreateIgnoreBirth, UnitGetOwner(lp_casterU), RegionRandomPoint(RegionCircle(lp_spawnP, 0.6)), 270.0);
            }
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
        }

    }
    Wait(1.0, c_timeGame);
    ActorSend(libNtve_gf_ActorLastCreated(), "SetOpacity 0.800000 3.000000");
    Wait(RandomFixed(3.5, 6.0), c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    return true;
}

trigger auto_libD98B6E43_gf_AWG_Launch_10_Create_Trigger = null;
unit auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_casterU;
point auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_spawnP;
int auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_laID;

void libD98B6E43_gf_AWG_Launch_10_Create (unit lp_casterU, point lp_spawnP, int lp_laID) {
    auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_casterU = lp_casterU;
    auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_spawnP = lp_spawnP;
    auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_laID = lp_laID;

    if (auto_libD98B6E43_gf_AWG_Launch_10_Create_Trigger == null) {
        auto_libD98B6E43_gf_AWG_Launch_10_Create_Trigger = TriggerCreate("auto_libD98B6E43_gf_AWG_Launch_10_Create_TriggerFunc");
    }

    TriggerExecute(auto_libD98B6E43_gf_AWG_Launch_10_Create_Trigger, false, false);
}

bool auto_libD98B6E43_gf_AWG_Launch_10_Create_TriggerFunc (bool testConds, bool runActions) {
    unit lp_casterU = auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_casterU;
    point lp_spawnP = auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_spawnP;
    int lp_laID = auto_libD98B6E43_gf_AWG_Launch_10_Create_lp_laID;

    // Automatic Variable Declarations
    unitgroup autoAD0B475B_g;
    int autoAD0B475B_u;
    unit autoAD0B475B_var;

    // Implementation
    autoAD0B475B_g = libD98B6E43_gv_aWG_UnitGroup[lp_laID];
    autoAD0B475B_u = UnitGroupCount(autoAD0B475B_g, c_unitCountAll);
    for (;; autoAD0B475B_u -= 1) {
        autoAD0B475B_var = UnitGroupUnitFromEnd(autoAD0B475B_g, autoAD0B475B_u);
        if (autoAD0B475B_var == null) { break; }
        if ((UnitFilterMatch(autoAD0B475B_var, UnitGetOwner(autoAD0B475B_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            if ((UnitHasBehavior2(lp_casterU, "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(autoAD0B475B_var)) {
                UnitCreate(1, UnitGetType(autoAD0B475B_var), c_unitCreateConstruct, UnitGetOwner(lp_casterU), RegionRandomPoint(RegionCircle(lp_spawnP, 0.6)), 270.0);
            }
            else {
                UnitCreate(1, UnitGetType(autoAD0B475B_var), 0, UnitGetOwner(lp_casterU), RegionRandomPoint(RegionCircle(lp_spawnP, 0.6)), 270.0);
            }
            UnitBehaviorAdd(UnitLastCreated(), "AWGUnburrowing", UnitLastCreated(), 1);
            libD98B6E43_gf_AWG_Launch_IssueOrderTLME(lp_casterU, UnitLastCreated());
            Wait(RandomFixed(0.0, 0.25), c_timeGame);
        }

    }
    return true;
}

string libD98B6E43_gf_AWG_Launch_SetScaleHybridWarpIn (int lp_aWG_ID) {
    // Variable Declarations
    fixed lv_aWGSC_Supply;
    fixed lv_aWGSC_Light;
    fixed lv_aWGSC_Massive;
    fixed lv_aWGSC_Final;

    // Automatic Variable Declarations
    unitgroup auto020CF780_g;
    int auto020CF780_u;
    unit auto020CF780_var;

    // Variable Initialization

    // Implementation
    auto020CF780_g = libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID];
    auto020CF780_u = UnitGroupCount(auto020CF780_g, c_unitCountAll);
    for (;; auto020CF780_u -= 1) {
        auto020CF780_var = UnitGroupUnitFromEnd(auto020CF780_g, auto020CF780_u);
        if (auto020CF780_var == null) { break; }
        if ((UnitFilterMatch(auto020CF780_var, UnitGetOwner(auto020CF780_var), UnitFilter((1 << c_targetFilterLight), 0, 0, 0)) == true)) {
            lv_aWGSC_Light += 1;
        }

        if ((UnitFilterMatch(auto020CF780_var, UnitGetOwner(auto020CF780_var), UnitFilter((1 << c_targetFilterMassive), 0, 0, 0)) == true)) {
            lv_aWGSC_Massive += 1;
        }

        lv_aWGSC_Supply += UnitGetPropertyFixed(auto020CF780_var, c_unitPropSuppliesUsed, c_unitPropNormal);
    }
    lv_aWGSC_Supply = (1.0 + (lv_aWGSC_Supply * 0.1));
    lv_aWGSC_Light = (lv_aWGSC_Light / UnitGroupCount(libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID], c_unitCountAlive));
    lv_aWGSC_Light = (-0.7 * (lv_aWGSC_Light / UnitGroupCount(libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID], c_unitCountAlive)));
    lv_aWGSC_Massive = (0.5 * (lv_aWGSC_Massive / UnitGroupCount(libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID], c_unitCountAlive)));
    lv_aWGSC_Final = (lv_aWGSC_Supply + lv_aWGSC_Light + lv_aWGSC_Massive);
    if ((lv_aWGSC_Final > 0.0)) {
        if ((lv_aWGSC_Final < 3.25)) {
            return (("SetScale " + FixedToString(lv_aWGSC_Final, 5)));
        }
        else {
            return (("SetScale " + FixedToString(3.25, 5)));
        }
    }
    else {
        return (("SetScale " + FixedToString(1.0, 5)));
    }
}

string libD98B6E43_gf_AWG_Launch_SetScaleTerranDropPod (int lp_aWG_ID) {
    // Variable Declarations
    fixed lv_aWGSC_Supply;
    fixed lv_aWGSC_Light;
    fixed lv_aWGSC_Massive;
    fixed lv_aWGSC_Final;
    int lv_aWGSC_GroundUnits;

    // Automatic Variable Declarations
    unitgroup autoB1AB612B_g;
    int autoB1AB612B_u;
    unit autoB1AB612B_var;

    // Variable Initialization

    // Implementation
    autoB1AB612B_g = libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID];
    autoB1AB612B_u = UnitGroupCount(autoB1AB612B_g, c_unitCountAll);
    for (;; autoB1AB612B_u -= 1) {
        autoB1AB612B_var = UnitGroupUnitFromEnd(autoB1AB612B_g, autoB1AB612B_u);
        if (autoB1AB612B_var == null) { break; }
        if ((UnitFilterMatch(autoB1AB612B_var, UnitGetOwner(autoB1AB612B_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            lv_aWGSC_GroundUnits += 1;
            if ((UnitFilterMatch(autoB1AB612B_var, UnitGetOwner(autoB1AB612B_var), UnitFilter((1 << c_targetFilterLight), 0, 0, 0)) == true)) {
                lv_aWGSC_Light += 1;
            }

            if ((UnitFilterMatch(autoB1AB612B_var, UnitGetOwner(autoB1AB612B_var), UnitFilter((1 << c_targetFilterMassive), 0, 0, 0)) == true)) {
                lv_aWGSC_Massive += 1;
            }

            lv_aWGSC_Supply += UnitGetPropertyFixed(autoB1AB612B_var, c_unitPropSuppliesUsed, c_unitPropNormal);
        }

    }
    lv_aWGSC_Supply = (1.0 + (lv_aWGSC_Supply * 0.085));
    lv_aWGSC_Light = (lv_aWGSC_Light / lv_aWGSC_GroundUnits);
    lv_aWGSC_Light = (-0.4 * (lv_aWGSC_Light / lv_aWGSC_GroundUnits));
    lv_aWGSC_Massive = (0.2 * (lv_aWGSC_Massive / lv_aWGSC_GroundUnits));
    lv_aWGSC_Final = (lv_aWGSC_Supply + lv_aWGSC_Light + lv_aWGSC_Massive);
    if ((lv_aWGSC_Final > 0.825)) {
        if ((lv_aWGSC_Final < 2.3)) {
            return (("SetScale " + FixedToString(lv_aWGSC_Final, 5)));
        }
        else {
            return (("SetScale " + FixedToString(2.3, 5)));
        }
    }
    else {
        return (("SetScale " + FixedToString(0.825, 5)));
    }
}

string libD98B6E43_gf_AWG_Launch_SetScaleZergDropPod (int lp_aWG_ID) {
    // Variable Declarations
    fixed lv_aWGSC_Supply;
    fixed lv_aWGSC_Structure;
    fixed lv_aWGSC_Light;
    fixed lv_aWGSC_Massive;
    fixed lv_aWGSC_Final;
    int lv_aWGSC_GroundUnits;

    // Automatic Variable Declarations
    unitgroup auto02AFA1F5_g;
    int auto02AFA1F5_u;
    unit auto02AFA1F5_var;

    // Variable Initialization

    // Implementation
    auto02AFA1F5_g = libD98B6E43_gv_aWG_UnitGroup[lp_aWG_ID];
    auto02AFA1F5_u = UnitGroupCount(auto02AFA1F5_g, c_unitCountAll);
    for (;; auto02AFA1F5_u -= 1) {
        auto02AFA1F5_var = UnitGroupUnitFromEnd(auto02AFA1F5_g, auto02AFA1F5_u);
        if (auto02AFA1F5_var == null) { break; }
        if ((UnitFilterMatch(auto02AFA1F5_var, UnitGetOwner(auto02AFA1F5_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
            lv_aWGSC_GroundUnits += 1;
            if ((UnitFilterMatch(auto02AFA1F5_var, UnitGetOwner(auto02AFA1F5_var), UnitFilter((1 << c_targetFilterLight), 0, 0, 0)) == true)) {
                lv_aWGSC_Light += 1.0;
            }

            if ((UnitFilterMatch(auto02AFA1F5_var, UnitGetOwner(auto02AFA1F5_var), UnitFilter((1 << c_targetFilterMassive), 0, 0, 0)) == true)) {
                lv_aWGSC_Massive += 1.0;
            }

            if ((UnitFilterMatch(auto02AFA1F5_var, UnitGetOwner(auto02AFA1F5_var), UnitFilter((1 << c_targetFilterStructure), 0, 0, 0)) == true)) {
                if (((UnitGetType(auto02AFA1F5_var) == "SpineCrawler") || (UnitGetType(auto02AFA1F5_var) == "SpineCrawlerUprooted") || (UnitGetType(auto02AFA1F5_var) == "SporeCrawler") || (UnitGetType(auto02AFA1F5_var) == "SporeCrawlerUprooted"))) {
                    lv_aWGSC_Structure += 0.33;
                }
                else {
                    lv_aWGSC_Structure += 1.0;
                }
            }

            lv_aWGSC_Supply += UnitGetPropertyFixed(auto02AFA1F5_var, c_unitPropSuppliesUsed, c_unitPropNormal);
        }

    }
    lv_aWGSC_Supply = (1.0 + (lv_aWGSC_Supply * 0.06));
    lv_aWGSC_Light = (lv_aWGSC_Light / lv_aWGSC_GroundUnits);
    lv_aWGSC_Light = (-0.3 * (lv_aWGSC_Light / lv_aWGSC_GroundUnits));
    lv_aWGSC_Massive = (0.15 * (lv_aWGSC_Massive / lv_aWGSC_GroundUnits));
    lv_aWGSC_Structure = (0.9 * (lv_aWGSC_Structure / lv_aWGSC_GroundUnits));
    lv_aWGSC_Final = (lv_aWGSC_Supply + lv_aWGSC_Light + lv_aWGSC_Massive + lv_aWGSC_Structure);
    if ((lv_aWGSC_Final > 0.825)) {
        if ((lv_aWGSC_Final < 2.3)) {
            return (("SetScale " + FixedToString(lv_aWGSC_Final, 5)));
        }
        else {
            return (("SetScale " + FixedToString(2.3, 5)));
        }
    }
    else {
        return (("SetScale " + FixedToString(0.825, 5)));
    }
}

string libD98B6E43_gf_AWG_Launch_SetScaleSingular (unit lp_spawnUnit) {
    // Variable Declarations
    fixed lv_aWGSC_Supply;
    fixed lv_aWGSC_Light;
    fixed lv_aWGSC_Massive;
    fixed lv_aWGSC_Final;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((UnitFilterMatch(lp_spawnUnit, UnitGetOwner(lp_spawnUnit), UnitFilter((1 << c_targetFilterLight), 0, 0, 0)) == true)) {
        lv_aWGSC_Light += 1;
    }

    if ((UnitFilterMatch(lp_spawnUnit, UnitGetOwner(lp_spawnUnit), UnitFilter((1 << c_targetFilterMassive), 0, 0, 0)) == true)) {
        lv_aWGSC_Massive += 1;
    }

    lv_aWGSC_Supply += UnitGetPropertyFixed(lp_spawnUnit, c_unitPropSuppliesUsed, c_unitPropNormal);
    lv_aWGSC_Supply = (1.0 + (lv_aWGSC_Supply * 0.1));
    lv_aWGSC_Light = (-0.25 * lv_aWGSC_Light);
    lv_aWGSC_Massive = (0.3 * lv_aWGSC_Massive);
    lv_aWGSC_Final = (lv_aWGSC_Supply + lv_aWGSC_Light + lv_aWGSC_Massive);
    if ((lv_aWGSC_Final > 0.0)) {
        if ((lv_aWGSC_Final < 3.25)) {
            return (("SetScale " + FixedToString(lv_aWGSC_Final, 5)));
        }
        else {
            return (("SetScale " + FixedToString(3.25, 5)));
        }
    }
    else {
        return (("SetScale " + FixedToString(1.0, 5)));
    }
}

int libD98B6E43_gf_AWG_Launch_SetTLM (unit lp_casterUnit) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitHasBehavior2(lp_casterUnit, "TLMHybridInstantWarpIn") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMNoEffect") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMProtossTeleport") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMProtossWarpIn") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMProtossWarpInWithPylonPower") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMTerranDropPod") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMTerranReentry") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMTerranParachute") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMZergDropPod") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMZergUnburrow") == true) || (UnitHasBehavior2(lp_casterUnit, "TLMDescend") == true))) {
        if ((UnitHasBehavior2(lp_casterUnit, "TLMNoEffect") == true)) {
            return 1;
        }
        else {
            if ((UnitHasBehavior2(lp_casterUnit, "TLMHybridInstantWarpIn") == true)) {
                return 2;
            }
            else {
                if ((UnitHasBehavior2(lp_casterUnit, "TLMProtossTeleport") == true)) {
                    return 3;
                }
                else {
                    if ((UnitHasBehavior2(lp_casterUnit, "TLMProtossWarpIn") == true)) {
                        return 4;
                    }
                    else {
                        if ((UnitHasBehavior2(lp_casterUnit, "TLMProtossWarpInWithPylonPower") == true)) {
                            return 5;
                        }
                        else {
                            if ((UnitHasBehavior2(lp_casterUnit, "TLMTerranDropPod") == true)) {
                                return 6;
                            }
                            else {
                                if ((UnitHasBehavior2(lp_casterUnit, "TLMTerranReentry") == true)) {
                                    return 7;
                                }
                                else {
                                    if ((UnitHasBehavior2(lp_casterUnit, "TLMTerranParachute") == true)) {
                                        return 8;
                                    }
                                    else {
                                        if ((UnitHasBehavior2(lp_casterUnit, "TLMZergDropPod") == true)) {
                                            return 9;
                                        }
                                        else {
                                            if ((UnitHasBehavior2(lp_casterUnit, "TLMZergUnburrow") == true)) {
                                                return 10;
                                            }
                                            else {
                                                if ((UnitHasBehavior2(lp_casterUnit, "TLMDescend") == true)) {
                                                    return 11;
                                                }
                                                else {
                                                    return 1;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else {
        return 0;
    }
}

void libD98B6E43_gf_AWG_Launch_ApplyExtras (unit lp_casterUnit, unit lp_lastCreatedUnit) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior2(lp_casterUnit, "AttackWaveGeneratorHallucinationSpawner") == true)) {
        UnitBehaviorAdd(lp_lastCreatedUnit, "Hallucination", lp_lastCreatedUnit, 1);
    }
    else {
        if ((UnitHasBehavior2(lp_casterUnit, "AttackWaveGeneratorVoidShadeSpawner") == true)) {
            UnitBehaviorAdd(lp_lastCreatedUnit, "VoidShade", lp_lastCreatedUnit, 1);
        }
        else {
            if ((UnitHasBehavior2(lp_casterUnit, "AttackWaveGeneratorTerrazineShadowSpawner") == true)) {
                UnitBehaviorAdd(lp_lastCreatedUnit, "TerrazineShadow", lp_lastCreatedUnit, 1);
            }
            else {
                if ((UnitHasBehavior2(lp_casterUnit, "AttackWaveGeneratorCorruptedHollow") == true)) {
                    UnitBehaviorAdd(lp_lastCreatedUnit, "CorruptedHollow", lp_lastCreatedUnit, 1);
                }
                else {
                    if ((UnitHasBehavior2(lp_casterUnit, "AttackWaveGeneratorPoweroftheEyeSpawner") == true)) {
                        UnitBehaviorAdd(lp_lastCreatedUnit, "PoweroftheEye", lp_lastCreatedUnit, 1);
                    }

                }
            }
        }
    }
}

void libD98B6E43_gf_AWG_Launch_IssueOrdernoTLME (unit lp_casterUnit, unit lp_lastCreatedUnit) {
    // Variable Declarations
    int lv_rallyInt;

    // Automatic Variable Declarations
    int autoA5597A08_ae;
    const int autoA5597A08_ai = 1;
    int auto707A821A_ae;
    const int auto707A821A_ai = 1;

    // Variable Initialization

    // Implementation
    libD98B6E43_gf_AWG_Launch_ApplyExtras(lp_casterUnit, lp_lastCreatedUnit);
    if ((UnitHasBehavior2(lp_casterUnit, "AWGJustMove") == false)) {
        auto707A821A_ae = UnitRallyPointTargetCount(lp_casterUnit, 1);
        lv_rallyInt = 1;
        for ( ; ( (auto707A821A_ai >= 0 && lv_rallyInt <= auto707A821A_ae) || (auto707A821A_ai < 0 && lv_rallyInt >= auto707A821A_ae) ) ; lv_rallyInt += auto707A821A_ai ) {
            UnitIssueOrder(lp_lastCreatedUnit, OrderTargetingPoint(AbilityCommand("attack", 0), UnitRallyPointTargetPoint(lp_casterUnit, 1, lv_rallyInt)), c_orderQueueAddToEnd);
        }
    }
    else {
        autoA5597A08_ae = UnitRallyPointTargetCount(lp_casterUnit, 1);
        lv_rallyInt = 1;
        for ( ; ( (autoA5597A08_ai >= 0 && lv_rallyInt <= autoA5597A08_ae) || (autoA5597A08_ai < 0 && lv_rallyInt >= autoA5597A08_ae) ) ; lv_rallyInt += autoA5597A08_ai ) {
            UnitIssueOrder(lp_lastCreatedUnit, OrderTargetingPoint(AbilityCommand("move", 0), UnitRallyPointTargetPoint(lp_casterUnit, 1, lv_rallyInt)), c_orderQueueAddToEnd);
        }
    }
}

void libD98B6E43_gf_AWG_Launch_IssueOrderTLME (unit lp_casterUnit, unit lp_lastCreatedUnit) {
    // Variable Declarations
    int lv_rallyInt;

    // Automatic Variable Declarations
    int autoF82528E0_ae;
    const int autoF82528E0_ai = 1;
    int auto5478CC79_ae;
    const int auto5478CC79_ai = 1;

    // Variable Initialization

    // Implementation
    libD98B6E43_gf_AWG_Launch_ApplyExtras(lp_casterUnit, lp_lastCreatedUnit);
    if ((UnitHasBehavior2(lp_casterUnit, "AWGJustMove") == false)) {
        auto5478CC79_ae = UnitRallyPointTargetCount(lp_casterUnit, 1);
        lv_rallyInt = 2;
        for ( ; ( (auto5478CC79_ai >= 0 && lv_rallyInt <= auto5478CC79_ae) || (auto5478CC79_ai < 0 && lv_rallyInt >= auto5478CC79_ae) ) ; lv_rallyInt += auto5478CC79_ai ) {
            UnitIssueOrder(lp_lastCreatedUnit, OrderTargetingPoint(AbilityCommand("attack", 0), UnitRallyPointTargetPoint(lp_casterUnit, 1, lv_rallyInt)), c_orderQueueAddToEnd);
        }
    }
    else {
        autoF82528E0_ae = UnitRallyPointTargetCount(lp_casterUnit, 1);
        lv_rallyInt = 2;
        for ( ; ( (autoF82528E0_ai >= 0 && lv_rallyInt <= autoF82528E0_ae) || (autoF82528E0_ai < 0 && lv_rallyInt >= autoF82528E0_ae) ) ; lv_rallyInt += autoF82528E0_ai ) {
            UnitIssueOrder(lp_lastCreatedUnit, OrderTargetingPoint(AbilityCommand("move", 0), UnitRallyPointTargetPoint(lp_casterUnit, 1, lv_rallyInt)), c_orderQueueAddToEnd);
        }
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Enabler
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_Enabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(libD98B6E43_gt_AWG_Created, true);
    TriggerEnable(libD98B6E43_gt_AWG_Destroyed, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(libD98B6E43_gt_AWG_LoadUnitGroup, true);
    TriggerEnable(libD98B6E43_gt_AWG_UnloadUnitGroup, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(libD98B6E43_gt_AWG_Launch, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(libD98B6E43_gt_AWG_TLM_Button, true);
    TriggerEnable(libD98B6E43_gt_AWG_Extras_Button, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_Enabler_Init () {
    libD98B6E43_gt_AWG_Enabler = TriggerCreate("libD98B6E43_gt_AWG_Enabler_Func");
    TriggerAddEventTimeElapsed(libD98B6E43_gt_AWG_Enabler, 9.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Created
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_Created_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    const int auto7BCC4A65_ae = 100;
    const int auto7BCC4A65_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "AttackWaveGenerator"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_int = 1;
    for ( ; ( (auto7BCC4A65_ai >= 0 && lv_int <= auto7BCC4A65_ae) || (auto7BCC4A65_ai < 0 && lv_int >= auto7BCC4A65_ae) ) ; lv_int += auto7BCC4A65_ai ) {
        if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] == null)) {
            libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] = EventUnitCreatedUnit();
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_Created_Init () {
    libD98B6E43_gt_AWG_Created = TriggerCreate("libD98B6E43_gt_AWG_Created_Func");
    TriggerEnable(libD98B6E43_gt_AWG_Created, false);
    TriggerAddEventUnitCreated(libD98B6E43_gt_AWG_Created, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Destroyed
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_Destroyed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    const int autoCB45C89D_ae = 100;
    const int autoCB45C89D_ai = 1;
    unitgroup auto49C802F4_g;
    int auto49C802F4_u;
    unit auto49C802F4_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "AttackWaveGenerator"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_int = 1;
    for ( ; ( (autoCB45C89D_ai >= 0 && lv_int <= autoCB45C89D_ae) || (autoCB45C89D_ai < 0 && lv_int >= autoCB45C89D_ae) ) ; lv_int += autoCB45C89D_ai ) {
        if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] == EventUnit())) {
            auto49C802F4_g = libD98B6E43_gv_aWG_UnitGroup[lv_int];
            auto49C802F4_u = UnitGroupCount(auto49C802F4_g, c_unitCountAll);
            for (;; auto49C802F4_u -= 1) {
                auto49C802F4_var = UnitGroupUnitFromEnd(auto49C802F4_g, auto49C802F4_u);
                if (auto49C802F4_var == null) { break; }
                UnitKill(auto49C802F4_var);
                UnitRemove(auto49C802F4_var);
            }
            libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] = null;
            UnitGroupClear(libD98B6E43_gv_aWG_UnitGroup[lv_int]);
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_Destroyed_Init () {
    libD98B6E43_gt_AWG_Destroyed = TriggerCreate("libD98B6E43_gt_AWG_Destroyed_Func");
    TriggerEnable(libD98B6E43_gt_AWG_Destroyed, false);
    TriggerAddEventUnitDied(libD98B6E43_gt_AWG_Destroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Load Unit Group
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_LoadUnitGroup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    const int auto4F9A2BEB_ae = 100;
    const int auto4F9A2BEB_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != "CommandPost"))) {
            return false;
        }

        if (!((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != "AttackWaveGenerator"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_int = 1;
    for ( ; ( (auto4F9A2BEB_ai >= 0 && lv_int <= auto4F9A2BEB_ae) || (auto4F9A2BEB_ai < 0 && lv_int >= auto4F9A2BEB_ae) ) ; lv_int += auto4F9A2BEB_ai ) {
        if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] == EventPlayerEffectUsedUnit(c_effectUnitCaster))) {
            UnitSetPosition(EventPlayerEffectUsedUnit(c_effectUnitTarget), UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitCaster)), false);
            libNtve_gf_ShowHideUnit(EventPlayerEffectUsedUnit(c_effectUnitTarget), false);
            UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "AttackWaveGeneratorCargoUnitSuppression", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
            UnitGroupAdd(libD98B6E43_gv_aWG_UnitGroup[lv_int], EventPlayerEffectUsedUnit(c_effectUnitTarget));
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_LoadUnitGroup_Init () {
    libD98B6E43_gt_AWG_LoadUnitGroup = TriggerCreate("libD98B6E43_gt_AWG_LoadUnitGroup_Func");
    TriggerEnable(libD98B6E43_gt_AWG_LoadUnitGroup, false);
    TriggerAddEventPlayerEffectUsed(libD98B6E43_gt_AWG_LoadUnitGroup, c_playerAny, "AttackWaveGeneratorLoadTargetUnit");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Unload Unit Group
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_UnloadUnitGroup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    const int autoA20C87DF_ae = 100;
    const int autoA20C87DF_ai = 1;
    unitgroup auto42788B01_g;
    int auto42788B01_u;
    unit auto42788B01_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_int = 1;
    for ( ; ( (autoA20C87DF_ai >= 0 && lv_int <= autoA20C87DF_ae) || (autoA20C87DF_ai < 0 && lv_int >= autoA20C87DF_ae) ) ; lv_int += autoA20C87DF_ai ) {
        if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_int] == EventPlayerEffectUsedUnit(c_effectUnitCaster))) {
            auto42788B01_g = libD98B6E43_gv_aWG_UnitGroup[lv_int];
            auto42788B01_u = UnitGroupCount(auto42788B01_g, c_unitCountAll);
            for (;; auto42788B01_u -= 1) {
                auto42788B01_var = UnitGroupUnitFromEnd(auto42788B01_g, auto42788B01_u);
                if (auto42788B01_var == null) { break; }
                UnitRemove(auto42788B01_var);
            }
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_UnloadUnitGroup_Init () {
    libD98B6E43_gt_AWG_UnloadUnitGroup = TriggerCreate("libD98B6E43_gt_AWG_UnloadUnitGroup_Func");
    TriggerEnable(libD98B6E43_gt_AWG_UnloadUnitGroup, false);
    TriggerAddEventPlayerEffectUsed(libD98B6E43_gt_AWG_UnloadUnitGroup, c_playerAny, "AttackWaveGeneratorUnloadUnitGroup");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Launch
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_Launch_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_aWG_ID;
    int lv_launch_GroundUnits;

    // Automatic Variable Declarations
    const int auto3916B744_ae = 100;
    const int auto3916B744_ai = 1;
    int autoB2A3A199_val;
    unitgroup autoADDA07C6_g;
    int autoADDA07C6_u;
    unit autoADDA07C6_var;
    unitgroup auto6AB9096C_g;
    int auto6AB9096C_u;
    unit auto6AB9096C_var;
    unitgroup autoF87999BE_g;
    int autoF87999BE_u;
    unit autoF87999BE_var;
    unitgroup auto43502C25_g;
    int auto43502C25_u;
    unit auto43502C25_var;
    unitgroup autoB8A387FF_g;
    int autoB8A387FF_u;
    unit autoB8A387FF_var;
    unitgroup autoAE684BA0_g;
    int autoAE684BA0_u;
    unit autoAE684BA0_var;
    unitgroup auto2B10D5BF_g;
    int auto2B10D5BF_u;
    unit auto2B10D5BF_var;
    unitgroup auto6E59F68C_g;
    int auto6E59F68C_u;
    unit auto6E59F68C_var;
    unitgroup autoCCEE0C42_g;
    int autoCCEE0C42_u;
    unit autoCCEE0C42_var;
    unitgroup autoDAF8E095_g;
    int autoDAF8E095_u;
    unit autoDAF8E095_var;
    unitgroup auto7233847A_g;
    int auto7233847A_u;
    unit auto7233847A_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropEnergyPercent, 0.0);
    lv_aWG_ID = 1;
    for ( ; ( (auto3916B744_ai >= 0 && lv_aWG_ID <= auto3916B744_ae) || (auto3916B744_ai < 0 && lv_aWG_ID >= auto3916B744_ae) ) ; lv_aWG_ID += auto3916B744_ai ) {
        if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_aWG_ID] == EventUnit()) && (UnitGroupCount(libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID], c_unitCountAlive) > 0)) {
            autoB2A3A199_val = libD98B6E43_gf_AWG_Launch_SetTLM(EventUnit());
            if (autoB2A3A199_val == 0) {
                autoADDA07C6_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoADDA07C6_u = UnitGroupCount(autoADDA07C6_g, c_unitCountAll);
                for (;; autoADDA07C6_u -= 1) {
                    autoADDA07C6_var = UnitGroupUnitFromEnd(autoADDA07C6_g, autoADDA07C6_u);
                    if (autoADDA07C6_var == null) { break; }
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(autoADDA07C6_var)) {
                        UnitCreate(1, UnitGetType(autoADDA07C6_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement, UnitGetOwner(EventUnit()), UnitGetPosition(EventUnit()), 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(autoADDA07C6_var), c_unitCreateIgnorePlacement, UnitGetOwner(EventUnit()), UnitGetPosition(EventUnit()), 270.0);
                    }
                    libD98B6E43_gf_AWG_Launch_IssueOrdernoTLME(EventUnit(), UnitLastCreated());
                }
            }
            else if (autoB2A3A199_val == 1) {
                libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                auto6AB9096C_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                auto6AB9096C_u = UnitGroupCount(auto6AB9096C_g, c_unitCountAll);
                for (;; auto6AB9096C_u -= 1) {
                    auto6AB9096C_var = UnitGroupUnitFromEnd(auto6AB9096C_g, auto6AB9096C_u);
                    if (auto6AB9096C_var == null) { break; }
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto6AB9096C_var)) {
                        UnitCreate(1, UnitGetType(auto6AB9096C_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(auto6AB9096C_var), c_unitCreateIgnorePlacement, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(libD98B6E43_gv_aWG_Launch_CasterUnit, UnitLastCreated());
                }
            }
            else if (autoB2A3A199_val == 2) {
                libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                libD98B6E43_gv_aWG_Launch_ID = lv_aWG_ID;
                libNtve_gf_CreateModelAtPoint("AWG_Core_HybridWarp", libD98B6E43_gv_aWG_Launch_Point);
                ActorSend(libNtve_gf_ActorLastCreated(), libD98B6E43_gf_AWG_Launch_SetScaleHybridWarpIn(lv_aWG_ID));
                Wait(0.25, c_timeGame);
                autoF87999BE_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoF87999BE_u = UnitGroupCount(autoF87999BE_g, c_unitCountAll);
                for (;; autoF87999BE_u -= 1) {
                    autoF87999BE_var = UnitGroupUnitFromEnd(autoF87999BE_g, autoF87999BE_u);
                    if (autoF87999BE_var == null) { break; }
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(autoF87999BE_var)) {
                        UnitCreate(1, UnitGetType(autoF87999BE_var), c_unitCreateConstruct | c_unitCreateIgnorePlacement, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(autoF87999BE_var), c_unitCreateIgnorePlacement, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(libD98B6E43_gv_aWG_Launch_CasterUnit, UnitLastCreated());
                }
            }
            else if (autoB2A3A199_val == 3) {
                auto43502C25_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                auto43502C25_u = UnitGroupCount(auto43502C25_g, c_unitCountAll);
                for (;; auto43502C25_u -= 1) {
                    auto43502C25_var = UnitGroupUnitFromEnd(auto43502C25_g, auto43502C25_u);
                    if (auto43502C25_var == null) { break; }
                    libD98B6E43_gf_AWG_Launch_03_Create(EventUnit(), auto43502C25_var, UnitRallyPointTargetPoint(EventUnit(), 1, 1));
                }
            }
            else if (autoB2A3A199_val == 4) {
                autoB8A387FF_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoB8A387FF_u = UnitGroupCount(autoB8A387FF_g, c_unitCountAll);
                for (;; autoB8A387FF_u -= 1) {
                    autoB8A387FF_var = UnitGroupUnitFromEnd(autoB8A387FF_g, autoB8A387FF_u);
                    if (autoB8A387FF_var == null) { break; }
                    libD98B6E43_gf_AWG_Launch_04_Create(EventUnit(), autoB8A387FF_var, UnitRallyPointTargetPoint(EventUnit(), 1, 1));
                }
            }
            else if (autoB2A3A199_val == 5) {
                autoAE684BA0_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoAE684BA0_u = UnitGroupCount(autoAE684BA0_g, c_unitCountAll);
                for (;; autoAE684BA0_u -= 1) {
                    autoAE684BA0_var = UnitGroupUnitFromEnd(autoAE684BA0_g, autoAE684BA0_u);
                    if (autoAE684BA0_var == null) { break; }
                    libD98B6E43_gf_AWG_Launch_05_Create(EventUnit(), autoAE684BA0_var, UnitRallyPointTargetPoint(EventUnit(), 1, 1));
                }
            }
            else if (autoB2A3A199_val == 6) {
                auto2B10D5BF_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                auto2B10D5BF_u = UnitGroupCount(auto2B10D5BF_g, c_unitCountAll);
                for (;; auto2B10D5BF_u -= 1) {
                    auto2B10D5BF_var = UnitGroupUnitFromEnd(auto2B10D5BF_g, auto2B10D5BF_u);
                    if (auto2B10D5BF_var == null) { break; }
                    if ((UnitFilterMatch(auto2B10D5BF_var, UnitGetOwner(auto2B10D5BF_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
                        lv_launch_GroundUnits += 1;
                    }

                }
                if ((lv_launch_GroundUnits > 0)) {
                    libD98B6E43_gf_AWG_Launch_06_Create(EventUnit(), UnitRallyPointTargetPoint(EventUnit(), 1, 1), lv_aWG_ID);
                }

            }
            else if (autoB2A3A199_val == 7) {
                auto6E59F68C_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                auto6E59F68C_u = UnitGroupCount(auto6E59F68C_g, c_unitCountAll);
                for (;; auto6E59F68C_u -= 1) {
                    auto6E59F68C_var = UnitGroupUnitFromEnd(auto6E59F68C_g, auto6E59F68C_u);
                    if (auto6E59F68C_var == null) { break; }
                    libD98B6E43_gv_aWG_Launch_SpawnUnit = auto6E59F68C_var;
                    libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                    libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto6E59F68C_var)) {
                        UnitCreate(1, UnitGetType(auto6E59F68C_var), c_unitCreateConstruct, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(auto6E59F68C_var), 0, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    UnitBehaviorAdd(UnitLastCreated(), "MercAirDrop", UnitLastCreated(), 1);
                    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(libD98B6E43_gv_aWG_Launch_CasterUnit, UnitLastCreated());
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity");
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity 1.000000 2.000000");
                }
            }
            else if (autoB2A3A199_val == 8) {
                autoCCEE0C42_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoCCEE0C42_u = UnitGroupCount(autoCCEE0C42_g, c_unitCountAll);
                for (;; autoCCEE0C42_u -= 1) {
                    autoCCEE0C42_var = UnitGroupUnitFromEnd(autoCCEE0C42_g, autoCCEE0C42_u);
                    if (autoCCEE0C42_var == null) { break; }
                    libD98B6E43_gv_aWG_Launch_SpawnUnit = autoCCEE0C42_var;
                    libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                    libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(autoCCEE0C42_var)) {
                        UnitCreate(1, UnitGetType(autoCCEE0C42_var), c_unitCreateConstruct, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(autoCCEE0C42_var), 0, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    UnitBehaviorAdd(UnitLastCreated(), "AWGParachutingA", UnitLastCreated(), 1);
                    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(libD98B6E43_gv_aWG_Launch_CasterUnit, UnitLastCreated());
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity");
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity 1.000000 2.000000");
                }
            }
            else if (autoB2A3A199_val == 9) {
                autoDAF8E095_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                autoDAF8E095_u = UnitGroupCount(autoDAF8E095_g, c_unitCountAll);
                for (;; autoDAF8E095_u -= 1) {
                    autoDAF8E095_var = UnitGroupUnitFromEnd(autoDAF8E095_g, autoDAF8E095_u);
                    if (autoDAF8E095_var == null) { break; }
                    if ((UnitFilterMatch(autoDAF8E095_var, UnitGetOwner(autoDAF8E095_var), UnitFilter((1 << c_targetFilterGround), 0, 0, 0)) == true)) {
                        lv_launch_GroundUnits += 1;
                    }

                }
                if ((lv_launch_GroundUnits > 0)) {
                    libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                    libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                    libD98B6E43_gv_aWG_Launch_ID = lv_aWG_ID;
                    libD98B6E43_gf_AWG_Launch_09_Create(EventUnit(), UnitRallyPointTargetPoint(EventUnit(), 1, 1), lv_aWG_ID);
                }

            }
            else if (autoB2A3A199_val == 10) {
                libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                libD98B6E43_gv_aWG_Launch_ID = lv_aWG_ID;
                libD98B6E43_gf_AWG_Launch_10_Create(EventUnit(), UnitRallyPointTargetPoint(EventUnit(), 1, 1), lv_aWG_ID);
            }
            else if (autoB2A3A199_val == 11) {
                auto7233847A_g = libD98B6E43_gv_aWG_UnitGroup[lv_aWG_ID];
                auto7233847A_u = UnitGroupCount(auto7233847A_g, c_unitCountAll);
                for (;; auto7233847A_u -= 1) {
                    auto7233847A_var = UnitGroupUnitFromEnd(auto7233847A_g, auto7233847A_u);
                    if (auto7233847A_var == null) { break; }
                    libD98B6E43_gv_aWG_Launch_SpawnUnit = auto7233847A_var;
                    libD98B6E43_gv_aWG_Launch_Point = UnitRallyPointTargetPoint(EventUnit(), 1, 1);
                    libD98B6E43_gv_aWG_Launch_CasterUnit = EventUnit();
                    if ((UnitHasBehavior2(EventUnit(), "BuildInProgressMode") == true) && libD98B6E43_gf_AWG_BuildInProgress_BlackList(auto7233847A_var)) {
                        UnitCreate(1, UnitGetType(auto7233847A_var), c_unitCreateConstruct, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    else {
                        UnitCreate(1, UnitGetType(auto7233847A_var), 0, UnitGetOwner(libD98B6E43_gv_aWG_Launch_CasterUnit), libD98B6E43_gv_aWG_Launch_Point, 270.0);
                    }
                    UnitBehaviorAdd(UnitLastCreated(), "DescendAirDrop", UnitLastCreated(), 1);
                    libD98B6E43_gf_AWG_Launch_IssueOrderTLME(libD98B6E43_gv_aWG_Launch_CasterUnit, UnitLastCreated());
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity");
                    libNtve_gf_SendActorMessageToUnit(UnitLastCreated(), "SetOpacity 1.000000 2.000000");
                }
            }
            else {
            }
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_Launch_Init () {
    libD98B6E43_gt_AWG_Launch = TriggerCreate("libD98B6E43_gt_AWG_Launch_Func");
    TriggerEnable(libD98B6E43_gt_AWG_Launch, false);
    TriggerAddEventUnitAbility(libD98B6E43_gt_AWG_Launch, null, AbilityCommand("AttackWaveGeneratorLaunch", 0), c_unitAbilStageComplete, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_TLM_Button
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_TLM_Button_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFA5C8190_g;
    int autoFA5C8190_u;
    unit autoFA5C8190_var;
    string auto6A82D46F_val;
    unitgroup autoD9281D8E_g;
    int autoD9281D8E_u;
    unit autoD9281D8E_var;
    unitgroup auto294379BB_g;
    int auto294379BB_u;
    unit auto294379BB_var;
    unitgroup auto5140CE76_g;
    int auto5140CE76_u;
    unit auto5140CE76_var;
    unitgroup autoC258E587_g;
    int autoC258E587_u;
    unit autoC258E587_var;
    unitgroup autoB019D4DB_g;
    int autoB019D4DB_u;
    unit autoB019D4DB_var;
    unitgroup auto687D6D9A_g;
    int auto687D6D9A_u;
    unit auto687D6D9A_var;
    unitgroup auto465D446A_g;
    int auto465D446A_u;
    unit auto465D446A_var;
    unitgroup auto796D6174_g;
    int auto796D6174_u;
    unit auto796D6174_var;
    unitgroup auto9D4DD560_g;
    int auto9D4DD560_u;
    unit auto9D4DD560_var;
    unitgroup autoAB0F92B9_g;
    int autoAB0F92B9_u;
    unit autoAB0F92B9_var;
    unitgroup autoDEBA8086_g;
    int autoDEBA8086_u;
    unit autoDEBA8086_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFA5C8190_g = UnitGroupSelected(EventPlayer());
    autoFA5C8190_u = UnitGroupCount(autoFA5C8190_g, c_unitCountAll);
    for (;; autoFA5C8190_u -= 1) {
        autoFA5C8190_var = UnitGroupUnitFromEnd(autoFA5C8190_g, autoFA5C8190_u);
        if (autoFA5C8190_var == null) { break; }
        UnitBehaviorRemove(autoFA5C8190_var, "TLMNoEffect", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMHybridInstantWarpIn", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMProtossTeleport", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMProtossWarpIn", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMProtossWarpInWithPylonPower", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMTerranDropPod", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMTerranReentry", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMTerranParachute", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMZergDropPod", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMZergUnburrow", c_unitBehaviorCountAll);
        UnitBehaviorRemove(autoFA5C8190_var, "TLMDescend", c_unitBehaviorCountAll);
    }
    auto6A82D46F_val = EventButtonPressed();
    if (auto6A82D46F_val == "AttackWaveGeneratorTLMNone") {
        autoD9281D8E_g = UnitGroupSelected(EventPlayer());
        autoD9281D8E_u = UnitGroupCount(autoD9281D8E_g, c_unitCountAll);
        for (;; autoD9281D8E_u -= 1) {
            autoD9281D8E_var = UnitGroupUnitFromEnd(autoD9281D8E_g, autoD9281D8E_u);
            if (autoD9281D8E_var == null) { break; }
            UnitBehaviorAdd(autoD9281D8E_var, "TLMNoEffect", autoD9281D8E_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorHybridInstantWarpInEffect") {
        auto294379BB_g = UnitGroupSelected(EventPlayer());
        auto294379BB_u = UnitGroupCount(auto294379BB_g, c_unitCountAll);
        for (;; auto294379BB_u -= 1) {
            auto294379BB_var = UnitGroupUnitFromEnd(auto294379BB_g, auto294379BB_u);
            if (auto294379BB_var == null) { break; }
            UnitBehaviorAdd(auto294379BB_var, "TLMHybridInstantWarpIn", auto294379BB_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorProtossTeleportedInEffect") {
        auto5140CE76_g = UnitGroupSelected(EventPlayer());
        auto5140CE76_u = UnitGroupCount(auto5140CE76_g, c_unitCountAll);
        for (;; auto5140CE76_u -= 1) {
            auto5140CE76_var = UnitGroupUnitFromEnd(auto5140CE76_g, auto5140CE76_u);
            if (auto5140CE76_var == null) { break; }
            UnitBehaviorAdd(auto5140CE76_var, "TLMProtossTeleport", auto5140CE76_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorProtossWarpInEffect") {
        autoC258E587_g = UnitGroupSelected(EventPlayer());
        autoC258E587_u = UnitGroupCount(autoC258E587_g, c_unitCountAll);
        for (;; autoC258E587_u -= 1) {
            autoC258E587_var = UnitGroupUnitFromEnd(autoC258E587_g, autoC258E587_u);
            if (autoC258E587_var == null) { break; }
            UnitBehaviorAdd(autoC258E587_var, "TLMProtossWarpIn", autoC258E587_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorProtossWarpInEffectWithPylonPower") {
        autoB019D4DB_g = UnitGroupSelected(EventPlayer());
        autoB019D4DB_u = UnitGroupCount(autoB019D4DB_g, c_unitCountAll);
        for (;; autoB019D4DB_u -= 1) {
            autoB019D4DB_var = UnitGroupUnitFromEnd(autoB019D4DB_g, autoB019D4DB_u);
            if (autoB019D4DB_var == null) { break; }
            UnitBehaviorAdd(autoB019D4DB_var, "TLMProtossWarpInWithPylonPower", autoB019D4DB_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorTerranDropPodEffect") {
        auto687D6D9A_g = UnitGroupSelected(EventPlayer());
        auto687D6D9A_u = UnitGroupCount(auto687D6D9A_g, c_unitCountAll);
        for (;; auto687D6D9A_u -= 1) {
            auto687D6D9A_var = UnitGroupUnitFromEnd(auto687D6D9A_g, auto687D6D9A_u);
            if (auto687D6D9A_var == null) { break; }
            UnitBehaviorAdd(auto687D6D9A_var, "TLMTerranDropPod", auto687D6D9A_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorTerranReentryEffect") {
        auto465D446A_g = UnitGroupSelected(EventPlayer());
        auto465D446A_u = UnitGroupCount(auto465D446A_g, c_unitCountAll);
        for (;; auto465D446A_u -= 1) {
            auto465D446A_var = UnitGroupUnitFromEnd(auto465D446A_g, auto465D446A_u);
            if (auto465D446A_var == null) { break; }
            UnitBehaviorAdd(auto465D446A_var, "TLMTerranReentry", auto465D446A_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorParachuteEffect") {
        auto796D6174_g = UnitGroupSelected(EventPlayer());
        auto796D6174_u = UnitGroupCount(auto796D6174_g, c_unitCountAll);
        for (;; auto796D6174_u -= 1) {
            auto796D6174_var = UnitGroupUnitFromEnd(auto796D6174_g, auto796D6174_u);
            if (auto796D6174_var == null) { break; }
            UnitBehaviorAdd(auto796D6174_var, "TLMTerranParachute", auto796D6174_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorZergDropPodEffect") {
        auto9D4DD560_g = UnitGroupSelected(EventPlayer());
        auto9D4DD560_u = UnitGroupCount(auto9D4DD560_g, c_unitCountAll);
        for (;; auto9D4DD560_u -= 1) {
            auto9D4DD560_var = UnitGroupUnitFromEnd(auto9D4DD560_g, auto9D4DD560_u);
            if (auto9D4DD560_var == null) { break; }
            UnitBehaviorAdd(auto9D4DD560_var, "TLMZergDropPod", auto9D4DD560_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorZergUnburrowEffect") {
        autoAB0F92B9_g = UnitGroupSelected(EventPlayer());
        autoAB0F92B9_u = UnitGroupCount(autoAB0F92B9_g, c_unitCountAll);
        for (;; autoAB0F92B9_u -= 1) {
            autoAB0F92B9_var = UnitGroupUnitFromEnd(autoAB0F92B9_g, autoAB0F92B9_u);
            if (autoAB0F92B9_var == null) { break; }
            UnitBehaviorAdd(autoAB0F92B9_var, "TLMZergUnburrow", autoAB0F92B9_var, 1);
        }
    }
    else if (auto6A82D46F_val == "AttackWaveGeneratorDescendEffect") {
        autoDEBA8086_g = UnitGroupSelected(EventPlayer());
        autoDEBA8086_u = UnitGroupCount(autoDEBA8086_g, c_unitCountAll);
        for (;; autoDEBA8086_u -= 1) {
            autoDEBA8086_var = UnitGroupUnitFromEnd(autoDEBA8086_g, autoDEBA8086_u);
            if (autoDEBA8086_var == null) { break; }
            UnitBehaviorAdd(autoDEBA8086_var, "TLMDescend", autoDEBA8086_var, 1);
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_TLM_Button_Init () {
    libD98B6E43_gt_AWG_TLM_Button = TriggerCreate("libD98B6E43_gt_AWG_TLM_Button_Func");
    TriggerEnable(libD98B6E43_gt_AWG_TLM_Button, false);
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorRemoveTLM");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorTLMNone");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorHybridInstantWarpInEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorProtossTeleportedInEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorProtossWarpInEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorProtossWarpInEffectWithPylonPower");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorTerranDropPodEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorTerranReentryEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorParachuteEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorZergDropPodEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorZergUnburrowEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_TLM_Button, c_playerAny, "AttackWaveGeneratorDescendEffect");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AWG_Extras_Button
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_gt_AWG_Extras_Button_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_aWG_ID;

    // Automatic Variable Declarations
    unitgroup autoC071DEF9_g;
    int autoC071DEF9_u;
    unit autoC071DEF9_var;
    const int auto451924E6_ae = 100;
    const int auto451924E6_ai = 1;
    string autoE8F5BBA5_val;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoC071DEF9_g = UnitGroupSelected(EventPlayer());
    autoC071DEF9_u = UnitGroupCount(autoC071DEF9_g, c_unitCountAll);
    for (;; autoC071DEF9_u -= 1) {
        autoC071DEF9_var = UnitGroupUnitFromEnd(autoC071DEF9_g, autoC071DEF9_u);
        if (autoC071DEF9_var == null) { break; }
        lv_aWG_ID = 1;
        for ( ; ( (auto451924E6_ai >= 0 && lv_aWG_ID <= auto451924E6_ae) || (auto451924E6_ai < 0 && lv_aWG_ID >= auto451924E6_ae) ) ; lv_aWG_ID += auto451924E6_ai ) {
            if ((libD98B6E43_gv_aWG_UnitconnectedtoID[lv_aWG_ID] == autoC071DEF9_var)) {
                UnitBehaviorRemove(autoC071DEF9_var, "AttackWaveGeneratorHallucinationSpawner", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC071DEF9_var, "AttackWaveGeneratorVoidShadeSpawner", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC071DEF9_var, "AttackWaveGeneratorTerrazineShadowSpawner", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC071DEF9_var, "AttackWaveGeneratorCorruptedHollow", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC071DEF9_var, "AttackWaveGeneratorPoweroftheEyeSpawner", c_unitBehaviorCountAll);
                autoE8F5BBA5_val = EventButtonPressed();
                if (autoE8F5BBA5_val == "AttackWaveGeneratorProtossHallucinationEffect") {
                    UnitBehaviorAdd(autoC071DEF9_var, "AttackWaveGeneratorHallucinationSpawner", autoC071DEF9_var, 1);
                }
                else if (autoE8F5BBA5_val == "AttackWaveGeneratorVoidShadeEffect") {
                    UnitBehaviorAdd(autoC071DEF9_var, "AttackWaveGeneratorVoidShadeSpawner", autoC071DEF9_var, 1);
                }
                else if (autoE8F5BBA5_val == "AttackWaveGeneratorTerrazineShadowEffect") {
                    UnitBehaviorAdd(autoC071DEF9_var, "AttackWaveGeneratorTerrazineShadowSpawner", autoC071DEF9_var, 1);
                }
                else if (autoE8F5BBA5_val == "AttackWaveGeneratorCorruptedHollowEffect") {
                    UnitBehaviorAdd(autoC071DEF9_var, "AttackWaveGeneratorCorruptedHollow", autoC071DEF9_var, 1);
                }
                else if (autoE8F5BBA5_val == "AttackWaveGeneratorPoweroftheEyeEffect") {
                    UnitBehaviorAdd(autoC071DEF9_var, "AttackWaveGeneratorPoweroftheEyeSpawner", autoC071DEF9_var, 1);
                }
                else {
                }
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD98B6E43_gt_AWG_Extras_Button_Init () {
    libD98B6E43_gt_AWG_Extras_Button = TriggerCreate("libD98B6E43_gt_AWG_Extras_Button_Func");
    TriggerEnable(libD98B6E43_gt_AWG_Extras_Button, false);
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorRemoveEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorProtossHallucinationEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorVoidShadeEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorTerrazineShadowEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorCorruptedHollowEffect");
    TriggerAddEventButtonPressed(libD98B6E43_gt_AWG_Extras_Button, c_playerAny, "AttackWaveGeneratorPoweroftheEyeEffect");
}

void libD98B6E43_InitTriggers () {
    libD98B6E43_gt_AWG_Enabler_Init();
    libD98B6E43_gt_AWG_Created_Init();
    libD98B6E43_gt_AWG_Destroyed_Init();
    libD98B6E43_gt_AWG_LoadUnitGroup_Init();
    libD98B6E43_gt_AWG_UnloadUnitGroup_Init();
    libD98B6E43_gt_AWG_Launch_Init();
    libD98B6E43_gt_AWG_TLM_Button_Init();
    libD98B6E43_gt_AWG_Extras_Button_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libD98B6E43_InitLib_completed = false;

void libD98B6E43_InitLib () {
    if (libD98B6E43_InitLib_completed) {
        return;
    }

    libD98B6E43_InitLib_completed = true;

    libD98B6E43_InitLibraries();
    libD98B6E43_InitVariables();
    libD98B6E43_InitTriggers();
}

