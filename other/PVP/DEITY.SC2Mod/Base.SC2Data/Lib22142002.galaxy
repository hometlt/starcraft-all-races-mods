include "TriggerLibs/NativeLib"

include "Lib22142002_h"

//--------------------------------------------------------------------------------------------------
// Library: DEITY
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib22142002_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib22142002_InitVariables_completed = false;

void lib22142002_InitVariables () {
    int init_i;
    int init_j;

    if (lib22142002_InitVariables_completed) {
        return;
    }

    lib22142002_InitVariables_completed = true;

    lib22142002_gv_playerN_EditBox = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_playerNameActual[init_i] = "";
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_playerNameOneWord[init_i] = "";
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_init_DEITYEssentials[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        for (init_j = 0; init_j <= 10; init_j += 1) {
            lib22142002_gv_init_DEITYToolsControls[init_i][init_j] = UnitGroupEmpty();
        }
    }
    lib22142002_gv_dEITYRespondFont = StringExternal("Param/Value/lib_22142002_50FC331D");
    lib22142002_gv_dEITYRespondError = StringExternal("Param/Value/lib_22142002_F1FB5270");
    lib22142002_gv_dEITYRespondTextLocation = c_messageAreaError;
    lib22142002_gv_dEITYRespondTextLocationPublic = c_messageAreaError;
    lib22142002_gv_dEITYHelpTextLocation = c_messageAreaChat;
    lib22142002_gv_dEITYGroup = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 14; init_i += 1) {
        lib22142002_gv_cMV_Ping[init_i] = c_invalidPingId;
    }
    lib22142002_gv_mRB_D_Minerals = c_invalidDialogId;
    lib22142002_gv_mRB_D_Vespene = c_invalidDialogId;
    lib22142002_gv_mRB_D_Biomass = c_invalidDialogId;
    lib22142002_gv_mRB_D_Artifacts = c_invalidDialogId;
    lib22142002_gv_mRB_D_Supply = c_invalidDialogId;
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_mRB_DI_Minerals[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_mRB_DI_Vespene[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_mRB_DI_Biomass[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_mRB_DI_Artifacts[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_mRB_DI_Supply[init_i] = c_invalidDialogControlId;
    }
    lib22142002_gv_c_HelpMenu = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        for (init_j = 0; init_j <= 10; init_j += 1) {
            lib22142002_gv_c_SC_Objectives[init_i][init_j] = c_invalidObjectiveId;
        }
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_godMode[init_i] = 1;
    }
    lib22142002_gv_c_DeleteProtectedGroup = UnitGroupEmpty();
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_dEITY_GodSight[init_i] = "Mortal";
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_dEITY_GodMode[init_i] = "Mortal";
    }
    lib22142002_gv_c_DEITY_ModificationFlashDuration = 1.0;
    lib22142002_gv_c_DEITY_KeyModificationFlashDuration = 0.5;
    lib22142002_gv_c_CO_RetainColor = UnitGroupEmpty();
    lib22142002_gv_transmissionDialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_transmissionDialogItem[init_i] = c_invalidDialogControlId;
    }
    lib22142002_gv_transmissionText2 = "";
    lib22142002_gv_dN_AutoDayDuration = 240;
    lib22142002_gv_dN_VisualX = 20.0;
    lib22142002_gv_dN_VisualY = (lib22142002_gv_dN_VisualX / 2.0);
    lib22142002_gv_respawnableUnit = UnitGroupEmpty();
    lib22142002_gv_commandPostRegion = 4.0;
    lib22142002_gv_upgradeCenterMessageArea = c_messageAreaError;
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_GiveBounty[init_i] = true;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_GainBounty[init_i] = true;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Name_Text[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Light[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Standard[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Armored[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Massive[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Heroic[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        for (init_j = 0; init_j <= 11; init_j += 1) {
            lib22142002_gv_bounty_Dia_Special_Text[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        for (init_j = 0; init_j <= 11; init_j += 1) {
            lib22142002_gv_bounty_Dia_Special_Value[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_DoBounty[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_DoStructuresLoot[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_ReceiveBounty[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Button_Close[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Button_Next[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_bounty_Dia_Button_Prev[init_i] = c_invalidDialogControlId;
    }
    lib22142002_gv_tint_ColorAppliedUnit = UnitGroupEmpty();
    lib22142002_gv_tint_ColorAppliedPlayer = UnitGroupEmpty();
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_dialog = c_invalidDialogId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_dialogWithOpenButton = c_invalidDialogId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_background = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_playerColorPreviewBox = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_redSlider = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_greenSlider = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_blueSlider = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_confirm = c_invalidDialogControlId;
        lib22142002_gv_cCS_CustomizeUI[init_i].lv_close = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_RecolorType[init_i] = "";
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_UnitSelect_Recolor[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_PlayerSelect_Recolor[init_i] = PlayerGroupEmpty();
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_PlayerTeamColor[init_i] = Color(0,0,0);
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_PlayerTeamColorSec[init_i] = Color(0,0,0);
    }
    lib22142002_gv_cCS_UnitTeamColor = Color(0,0,0);
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_PlayerTintColor[init_i] = Color(100.00, 100.00, 100.00);
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib22142002_gv_cCS_PlayerTintColorHDR[init_i] = 1.0;
    }
    lib22142002_gv_cCS_UnitTintColor = Color(0,0,0);
    for (init_i = 0; init_i <= 2000; init_i += 1) {
        lib22142002_gv_recolor_CUT[init_i].lv_color = Color(0,0,0);
    }
    lib22142002_gv_recolor_ColorAppliedUnit = UnitGroupEmpty();
    lib22142002_gv_tXTTip_TextAppliedUnit = UnitGroupEmpty();
    lib22142002_gv_tXTTip_TipAppliedUnit = UnitGroupEmpty();
    lib22142002_gv_temporaryUnitGroup = UnitGroupEmpty();
    lib22142002_gv_consequences_MortalWoundsReseter = UnitGroupEmpty();
    lib22142002_gv_consequences_MechanicalDrawbacks_Reseter = UnitGroupEmpty();
    lib22142002_gv_consequences_CombatTraumaReseter = UnitGroupEmpty();
    lib22142002_gv_dP_TriggeringDialogItem = c_invalidDialogControlId;
    lib22142002_gv_dP_DialogRace = c_invalidDialogId;
    for (init_i = 0; init_i <= 24; init_i += 1) {
        lib22142002_gv_dP_ButtonRace[init_i] = c_invalidDialogControlId;
    }
    lib22142002_gv_dP_ButtonY = 80;
    lib22142002_gv_dP_ButtonPerRowFix = 11;
    lib22142002_gv_uS_IntArrayValueDummy = 576;
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_uS_UpgradeLevel[init_i] = -1;
    }
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_uS_ButtonUpgradeType[init_i] = "";
    }
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_uS_ButtonUpgrade[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_uS_ButtonUpgradeImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 24; init_i += 1) {
        lib22142002_gv_uS_DialogUpps[init_i] = c_invalidDialogId;
    }
    lib22142002_gv_tTUS_IntArrayValueDummy = 900;
    for (init_i = 0; init_i <= 900; init_i += 1) {
        lib22142002_gv_tTUS_TechTreeUnitsLevel[init_i] = -1;
    }
    for (init_i = 0; init_i <= 900; init_i += 1) {
        lib22142002_gv_tTUS_ButtonTechTreeUnits[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 900; init_i += 1) {
        lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 24; init_i += 1) {
        lib22142002_gv_tTUS_DialogTechUnits[init_i] = c_invalidDialogId;
    }
    lib22142002_gv_tTSS_IntArrayValueDummy = 576;
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_tTSS_TechTreeUnitsLevel[init_i] = -1;
    }
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_tTSS_ButtonTechTreeStructures[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 576; init_i += 1) {
        lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 24; init_i += 1) {
        lib22142002_gv_tTSS_DialogTechStructures[init_i] = c_invalidDialogId;
    }
    lib22142002_gv_uPD_Dialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib22142002_gv_uPD_LifeDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib22142002_gv_uPD_ShieldsDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib22142002_gv_uPD_EnergyDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib22142002_gv_uPD_DamageDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib22142002_gv_uPD_ImportantExtraDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 20; init_i += 1) {
        lib22142002_gv_uPD_OtherDialogItems[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 30; init_i += 1) {
        lib22142002_gv_uPD_Items[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 5; init_i += 1) {
        lib22142002_gv_uPD_Panels[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lib22142002_gv_uPD_Buttons[init_i] = c_invalidDialogControlId;
    }
}

// Functions
string lib22142002_gf_RacePlayerAttribute_Random (string lp_racePlayerAttr_Type) {
    // Variable Declarations
    int lv_localRND;
    int lv_local_CurrentCommanders;

    // Automatic Variable Declarations
    string auto10642AF2_val;
    int autoA80FDF42_val;

    // Variable Initialization
    lv_local_CurrentCommanders = 9;

    // Implementation
    auto10642AF2_val = lp_racePlayerAttr_Type;
    if (auto10642AF2_val == "Co-op") {
        lv_localRND = RandomInt(4, lv_local_CurrentCommanders);
    }
    else {
        lv_localRND = RandomInt(1, lv_local_CurrentCommanders);
    }
    autoA80FDF42_val = lv_localRND;
    if (autoA80FDF42_val == 1) {
        return "Terr";
    }
    else if (autoA80FDF42_val == 2) {
        return "Zerg";
    }
    else if (autoA80FDF42_val == 3) {
        return "Prot";
    }
    else if (autoA80FDF42_val == 4) {
        return "Rayn";
    }
    else if (autoA80FDF42_val == 5) {
        return "Kerr";
    }
    else if (autoA80FDF42_val == 6) {
        return "Arta";
    }
    else if (autoA80FDF42_val == 7) {
        return "Swan";
    }
    else if (autoA80FDF42_val == 8) {
        return "Zaga";
    }
    else if (autoA80FDF42_val == 9) {
        return "Vora";
    }
    else if (autoA80FDF42_val == 10) {
        return "Kara";
    }
    else if (autoA80FDF42_val == 11) {
        return "Abat";
    }
    else if (autoA80FDF42_val == 12) {
        return "Alar";
    }
    else if (autoA80FDF42_val == 13) {
        return "Nova";
    }
    else if (autoA80FDF42_val == 14) {
        return "InfT";
    }
    else if (autoA80FDF42_val == 15) {
        return "Feni";
    }
    else if (autoA80FDF42_val == 16) {
        return "Deha";
    }
    else if (autoA80FDF42_val == 17) {
        return "HH";
    }
    else if (autoA80FDF42_val == 18) {
        return "Tych";
    }
    else if (autoA80FDF42_val == 19) {
        return "Zera";
    }
    else if (autoA80FDF42_val == 20) {
        return "Stet";
    }
    else if (autoA80FDF42_val == 21) {
        return "Meng";
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_C17C095E"));
        return "Terr";
    }
}

string lib22142002_gf_PlayerNDef_NumberFixer (int lp_tPlayer) {
    // Variable Declarations
    int lv_rethinkedP;
    string lv_tPlayerString;

    // Automatic Variable Declarations
    int auto667077C8_ae;
    int auto667077C8_var;

    // Variable Initialization
    lv_rethinkedP = lp_tPlayer;
    lv_tPlayerString = IntToString(lp_tPlayer);

    // Implementation
    auto667077C8_ae = lp_tPlayer;
    auto667077C8_var = 0;
    for ( ; auto667077C8_var <= auto667077C8_ae; auto667077C8_var += 1 ) {
        if ((PlayerType(auto667077C8_var) == c_playerTypeNone)) {
            lv_rethinkedP -= 1;
        }

    }
    if ((lp_tPlayer == 15)) {
        lv_tPlayerString = IntToString(15);
    }
    else {
        lv_tPlayerString = IntToString(lv_rethinkedP);
    }
    if ((StringLength(lv_tPlayerString) == 1)) {
        return ("0" + lv_tPlayerString);
    }
    else {
        return lv_tPlayerString;
    }
}

text lib22142002_gf_NameOfPlayerNoName (int lp_player) {
    // Variable Declarations
    text lv_returnValue;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_returnValue = PlayerName(lp_player);

    // Implementation
    if ((lib22142002_gv_playerNameActual[lp_player] == "")) {
        if ((PlayerType(lp_player) == c_playerTypeNone)) {
            lv_returnValue = StringToText(("Player " + IntToString(lp_player)));
        }
        else {
            lv_returnValue = StringExternal(("MapInfo/Player" + lib22142002_gf_PlayerNDef_NumberFixer(lp_player) + "/Name"));
        }
    }

    return lv_returnValue;
}

int lib22142002_gf_StringWords (string lp_string) {
    // Variable Declarations
    int lv_sW_Words;
    string lv_sW_StringWord;

    // Automatic Variable Declarations
    const int auto0011D3D2_ae = 300;
    int auto0011D3D2_var;

    // Variable Initialization
    lv_sW_StringWord = "";

    // Implementation
    auto0011D3D2_var = 1;
    for ( ; auto0011D3D2_var <= auto0011D3D2_ae; auto0011D3D2_var += 1 ) {
        lv_sW_Words += 1;
        lv_sW_StringWord = StringWord(lp_string, lv_sW_Words);
        if ((lv_sW_StringWord == null)) {
            return (lv_sW_Words - 1);
        }

    }
    return 0;
}

text lib22142002_gf_NameofPlayersinPlayerGroup (playergroup lp_thePlayerGroup) {
    // Variable Declarations
    text lv_returnText;

    // Automatic Variable Declarations
    playergroup autoE76EB9E6_g;
    int autoE76EB9E6_var;

    // Variable Initialization

    // Implementation
    if ((PlayerGroupCount(lp_thePlayerGroup) != 16)) {
        if ((PlayerGroupCount(lp_thePlayerGroup) == 1)) {
            lv_returnText = TextWithColor(lib22142002_gf_NameOfPlayerNoName(PlayerGroupPlayer(lp_thePlayerGroup, 1)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(PlayerGroupPlayer(lp_thePlayerGroup, 1), false)));
        }
        else {
            autoE76EB9E6_g = lp_thePlayerGroup;
            autoE76EB9E6_var = -1;
            while (true) {
                autoE76EB9E6_var = PlayerGroupNextPlayer(autoE76EB9E6_g, autoE76EB9E6_var);
                if (autoE76EB9E6_var < 0) { break; }
                if ((autoE76EB9E6_var == PlayerGroupPlayer(lp_thePlayerGroup, 1))) {
                    lv_returnText = (TextWithColor(lib22142002_gf_NameOfPlayerNoName(autoE76EB9E6_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoE76EB9E6_var, false))));
                }
                else {
                    lv_returnText = (lv_returnText + StringExternal("Param/Value/lib_22142002_C4440F47") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(autoE76EB9E6_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoE76EB9E6_var, false))));
                }
            }
        }
    }
    else {
        lv_returnText = TextWithColor(StringExternal("Param/Value/lib_22142002_DE1A9760"), Color(100.00, 100.00, 100.00));
    }
    return lv_returnText;
}

color lib22142002_gf_ConvertStringtoColorUltimate (string lp_input) {
    // Variable Declarations
    fixed lv_r;
    fixed lv_g;
    fixed lv_b;
    color lv_sC_Color;

    // Automatic Variable Declarations
    string auto6BDE2DAA_val;

    // Variable Initialization
    lv_sC_Color = Color(100,100,100);

    // Implementation
    if ((lib22142002_gf_StringWords(lp_input) == 1)) {
        if ((lib22142002_gf_StringWords(StringReplaceWord(lp_input, ",", ", ", c_stringReplaceAll, c_stringCase)) > 1)) {
            lv_r = StringToInt(lib22142002_gf_StringReconstruction(StringWord(StringReplaceWord(lp_input, ",", ", ", c_stringReplaceAll, c_stringCase), 1), 1, ""));
            lv_g = StringToInt(lib22142002_gf_StringReconstruction(StringWord(StringReplaceWord(lp_input, ",", ", ", c_stringReplaceAll, c_stringCase), 2), 1, ""));
            lv_b = StringToInt(StringWord(StringReplaceWord(lp_input, ",", ", ", c_stringReplaceAll, c_stringCase), 3));
            return Color(lv_r, lv_g, lv_b);
        }
        else {
            auto6BDE2DAA_val = StringCase(lp_input, true);
            if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "WHITE", 1)) {
                return Color(100.00, 100.00, 100.00);
            }
            else if (auto6BDE2DAA_val == "RED") {
                return Color(70.59, 7.84, 11.76);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "BLUE", 2)) {
                return Color(0.00, 25.88, 100.00);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "TEAL", 2)) {
                return Color(10.98, 65.49, 91.76);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "PURPLE", 2)) {
                return Color(32.94, 0.00, 50.59);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "YELLOW", 1)) {
                return Color(92.16, 88.24, 16.08);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "ORANGE", 1)) {
                return Color(99.61, 54.12, 5.49);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "GREEN", 4)) {
                return Color(8.63, 50.20, 0.00);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LIGHTPINK", 6)) {
                return Color(80.00, 65.10, 98.82);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LPINK", 2)) {
                return Color(80.00, 65.10, 98.82);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "VIOLET", 1)) {
                return Color(12.16, 0.39, 78.82);
            }
            else if (auto6BDE2DAA_val == "LIGHTGREY") {
                return Color(32.16, 32.94, 58.04);
            }
            else if (auto6BDE2DAA_val == "LGREY") {
                return Color(32.16, 32.94, 58.04);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DARKGREEN", 8)) {
                return Color(6.27, 38.43, 27.45);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DGREEN", 5)) {
                return Color(6.27, 38.43, 27.45);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "BROWN", 2)) {
                return Color(30.59, 16.47, 1.57);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LIGHTGREEN", 9)) {
                return Color(58.82, 100.00, 56.86);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LGREEN", 5)) {
                return Color(58.82, 100.00, 56.86);
            }
            else if (auto6BDE2DAA_val == "DARKGREY") {
                return Color(13.73, 13.73, 13.73);
            }
            else if (auto6BDE2DAA_val == "DGREY") {
                return Color(13.73, 13.73, 13.73);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "PINK", 2)) {
                return Color(89.80, 35.69, 69.02);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "AQUAMARINE", 2)) {
                return Color(0.00, 65.49, 38.43);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LIGHTPURPLE", 7)) {
                return Color(80.00, 65.10, 98.82);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "LPURPLE", 3)) {
                return Color(80.00, 65.10, 98.82);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "TUSCANY", 3)) {
                return Color(65.49, 41.18, 25.88);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "ROSE", 2)) {
                return Color(29.02, 10.59, 27.84);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "BLUEGREY", 5)) {
                return Color(41.18, 78.04, 83.92);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "BGREY", 2)) {
                return Color(41.18, 78.04, 83.92);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DARKBLUE", 5)) {
                return Color(20.00, 0.00, 74.90);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DBLUE", 2)) {
                return Color(20.00, 0.00, 74.90);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DARKRED", 5)) {
                return Color(25.10, 0.00, 0.00);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "DRED", 2)) {
                return Color(25.10, 0.00, 0.00);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "MAGENTA", 2)) {
                return Color(100.00, 0.00, 100.00);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "MENGSK", 2)) {
                return Color(40.00, 12.16, 12.16);
            }
            else if (auto6BDE2DAA_val == lib22142002_gf_StringContraction(lp_input, "TURQUOISE", 3)) {
                return Color(17.25, 70.59, 58.04);
            }
            else {
            }
        }
    }
    else {
        if ((lib22142002_gf_StringWords(lp_input) == 3)) {
            lv_r = StringToInt(StringWord(StringReplaceWord(lp_input, ",", "", c_stringReplaceAll, c_stringCase), 1));
            lv_g = StringToInt(StringWord(StringReplaceWord(lp_input, ",", "", c_stringReplaceAll, c_stringCase), 2));
            lv_b = StringToInt(StringWord(lp_input, 3));
            return Color(lv_r, lv_g, lv_b);
        }
        else {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_3A17CB2C"));
            return Color(100.00, 100.00, 100.00);
        }
    }
    return ColorWithAlpha(0.00, 0.00, 0.00, 49.80);
}

color lib22142002_gf_GetSecondaryColor (color lp_color) {
    // Automatic Variable Declarations
    color auto075EA49D_val;

    // Implementation
    auto075EA49D_val = lp_color;
    if (auto075EA49D_val == Color(100.00, 100.00, 100.00)) {
        return Color(76.08, 76.08, 76.08);
    }
    else if (auto075EA49D_val == Color(70.59, 7.84, 11.76)) {
        return Color(54.90, 14.90, 14.90);
    }
    else if (auto075EA49D_val == Color(0.00, 25.88, 100.00)) {
        return Color(0.00, 25.88, 100.00);
    }
    else if (auto075EA49D_val == Color(10.98, 65.49, 91.76)) {
        return Color(7.06, 52.16, 70.20);
    }
    else if (auto075EA49D_val == Color(32.94, 0.00, 50.59)) {
        return Color(27.06, 18.04, 63.14);
    }
    else if (auto075EA49D_val == Color(92.16, 88.24, 16.08)) {
        return Color(58.82, 58.82, 12.16);
    }
    else if (auto075EA49D_val == Color(100.00, 54.12, 5.88)) {
        return Color(100.00, 54.12, 5.88);
    }
    else if (auto075EA49D_val == Color(9.02, 50.20, 0.00)) {
        return Color(9.02, 50.20, 0.00);
    }
    else if (auto075EA49D_val == Color(80.00, 65.10, 98.82)) {
        return Color(80.00, 65.10, 98.82);
    }
    else if (auto075EA49D_val == Color(12.16, 0.00, 78.82)) {
        return Color(12.16, 0.00, 78.82);
    }
    else if (auto075EA49D_val == Color(32.16, 32.94, 58.04)) {
        return Color(7.84, 21.18, 32.16);
    }
    else if (auto075EA49D_val == Color(5.88, 38.04, 27.06)) {
        return Color(5.88, 38.04, 27.06);
    }
    else if (auto075EA49D_val == Color(30.20, 16.08, 1.96)) {
        return Color(30.20, 16.08, 1.96);
    }
    else if (auto075EA49D_val == Color(58.82, 100.00, 56.86)) {
        return Color(52.16, 100.00, 30.98);
    }
    else if (auto075EA49D_val == Color(13.73, 13.73, 13.73)) {
        return Color(5.88, 5.88, 5.88);
    }
    else if (auto075EA49D_val == Color(90.20, 36.08, 69.02)) {
        return Color(90.20, 36.08, 69.02);
    }
    else if (auto075EA49D_val == Color(0.00, 65.10, 38.04)) {
        return Color(0.00, 65.10, 38.04);
    }
    else if (auto075EA49D_val == Color(80.00, 65.10, 98.82)) {
        return Color(80.00, 65.10, 98.82);
    }
    else if (auto075EA49D_val == Color(65.10, 41.18, 25.88)) {
        return Color(65.10, 41.18, 25.88);
    }
    else if (auto075EA49D_val == Color(29.02, 10.59, 27.84)) {
        return Color(85.10, 67.06, 16.08);
    }
    else if (auto075EA49D_val == Color(41.18, 78.04, 83.92)) {
        return Color(41.18, 78.04, 83.92);
    }
    else if (auto075EA49D_val == Color(20.00, 0.00, 74.90)) {
        return Color(20.00, 0.00, 74.90);
    }
    else if (auto075EA49D_val == Color(25.10, 0.00, 0.00)) {
        return Color(70.20, 7.84, 10.98);
    }
    else if (auto075EA49D_val == Color(100.00, 0.00, 100.00)) {
        return Color(100.00, 0.00, 100.00);
    }
    else if (auto075EA49D_val == Color(40.00, 12.16, 12.16)) {
        return Color(70.20, 7.84, 10.98);
    }
    else if (auto075EA49D_val == Color(17.25, 70.59, 58.04)) {
        return Color(17.25, 70.59, 58.04);
    }
    else {
        return lp_color;
    }
}

trigger auto_lib22142002_gf_Init_DeityForce_Trigger = null;
string auto_lib22142002_gf_Init_DeityForce_lp_statusString;
int auto_lib22142002_gf_Init_DeityForce_lp_forceP;

void lib22142002_gf_Init_DeityForce (string lp_statusString, int lp_forceP) {
    auto_lib22142002_gf_Init_DeityForce_lp_statusString = lp_statusString;
    auto_lib22142002_gf_Init_DeityForce_lp_forceP = lp_forceP;

    if (auto_lib22142002_gf_Init_DeityForce_Trigger == null) {
        auto_lib22142002_gf_Init_DeityForce_Trigger = TriggerCreate("auto_lib22142002_gf_Init_DeityForce_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_Init_DeityForce_Trigger, false, false);
}

bool auto_lib22142002_gf_Init_DeityForce_TriggerFunc (bool testConds, bool runActions) {
    string lp_statusString = auto_lib22142002_gf_Init_DeityForce_lp_statusString;
    int lp_forceP = auto_lib22142002_gf_Init_DeityForce_lp_forceP;

    // Automatic Variable Declarations
    string auto3C35787B_val;
    unitgroup auto149B62F1_g;
    int auto149B62F1_u;
    unit auto149B62F1_var;
    const int auto0EC0D135_ae = 6;
    int auto0EC0D135_var;
    unitgroup auto7083BB8B_g;
    int auto7083BB8B_u;
    unit auto7083BB8B_var;
    unitgroup auto95589A16_g;
    int auto95589A16_u;
    unit auto95589A16_var;
    unitgroup auto0311DF54_g;
    int auto0311DF54_u;
    unit auto0311DF54_var;
    unitgroup auto531D89AB_g;
    int auto531D89AB_u;
    unit auto531D89AB_var;
    unitgroup auto1046CC52_g;
    int auto1046CC52_u;
    unit auto1046CC52_var;
    unitgroup auto5FCFB9C3_g;
    int auto5FCFB9C3_u;
    unit auto5FCFB9C3_var;
    unitgroup auto7FEF6004_g;
    int auto7FEF6004_u;
    unit auto7FEF6004_var;
    unitgroup auto264D6691_g;
    int auto264D6691_u;
    unit auto264D6691_var;
    playergroup auto925587E5_g;
    int auto925587E5_var;
    unitgroup autoD9452EE8_g;
    int autoD9452EE8_u;
    unit autoD9452EE8_var;
    const int auto6B47FD52_ae = 6;
    int auto6B47FD52_var;
    playergroup autoF89CBEB3_g;
    int autoF89CBEB3_var;
    unitgroup autoD55A09D8_g;
    int autoD55A09D8_u;
    unit autoD55A09D8_var;
    const int auto61043780_ae = 9;
    int auto61043780_var;
    playergroup auto0121A73E_g;
    int auto0121A73E_var;

    // Implementation
    auto3C35787B_val = lp_statusString;
    if (auto3C35787B_val == "DEITY") {
        PlayerSetRace(lp_forceP, "Neut");
        PlayerModifyPropertyInt(lp_forceP, c_playerPropMinerals, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropVespene, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropTerrazine, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropCustom, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropSuppliesMade, c_playerPropOperAdd, 200);
        CameraSetData(PlayerGroupSingle(lp_forceP), "EnhancedCamera");
        PlayerGroupAdd(lib22142002_gv_dEITYGroup, lp_forceP);
        auto149B62F1_g = lib22142002_gv_init_DEITYEssentials[lp_forceP];
        auto149B62F1_u = UnitGroupCount(auto149B62F1_g, c_unitCountAll);
        for (;; auto149B62F1_u -= 1) {
            auto149B62F1_var = UnitGroupUnitFromEnd(auto149B62F1_g, auto149B62F1_u);
            if (auto149B62F1_var == null) { break; }
            UnitSetOwner(auto149B62F1_var, lp_forceP, false);
        }
        auto0EC0D135_var = 1;
        for ( ; auto0EC0D135_var <= auto0EC0D135_ae; auto0EC0D135_var += 1 ) {
            UnitControlGroupClear(lp_forceP, auto0EC0D135_var);
            UnitControlGroupAddUnits(lp_forceP, auto0EC0D135_var, lib22142002_gv_init_DEITYToolsControls[lp_forceP][auto0EC0D135_var]);
        }
        if (((lib22142002_gv_customCreator001 == true) || (lib22142002_gv_customCreator002 == true) || (lib22142002_gv_customCreator003 == true) || (lib22142002_gv_customCreator004 == true) || (lib22142002_gv_customCreator005 == true) || (lib22142002_gv_customCreator006 == true) || (lib22142002_gv_customCreator007 == true) || (lib22142002_gv_customCreator008 == true))) {
            UnitControlGroupClear(lp_forceP, 7);
            if ((lib22142002_gv_customCreator001 == true)) {
                auto7083BB8B_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto7083BB8B_u = UnitGroupCount(auto7083BB8B_g, c_unitCountAll);
                for (;; auto7083BB8B_u -= 1) {
                    auto7083BB8B_var = UnitGroupUnitFromEnd(auto7083BB8B_g, auto7083BB8B_u);
                    if (auto7083BB8B_var == null) { break; }
                    if ((UnitGetType(auto7083BB8B_var) == "Custom001Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto7083BB8B_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator002 == true)) {
                auto95589A16_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto95589A16_u = UnitGroupCount(auto95589A16_g, c_unitCountAll);
                for (;; auto95589A16_u -= 1) {
                    auto95589A16_var = UnitGroupUnitFromEnd(auto95589A16_g, auto95589A16_u);
                    if (auto95589A16_var == null) { break; }
                    if ((UnitGetType(auto95589A16_var) == "Custom002Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto95589A16_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator003 == true)) {
                auto0311DF54_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto0311DF54_u = UnitGroupCount(auto0311DF54_g, c_unitCountAll);
                for (;; auto0311DF54_u -= 1) {
                    auto0311DF54_var = UnitGroupUnitFromEnd(auto0311DF54_g, auto0311DF54_u);
                    if (auto0311DF54_var == null) { break; }
                    if ((UnitGetType(auto0311DF54_var) == "Custom003Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto0311DF54_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator004 == true)) {
                auto531D89AB_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto531D89AB_u = UnitGroupCount(auto531D89AB_g, c_unitCountAll);
                for (;; auto531D89AB_u -= 1) {
                    auto531D89AB_var = UnitGroupUnitFromEnd(auto531D89AB_g, auto531D89AB_u);
                    if (auto531D89AB_var == null) { break; }
                    if ((UnitGetType(auto531D89AB_var) == "Custom004Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto531D89AB_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator005 == true)) {
                auto1046CC52_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto1046CC52_u = UnitGroupCount(auto1046CC52_g, c_unitCountAll);
                for (;; auto1046CC52_u -= 1) {
                    auto1046CC52_var = UnitGroupUnitFromEnd(auto1046CC52_g, auto1046CC52_u);
                    if (auto1046CC52_var == null) { break; }
                    if ((UnitGetType(auto1046CC52_var) == "Custom005Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto1046CC52_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator006 == true)) {
                auto5FCFB9C3_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto5FCFB9C3_u = UnitGroupCount(auto5FCFB9C3_g, c_unitCountAll);
                for (;; auto5FCFB9C3_u -= 1) {
                    auto5FCFB9C3_var = UnitGroupUnitFromEnd(auto5FCFB9C3_g, auto5FCFB9C3_u);
                    if (auto5FCFB9C3_var == null) { break; }
                    if ((UnitGetType(auto5FCFB9C3_var) == "Custom006Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto5FCFB9C3_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator007 == true)) {
                auto7FEF6004_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto7FEF6004_u = UnitGroupCount(auto7FEF6004_g, c_unitCountAll);
                for (;; auto7FEF6004_u -= 1) {
                    auto7FEF6004_var = UnitGroupUnitFromEnd(auto7FEF6004_g, auto7FEF6004_u);
                    if (auto7FEF6004_var == null) { break; }
                    if ((UnitGetType(auto7FEF6004_var) == "Custom007Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto7FEF6004_var);
                    }

                }
            }

            if ((lib22142002_gv_customCreator008 == true)) {
                auto264D6691_g = lib22142002_gv_init_DEITYToolsControls[lp_forceP][7];
                auto264D6691_u = UnitGroupCount(auto264D6691_g, c_unitCountAll);
                for (;; auto264D6691_u -= 1) {
                    auto264D6691_var = UnitGroupUnitFromEnd(auto264D6691_g, auto264D6691_u);
                    if (auto264D6691_var == null) { break; }
                    if ((UnitGetType(auto264D6691_var) == "Custom008Creator")) {
                        UnitControlGroupAddUnit(lp_forceP, 7, auto264D6691_var);
                    }

                }
            }

        }

        lib22142002_gv_dEITY_GodMode[lp_forceP] = "DEITY";
        lib22142002_gv_dEITY_GodSight[lp_forceP] = "Full";
        auto925587E5_g = PlayerGroupAll();
        auto925587E5_var = -1;
        while (true) {
            auto925587E5_var = PlayerGroupNextPlayer(auto925587E5_g, auto925587E5_var);
            if (auto925587E5_var < 0) { break; }
            if ((auto925587E5_var != lp_forceP)) {
                PlayerSetAlliance(auto925587E5_var, c_allianceIdControl, lp_forceP, true);
                PlayerSetAlliance(auto925587E5_var, c_allianceIdVision, lp_forceP, true);
            }

        }
    }
    else if (auto3C35787B_val == "DEITY (Powerless)") {
        PlayerModifyPropertyInt(lp_forceP, c_playerPropMinerals, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropVespene, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropTerrazine, c_playerPropOperSetTo, 10000000);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropCustom, c_playerPropOperSetTo, 10000000);
        CameraSetData(PlayerGroupSingle(lp_forceP), "Dflt");
        PlayerGroupAdd(lib22142002_gv_dEITYGroup, lp_forceP);
        autoD9452EE8_g = lib22142002_gv_init_DEITYEssentials[lp_forceP];
        autoD9452EE8_u = UnitGroupCount(autoD9452EE8_g, c_unitCountAll);
        for (;; autoD9452EE8_u -= 1) {
            autoD9452EE8_var = UnitGroupUnitFromEnd(autoD9452EE8_g, autoD9452EE8_u);
            if (autoD9452EE8_var == null) { break; }
            UnitSetOwner(autoD9452EE8_var, lp_forceP, false);
        }
        auto6B47FD52_var = 1;
        for ( ; auto6B47FD52_var <= auto6B47FD52_ae; auto6B47FD52_var += 1 ) {
            UnitControlGroupClear(lp_forceP, auto6B47FD52_var);
            UnitControlGroupAddUnits(lp_forceP, auto6B47FD52_var, lib22142002_gv_init_DEITYToolsControls[lp_forceP][auto6B47FD52_var]);
        }
        if ((lib22142002_gv_dEITY_GodMode[lp_forceP] == "Mortal")) {
            PlayerSetRace(lp_forceP, "Neut");
            PlayerModifyPropertyInt(lp_forceP, c_playerPropSuppliesMade, c_playerPropOperAdd, 200);
        }

        lib22142002_gv_dEITY_GodMode[lp_forceP] = "DEITY (Powerless)";
        lib22142002_gv_dEITY_GodSight[lp_forceP] = "Visible";
        autoF89CBEB3_g = PlayerGroupAll();
        autoF89CBEB3_var = -1;
        while (true) {
            autoF89CBEB3_var = PlayerGroupNextPlayer(autoF89CBEB3_g, autoF89CBEB3_var);
            if (autoF89CBEB3_var < 0) { break; }
            if ((autoF89CBEB3_var != lp_forceP)) {
                PlayerSetAlliance(autoF89CBEB3_var, c_allianceIdControl, lp_forceP, false);
            }

        }
    }
    else if (auto3C35787B_val == "Mortal") {
        PlayerSetRace(lp_forceP, lib22142002_gv_init_OriginalRace[lp_forceP]);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropMinerals, c_playerPropOperSetTo, 50);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropCustom, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(lp_forceP, c_playerPropSuppliesMade, c_playerPropOperSubtract, 200);
        CameraSetData(PlayerGroupSingle(lp_forceP), "Dflt");
        lib22142002_gv_dP_IntDEITY = lp_forceP;
        lib22142002_gf_DP_HideAllDialogs();
        PlayerGroupRemove(lib22142002_gv_dEITYGroup, lp_forceP);
        autoD55A09D8_g = lib22142002_gv_init_DEITYEssentials[lp_forceP];
        autoD55A09D8_u = UnitGroupCount(autoD55A09D8_g, c_unitCountAll);
        for (;; autoD55A09D8_u -= 1) {
            autoD55A09D8_var = UnitGroupUnitFromEnd(autoD55A09D8_g, autoD55A09D8_u);
            if (autoD55A09D8_var == null) { break; }
            UnitSetOwner(autoD55A09D8_var, 0, false);
        }
        auto61043780_var = 0;
        for ( ; auto61043780_var <= auto61043780_ae; auto61043780_var += 1 ) {
            UnitControlGroupClear(lp_forceP, auto61043780_var);
        }
        lib22142002_gv_dEITY_GodMode[lp_forceP] = "Mortal";
        lib22142002_gv_dEITY_GodSight[lp_forceP] = "Mortal";
        auto0121A73E_g = PlayerGroupAll();
        auto0121A73E_var = -1;
        while (true) {
            auto0121A73E_var = PlayerGroupNextPlayer(auto0121A73E_g, auto0121A73E_var);
            if (auto0121A73E_var < 0) { break; }
            if ((auto0121A73E_var != lp_forceP)) {
                PlayerSetAlliance(auto0121A73E_var, c_allianceIdControl, lp_forceP, false);
                PlayerSetAlliance(auto0121A73E_var, c_allianceIdVision, lp_forceP, false);
            }

        }
    }
    else {
    }
    TriggerExecute(lib22142002_gt_DM_StatusApply, true, false);
    TriggerExecute(lib22142002_gt_DM_VisionApply, true, false);
    return true;
}

void lib22142002_gf_MRB_OwnerChangedSelect (int lp_local_TriggerPlayer) {
    // Automatic Variable Declarations
    const int autoE0DEE3CF_ae = 15;
    int autoE0DEE3CF_var;

    // Implementation
    if ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, lp_local_TriggerPlayer) == true)) {
        lib22142002_gv_mRB_Active[EventPlayer()] = UnitGetOwner(UnitGroupUnit(UnitGroupSelected(lp_local_TriggerPlayer), 1));
        lib22142002_gf_MRB_UpdateStateTurn(lib22142002_gv_mRB_Active[EventPlayer()], true);
        if ((lib22142002_gv_mRB_Active[lp_local_TriggerPlayer] != lp_local_TriggerPlayer)) {
            DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(lp_local_TriggerPlayer), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(lp_local_TriggerPlayer), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(lp_local_TriggerPlayer), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(lp_local_TriggerPlayer), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(lp_local_TriggerPlayer), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), true);

        }
        else {
            DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(lp_local_TriggerPlayer), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(lp_local_TriggerPlayer), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(lp_local_TriggerPlayer), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(lp_local_TriggerPlayer), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(lp_local_TriggerPlayer), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[lp_local_TriggerPlayer]], PlayerGroupSingle(lp_local_TriggerPlayer), false);

        }
        autoE0DEE3CF_var = 0;
        for ( ; autoE0DEE3CF_var <= autoE0DEE3CF_ae; autoE0DEE3CF_var += 1 ) {
            if ((lib22142002_gv_mRB_Active[lp_local_TriggerPlayer] != autoE0DEE3CF_var)) {
                DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[autoE0DEE3CF_var], PlayerGroupSingle(lp_local_TriggerPlayer), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[autoE0DEE3CF_var], PlayerGroupSingle(lp_local_TriggerPlayer), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[autoE0DEE3CF_var], PlayerGroupSingle(lp_local_TriggerPlayer), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[autoE0DEE3CF_var], PlayerGroupSingle(lp_local_TriggerPlayer), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[autoE0DEE3CF_var], PlayerGroupSingle(lp_local_TriggerPlayer), false);

            }

        }
    }

}

void lib22142002_gf_MRB_UpdateStateTurn (int lp_number, bool lp_state) {
    // Automatic Variable Declarations
    int autoB7A4AEDC_val;

    // Implementation
    autoB7A4AEDC_val = lp_number;
    if (autoB7A4AEDC_val == 0) {
        TriggerEnable(lib22142002_gt_MRB_Update_P0, lp_state);
    }
    else if (autoB7A4AEDC_val == 1) {
        TriggerEnable(lib22142002_gt_MRB_Update_P1, lp_state);
    }
    else if (autoB7A4AEDC_val == 2) {
        TriggerEnable(lib22142002_gt_MRB_Update_P2, lp_state);
    }
    else if (autoB7A4AEDC_val == 3) {
        TriggerEnable(lib22142002_gt_MRB_Update_P3, lp_state);
    }
    else if (autoB7A4AEDC_val == 4) {
        TriggerEnable(lib22142002_gt_MRB_Update_P4, lp_state);
    }
    else if (autoB7A4AEDC_val == 5) {
        TriggerEnable(lib22142002_gt_MRB_Update_P5, lp_state);
    }
    else if (autoB7A4AEDC_val == 6) {
        TriggerEnable(lib22142002_gt_MRB_Update_P6, lp_state);
    }
    else if (autoB7A4AEDC_val == 7) {
        TriggerEnable(lib22142002_gt_MRB_Update_P7, lp_state);
    }
    else if (autoB7A4AEDC_val == 8) {
        TriggerEnable(lib22142002_gt_MRB_Update_P8, lp_state);
    }
    else if (autoB7A4AEDC_val == 9) {
        TriggerEnable(lib22142002_gt_MRB_Update_P9, lp_state);
    }
    else if (autoB7A4AEDC_val == 10) {
        TriggerEnable(lib22142002_gt_MRB_Update_P10, lp_state);
    }
    else if (autoB7A4AEDC_val == 11) {
        TriggerEnable(lib22142002_gt_MRB_Update_P11, lp_state);
    }
    else if (autoB7A4AEDC_val == 12) {
        TriggerEnable(lib22142002_gt_MRB_Update_P12, lp_state);
    }
    else if (autoB7A4AEDC_val == 13) {
        TriggerEnable(lib22142002_gt_MRB_Update_P13, lp_state);
    }
    else if (autoB7A4AEDC_val == 14) {
        TriggerEnable(lib22142002_gt_MRB_Update_P14, lp_state);
    }
    else if (autoB7A4AEDC_val == 15) {
        TriggerEnable(lib22142002_gt_MRB_Update_P15, lp_state);
    }
    else {
    }
}

int lib22142002_gf_StringCommands (string lp_string) {
    // Variable Declarations
    int lv_sW_Commands;
    string lv_sW_String;

    // Automatic Variable Declarations
    int autoAC656549_ae;
    int autoAC656549_var;

    // Variable Initialization
    lv_sW_String = "";

    // Implementation
    autoAC656549_ae = lib22142002_gf_StringWords(lp_string);
    autoAC656549_var = 1;
    for ( ; autoAC656549_var <= autoAC656549_ae; autoAC656549_var += 1 ) {
        lv_sW_String = StringWord(lp_string, autoAC656549_var);
        if ((autoAC656549_var == 1)) {
            lv_sW_Commands += 1;
        }
        else {
            if ((autoAC656549_var != lib22142002_gf_StringWords(lp_string)) && ((lv_sW_String == ";") || (StringSub(StringWord(lp_string, autoAC656549_var), StringLength(StringWord(lp_string, autoAC656549_var)), StringLength(StringWord(lp_string, autoAC656549_var))) == ";"))) {
                lv_sW_Commands += 1;
            }

        }
    }
    return lv_sW_Commands;
}

string lib22142002_gf_CommandofString (string lp_string, int lp_com) {
    int init_i;

    // Variable Declarations
    string[100] lv_commandString;
    int lv_commandCounter;
    bool[100] lv_commandValidated;

    // Automatic Variable Declarations
    int autoF0A795DA_ae;
    int autoF0A795DA_var;
    int auto46D4C371_ae;
    int auto46D4C371_var;

    // Variable Initialization
    for (init_i = 0; init_i <= 99; init_i += 1) {
        lv_commandString[init_i] = "";
    }

    // Implementation
    autoF0A795DA_ae = lib22142002_gf_StringCommands(lp_string);
    autoF0A795DA_var = 1;
    for ( ; autoF0A795DA_var <= autoF0A795DA_ae; autoF0A795DA_var += 1 ) {
        lv_commandValidated[autoF0A795DA_var] = true;
    }
    auto46D4C371_ae = lib22142002_gf_StringWords(lp_string);
    auto46D4C371_var = 1;
    for ( ; auto46D4C371_var <= auto46D4C371_ae; auto46D4C371_var += 1 ) {
        if ((auto46D4C371_var == 1)) {
            lv_commandCounter += 1;
        }

        if ((StringWord(lp_string, auto46D4C371_var) == ";")) {
            lv_commandCounter += 1;
        }
        else {
            if ((StringSub(StringWord(lp_string, auto46D4C371_var), StringLength(StringWord(lp_string, auto46D4C371_var)), StringLength(StringWord(lp_string, auto46D4C371_var))) == ";")) {
                lv_commandString[lv_commandCounter] = (lv_commandString[lv_commandCounter] + " " + lib22142002_gf_ComQuota(StringWord(lp_string, auto46D4C371_var)));
                lv_commandCounter += 1;
            }
            else {
                lv_commandString[lv_commandCounter] = (lv_commandString[lv_commandCounter] + " " + StringWord(lp_string, auto46D4C371_var));
            }
        }
    }
    if ((lv_commandValidated[lp_com] == true)) {
        return lib22142002_gf_ComQuota(lv_commandString[lp_com]);
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_8AD72A2E")));
        return null;
    }
}

bool lib22142002_gf_C_InitialLengthCheck (string lp_iLC_CWord, int lp_iLC_CLengthMin, int lp_iLC_CLengthMax, int lp_iLC_TrigP) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_iLC_CLengthMax == 0)) {
        if ((lib22142002_gf_StringWords(lp_iLC_CWord) >= lp_iLC_CLengthMin)) {
            return true;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(lp_iLC_TrigP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_0394B44A")));
            return false;
        }
    }
    else {
        if (((lib22142002_gf_StringWords(lp_iLC_CWord) >= lp_iLC_CLengthMin) && (lib22142002_gf_StringWords(lp_iLC_CWord) <= lp_iLC_CLengthMax))) {
            return true;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(lp_iLC_TrigP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_F48FA371")));
            return false;
        }
    }
}

playergroup lib22142002_gf_C_PlayerGroupVerification (string lp_pGS_CWord, int lp_pGS_ValidateWord, int lp_pGS_RequiredLengthMin, int lp_pGS_RequiredLengthMax, int lp_pGS_Default, int lp_pGS_TrigP, bool lp_pGS_LimitSolo) {
    // Variable Declarations
    playergroup lv_pGS_ReturnGroup;
    int lv_pGS_PV;

    // Automatic Variable Declarations
    unitgroup autoED0ED557_g;
    int autoED0ED557_u;
    unit autoED0ED557_var;

    // Variable Initialization
    lv_pGS_ReturnGroup = PlayerGroupEmpty();

    // Implementation
    if (((lib22142002_gf_StringWords(lp_pGS_CWord) >= lp_pGS_RequiredLengthMin) && (lib22142002_gf_StringWords(lp_pGS_CWord) <= lp_pGS_RequiredLengthMax))) {
        lv_pGS_PV = lib22142002_gf_C_PlayerVerification(StringWord(lp_pGS_CWord, lp_pGS_ValidateWord), lp_pGS_TrigP);
    }
    else {
        lv_pGS_PV = lp_pGS_Default;
    }
    if ((lv_pGS_PV == -1)) {
        return null;
    }
    else {
        if ((lv_pGS_PV == 48)) {
            lv_pGS_PV = lp_pGS_TrigP;
            PlayerGroupAdd(lv_pGS_ReturnGroup, lv_pGS_PV);
        }
        else {
            if ((lv_pGS_PV == 55)) {
                if ((UnitGroupCount(UnitGroupSelected(lp_pGS_TrigP), c_unitCountAlive) == 0)) {
                    UIDisplayMessage(PlayerGroupSingle(lp_pGS_TrigP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_516EA00D")));
                    return null;
                }

                autoED0ED557_g = UnitGroupSelected(lp_pGS_TrigP);
                autoED0ED557_u = UnitGroupCount(autoED0ED557_g, c_unitCountAll);
                for (;; autoED0ED557_u -= 1) {
                    autoED0ED557_var = UnitGroupUnitFromEnd(autoED0ED557_g, autoED0ED557_u);
                    if (autoED0ED557_var == null) { break; }
                    PlayerGroupAdd(lv_pGS_ReturnGroup, UnitGetOwner(autoED0ED557_var));
                }
            }
            else {
                if ((lv_pGS_PV == 100)) {
                    libNtve_gf_AddPlayerGroupToPlayerGroup(PlayerGroupAll(), lv_pGS_ReturnGroup);
                }
                else {
                    PlayerGroupAdd(lv_pGS_ReturnGroup, lv_pGS_PV);
                }
            }
        }
    }
    if ((lp_pGS_LimitSolo == true) && (PlayerGroupCount(lv_pGS_ReturnGroup) > 1)) {
        UIDisplayMessage(PlayerGroupSingle(lp_pGS_TrigP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_50937D5F")));
        return null;
    }
    else {
        return lv_pGS_ReturnGroup;
    }
}

int lib22142002_gf_C_PlayerVerification (string lp_pTV_TextWord, int lp_pTV_TriggeringPlayerPar) {
    // Variable Declarations
    int lv_pTV_TargetintColorPreset;

    // Automatic Variable Declarations
    string auto1A352EDC_val;
    const int autoF6F9BC4D_ae = 15;
    int autoF6F9BC4D_var;
    const int auto87CC2DEE_ae = 14;
    int auto87CC2DEE_var;

    // Variable Initialization

    // Implementation
    if ((lp_pTV_TextWord == null)) {
        return -1;
    }

    if (((StringCase(lp_pTV_TextWord, true) == "ME") || (StringCase(lp_pTV_TextWord, true) == "SELF"))) {
        return 48;
    }

    if (((StringCase(lp_pTV_TextWord, true) == "#") || (StringCase(lp_pTV_TextWord, true) == "THIS") || (StringCase(lp_pTV_TextWord, true) == "SELECT"))) {
        return 55;
    }

    if (((lp_pTV_TextWord == "@") || (StringCase(lp_pTV_TextWord, true) == "ALL") || (StringCase(lp_pTV_TextWord, true) == "EVERYONE"))) {
        return 100;
    }

    if (((StringLength(lp_pTV_TextWord) == 1) || (StringLength(lp_pTV_TextWord) == 2) || (lp_pTV_TextWord == "100"))) {
        if ((lib22142002_gf_StringNumberValidationInteger(lp_pTV_TextWord) == true)) {
            if ((((StringToInt(lp_pTV_TextWord) >= 0) && (StringToInt(lp_pTV_TextWord) <= 15)) || (StringToInt(lp_pTV_TextWord) == 48) || (StringToInt(lp_pTV_TextWord) == 55) || (StringToInt(lp_pTV_TextWord) == 100))) {
                return StringToInt(lp_pTV_TextWord);
            }

        }

    }

    if (((StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "WHITE", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "RED", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "BLUE", 2)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "TEAL", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "PURPLE", 2)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "YELLOW", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "ORANGE", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "GREEN", 1)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LIGHTPINK", 6)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "VIOLET", 1)) || (StringCase(lp_pTV_TextWord, true) == "LIGHTGREY") || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "DARKGREEN", 8)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "BROWN", 2)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LIGHTGREEN", 9)) || (StringCase(lp_pTV_TextWord, true) == "DARKGREY") || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "PINK", 2)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LPINK", 2)) || (StringCase(lp_pTV_TextWord, true) == "LGREY") || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "DGREEN", 2)) || (StringCase(lp_pTV_TextWord, true) == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LGREEN", 5)) || (StringCase(lp_pTV_TextWord, true) == "DGREY"))) {
        auto1A352EDC_val = StringCase(lp_pTV_TextWord, true);
        if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "WHITE", 1)) {
            lv_pTV_TargetintColorPreset = 0;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "RED", 1)) {
            lv_pTV_TargetintColorPreset = 1;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "BLUE", 2)) {
            lv_pTV_TargetintColorPreset = 2;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "TEAL", 1)) {
            lv_pTV_TargetintColorPreset = 3;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "PURPLE", 2)) {
            lv_pTV_TargetintColorPreset = 4;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "YELLOW", 1)) {
            lv_pTV_TargetintColorPreset = 5;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "ORANGE", 1)) {
            lv_pTV_TargetintColorPreset = 6;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "GREEN", 1)) {
            lv_pTV_TargetintColorPreset = 7;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LIGHTPINK", 6)) {
            lv_pTV_TargetintColorPreset = 8;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LPINK", 2)) {
            lv_pTV_TargetintColorPreset = 8;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "VIOLET", 1)) {
            lv_pTV_TargetintColorPreset = 9;
        }
        else if (auto1A352EDC_val == "LIGHTGREY") {
            lv_pTV_TargetintColorPreset = 10;
        }
        else if (auto1A352EDC_val == "LGREY") {
            lv_pTV_TargetintColorPreset = 10;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "DARKGREEN", 8)) {
            lv_pTV_TargetintColorPreset = 11;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "DGREEN", 5)) {
            lv_pTV_TargetintColorPreset = 11;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "BROWN", 2)) {
            lv_pTV_TargetintColorPreset = 12;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LIGHTGREEN", 9)) {
            lv_pTV_TargetintColorPreset = 13;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "LGREEN", 5)) {
            lv_pTV_TargetintColorPreset = 13;
        }
        else if (auto1A352EDC_val == "DARKGREY") {
            lv_pTV_TargetintColorPreset = 14;
        }
        else if (auto1A352EDC_val == "DGREY") {
            lv_pTV_TargetintColorPreset = 14;
        }
        else if (auto1A352EDC_val == lib22142002_gf_StringContraction(lp_pTV_TextWord, "PINK", 2)) {
            lv_pTV_TargetintColorPreset = 15;
        }
        else {
        }
        autoF6F9BC4D_var = 0;
        for ( ; autoF6F9BC4D_var <= autoF6F9BC4D_ae; autoF6F9BC4D_var += 1 ) {
            if ((PlayerGetColorIndex(autoF6F9BC4D_var, false) == lv_pTV_TargetintColorPreset)) {
                return autoF6F9BC4D_var;
            }

        }
    }

    auto87CC2DEE_var = 1;
    for ( ; auto87CC2DEE_var <= auto87CC2DEE_ae; auto87CC2DEE_var += 1 ) {
        if ((StringCase(lib22142002_gv_playerNameOneWord[auto87CC2DEE_var], true) == StringCase(lp_pTV_TextWord, true))) {
            return auto87CC2DEE_var;
        }

    }
    return -1;
}

unit lib22142002_gf_C_SingleUnitTargetVerification (string lp_textWord, int lp_triggeringPlayerPar) {
    // Variable Declarations
    unit lv_targetU;
    int lv_agentNumber;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((StringCase(lp_textWord, true) == "#")) {
        if ((UnitGroupCount(UnitGroupSelected(lp_triggeringPlayerPar), c_unitCountAlive) != 0)) {
            if ((UnitGroupCount(UnitGroupSelected(lp_triggeringPlayerPar), c_unitCountAlive) == 1)) {
                if ((UnitHasBehavior2(UnitGroupUnit(UnitGroupSelected(lp_triggeringPlayerPar), 1), "DEITYMainTools") == false)) {
                    lv_targetU = UnitGroupUnit(UnitGroupSelected(lp_triggeringPlayerPar), 1);
                    return lv_targetU;
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(lp_triggeringPlayerPar), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5B821EF0")));
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(lp_triggeringPlayerPar), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_CF4E1761")));
                return null;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(lp_triggeringPlayerPar), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_517C3212")));
            return null;
        }
    }

    if ((StringCase(StringSub(lp_textWord, 1, 5), true) == "AGENT")) {
        if (((StringLength(StringSub(lp_textWord, 6, StringLength(lp_textWord))) == 1) || (StringLength(StringSub(lp_textWord, 6, StringLength(lp_textWord))) == 2))) {
            lv_agentNumber = StringToInt(StringSub(lp_textWord, 6, StringLength(lp_textWord)));
            if (((lv_agentNumber * 0) == 0)) {
                lv_targetU = lib22142002_gv_playerAgent[lv_agentNumber];
                if ((lv_targetU != null)) {
                    return lv_targetU;
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(lp_triggeringPlayerPar), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C36B9515")));
                    return null;
                }
            }
            else {
                return null;
            }
        }

    }

    return null;
}

trigger auto_lib22142002_gf_C_ResourceBalancer_Trigger = null;
int auto_lib22142002_gf_C_ResourceBalancer_lp_originValueTotalGoal;
playergroup auto_lib22142002_gf_C_ResourceBalancer_lp_originPlayerGroup;
int auto_lib22142002_gf_C_ResourceBalancer_lp_originResource;

void lib22142002_gf_C_ResourceBalancer (int lp_originValueTotalGoal, playergroup lp_originPlayerGroup, int lp_originResource) {
    auto_lib22142002_gf_C_ResourceBalancer_lp_originValueTotalGoal = lp_originValueTotalGoal;
    auto_lib22142002_gf_C_ResourceBalancer_lp_originPlayerGroup = lp_originPlayerGroup;
    auto_lib22142002_gf_C_ResourceBalancer_lp_originResource = lp_originResource;

    if (auto_lib22142002_gf_C_ResourceBalancer_Trigger == null) {
        auto_lib22142002_gf_C_ResourceBalancer_Trigger = TriggerCreate("auto_lib22142002_gf_C_ResourceBalancer_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_C_ResourceBalancer_Trigger, false, false);
}

bool auto_lib22142002_gf_C_ResourceBalancer_TriggerFunc (bool testConds, bool runActions) {
    int lp_originValueTotalGoal = auto_lib22142002_gf_C_ResourceBalancer_lp_originValueTotalGoal;
    playergroup lp_originPlayerGroup = auto_lib22142002_gf_C_ResourceBalancer_lp_originPlayerGroup;
    int lp_originResource = auto_lib22142002_gf_C_ResourceBalancer_lp_originResource;

    // Variable Declarations
    int lv_funcRB_NumberValuePlayerPaid;
    int lv_funcRB_NumberValuePlayerGoalCalculus;
    int[16] lv_funcRB_NumberValuePlayerBudget;
    playergroup lv_funcRB_EndPayUnevenPlayers;
    playergroup lv_funcRB_EndPayEvenPlayers;
    int lv_int;

    // Automatic Variable Declarations
    const int autoAEBC58AB_ae = 15;
    int autoAEBC58AB_var;
    playergroup autoA1B9BC35_g;
    int autoA1B9BC35_var;
    playergroup auto8A8B931F_g;
    int auto8A8B931F_var;
    playergroup auto636A970B_g;
    int auto636A970B_var;
    playergroup auto1FAC308E_g;
    int auto1FAC308E_var;
    playergroup auto1069BAB2_g;
    int auto1069BAB2_var;

    // Variable Initialization
    lv_funcRB_EndPayUnevenPlayers = PlayerGroupEmpty();
    lv_funcRB_EndPayEvenPlayers = PlayerGroupEmpty();

    // Implementation
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_5911CEDB"));
    autoAEBC58AB_var = 0;
    for ( ; autoAEBC58AB_var <= autoAEBC58AB_ae; autoAEBC58AB_var += 1 ) {
        lib22142002_gv_c_RB_NumberValuePlayerGoal[autoAEBC58AB_var] = 0;
    }
    autoA1B9BC35_g = lp_originPlayerGroup;
    autoA1B9BC35_var = -1;
    while (true) {
        autoA1B9BC35_var = PlayerGroupNextPlayer(autoA1B9BC35_g, autoA1B9BC35_var);
        if (autoA1B9BC35_var < 0) { break; }
        lv_funcRB_NumberValuePlayerBudget[autoA1B9BC35_var] = PlayerGetPropertyInt(autoA1B9BC35_var, lp_originResource);
    }
    lv_funcRB_NumberValuePlayerGoalCalculus = (lp_originValueTotalGoal / PlayerGroupCount(lp_originPlayerGroup));
    while ((lp_originValueTotalGoal >= lv_funcRB_NumberValuePlayerPaid)) {
        if (true) {
            lv_funcRB_EndPayEvenPlayers = PlayerGroupEmpty();
            auto8A8B931F_g = lp_originPlayerGroup;
            auto8A8B931F_var = -1;
            while (true) {
                auto8A8B931F_var = PlayerGroupNextPlayer(auto8A8B931F_g, auto8A8B931F_var);
                if (auto8A8B931F_var < 0) { break; }
                if ((lv_funcRB_NumberValuePlayerBudget[auto8A8B931F_var] != 0)) {
                    if ((lv_funcRB_NumberValuePlayerBudget[auto8A8B931F_var] <= lv_funcRB_NumberValuePlayerGoalCalculus)) {
                        lib22142002_gv_c_RB_NumberValuePlayerGoal[auto8A8B931F_var] += lv_funcRB_NumberValuePlayerBudget[auto8A8B931F_var];
                        lv_funcRB_NumberValuePlayerBudget[auto8A8B931F_var] = 0;
                        PlayerGroupAdd(lv_funcRB_EndPayUnevenPlayers, auto8A8B931F_var);
                    }
                    else {
                        PlayerGroupAdd(lv_funcRB_EndPayEvenPlayers, auto8A8B931F_var);
                    }
                }

            }
            if (true) {
                lv_funcRB_NumberValuePlayerPaid = 0;
                auto636A970B_g = lp_originPlayerGroup;
                auto636A970B_var = -1;
                while (true) {
                    auto636A970B_var = PlayerGroupNextPlayer(auto636A970B_g, auto636A970B_var);
                    if (auto636A970B_var < 0) { break; }
                    lv_funcRB_NumberValuePlayerPaid += lib22142002_gv_c_RB_NumberValuePlayerGoal[auto636A970B_var];
                }
            }

            if (true) {
                if ((PlayerGroupCount(lv_funcRB_EndPayEvenPlayers) == (PlayerGroupCount(lp_originPlayerGroup) - PlayerGroupCount(lv_funcRB_EndPayUnevenPlayers)))) {
                    auto1FAC308E_g = lv_funcRB_EndPayEvenPlayers;
                    auto1FAC308E_var = -1;
                    while (true) {
                        auto1FAC308E_var = PlayerGroupNextPlayer(auto1FAC308E_g, auto1FAC308E_var);
                        if (auto1FAC308E_var < 0) { break; }
                        lib22142002_gv_c_RB_NumberValuePlayerGoal[auto1FAC308E_var] += lv_funcRB_NumberValuePlayerGoalCalculus;
                        lv_funcRB_NumberValuePlayerBudget[auto1FAC308E_var] -= lv_funcRB_NumberValuePlayerGoalCalculus;
                    }
                }
                else {
                    lv_funcRB_NumberValuePlayerGoalCalculus = ((lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid) / PlayerGroupCount(lp_originPlayerGroup));
                }
            }

            if (true) {
                lv_funcRB_NumberValuePlayerPaid = 0;
                auto1069BAB2_g = lp_originPlayerGroup;
                auto1069BAB2_var = -1;
                while (true) {
                    auto1069BAB2_var = PlayerGroupNextPlayer(auto1069BAB2_g, auto1069BAB2_var);
                    if (auto1069BAB2_var < 0) { break; }
                    lv_funcRB_NumberValuePlayerPaid += lib22142002_gv_c_RB_NumberValuePlayerGoal[auto1069BAB2_var];
                }
                if (((lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid) <= 3)) {
                    lv_int = 1;
                    if ((lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] >= 3)) {
                        lib22142002_gv_c_RB_NumberValuePlayerGoal[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                        lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] -= (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                        lv_funcRB_NumberValuePlayerPaid += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                    }
                    else {
                        lv_int = 2;
                        if ((lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] >= 3)) {
                            lib22142002_gv_c_RB_NumberValuePlayerGoal[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                            lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] -= (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                            lv_funcRB_NumberValuePlayerPaid += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                        }
                        else {
                            lv_int = 3;
                            if ((lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] >= 3)) {
                                lib22142002_gv_c_RB_NumberValuePlayerGoal[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                                lv_funcRB_NumberValuePlayerBudget[PlayerGroupPlayer(lp_originPlayerGroup, lv_int)] -= (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                                lv_funcRB_NumberValuePlayerPaid += (lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid);
                            }

                        }
                    }
                }

            }

            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_22142002_AA123CF6") + IntToText((lp_originValueTotalGoal - lv_funcRB_NumberValuePlayerPaid))));
            Wait(0.5, c_timeGame);
        }

    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_E9E6AF3C"));
    return true;
}

int lib22142002_gf_C_ResourceLeader (int lp_resourceT) {
    // Variable Declarations
    int lv_leaderValue;
    int lv_leaderPlayer;
    int[16] lv_values;

    // Automatic Variable Declarations
    const int auto005290B4_ae = 14;
    int auto005290B4_var;
    const int auto2BC2F584_n = 4;
    int auto2BC2F584_i;
    const int auto93685350_ae = 14;
    int auto93685350_var;

    // Variable Initialization

    // Implementation
    auto005290B4_var = 1;
    for ( ; auto005290B4_var <= auto005290B4_ae; auto005290B4_var += 1 ) {
        lv_values[auto005290B4_var] = PlayerGetPropertyInt(auto005290B4_var, lp_resourceT);
    }
    for (auto2BC2F584_i = 1; auto2BC2F584_i <= auto2BC2F584_n; auto2BC2F584_i += 1) {
        auto93685350_var = 1;
        for ( ; auto93685350_var <= auto93685350_ae; auto93685350_var += 1 ) {
            if ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto93685350_var) == false) && (lv_leaderValue < lv_values[auto93685350_var])) {
                lv_leaderValue = lv_values[auto93685350_var];
                lv_leaderPlayer = auto93685350_var;
            }

        }
    }
    return lv_leaderPlayer;
}

point lib22142002_gf_C_SC_CameraPointSetup (int lp_cameraBlock, int lp_otherPlayer) {
    // Variable Declarations
    fixed lv_moveCameraValue;
    string lv_cameraBlockType;
    fixed lv_camPositionX;
    fixed lv_camPositionY;
    fixed lv_returnX;
    fixed lv_returnY;
    point lv_returnPoint;

    // Automatic Variable Declarations
    int auto59861EDE_val;

    // Variable Initialization

    // Implementation
    auto59861EDE_val = lp_cameraBlock;
    if (auto59861EDE_val == 1) {
        lv_moveCameraValue = 5.0;
        lv_cameraBlockType = "CameraBlockSW";
    }
    else if (auto59861EDE_val == 2) {
        lv_moveCameraValue = -10.0;
        lv_cameraBlockType = "CameraBlockNE";
    }
    else {
    }
    lv_camPositionX = PointGetX(UnitGetPosition(UnitGroupUnit(UnitGroup(lv_cameraBlockType, lp_otherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1)));
    lv_camPositionY = PointGetY(UnitGetPosition(UnitGroupUnit(UnitGroup(lv_cameraBlockType, lp_otherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1)));
    lv_returnX = (lv_camPositionX + lv_moveCameraValue);
    lv_returnY = (lv_camPositionY + lv_moveCameraValue);
    lv_returnPoint = Point(lv_returnX, lv_returnY);
    return lv_returnPoint;
}

string lib22142002_gf_StringContraction (string lp_c_EnteredString, string lp_c_ValidString, int lp_c_Contract) {
    // Variable Declarations
    string lv_c_String;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_c_String = StringCase(lp_c_ValidString, true);

    // Implementation
    if ((StringCase(lp_c_EnteredString, true) == StringCase(lv_c_String, true))) {
        return StringCase(lp_c_EnteredString, true);
    }
    else {
        do {
            lv_c_String = lib22142002_gf_StringReconstruction(lv_c_String, 1, lp_c_ValidString);
            if ((StringCase(lp_c_EnteredString, true) == StringCase(lv_c_String, true))) {
                return StringCase(lp_c_EnteredString, true);
            }

        }while ((StringLength(lv_c_String) != lp_c_Contract));
    }
    return StringCase(lp_c_ValidString, true);
}

string lib22142002_gf_SMARTCOMMANDStringContraction (string lp_c_EnteredString, string lp_c_ValidString, int lp_c_Contract) {
    // Variable Declarations
    const string lv_cV_EnteredStringConstant = lp_c_EnteredString;
    string lv_cV_EnteredString;
    string lv_cV_ValidString;
    int lv_cV_Contract;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_cV_EnteredString = lp_c_EnteredString;
    lv_cV_ValidString = StringCase(lp_c_ValidString, true);
    lv_cV_Contract = lp_c_Contract;

    // Implementation
    if ((StringSub(lp_c_ValidString, 1, 1) == "-")) {
        lv_cV_ValidString = StringSub(lv_cV_ValidString, 2, StringLength(lv_cV_ValidString));
        lv_cV_Contract -= 1;
    }

    if ((StringSub(lp_c_EnteredString, 1, 1) == "-")) {
        lv_cV_EnteredString = StringSub(lv_cV_EnteredStringConstant, 2, StringLength(lv_cV_EnteredStringConstant));
    }

    if ((StringCase(lv_cV_EnteredString, true) == StringCase(lv_cV_ValidString, true))) {
        return StringCase(lp_c_EnteredString, true);
    }
    else {
        do {
            lv_cV_ValidString = lib22142002_gf_StringReconstruction(lv_cV_ValidString, 1, lp_c_ValidString);
            if ((StringCase(lv_cV_EnteredString, true) == StringCase(lv_cV_ValidString, true))) {
                return StringCase(lp_c_EnteredString, true);
            }

        }while ((StringLength(lv_cV_ValidString) != lv_cV_Contract));
    }
    return StringCase(lp_c_ValidString, true);
}

string lib22142002_gf_StringReconstruction (string lp_sR_String, int lp_sR_Decrease, string lp_debugText) {
    // Variable Declarations
    string lv_sR_ReconstructingString;

    // Automatic Variable Declarations
    int auto1544E7F3_ae;
    int auto1544E7F3_var;

    // Variable Initialization
    lv_sR_ReconstructingString = "";

    // Implementation
    if ((StringLength(lp_sR_String) > 1)) {
        auto1544E7F3_ae = (StringLength(lp_sR_String) - lp_sR_Decrease);
        auto1544E7F3_var = 1;
        for ( ; auto1544E7F3_var <= auto1544E7F3_ae; auto1544E7F3_var += 1 ) {
            lv_sR_ReconstructingString = (lv_sR_ReconstructingString + StringSub(lp_sR_String, auto1544E7F3_var, auto1544E7F3_var));
        }
        return lv_sR_ReconstructingString;
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringToText(lp_debugText));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_BBC3359B"));
        return "ERROR";
    }
}

bool lib22142002_gf_C_HelpCommandCheck (string lp_h_String) {
    // Automatic Variable Declarations
    int auto0C94047D_ae;
    int auto0C94047D_var;

    // Implementation
    auto0C94047D_ae = StringLength(lp_h_String);
    auto0C94047D_var = 1;
    for ( ; auto0C94047D_var <= auto0C94047D_ae; auto0C94047D_var += 1 ) {
        if ((StringSub(lp_h_String, auto0C94047D_var, auto0C94047D_var) == "?")) {
            return true;
        }

    }
    return false;
}

bool lib22142002_gf_StringNumberValidationInteger (string lp_i_Imput) {
    // Automatic Variable Declarations
    int auto87ED981D_ae;
    int auto87ED981D_var;

    // Implementation
    auto87ED981D_ae = StringLength(lp_i_Imput);
    auto87ED981D_var = 1;
    for ( ; auto87ED981D_var <= auto87ED981D_ae; auto87ED981D_var += 1 ) {
        if (((StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "-") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "0") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "1") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "2") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "3") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "4") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "5") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "6") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "7") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "8") || (StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "9"))) {
            if ((StringSub(lp_i_Imput, auto87ED981D_var, auto87ED981D_var) == "-") && (auto87ED981D_var != 1)) {
                return false;
            }

        }
        else {
            return false;
        }
    }
    return true;
}

bool lib22142002_gf_StringNumberValidationReal (string lp_i_Imput) {
    // Automatic Variable Declarations
    int autoA260E947_ae;
    int autoA260E947_var;

    // Implementation
    autoA260E947_ae = StringLength(lp_i_Imput);
    autoA260E947_var = 1;
    for ( ; autoA260E947_var <= autoA260E947_ae; autoA260E947_var += 1 ) {
        if (((StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "-") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "0") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "1") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "2") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "3") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "4") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "5") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "6") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "7") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "8") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "9") || (StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "."))) {
            if ((StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == "-") && (autoA260E947_var != 1)) {
                return false;
            }

            if ((StringSub(lp_i_Imput, autoA260E947_var, autoA260E947_var) == ".") && ((autoA260E947_var == 1) || (autoA260E947_var == StringLength(lp_i_Imput)))) {
                return false;
            }

        }
        else {
            return false;
        }
    }
    return true;
}

string lib22142002_gf_ComQuota (string lp_enteredCommand) {
    // Automatic Variable Declarations
    // Implementation
    if ((StringSub(lp_enteredCommand, StringLength(lp_enteredCommand), StringLength(lp_enteredCommand)) == ";")) {
        return StringSub(lp_enteredCommand, 1, (StringLength(lp_enteredCommand) - 1));
    }

    return lp_enteredCommand;
}

bool lib22142002_gf_C_SC_Behavior_VariantChecker (unit lp_unit, string lp_behavior) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_behavior == "PowerSource") && ((UnitHasBehavior2(lp_unit, "FastPowerSource") == true) || (UnitHasBehavior2(lp_unit, "SentryPowerSource") == true) || (UnitHasBehavior2(lp_unit, "PowerCellPowerSource") == true) || (UnitHasBehavior2(lp_unit, "PowerSourceFast") == true) || (UnitHasBehavior2(lp_unit, "WarpPrismGiantPowerSource") == true) || (UnitHasBehavior2(lp_unit, "VoidPylonPowerSource") == true) || (UnitHasBehavior2(lp_unit, "WarpPrismPowerSource") == true) || (UnitHasBehavior2(lp_unit, "WarpPrismPowerSourceFast") == true))) {
        return true;
    }

    if ((lp_behavior == "CritterMove") && ((UnitHasBehavior2(lp_unit, "ColonistWander") == true) || (UnitHasBehavior2(lp_unit, "CritterWander") == true) || (UnitHasBehavior2(lp_unit, "CritterWanderLeash") == true) || (UnitHasBehavior2(lp_unit, "CritterWanderLeashShort") == true) || (UnitHasBehavior2(lp_unit, "InstallationZergWander") == true) || (UnitHasBehavior2(lp_unit, "LarvaWander") == true))) {
        return true;
    }

    return false;
}

void lib22142002_gf_C_SC_Behavior_VariantRemover (unit lp_unit, string lp_behavior) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_behavior == "PowerSource")) {
        UnitBehaviorRemove(lp_unit, "FastPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "SentryPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "PowerCellPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "PowerSourceFast", 1);
        UnitBehaviorRemove(lp_unit, "WarpPrismGiantPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "VoidPylonPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "WarpPrismPowerSource", 1);
        UnitBehaviorRemove(lp_unit, "WarpPrismPowerSourceFast", 1);
    }

    if ((lp_behavior == "CritterMove")) {
        UnitBehaviorRemove(lp_unit, "ColonistWander", 1);
        UnitBehaviorRemove(lp_unit, "CritterWander", 1);
        UnitBehaviorRemove(lp_unit, "CritterWanderLeash", 1);
        UnitBehaviorRemove(lp_unit, "CritterWanderLeashShort", 1);
        UnitBehaviorRemove(lp_unit, "InstallationZergWander", 1);
        UnitBehaviorRemove(lp_unit, "LarvaWander", 1);
    }

}

void lib22142002_gf_C_ChangeOwnerCommand (int lp_newOwner, int lp_trigP, bool lp_changeColor) {
    // Variable Declarations
    unitgroup lv_triggeringUG;

    // Automatic Variable Declarations
    unitgroup auto0651EE07_g;
    int auto0651EE07_u;
    unit auto0651EE07_var;
    unitgroup auto68C2E115_g;
    int auto68C2E115_u;
    unit auto68C2E115_var;

    // Variable Initialization
    lv_triggeringUG = UnitGroupEmpty();

    // Implementation
    if ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, lp_trigP) == true)) {
        UIDisplayMessage(PlayerGroupSingle(lp_trigP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C89EAE1B") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lp_newOwner), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lp_newOwner, false))) + StringExternal("Param/Value/lib_22142002_7377694C")));
        if ((lp_changeColor == true)) {
            auto68C2E115_g = UnitGroupSelected(lp_trigP);
            auto68C2E115_u = UnitGroupCount(auto68C2E115_g, c_unitCountAll);
            for (;; auto68C2E115_u -= 1) {
                auto68C2E115_var = UnitGroupUnitFromEnd(auto68C2E115_g, auto68C2E115_u);
                if (auto68C2E115_var == null) { break; }
                if ((UnitGetOwner(auto68C2E115_var) != lp_newOwner)) {
                    UnitSetOwner(auto68C2E115_var, lp_newOwner, true);
                }
                else {
                    if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, auto68C2E115_var) == true)) {
                        lib22142002_gf_CUT_Remove(auto68C2E115_var);
                        UnitGroupRemove(lib22142002_gv_recolor_ColorAppliedUnit, auto68C2E115_var);
                        libNtve_gf_SendActorMessageToUnit(auto68C2E115_var, libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[lp_newOwner], lib22142002_gv_cCS_PlayerTeamColorSec[lp_newOwner]));
                    }

                }
            }
        }
        else {
            auto0651EE07_g = UnitGroupSelected(lp_trigP);
            auto0651EE07_u = UnitGroupCount(auto0651EE07_g, c_unitCountAll);
            for (;; auto0651EE07_u -= 1) {
                auto0651EE07_var = UnitGroupUnitFromEnd(auto0651EE07_g, auto0651EE07_u);
                if (auto0651EE07_var == null) { break; }
                UnitGroupAdd(lib22142002_gv_c_CO_RetainColor, auto0651EE07_var);
                UnitGroupAdd(lv_triggeringUG, auto0651EE07_var);
                UnitSetOwner(auto0651EE07_var, lp_newOwner, true);
            }
            Wait(0.1, c_timeGame);
            UnitGroupRemoveUnitGroup(lib22142002_gv_c_CO_RetainColor, lv_triggeringUG);
            UnitSetCustomValue(UnitLastCreated(), 10, 100.0);
        }
    }

    lib22142002_gf_C_KC_OwnerChange_UpgradePanel(EventPlayer());
    lib22142002_gf_MRB_OwnerChangedSelect(EventPlayer());
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
}

int lib22142002_gf_C_KC_OwnerChange_ReturnNumber (int lp_triggeringButton, int lp_triggeringP, bool lp_controlPressed) {
    // Variable Declarations
    int lv_triggeringNumber;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_controlPressed == false)) {
        if ((EventKeyPressed() == c_keyNumPad0)) {
            lv_triggeringNumber = 0;
        }
        else {
            if ((EventKeyPressed() == c_keyNumPad1)) {
                lv_triggeringNumber = 1;
            }
            else {
                if ((EventKeyPressed() == c_keyNumPad2)) {
                    lv_triggeringNumber = 2;
                }
                else {
                    if ((EventKeyPressed() == c_keyNumPad3)) {
                        lv_triggeringNumber = 3;
                    }
                    else {
                        if ((EventKeyPressed() == c_keyNumPad4)) {
                            lv_triggeringNumber = 4;
                        }
                        else {
                            if ((EventKeyPressed() == c_keyNumPad5)) {
                                lv_triggeringNumber = 5;
                            }
                            else {
                                if ((EventKeyPressed() == c_keyNumPad6)) {
                                    lv_triggeringNumber = 6;
                                }
                                else {
                                    if ((EventKeyPressed() == c_keyNumPad7)) {
                                        lv_triggeringNumber = 7;
                                    }
                                    else {
                                        if ((EventKeyPressed() == c_keyNumPad8)) {
                                            lv_triggeringNumber = 8;
                                        }
                                        else {
                                            if ((EventKeyPressed() == c_keyNumPad9)) {
                                                lv_triggeringNumber = 9;
                                            }

                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else {
        if ((EventKeyPressed() == c_keyNumPad0)) {
            lv_triggeringNumber = 10;
        }
        else {
            if ((EventKeyPressed() == c_keyNumPad1)) {
                lv_triggeringNumber = 11;
            }
            else {
                if ((EventKeyPressed() == c_keyNumPad2)) {
                    lv_triggeringNumber = 12;
                }
                else {
                    if ((EventKeyPressed() == c_keyNumPad3)) {
                        lv_triggeringNumber = 13;
                    }
                    else {
                        if ((EventKeyPressed() == c_keyNumPad4)) {
                            lv_triggeringNumber = 14;
                        }
                        else {
                            if ((EventKeyPressed() == c_keyNumPad5)) {
                                lv_triggeringNumber = 15;
                            }

                        }
                    }
                }
            }
        }
    }
    if ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, lp_triggeringP) == false)) {
        UIDisplayMessage(PlayerGroupSingle(lp_triggeringP), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_515FEE39") + IntToText(lv_triggeringNumber) + StringExternal("Param/Value/lib_22142002_65EDAE32") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lv_triggeringNumber), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_triggeringNumber, false))) + StringExternal("Param/Value/lib_22142002_504A1189")));
    }

    return lv_triggeringNumber;
}

void lib22142002_gf_C_KC_OwnerChange_UpgradePanel (int lp_triggeringP) {
    // Automatic Variable Declarations
    unitgroup autoB48C6272_g;
    int autoB48C6272_u;
    unit autoB48C6272_var;

    // Implementation
    if ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, lp_triggeringP) == true)) {
        autoB48C6272_g = UnitGroupSelected(lp_triggeringP);
        autoB48C6272_u = UnitGroupCount(autoB48C6272_g, c_unitCountAll);
        for (;; autoB48C6272_u -= 1) {
            autoB48C6272_var = UnitGroupUnitFromEnd(autoB48C6272_g, autoB48C6272_u);
            if (autoB48C6272_var == null) { break; }
            if ((UnitGetType(autoB48C6272_var) == "DEITYUpgradeCreator")) {
                lib22142002_gf_DP_Auto_RacesOwnerChange(lp_triggeringP);
            }

        }
    }

}

void lib22142002_gf_CPTT_APPLY (int lp_player) {
    // Automatic Variable Declarations
    unitgroup autoF0E950C5_g;
    int autoF0E950C5_u;
    unit autoF0E950C5_var;
    unitgroup autoF297BBEA_g;
    int autoF297BBEA_u;
    unit autoF297BBEA_var;

    // Implementation
    if ((lib22142002_gv_c_SC_PlayerTextBool[lp_player] == true)) {
        autoF0E950C5_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
        autoF0E950C5_u = UnitGroupCount(autoF0E950C5_g, c_unitCountAll);
        for (;; autoF0E950C5_u -= 1) {
            autoF0E950C5_var = UnitGroupUnitFromEnd(autoF0E950C5_g, autoF0E950C5_u);
            if (autoF0E950C5_var == null) { break; }
            UnitSetInfoText2(autoF0E950C5_var, lib22142002_gv_c_SC_PlayerText[lp_player]);
        }
    }

    if ((lib22142002_gv_c_SC_PlayerTipBool[lp_player] == true)) {
        autoF297BBEA_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
        autoF297BBEA_u = UnitGroupCount(autoF297BBEA_g, c_unitCountAll);
        for (;; autoF297BBEA_u -= 1) {
            autoF297BBEA_var = UnitGroupUnitFromEnd(autoF297BBEA_g, autoF297BBEA_u);
            if (autoF297BBEA_var == null) { break; }
            UnitSetInfoTip(autoF297BBEA_var, lib22142002_gv_c_SC_PlayerTip[lp_player]);
        }
    }

}

void lib22142002_gf_CPTT_REMOVE (int lp_player) {
    // Automatic Variable Declarations
    unitgroup autoD067317C_g;
    int autoD067317C_u;
    unit autoD067317C_var;
    unitgroup auto29F17FE8_g;
    int auto29F17FE8_u;
    unit auto29F17FE8_var;

    // Implementation
    if ((lib22142002_gv_c_SC_PlayerTextBool[lp_player] == false)) {
        autoD067317C_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
        autoD067317C_u = UnitGroupCount(autoD067317C_g, c_unitCountAll);
        for (;; autoD067317C_u -= 1) {
            autoD067317C_var = UnitGroupUnitFromEnd(autoD067317C_g, autoD067317C_u);
            if (autoD067317C_var == null) { break; }
            UnitSetInfoText2(autoD067317C_var, StringToText(""));
            UnitClearInfoText(autoD067317C_var);
        }
    }

    if ((lib22142002_gv_c_SC_PlayerTipBool[lp_player] == false)) {
        auto29F17FE8_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
        auto29F17FE8_u = UnitGroupCount(auto29F17FE8_g, c_unitCountAll);
        for (;; auto29F17FE8_u -= 1) {
            auto29F17FE8_var = UnitGroupUnitFromEnd(auto29F17FE8_g, auto29F17FE8_u);
            if (auto29F17FE8_var == null) { break; }
            UnitSetInfoTip(auto29F17FE8_var, StringToText(""));
        }
    }

}

string lib22142002_gf_UnitCreationSkinCheck (unit lp_sourceUnit) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior2(lp_sourceUnit, "KillSquad") == true)) {
        return "KillSquad";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "EnthralledZerg") == true)) {
        return "EnthralledZerg";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "KerrigansBroodSkin") == true)) {
        return "KerrigansBroodSkin";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "ZagaraVoidCoopDevouringMawDebuff") == true)) {
        return "ZagaraVoidCoopDevouringMawDebuff";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "UEDSkin") == true)) {
        return "UEDSkin";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "MoebiusCorpsSkin") == true)) {
        return "MoebiusCorpsSkin";
    }

    if ((UnitHasBehavior2(lp_sourceUnit, "DOMSkin") == true)) {
        return "DOMSkin";
    }

    return "";
}

void lib22142002_gf_C_SC_CommandSelector (string lp_enteredString, int lp_commandInt) {
    // Variable Declarations
    string lv_txt;

    // Automatic Variable Declarations
    string autoA28AEECF_val;

    // Variable Initialization
    lv_txt = StringWord(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt), 1);

    // Implementation
    if (((StringWord(EventChatMessage(false), 1) == "-map") || (StringWord(EventChatMessage(false), 1) == "-catalog") || (StringWord(EventChatMessage(false), 1) == "-cataloghelp"))) {
        return ;
    }

    autoA28AEECF_val = StringCase(lv_txt, true);
    if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-CREEP", 4)) {
        lib22142002_gf_C_SCS_Creep(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-ROLL", 4)) {
        lib22142002_gf_C_SCS_Roll(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-ASPECTS", 4)) {
        lib22142002_gf_C_SCA_Aspects(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-ALLIANCES", 4)) {
        lib22142002_gf_C_SCA_Alliances(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-OWNERCHANGE", 4)) {
        lib22142002_gf_C_SC_OwnerChange(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-CAMERA", 4)) {
        lib22142002_gf_C_SC_Camera(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-RESOURCES", 4)) {
        lib22142002_gf_C_SC_Resources(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-SELECT", 4)) {
        lib22142002_gf_C_SC_Select(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-DESELECT", 4)) {
        lib22142002_gf_C_SC_DeSelect(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-HANDICAP", 4)) {
        lib22142002_gf_C_SC_Handicap(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-RACE", 4)) {
        lib22142002_gf_C_SC_Race(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == "-END") {
        lib22142002_gf_C_SC_End(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-HANDLE", 4)) {
        lib22142002_gf_C_SC_Handle(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-STATUS", 4)) {
        lib22142002_gf_C_SC_Status(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-VISION", 4)) {
        lib22142002_gf_C_SC_Vision(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-BOUNTY", 4)) {
        lib22142002_gf_C_SC_Bounty(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-RECOLOR", 4)) {
        lib22142002_gf_C_SC_Recolor(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-TINT", 3)) {
        lib22142002_gf_C_SC_Tint(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-SNAP", 4)) {
        lib22142002_gf_C_SC_Snap(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-OBJECTIVE", 4)) {
        lib22142002_gf_C_SC_Objective(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-MODS", 4)) {
        lib22142002_gf_C_SC_Mods(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-PLAYERTEXT", 9)) {
        lib22142002_gf_C_SC_PlayerText(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-PLAYERTIP", 9)) {
        lib22142002_gf_C_SC_PlayerTip(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-TRANSMISSION", 4)) {
        lib22142002_gf_C_SC_Transmission(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-TEXT", 4)) {
        lib22142002_gf_C_SC_Text(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-TIP", 3)) {
        lib22142002_gf_C_SC_Tip(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-FLASH", 4)) {
        lib22142002_gf_C_SC_Flash(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-SIGNAL", 4)) {
        lib22142002_gf_C_SC_Signal(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-TELEPORT", 4)) {
        lib22142002_gf_C_SC_Teleport(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == "-TP") {
        lib22142002_gf_C_SC_Teleport(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-UNIT", 4)) {
        lib22142002_gf_C_SC_Unit(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-DELETEPROTECTION", 4)) {
        lib22142002_gf_C_SC_DeleteProtectionToggle(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-DPROTECTION", 4)) {
        lib22142002_gf_C_SC_DeleteProtectionToggle(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-KILL", 4)) {
        lib22142002_gf_C_SC_KillDelete(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-REMOVE", 4)) {
        lib22142002_gf_C_SC_Remove(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-DUPLICATE", 4)) {
        lib22142002_gf_C_SC_Duplicate(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-BEHAVIOR", 4)) {
        lib22142002_gf_C_SC_Behavior(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else if (autoA28AEECF_val == lib22142002_gf_SMARTCOMMANDStringContraction(lv_txt, "-CONSEQUENCES", 4)) {
        lib22142002_gf_C_SC_Consequences(lib22142002_gf_CommandofString(lp_enteredString, lp_commandInt));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_FE4BB209")));
    }
}

void lib22142002_gf_C_SCS_Creep (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    bool lv_sC_PresetAddRemoveoption;
    bool lv_sC_PresetCreepPermanentoption;
    int lv_sC_PresetCreepSpeedType;
    fixed lv_sC_CreepValue;
    string lv_sC_RespondTextCommandType;
    point lv_sC_CreepTargetLocation;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextCreateRemove;
    text lv_sCH_HelpTextGrowthDecay;

    // Automatic Variable Declarations
    string autoDE22937F_val;
    string auto66ED6EA0_val;

    // Variable Initialization
    lv_sC_PresetAddRemoveoption = true;
    lv_sC_RespondTextCommandType = "";
    lv_sC_CreepTargetLocation = CameraGetTarget(EventPlayer());
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_60A2D48F");
    lv_sCH_HelpTextCreateRemove = StringExternal("Param/Value/lib_22142002_17C54BD0");
    lv_sCH_HelpTextGrowthDecay = StringExternal("Param/Value/lib_22142002_09669ECD");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 4, EventPlayer());
    if (true) {
        autoDE22937F_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (autoDE22937F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ADD", 1)) {
            lv_sC_PresetAddRemoveoption = true;
            lv_sC_RespondTextCommandType = "Added";
            lv_sCH_HelpText = lv_sCH_HelpTextCreateRemove;
        }
        else if (autoDE22937F_val == "+") {
            lv_sC_PresetAddRemoveoption = true;
            lv_sC_RespondTextCommandType = "Added";
            lv_sCH_HelpText = lv_sCH_HelpTextCreateRemove;
        }
        else if (autoDE22937F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "REMOVE", 1)) {
            lv_sC_PresetAddRemoveoption = false;
            lv_sC_RespondTextCommandType = "Removed";
            lv_sCH_HelpText = lv_sCH_HelpTextCreateRemove;
        }
        else if (autoDE22937F_val == "-") {
            lv_sC_PresetAddRemoveoption = false;
            lv_sC_RespondTextCommandType = "Removed";
            lv_sCH_HelpText = lv_sCH_HelpTextCreateRemove;
        }
        else if (autoDE22937F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "GROWTH", 1)) {
            lv_sC_PresetCreepSpeedType = c_creepSpeedGrowth;
            lv_sC_RespondTextCommandType = "Growth";
            lv_sCH_HelpText = lv_sCH_HelpTextGrowthDecay;
        }
        else if (autoDE22937F_val == "++") {
            lv_sC_PresetCreepSpeedType = c_creepSpeedGrowth;
            lv_sC_RespondTextCommandType = "Growth";
            lv_sCH_HelpText = lv_sCH_HelpTextGrowthDecay;
        }
        else if (autoDE22937F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DECAY", 1)) {
            lv_sC_PresetCreepSpeedType = c_creepSpeedDecay;
            lv_sC_RespondTextCommandType = "Decay";
            lv_sCH_HelpText = lv_sCH_HelpTextGrowthDecay;
        }
        else if (autoDE22937F_val == "--") {
            lv_sC_PresetCreepSpeedType = c_creepSpeedDecay;
            lv_sC_RespondTextCommandType = "Decay";
            lv_sCH_HelpText = lv_sCH_HelpTextGrowthDecay;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_35BEAF71")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if (((lv_sC_RespondTextCommandType == "Added") || (lv_sC_RespondTextCommandType == "Removed"))) {
        if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
            if (((StringToFixed(StringWord(lp_stringCommand, 3)) >= 1) && (StringToFixed(StringWord(lp_stringCommand, 3)) <= 100))) {
                lv_sC_CreepValue = StringToFixed(StringWord(lp_stringCommand, 3));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_AE79905D")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4D0E3924")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lib22142002_gf_StringWords(lp_stringCommand) == 4)) {
        auto66ED6EA0_val = StringCase(StringWord(lp_stringCommand, 4), true);
        if (auto66ED6EA0_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 4), "NORMAL", 1)) {
            lv_sC_PresetCreepPermanentoption = false;
        }
        else if (auto66ED6EA0_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 4), "PERMANENT", 1)) {
            lv_sC_PresetCreepPermanentoption = true;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_600B76E7")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        lv_sC_PresetCreepPermanentoption = false;
    }
    if (((lv_sC_RespondTextCommandType == "Growth") || (lv_sC_RespondTextCommandType == "Decay"))) {
        if ((StringCase(StringWord(lp_stringCommand, 3), true) == "RESET")) {
            lv_sC_CreepValue = 100;
        }
        else {
            if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                if ((StringToInt(StringWord(lp_stringCommand, 3)) > 0)) {
                    lv_sC_CreepValue = StringToInt(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2B760DE0")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B5D2AF98")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        if (((lv_sC_RespondTextCommandType == "Added") || (lv_sC_RespondTextCommandType == "Removed"))) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringToText(lv_sC_RespondTextCommandType) + StringExternal("Param/Value/lib_22142002_34BF5870")));
            if ((lv_sC_CreepValue >= 95.0)) {
                CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.05, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.05, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.1, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 50.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.1, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 60.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.1, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 70.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.1, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 80.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.15, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 85.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.15, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 90.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.15, c_timeGame);
                CreepModify(lv_sC_CreepTargetLocation, 95.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                Wait(0.15, c_timeGame);
            }
            else {
                if ((lv_sC_CreepValue >= 90.0)) {
                    CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.05, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.05, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.1, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 50.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.1, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 60.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.1, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 70.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.1, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 80.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.15, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 85.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.15, c_timeGame);
                    CreepModify(lv_sC_CreepTargetLocation, 90.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                    Wait(0.15, c_timeGame);
                }
                else {
                    if ((lv_sC_CreepValue >= 85.0)) {
                        CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.05, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.05, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.1, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 50.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.1, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 60.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.1, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 70.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.1, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 80.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.15, c_timeGame);
                        CreepModify(lv_sC_CreepTargetLocation, 85.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                        Wait(0.15, c_timeGame);
                    }
                    else {
                        if ((lv_sC_CreepValue >= 80.0)) {
                            CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.05, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.05, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.1, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 50.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.1, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 60.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.1, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 70.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.1, c_timeGame);
                            CreepModify(lv_sC_CreepTargetLocation, 80.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                            Wait(0.15, c_timeGame);
                        }
                        else {
                            if ((lv_sC_CreepValue >= 60.0)) {
                                CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                Wait(0.05, c_timeGame);
                                CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                Wait(0.05, c_timeGame);
                                CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                Wait(0.1, c_timeGame);
                                CreepModify(lv_sC_CreepTargetLocation, 50.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                Wait(0.1, c_timeGame);
                                CreepModify(lv_sC_CreepTargetLocation, 60.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                Wait(0.1, c_timeGame);
                            }
                            else {
                                if ((lv_sC_CreepValue >= 40.0)) {
                                    CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                    Wait(0.05, c_timeGame);
                                    CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                    Wait(0.05, c_timeGame);
                                    CreepModify(lv_sC_CreepTargetLocation, 40.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                    Wait(0.1, c_timeGame);
                                }
                                else {
                                    if ((lv_sC_CreepValue >= 30.0)) {
                                        CreepModify(lv_sC_CreepTargetLocation, 20.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                        Wait(0.05, c_timeGame);
                                        CreepModify(lv_sC_CreepTargetLocation, 30.0, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
                                        Wait(0.05, c_timeGame);
                                    }

                                }
                            }
                        }
                    }
                }
            }
            CreepModify(lv_sC_CreepTargetLocation, lv_sC_CreepValue, lv_sC_PresetAddRemoveoption, lv_sC_PresetCreepPermanentoption);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_20638AD0")));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_274A02EE") + StringToText(lv_sC_RespondTextCommandType) + StringExternal("Param/Value/lib_22142002_021A524D") + FixedToText(lv_sC_CreepValue, c_fixedPrecisionAny) + StringExternal("Param/Value/lib_22142002_9F8AF330")));
            CreepSetSpeed(lv_sC_PresetCreepSpeedType, lv_sC_CreepValue);
        }
    }

}

void lib22142002_gf_C_SCS_Roll (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_RollBound;
    int lv_sC_RollAmount;
    string lv_sC_RespondTextCommandType;
    int lv_sC_RollOutputRND;
    text lv_sC_RollOutputText;
    int lv_sC_RollOutputTotalInt;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int autoA8F647FE_ae;
    int autoA8F647FE_var;

    // Variable Initialization
    lv_sC_RespondTextCommandType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_F7E05CC7");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 3, EventPlayer());
    if ((lib22142002_gf_StringWords(lp_stringCommand) > 1)) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 2)) == true)) {
            if (((StringToInt(StringWord(lp_stringCommand, 2)) >= 2) && (StringToInt(StringWord(lp_stringCommand, 2)) <= 500))) {
                lv_sC_RollBound = StringToInt(StringWord(lp_stringCommand, 2));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_BA7A96DA")));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D163CA24")));
            return ;
        }
    }
    else {
        lv_sC_RollBound = 6;
    }

    if ((lib22142002_gf_StringWords(lp_stringCommand) > 2)) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
            if (((StringToInt(StringWord(lp_stringCommand, 2)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 2)) <= 50))) {
                lv_sC_RollAmount = StringToInt(StringWord(lp_stringCommand, 3));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4FD062B5")));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_CE8DA9F7")));
            return ;
        }
    }
    else {
        lv_sC_RollAmount = 1;
    }

    autoA8F647FE_ae = lv_sC_RollAmount;
    autoA8F647FE_var = 1;
    for ( ; autoA8F647FE_var <= autoA8F647FE_ae; autoA8F647FE_var += 1 ) {
        if ((autoA8F647FE_var != 1)) {
            lv_sC_RollOutputText = (lv_sC_RollOutputText + StringExternal("Param/Value/lib_22142002_9F30CF2C"));
        }

        lv_sC_RollOutputRND = RandomInt(1, lv_sC_RollBound);
        lv_sC_RollOutputTotalInt += lv_sC_RollOutputRND;
        lv_sC_RollOutputText = (lv_sC_RollOutputText + IntToText(lv_sC_RollOutputRND));
        if ((autoA8F647FE_var == lv_sC_RollAmount)) {
            if ((lv_sC_RollAmount > 1)) {
                lv_sC_RollOutputText = (lv_sC_RollOutputText + StringExternal("Param/Value/lib_22142002_F622DF55") + StringExternal("Param/Value/lib_22142002_6849EBAD") + IntToText(lv_sC_RollOutputTotalInt) + StringExternal("Param/Value/lib_22142002_618AF845"));
            }
            else {
                lv_sC_RollOutputText = (lv_sC_RollOutputText + StringExternal("Param/Value/lib_22142002_9F51AC7C"));
            }
        }

    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        if ((lv_sC_RollAmount == 1)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E7D384A7")));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6A68E66D")));
        }
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/lib_22142002_88ECDFD0") + lv_sC_RollOutputText));
    }

}

void lib22142002_gf_C_SCA_Aspects (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_SourcePlayer;
    playergroup lv_sC_GroupSourcePlayers;
    text lv_sC_RespondTextSourceGroupName;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    playergroup lv_sC_InterestPlayers;
    bool lv_sC_PresetOnOffOption;
    string lv_sC_RespondTextOnOffOption;
    int lv_sC_PresetAspect;
    string lv_sC_RespondTextAspect;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto342001DC_val;
    string auto2C71D3DA_val;
    int autoD0353EC5_val;
    int autoF6293FB1_val;
    playergroup auto64C75368_g;
    int auto64C75368_var;
    playergroup autoAACF8380_g;

    // Variable Initialization
    lv_sC_SourcePlayer = -1;
    lv_sC_GroupSourcePlayers = PlayerGroupEmpty();
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_InterestPlayers = PlayerGroupEmpty();
    lv_sC_PresetOnOffOption = true;
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_PresetAspect = c_allianceIdPassive;
    lv_sC_RespondTextAspect = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_71958324");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 5, EventPlayer());
    auto342001DC_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ALLIEDCHAT", 1)) {
        lv_sC_PresetAspect = c_allianceIdChat;
        lv_sC_RespondTextAspect = "Allied Chat";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PUSHABLE", 2)) {
        lv_sC_PresetAspect = c_allianceIdPushable;
        lv_sC_RespondTextAspect = "Pushable";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SPENDING", 1)) {
        lv_sC_PresetAspect = c_allianceIdSpend;
        lv_sC_RespondTextAspect = "Resource Spending";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TRADING", 1)) {
        lv_sC_PresetAspect = c_allianceIdTrade;
        lv_sC_RespondTextAspect = "Resource Trading";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CONTROL", 1)) {
        lv_sC_PresetAspect = c_allianceIdControl;
        lv_sC_RespondTextAspect = "Shared Control";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DEFEAT", 1)) {
        lv_sC_PresetAspect = c_allianceIdDefeat;
        lv_sC_RespondTextAspect = "Shared Defeat";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "POWER", 2)) {
        lv_sC_PresetAspect = c_allianceIdPower;
        lv_sC_RespondTextAspect = "Shared Power";
    }
    else if (auto342001DC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VISION", 1)) {
        lv_sC_PresetAspect = c_allianceIdVision;
        lv_sC_RespondTextAspect = "Shared Vision";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_A79ACC07")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }

    auto2C71D3DA_val = StringCase(StringWord(lp_stringCommand, 3), true);
    if (auto2C71D3DA_val == "ON") {
        lv_sC_PresetOnOffOption = true;
        lv_sC_RespondTextOnOffOption = "On";
    }
    else if (auto2C71D3DA_val == "+") {
        lv_sC_PresetOnOffOption = true;
        lv_sC_RespondTextOnOffOption = "On";
    }
    else if (auto2C71D3DA_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "OFF", 2)) {
        lv_sC_PresetOnOffOption = false;
        lv_sC_RespondTextOnOffOption = "Off";
    }
    else if (auto2C71D3DA_val == "-") {
        lv_sC_PresetOnOffOption = false;
        lv_sC_RespondTextOnOffOption = "Off";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_25EF81EE")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }

    autoD0353EC5_val = lib22142002_gf_StringWords(lp_stringCommand);
    if (autoD0353EC5_val == 3) {
        lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 48, EventPlayer(), false);
    }
    else if (autoD0353EC5_val == 4) {
        lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
    }
    else if (autoD0353EC5_val == 5) {
        lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 5, 5, -1, EventPlayer(), false);
    }
    else {
    }
    if ((lv_sC_GroupSourcePlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_47982AE4")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextSourceGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupSourcePlayers);
    }

    autoF6293FB1_val = lib22142002_gf_StringWords(lp_stringCommand);
    if (autoF6293FB1_val == 3) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
    }
    else if (autoF6293FB1_val == 4) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, -1, EventPlayer(), false);
    }
    else if (autoF6293FB1_val == 5) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, -1, EventPlayer(), false);
    }
    else {
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6565699C")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CBA1E604") + lv_sC_RespondTextSourceGroupName + StringExternal("Param/Value/lib_22142002_AF3EA79C")));
        UIDisplayMessage(lv_sC_GroupSourcePlayers, c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_ED6BE0F0") + StringToText(lv_sC_RespondTextAspect) + StringExternal("Param/Value/lib_22142002_08577B07") + StringToText(lv_sC_RespondTextOnOffOption) + StringExternal("Param/Value/lib_22142002_9E00CE2B") + lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers) + StringExternal("Param/Value/lib_22142002_609F86E2")));
        SoundPlayForPlayer(SoundLink("DEITYCommands_AllianceAspects", -1), c_maxPlayers, lv_sC_GroupSourcePlayers, 100.0, 0.0);
        auto64C75368_g = lv_sC_GroupSourcePlayers;
        auto64C75368_var = -1;
        while (true) {
            auto64C75368_var = PlayerGroupNextPlayer(auto64C75368_g, auto64C75368_var);
            if (auto64C75368_var < 0) { break; }
            autoAACF8380_g = lv_sC_GroupTargetPlayers;
            lv_sC_TargetPlayer = -1;
            while (true) {
                lv_sC_TargetPlayer = PlayerGroupNextPlayer(autoAACF8380_g, lv_sC_TargetPlayer);
                if (lv_sC_TargetPlayer < 0) { break; }
                PlayerSetAlliance(auto64C75368_var, lv_sC_PresetAspect, lv_sC_TargetPlayer, lv_sC_PresetOnOffOption);
                if (((lv_sC_PresetAspect == c_allianceIdControl) || (lv_sC_PresetAspect == c_allianceIdVision))) {
                    if ((lv_sC_PresetAspect == c_allianceIdControl)) {
                        lib22142002_gv_dEITY_RelationsControl[auto64C75368_var][lv_sC_TargetPlayer] = lv_sC_PresetOnOffOption;
                        PlayerSetAlliance(auto64C75368_var, c_allianceIdControl, lv_sC_TargetPlayer, lv_sC_PresetOnOffOption);
                    }

                    if ((lv_sC_PresetAspect == c_allianceIdVision)) {
                        lib22142002_gv_dEITY_RelationsVision[auto64C75368_var][lv_sC_TargetPlayer] = lv_sC_PresetOnOffOption;
                        PlayerSetAlliance(auto64C75368_var, c_allianceIdVision, lv_sC_TargetPlayer, lv_sC_PresetOnOffOption);
                    }

                }

            }
        }
    }

}

void lib22142002_gf_C_SCA_Alliances (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_SourcePlayer;
    playergroup lv_sC_GroupSourcePlayers;
    text lv_sC_RespondTextSourceGroupName;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_TextVisionOption;
    bool lv_sC_TextVisionOptionDefined;
    int lv_sC_PresetAllianceType;
    string lv_sC_RespondTextAllianceType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoA2E79FB3_val;
    string auto2464FA4B_val;
    string auto64816F3B_val;
    string auto33CB6759_val;
    string auto75F18344_val;
    int auto797B257D_val;
    int auto2F5B18DB_val;
    playergroup autoD7696BBF_g;
    int autoD7696BBF_var;
    playergroup auto381EBA63_g;

    // Variable Initialization
    lv_sC_SourcePlayer = -1;
    lv_sC_GroupSourcePlayers = PlayerGroupEmpty();
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_TextVisionOption = "";
    lv_sC_RespondTextAllianceType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_E6925B33");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 5, EventPlayer());
    autoA2E79FB3_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoA2E79FB3_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PUBLIC", 1)) {
        lv_sC_TextVisionOption = "Public";
        lv_sC_TextVisionOptionDefined = true;
    }
    else if (autoA2E79FB3_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NONPUBLIC", 1)) {
        lv_sC_TextVisionOption = "Non-Public";
        lv_sC_TextVisionOptionDefined = true;
    }
    else {
    }
    if ((lv_sC_TextVisionOptionDefined == false)) {
        auto2464FA4B_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (auto2464FA4B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ALLY", 1)) {
            lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_AllyWithSharedVision;
            lv_sC_RespondTextAllianceType = "Public Ally";
        }
        else if (auto2464FA4B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ENEMY", 1)) {
            lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_Enemy;
            lv_sC_RespondTextAllianceType = "Non-Public Enemy";
        }
        else if (auto2464FA4B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NEUTRAL", 1)) {
            lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_Neutral;
            lv_sC_RespondTextAllianceType = "Non-Public Neutral";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_AD0252DE")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        auto64816F3B_val = lv_sC_TextVisionOption;
        if (auto64816F3B_val == "Public") {
            auto33CB6759_val = StringCase(StringWord(lp_stringCommand, 3), true);
            if (auto33CB6759_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ALLY", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_AllyWithSharedVision;
                lv_sC_RespondTextAllianceType = "Public Ally";
            }
            else if (auto33CB6759_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ENEMY", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_EnemyWithSharedVision;
                lv_sC_RespondTextAllianceType = "Public Enemy";
            }
            else if (auto33CB6759_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "NEUTRAL", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_NeutralWithSharedVision;
                lv_sC_RespondTextAllianceType = "Public Neutral";
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D426B976")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else if (auto64816F3B_val == "Non-Public") {
            auto75F18344_val = StringCase(StringWord(lp_stringCommand, 3), true);
            if (auto75F18344_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ALLY", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_Ally;
                lv_sC_RespondTextAllianceType = "Non-Public Ally";
            }
            else if (auto75F18344_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ENEMY", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_Enemy;
                lv_sC_RespondTextAllianceType = "Non-Public Enemy";
            }
            else if (auto75F18344_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "NEUTRAL", 1)) {
                lv_sC_PresetAllianceType = libNtve_ge_AllianceSetting_Neutral;
                lv_sC_RespondTextAllianceType = "Non-Public Neutral";
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B830406F")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
        }
    }
    auto797B257D_val = lib22142002_gf_StringWords(lp_stringCommand);
    if (auto797B257D_val == 2) {
        lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 48, EventPlayer(), false);
    }
    else if (auto797B257D_val == 3) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 48, EventPlayer(), false);
        }
        else {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
        }
    }
    else if (auto797B257D_val == 4) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
        }
        else {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 3, 4, 4, -1, EventPlayer(), false);
        }
    }
    else if (auto797B257D_val == 5) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 5, 5, -1, EventPlayer(), false);
        }
        else {
            lv_sC_GroupSourcePlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, -1, EventPlayer(), false);
        }
    }
    else {
    }
    if ((lv_sC_GroupSourcePlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B23307FF")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextSourceGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupSourcePlayers);
    }

    auto2F5B18DB_val = lib22142002_gf_StringWords(EventChatMessage(false));
    if (auto2F5B18DB_val == 2) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
    }
    else if (auto2F5B18DB_val == 3) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
        }
        else {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 3, 3, 3, -1, EventPlayer(), false);
        }
    }
    else if (auto2F5B18DB_val == 4) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, -1, EventPlayer(), false);
        }
        else {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, -1, EventPlayer(), false);
        }
    }
    else if (auto2F5B18DB_val == 5) {
        if ((lv_sC_TextVisionOptionDefined == true)) {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, -1, EventPlayer(), false);
        }
        else {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, -1, EventPlayer(), false);
        }
    }
    else {
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3E420BED")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(libNtve_gf_UnionOfPlayerGroups(lv_sC_GroupSourcePlayers, PlayerGroupSingle(EventPlayer())), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lv_sC_RespondTextSourceGroupName + StringExternal("Param/Value/lib_22142002_E1D68F98") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_FEB2EEEA") + StringToText(lv_sC_RespondTextAllianceType) + StringExternal("Param/Value/lib_22142002_7E6A34DE")));
        SoundPlayForPlayer(SoundLink("DEITYCommands_Alliances", -1), c_maxPlayers, lv_sC_GroupSourcePlayers, 100.0, 0.0);
        autoD7696BBF_g = lv_sC_GroupSourcePlayers;
        autoD7696BBF_var = -1;
        while (true) {
            autoD7696BBF_var = PlayerGroupNextPlayer(autoD7696BBF_g, autoD7696BBF_var);
            if (autoD7696BBF_var < 0) { break; }
            auto381EBA63_g = lv_sC_GroupTargetPlayers;
            lv_sC_TargetPlayer = -1;
            while (true) {
                lv_sC_TargetPlayer = PlayerGroupNextPlayer(auto381EBA63_g, lv_sC_TargetPlayer);
                if (lv_sC_TargetPlayer < 0) { break; }
                libNtve_gf_SetAllianceOneWay(autoD7696BBF_var, lv_sC_TargetPlayer, lv_sC_PresetAllianceType);
                if (((lv_sC_PresetAllianceType == libNtve_ge_AllianceSetting_AllyWithSharedVision) || (lv_sC_PresetAllianceType == libNtve_ge_AllianceSetting_EnemyWithSharedVision) || (lv_sC_PresetAllianceType == libNtve_ge_AllianceSetting_NeutralWithSharedVision))) {
                    lib22142002_gv_dEITY_RelationsVision[autoD7696BBF_var][lv_sC_TargetPlayer] = true;
                }
                else {
                    lib22142002_gv_dEITY_RelationsVision[autoD7696BBF_var][lv_sC_TargetPlayer] = false;
                }
            }
        }
    }

}

void lib22142002_gf_C_SC_OwnerChange (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_NewOwner;
    bool lv_sC_OwnerChangeChangeColor;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sC_OwnerChangeChangeColor = true;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_E364D2A3");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 3, EventPlayer());
    if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 2)) == true)) {
        if (((StringToInt(StringWord(lp_stringCommand, 2)) >= 0) && (StringToInt(StringWord(lp_stringCommand, 2)) <= 15))) {
            lv_sC_NewOwner = StringToInt(StringWord(lp_stringCommand, 2));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C23FDFED")));
            return ;
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D05BCAFA")));
        return ;
    }

    if ((lib22142002_gf_StringWords(lp_stringCommand) == 3) && ((lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CHANGECOLOR", 1) == StringCase(StringWord(lp_stringCommand, 3), true)) || (lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CCOLOR", 2) == StringCase(StringWord(lp_stringCommand, 3), true)) || (lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RETAINCOLOR", 1) == StringCase(StringWord(lp_stringCommand, 3), true)) || (lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RCOLOR", 2) == StringCase(StringWord(lp_stringCommand, 3), true)))) {
        if (((lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CHANGECOLOR", 1) == StringCase(StringWord(lp_stringCommand, 3), true)) || (lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CCOLOR", 2) == StringCase(StringWord(lp_stringCommand, 3), true)))) {
            lv_sC_OwnerChangeChangeColor = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_4E70F67C"));
        }
        else {
            lv_sC_OwnerChangeChangeColor = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_807AEB2A"));
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1C7CB151")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        lib22142002_gf_C_ChangeOwnerCommand(lv_sC_NewOwner, EventPlayer(), lv_sC_OwnerChangeChangeColor);
    }

}

void lib22142002_gf_C_SC_Camera (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_OtherPlayer;
    playergroup lv_sC_GroupOtherPlayers;
    text lv_sC_RespondTextOtherGroupName;
    string lv_sC_CommandTypeText;
    unit lv_sC_TargetUnitSingle;
    bool lv_sC_PresetOnOffOption;
    string lv_sC_RespondTextOnOffOption;
    string lv_sC_BoundsTypeText;
    fixed lv_sC_CamShakeDurationValue;
    fixed lv_sC_CamShakeStrengthValue;
    point lv_sC_CamPoint01;
    point lv_sC_CamPoint02;
    point[15] lv_sC_TargetCamPoint;
    string lv_sC_TypeCameraData;
    text lv_sC_RespondTextCameraDataType;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextBounds;
    text lv_sCH_HelpTextMinimap;
    text lv_sCH_HelpTextPan;
    text lv_sCH_HelpTextData;
    text lv_sCH_HelpTextShake;
    text lv_sCH_HelpTextLock;
    text lv_sCH_HelpTextFollow;
    text lv_sCH_HelpTextView;
    text lv_sCH_HelpTextCoop;

    // Automatic Variable Declarations
    string autoB4F5087F_val;
    string auto2EDFB09D_val;
    string autoFEA888B8_val;
    string autoAF993674_val;
    string auto0354B489_val;
    string auto241D8690_val;
    string auto2F1A2E35_val;
    string autoE7B8F2E0_val;
    bool autoF6881985_val;
    playergroup autoE117E6CD_g;
    int autoE117E6CD_var;
    playergroup autoAFE71E4E_g;
    playergroup autoA50C31A0_g;
    int autoA50C31A0_var;
    bool auto3BE64529_val;
    playergroup auto2BD86140_g;
    int auto2BD86140_var;
    playergroup auto3EE6BF45_g;
    int auto3EE6BF45_var;
    bool auto68636952_val;
    playergroup auto28D89E49_g;
    int auto28D89E49_var;
    playergroup auto83FD2EE0_g;
    int auto83FD2EE0_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_OtherPlayer = -1;
    lv_sC_GroupOtherPlayers = PlayerGroupEmpty();
    lv_sC_CommandTypeText = "";
    lv_sC_PresetOnOffOption = true;
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_BoundsTypeText = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_C5776494");
    lv_sCH_HelpTextBounds = StringExternal("Param/Value/lib_22142002_24E0A138");
    lv_sCH_HelpTextMinimap = StringExternal("Param/Value/lib_22142002_4731B0F7");
    lv_sCH_HelpTextPan = StringExternal("Param/Value/lib_22142002_EE535AF1");
    lv_sCH_HelpTextData = StringExternal("Param/Value/lib_22142002_E0847F3D");
    lv_sCH_HelpTextShake = StringExternal("Param/Value/lib_22142002_6A7F61FB");
    lv_sCH_HelpTextLock = StringExternal("Param/Value/lib_22142002_FF76E2CB");
    lv_sCH_HelpTextFollow = StringExternal("Param/Value/lib_22142002_6AEF9BDB");
    lv_sCH_HelpTextView = StringExternal("Param/Value/lib_22142002_443FADD6");
    lv_sCH_HelpTextCoop = StringExternal("Param/Value/lib_22142002_2508C896");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 5, EventPlayer());
    autoB4F5087F_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "BOUNDS", 1)) {
        lv_sC_CommandTypeText = "Bounds";
        lv_sCH_HelpText = lv_sCH_HelpTextBounds;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MINIMAP", 1)) {
        lv_sC_CommandTypeText = "Minimap";
        lv_sCH_HelpText = lv_sCH_HelpTextMinimap;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PAN", 1)) {
        lv_sC_CommandTypeText = "Pan";
        lv_sCH_HelpText = lv_sCH_HelpTextPan;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DATA", 1)) {
        lv_sC_CommandTypeText = "Data";
        lv_sCH_HelpText = lv_sCH_HelpTextData;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHAKE", 1)) {
        lv_sC_CommandTypeText = "Shake";
        lv_sCH_HelpText = lv_sCH_HelpTextShake;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FOLLOW", 1)) {
        lv_sC_CommandTypeText = "Follow";
        lv_sCH_HelpText = lv_sCH_HelpTextFollow;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LOCKED", 1)) {
        lv_sC_CommandTypeText = "Lock";
        lv_sCH_HelpText = lv_sCH_HelpTextLock;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VIEW", 1)) {
        lv_sC_CommandTypeText = "View";
        lv_sCH_HelpText = lv_sCH_HelpTextView;
    }
    else if (autoB4F5087F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "COOP", 1)) {
        lv_sC_CommandTypeText = "Coop";
        lv_sCH_HelpText = lv_sCH_HelpTextCoop;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3B2793AC")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lv_sC_CommandTypeText == "Bounds")) {
        auto2EDFB09D_val = StringCase(StringWord(lp_stringCommand, 3), true);
        if (auto2EDFB09D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "APPLY", 1)) {
            lv_sC_BoundsTypeText = "Apply";
        }
        else if (auto2EDFB09D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RESET", 1)) {
            lv_sC_BoundsTypeText = "Reset";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9C018EED")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandTypeText == "Data")) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
            if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 7))) {
                autoFEA888B8_val = StringCase(StringWord(lp_stringCommand, 3), true);
                if (autoFEA888B8_val == "1") {
                    lv_sC_TypeCameraData = "Dflt";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_031598F2");
                }
                else if (autoFEA888B8_val == "2") {
                    lv_sC_TypeCameraData = "02Installation";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_AA6ECFDE");
                }
                else if (autoFEA888B8_val == "3") {
                    lv_sC_TypeCameraData = "03SpacePlatform";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_78636394");
                }
                else if (autoFEA888B8_val == "4") {
                    lv_sC_TypeCameraData = "EnhancedCamera";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_B5C38D36");
                }
                else if (autoFEA888B8_val == "5") {
                    lv_sC_TypeCameraData = "TopView";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_5C5475DD");
                }
                else if (autoFEA888B8_val == "6") {
                    lv_sC_TypeCameraData = "RoleplayHero";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_AD972C9E");
                }
                else if (autoFEA888B8_val == "7") {
                    lv_sC_TypeCameraData = "SpectatorView";
                    lv_sC_RespondTextCameraDataType = StringExternal("Param/Value/lib_22142002_16616592");
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_30211C8D")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9E73ADC5")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E124688C")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandTypeText == "Shake")) {
        if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
            if (((StringToFixed(StringWord(lp_stringCommand, 3)) >= 1) && (StringToFixed(StringWord(lp_stringCommand, 3)) <= 120))) {
                lv_sC_CamShakeDurationValue = StringToFixed(StringWord(lp_stringCommand, 3));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D414D341")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_ECAB8FB2")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandTypeText == "Shake")) {
        if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 4)) == true)) {
            if (((StringToFixed(StringWord(lp_stringCommand, 4)) >= 1) && (StringToFixed(StringWord(lp_stringCommand, 4)) <= 30))) {
                lv_sC_CamShakeStrengthValue = StringToFixed(StringWord(lp_stringCommand, 4));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_0C12C5AA")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_A1057913")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if (((lv_sC_CommandTypeText == "Minimap") || (lv_sC_CommandTypeText == "Lock") || (lv_sC_CommandTypeText == "Follow") || (lv_sC_CommandTypeText == "View") || (lv_sC_CommandTypeText == "Coop"))) {
        autoAF993674_val = StringCase(StringWord(lp_stringCommand, 3), true);
        if (autoAF993674_val == "ON") {
            lv_sC_PresetOnOffOption = true;
            lv_sC_RespondTextOnOffOption = "On";
        }
        else if (autoAF993674_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "OFF", 2)) {
            lv_sC_PresetOnOffOption = false;
            lv_sC_RespondTextOnOffOption = "Off";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1C8D372E")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    auto0354B489_val = lv_sC_CommandTypeText;
    if (auto0354B489_val == "Bounds") {
        auto241D8690_val = lv_sC_BoundsTypeText;
        if (auto241D8690_val == "Apply") {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 99, -1, EventPlayer(), false);

        }
        else if (auto241D8690_val == "Reset") {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 55, EventPlayer(), false);
        }
        else {
        }
    }
    else if (auto0354B489_val == "Minimap") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 55, EventPlayer(), false);
    }
    else if (auto0354B489_val == "Pan") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 3, 3, 4, 55, EventPlayer(), false);
    }
    else if (auto0354B489_val == "Data") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 55, EventPlayer(), false);
    }
    else if (auto0354B489_val == "Shake") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, 55, EventPlayer(), false);
    }
    else if (auto0354B489_val == "Follow") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 48, EventPlayer(), false);
    }
    else if (auto0354B489_val == "Lock") {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 55, EventPlayer(), false);
    }
    else {
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D337938A")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((((lv_sC_CommandTypeText == "Bounds") && (lv_sC_BoundsTypeText == "Apply")) || (lv_sC_CommandTypeText == "Pan"))) {
        if ((((lv_sC_CommandTypeText == "Bounds") && (lv_sC_BoundsTypeText == "Apply") && (lib22142002_gf_StringWords(lp_stringCommand) == 5)) || ((lv_sC_CommandTypeText == "Pan") && (lib22142002_gf_StringWords(lp_stringCommand) == 4)))) {
            lv_sC_GroupOtherPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, lib22142002_gf_StringWords(lp_stringCommand), 4, 5, -1, EventPlayer(), true);
        }
        else {
            lv_sC_GroupOtherPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 99, 99, 48, EventPlayer(), true);
        }
        if ((lv_sC_GroupOtherPlayers == null)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E4CCC74E")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        else {
            lv_sC_RespondTextOtherGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupOtherPlayers);
        }
    }

    if ((lv_sC_CommandTypeText == "Follow") && (lv_sC_PresetOnOffOption == true)) {
        lv_sC_TargetUnitSingle = lib22142002_gf_C_SingleUnitTargetVerification("#", EventPlayer());
        if ((lv_sC_TargetUnitSingle == null)) {
            return ;
        }

    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        auto2F1A2E35_val = lv_sC_CommandTypeText;
        if (auto2F1A2E35_val == "Bounds") {
            autoE7B8F2E0_val = lv_sC_BoundsTypeText;
            if (autoE7B8F2E0_val == "Apply") {
                if ((UnitGroupCount(UnitGroup("CameraBlockSW", lv_sC_OtherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) > 0) && (UnitGroupCount(UnitGroup("CameraBlockNE", lv_sC_OtherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) > 0)) {
                    if ((UnitGroupCount(UnitGroup("CameraBlockSW", lv_sC_OtherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1) && (UnitGroupCount(UnitGroup("CameraBlockNE", lv_sC_OtherPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1)) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0F3E2392")));
                        lv_sC_CamPoint01 = lib22142002_gf_C_SC_CameraPointSetup(1, lv_sC_OtherPlayer);
                        lv_sC_CamPoint02 = lib22142002_gf_C_SC_CameraPointSetup(2, lv_sC_OtherPlayer);
                        UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_583BD23F")));
                        CameraSetBounds(lv_sC_GroupTargetPlayers, RegionRect(PointGetX(lv_sC_CamPoint01), PointGetY(lv_sC_CamPoint01), PointGetX(lv_sC_CamPoint02), PointGetY(lv_sC_CamPoint02)), true);
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5047C979")));
                        return ;
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6D9BE247")));
                    return ;
                }
            }
            else if (autoE7B8F2E0_val == "Reset") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4B53E124")));
                CameraSetBounds(lv_sC_GroupTargetPlayers, RegionPlayableMap(), true);
            }
            else {
            }
        }
        else if (auto2F1A2E35_val == "Minimap") {
            autoF6881985_val = lv_sC_PresetOnOffOption;
            if (autoF6881985_val == true) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_00C698AF")));
                SoundPlayForPlayer(SoundLink("DEITYCommands_Camera_Minimap", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
                UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A8737155")));
                UISetFrameVisible(lv_sC_GroupTargetPlayers, c_syncFrameTypeMinimapPanel, true);
            }
            else if (autoF6881985_val == false) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FAE0B6C1")));
                SoundPlayForPlayer(SoundLink("DEITYCommands_Camera_Minimap", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
                UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1637DDD8")));
                UISetFrameVisible(lv_sC_GroupTargetPlayers, c_syncFrameTypeMinimapPanel, false);
            }
            else {
            }
        }
        else if (auto2F1A2E35_val == "Pan") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EB55AECB") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_0CF52F60") + lv_sC_RespondTextOtherGroupName + StringExternal("Param/Value/lib_22142002_72AFD605")));
            autoE117E6CD_g = lv_sC_GroupTargetPlayers;
            autoE117E6CD_var = -1;
            while (true) {
                autoE117E6CD_var = PlayerGroupNextPlayer(autoE117E6CD_g, autoE117E6CD_var);
                if (autoE117E6CD_var < 0) { break; }
                autoAFE71E4E_g = lv_sC_GroupOtherPlayers;
                lv_sC_OtherPlayer = -1;
                while (true) {
                    lv_sC_OtherPlayer = PlayerGroupNextPlayer(autoAFE71E4E_g, lv_sC_OtherPlayer);
                    if (lv_sC_OtherPlayer < 0) { break; }
                    CameraPan(autoE117E6CD_var, CameraGetTarget(lv_sC_OtherPlayer), 1.0, -1, 10.0, false);
                }
            }
        }
        else if (auto2F1A2E35_val == "Data") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D377EC53")));
            SoundPlayForPlayer(SoundLink("DEITYCommands_Camera_Data", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AC8C6C46")));
            CameraSetData(lv_sC_GroupTargetPlayers, lv_sC_TypeCameraData);
        }
        else if (auto2F1A2E35_val == "Shake") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5C689B0F")));
            autoA50C31A0_g = lv_sC_GroupTargetPlayers;
            autoA50C31A0_var = -1;
            while (true) {
                autoA50C31A0_var = PlayerGroupNextPlayer(autoA50C31A0_g, autoA50C31A0_var);
                if (autoA50C31A0_var < 0) { break; }
                CameraShakeStop(autoA50C31A0_var);
                CameraShakeStart(autoA50C31A0_var, c_cameraPositionTarget, c_cameraDirectionZ, lv_sC_CamShakeStrengthValue, 2.0, 100.0, lv_sC_CamShakeDurationValue);
            }
        }
        else if (auto2F1A2E35_val == "Follow") {
            auto3BE64529_val = lv_sC_PresetOnOffOption;
            if (auto3BE64529_val == true) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E298C15C")));
                auto2BD86140_g = lv_sC_GroupTargetPlayers;
                auto2BD86140_var = -1;
                while (true) {
                    auto2BD86140_var = PlayerGroupNextPlayer(auto2BD86140_g, auto2BD86140_var);
                    if (auto2BD86140_var < 0) { break; }
                    CameraPan(auto2BD86140_var, UnitGetPosition(lv_sC_TargetUnitSingle), 0.0, -1, 10.0, false);
                    CameraFollowUnitGroup(auto2BD86140_var, libNtve_gf_ConvertUnitToUnitGroup(lv_sC_TargetUnitSingle), true, false);
                    CameraForceFollowUnitGroup(auto2BD86140_var, true);
                    CameraLockInput(auto2BD86140_var, true);
                    lib22142002_gv_c_SC_CameraFollowUnit[auto2BD86140_var] = lv_sC_TargetUnitSingle;
                }
            }
            else if (auto3BE64529_val == false) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0F7116EB")));
                auto3EE6BF45_g = lv_sC_GroupTargetPlayers;
                auto3EE6BF45_var = -1;
                while (true) {
                    auto3EE6BF45_var = PlayerGroupNextPlayer(auto3EE6BF45_g, auto3EE6BF45_var);
                    if (auto3EE6BF45_var < 0) { break; }
                    CameraFollowUnitGroup(auto3EE6BF45_var, UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), false, false);
                    CameraLockInput(auto3EE6BF45_var, false);
                    lib22142002_gv_c_SC_CameraFollowUnit[auto3EE6BF45_var] = null;
                }
            }
            else {
            }
        }
        else if (auto2F1A2E35_val == "Lock") {
            auto68636952_val = lv_sC_PresetOnOffOption;
            if (auto68636952_val == true) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_BF9F0C46")));
                SoundPlayForPlayer(SoundLink("DEITYCommands_Camera_Lock", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
                UIDisplayMessage(lv_sC_GroupTargetPlayers, c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_AA0DDCD6")));
                auto28D89E49_g = lv_sC_GroupTargetPlayers;
                auto28D89E49_var = -1;
                while (true) {
                    auto28D89E49_var = PlayerGroupNextPlayer(auto28D89E49_g, auto28D89E49_var);
                    if (auto28D89E49_var < 0) { break; }
                    CameraLockInput(auto28D89E49_var, true);
                    lib22142002_gv_c_SC_CameraLock[auto28D89E49_var] = true;
                }
            }
            else if (auto68636952_val == false) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E571FB94")));
                SoundPlayForPlayer(SoundLink("DEITYCommands_Camera_Lock", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
                UIDisplayMessage(lv_sC_GroupTargetPlayers, c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_4A5AC2F4")));
                auto83FD2EE0_g = lv_sC_GroupTargetPlayers;
                auto83FD2EE0_var = -1;
                while (true) {
                    auto83FD2EE0_var = PlayerGroupNextPlayer(auto83FD2EE0_g, auto83FD2EE0_var);
                    if (auto83FD2EE0_var < 0) { break; }
                    CameraLockInput(auto83FD2EE0_var, false);
                    lib22142002_gv_c_SC_CameraLock[auto83FD2EE0_var] = false;
                }
            }
            else {
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Resources (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_OtherPlayer;
    playergroup lv_sC_GroupOtherPlayers;
    text lv_sC_RespondTextOtherGroupName;
    string lv_sC_CommandType;
    bool lv_sC_PresetOnOffOption;
    string lv_sC_RespondTextOnOffOption;
    bool lv_sC_LeadResources;
    int lv_sC_PresetResourceType;
    int lv_sC_PresetResourceTypeGet;
    int lv_sC_PresetResourceTypeforIgnore;
    int lv_sC_NumberValue;
    int lv_sC_NumberValueTotalGoal;
    int lv_sC_NumberValueTotalBudget;
    int[16] lv_sC_NumberValuePlayerGoal;
    int[16] lv_sC_NumberValuePlayerBudget;
    playergroup lv_sC_GroupGoalPlayers;
    playergroup lv_sC_GroupBudgetPlayers;
    string lv_sC_RespondTextResourceType;
    string lv_sC_RespondTextResourceTypeImage;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextAddRemove;
    text lv_sCH_HelpTextLead;
    text lv_sCH_HelpTextIgnore;

    // Automatic Variable Declarations
    string auto917C7D6D_val;
    string auto9110B3FC_val;
    string auto279C0B64_val;
    string auto23D634EB_val;
    string auto067EA25F_val;
    playergroup auto91A6371D_g;
    int auto91A6371D_var;
    playergroup autoC813973D_g;
    int autoC813973D_var;
    bool auto779D8311_val;
    playergroup auto9EF48333_g;
    int auto9EF48333_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_OtherPlayer = -1;
    lv_sC_GroupOtherPlayers = PlayerGroupEmpty();
    lv_sC_CommandType = "";
    lv_sC_PresetOnOffOption = true;
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_PresetResourceType = c_playerPropMinerals;
    lv_sC_PresetResourceTypeGet = c_playerPropMinerals;
    lv_sC_PresetResourceTypeforIgnore = c_playerStateShowScore;
    lv_sC_GroupGoalPlayers = PlayerGroupEmpty();
    lv_sC_GroupBudgetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextResourceType = "";
    lv_sC_RespondTextResourceTypeImage = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_A9E3213D");
    lv_sCH_HelpTextAddRemove = StringExternal("Param/Value/lib_22142002_89BFC2D3");
    lv_sCH_HelpTextLead = StringExternal("Param/Value/lib_22142002_044CE273");
    lv_sCH_HelpTextIgnore = StringExternal("Param/Value/lib_22142002_ED5274C8");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 5, EventPlayer());
    auto917C7D6D_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto917C7D6D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ADD", 1)) {
        lv_sC_CommandType = "Add";
        lv_sCH_HelpText = lv_sCH_HelpTextAddRemove;
    }
    else if (auto917C7D6D_val == "+") {
        lv_sC_CommandType = "Add";
        lv_sCH_HelpText = lv_sCH_HelpTextAddRemove;
    }
    else if (auto917C7D6D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "REMOVE", 1)) {
        lv_sC_CommandType = "Remove";
        lv_sCH_HelpText = lv_sCH_HelpTextAddRemove;
    }
    else if (auto917C7D6D_val == "-") {
        lv_sC_CommandType = "Remove";
        lv_sCH_HelpText = lv_sCH_HelpTextAddRemove;
    }
    else if (auto917C7D6D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LEAD", 1)) {
        lv_sC_CommandType = "Lead";
        lv_sCH_HelpText = lv_sCH_HelpTextLead;
    }
    else if (auto917C7D6D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "IGNORE", 1)) {
        lv_sC_CommandType = "Ignore";
        lv_sCH_HelpText = lv_sCH_HelpTextIgnore;
    }
    else if (auto917C7D6D_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHOW", 1)) {
        lv_sC_CommandType = "Show";
        lv_sCH_HelpText = lv_sCH_HelpTextLead;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C978F627")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    auto9110B3FC_val = StringCase(StringWord(lp_stringCommand, 3), true);
    if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "MINERALS", 1)) {
        lv_sC_PresetResourceType = c_playerPropMinerals;
        lv_sC_RespondTextResourceType = "Minerals";
        lv_sC_PresetResourceTypeGet = c_playerPropMinerals;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateMineralCostIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-mineral-terran.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "VESPENEGAS", 1)) {
        lv_sC_PresetResourceType = c_playerPropVespene;
        lv_sC_RespondTextResourceType = "Vespene";
        lv_sC_PresetResourceTypeGet = c_playerPropVespene;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateVespeneCostIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-gas-terran.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "SUPPLY", 1)) {
        lv_sC_PresetResourceType = c_playerPropSuppliesMade;
        lv_sC_RespondTextResourceType = "Supplies Made";
        lv_sC_PresetResourceTypeGet = c_playerPropSuppliesMade;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateFoodIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-supply.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "SUPPLYLIMIT", 7)) {
        lv_sC_PresetResourceType = c_playerPropSuppliesLimit;
        lv_sC_RespondTextResourceType = "Supplies Limit";
        lv_sC_PresetResourceTypeGet = c_playerPropSuppliesLimit;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateFoodIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-supply-terran.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == "SL") {
        lv_sC_PresetResourceType = c_playerPropSuppliesLimit;
        lv_sC_RespondTextResourceType = "Supplies Limit";
        lv_sC_PresetResourceTypeGet = c_playerPropSuppliesLimit;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateFoodIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-supply-terran.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "BIOMASS", 1)) {
        lv_sC_PresetResourceType = c_playerPropTerrazine;
        lv_sC_RespondTextResourceType = "Biomass";
        lv_sC_PresetResourceTypeGet = c_playerPropTerrazine;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateTerrazineCostIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\icon-biomass-zerg.dds\" height=\"28\" width=\"28\"/>";
    }
    else if (auto9110B3FC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ARTIFACTS", 1)) {
        lv_sC_PresetResourceType = c_playerPropCustom;
        lv_sC_RespondTextResourceType = "Artifacts";
        lv_sC_PresetResourceTypeGet = c_playerPropCustom;
        lv_sC_PresetResourceTypeforIgnore = c_playerStateCustomCostIgnored;
        lv_sC_RespondTextResourceTypeImage = " </s><IMG path=\"Assets\\Textures\\btn-tips-sellprotossartifacts.dds\" height=\"28\" width=\"28\"/>";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C5A09500")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if (((lv_sC_CommandType == "Add") || (lv_sC_CommandType == "Remove") || (lv_sC_CommandType == "Give") || (lv_sC_CommandType == "Take"))) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 4)) == true)) {
            if (((StringToInt(StringWord(lp_stringCommand, 4)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 4)) <= 10000000))) {
                lv_sC_NumberValue = StringToInt(StringWord(lp_stringCommand, 4));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1DC8944C")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_DDEB3728")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandType == "Ignore")) {
        auto279C0B64_val = StringCase(StringWord(lp_stringCommand, 4), true);
        if (auto279C0B64_val == "ON") {
            lv_sC_PresetOnOffOption = true;
            lv_sC_RespondTextOnOffOption = "On";
        }
        else if (auto279C0B64_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 4), "OFF", 2)) {
            lv_sC_PresetOnOffOption = false;
            lv_sC_RespondTextOnOffOption = "Off";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9AA52ACE")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if (true) {
        auto23D634EB_val = lv_sC_CommandType;
        if (auto23D634EB_val == "Add") {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, 55, EventPlayer(), false);
            if ((lv_sC_GroupTargetPlayers == null)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_799B8CB2")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            else {
                lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
            }
        }
        else if (auto23D634EB_val == "Remove") {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, 55, EventPlayer(), false);
            if ((lv_sC_GroupTargetPlayers == null)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_02D20CB9")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            else {
                lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
            }
        }
        else if (auto23D634EB_val == "Lead") {
            lv_sC_LeadResources = true;
        }
        else if (auto23D634EB_val == "Ignore") {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 5, 5, 5, 55, EventPlayer(), false);
            if ((lv_sC_GroupTargetPlayers == null)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_13311B06")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            else {
                lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
            }
        }
        else {
        }
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        auto067EA25F_val = lv_sC_CommandType;
        if (auto067EA25F_val == "Add") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_27B286B4") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_8FBC9E98")));
            SoundPlayForPlayer(SoundLink("DEITYCommands_Resources_Add", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocationPublic, (StringExternal("Param/Value/lib_22142002_4D9D405E") + IntToText(lv_sC_NumberValue) + StringToText(lv_sC_RespondTextResourceTypeImage)));
            auto91A6371D_g = lv_sC_GroupTargetPlayers;
            auto91A6371D_var = -1;
            while (true) {
                auto91A6371D_var = PlayerGroupNextPlayer(auto91A6371D_g, auto91A6371D_var);
                if (auto91A6371D_var < 0) { break; }
                PlayerModifyPropertyInt(auto91A6371D_var, lv_sC_PresetResourceType, c_playerPropOperAdd, lv_sC_NumberValue);
            }
        }
        else if (auto067EA25F_val == "Remove") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5FAD3C06") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_75667335")));
            SoundPlayForPlayer(SoundLink("DEITYCommands_Resources_Remove", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            autoC813973D_g = lv_sC_GroupTargetPlayers;
            autoC813973D_var = -1;
            while (true) {
                autoC813973D_var = PlayerGroupNextPlayer(autoC813973D_g, autoC813973D_var);
                if (autoC813973D_var < 0) { break; }
                if ((PlayerGetPropertyInt(autoC813973D_var, lv_sC_PresetResourceTypeGet) >= lv_sC_NumberValue)) {
                    UIDisplayMessage(PlayerGroupSingle(autoC813973D_var), lib22142002_gv_dEITYRespondTextLocationPublic, (StringExternal("Param/Value/lib_22142002_B0FBCF10") + IntToText(lv_sC_NumberValue) + StringToText(lv_sC_RespondTextResourceTypeImage)));
                    PlayerModifyPropertyInt(autoC813973D_var, lv_sC_PresetResourceType, c_playerPropOperSubtract, lv_sC_NumberValue);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(autoC813973D_var), lib22142002_gv_dEITYRespondTextLocationPublic, (StringExternal("Param/Value/lib_22142002_E1EEE846") + IntToText(PlayerGetPropertyInt(autoC813973D_var, lv_sC_PresetResourceTypeGet)) + StringToText(lv_sC_RespondTextResourceTypeImage)));
                    PlayerModifyPropertyInt(autoC813973D_var, lv_sC_PresetResourceType, c_playerPropOperSetTo, 0);
                }
            }
        }
        else if (auto067EA25F_val == "Lead") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5C90D30A")));
            lv_sC_TargetPlayer = lib22142002_gf_C_ResourceLeader(lv_sC_PresetResourceTypeGet);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gf_NameOfPlayerNoName(lv_sC_TargetPlayer) + StringExternal("Param/Value/lib_22142002_763C9C24") + IntToText(PlayerGetPropertyInt(lv_sC_TargetPlayer, lv_sC_PresetResourceTypeGet)) + StringToText(lv_sC_RespondTextResourceTypeImage)));
        }
        else if (auto067EA25F_val == "Ignore") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringToText(lv_sC_RespondTextResourceType) + StringExternal("Param/Value/lib_22142002_D56F1093") + StringToText(lv_sC_RespondTextOnOffOption) + StringExternal("Param/Value/lib_22142002_C877704A") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_3CF070E3")));
            SoundPlayForPlayer(SoundLink("DEITYCommands_Resources_Ignore", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            auto779D8311_val = lv_sC_PresetOnOffOption;
            if (auto779D8311_val == true) {
                UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocationPublic, (StringExternal("Param/Value/lib_22142002_4424F0EE") + StringToText(lv_sC_RespondTextResourceTypeImage)));
            }
            else if (auto779D8311_val == false) {
                UIDisplayMessage(lv_sC_GroupTargetPlayers, lib22142002_gv_dEITYRespondTextLocationPublic, (StringExternal("Param/Value/lib_22142002_3AEE94AA") + StringToText(lv_sC_RespondTextResourceTypeImage)));
            }
            else {
            }
            auto9EF48333_g = lv_sC_GroupTargetPlayers;
            auto9EF48333_var = -1;
            while (true) {
                auto9EF48333_var = PlayerGroupNextPlayer(auto9EF48333_g, auto9EF48333_var);
                if (auto9EF48333_var < 0) { break; }
                PlayerSetState(auto9EF48333_var, lv_sC_PresetResourceTypeforIgnore, lv_sC_PresetOnOffOption);
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Select (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_RespondTextOtherGroupName;
    unitgroup lv_sC_GroupSelectUnits;
    unitfilter lv_sC_PresetSelectType;
    string lv_sC_RespondTextSelectType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoD87F48AD_val;
    playergroup autoF035474E_g;
    int autoF035474E_var;
    unitgroup auto910878B6_g;
    int auto910878B6_u;
    unit auto910878B6_var;
    playergroup auto6DB02EA2_g;
    int auto6DB02EA2_var;
    unitgroup autoDE4BF7AC_g;
    int autoDE4BF7AC_u;
    unit autoDE4BF7AC_var;
    playergroup auto474CE9E7_g;
    int auto474CE9E7_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextOtherGroupName = "";
    lv_sC_GroupSelectUnits = UnitGroupEmpty();
    lv_sC_PresetSelectType = UnitFilter(0, 0, 0, 0);
    lv_sC_RespondTextSelectType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_4EFDA9D8");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 3, EventPlayer());
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 1)) {
        lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
        lv_sC_RespondTextSelectType = "Any Units/Structures";
    }
    else {
        autoD87F48AD_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (autoD87F48AD_val == "ANY") {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Any Units/Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNITS", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "STRUCTURES", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SPECIFIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Specified Units/Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "GROUND", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterGround), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Ground Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "AIR", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterAir), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Air Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LIGHT", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterLight), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Light Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ARMORED", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterArmored), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Armored Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MASSIVE", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterMassive), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Massive Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "WORKERS", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterWorker), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Worker Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PSIONIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterPsionic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Psionic Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "BIOLOGICAL", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterBiological), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Biological Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MECHANICAL", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterMechanical), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Mechanical Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ROBOTIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterRobotic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Robotic Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HALLUCINATION", 3)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHallucination - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Hallucinations";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CANHAVEENERGY", 8)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterCanHaveEnergy), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures capable of having energy";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CANHAVESHIELDS", 8)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterCanHaveShields), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures capable of having shield";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HASENERGY", 4)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHasEnergy - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures having energy";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HASSHIELDS", 4)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHasShields - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures having shields";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HEROIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHeroic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Heroic Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SUMMONED", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Summoned Units and Structures";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RESOURCES", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Resources (Harvestable)";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RAWRESOURCES", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterRawResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Resources (Raw)";
        }
        else if (autoD87F48AD_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HOVERING", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHover), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Hovering Units and Structures";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_DA7A6C56")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    if (((lib22142002_gf_StringWords(lp_stringCommand) >= 3) && (lib22142002_gf_StringWords(lp_stringCommand) <= 3))) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(EventChatMessage(false), 3, 3, 3, -1, EventPlayer(), false);
    }
    else {
        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 100, EventPlayer(), false);
        }
        else {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
        }
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_57178818")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_703997D2")));
        if ((lv_sC_RespondTextSelectType == "Specified Units/Structures")) {
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_324E40AA")));
                return ;
            }

            auto910878B6_g = UnitGroupSelected(EventPlayer());
            auto910878B6_u = UnitGroupCount(auto910878B6_g, c_unitCountAll);
            for (;; auto910878B6_u -= 1) {
                auto910878B6_var = UnitGroupUnitFromEnd(auto910878B6_g, auto910878B6_u);
                if (auto910878B6_var == null) { break; }
                auto6DB02EA2_g = lv_sC_GroupTargetPlayers;
                auto6DB02EA2_var = -1;
                while (true) {
                    auto6DB02EA2_var = PlayerGroupNextPlayer(auto6DB02EA2_g, auto6DB02EA2_var);
                    if (auto6DB02EA2_var < 0) { break; }
                    UnitGroupAddUnitGroup(lv_sC_GroupSelectUnits, UnitGroup(UnitGetType(auto910878B6_var), auto6DB02EA2_var, RegionEntireMap(), lv_sC_PresetSelectType, 0));
                }
            }
        }
        else {
            autoF035474E_g = lv_sC_GroupTargetPlayers;
            autoF035474E_var = -1;
            while (true) {
                autoF035474E_var = PlayerGroupNextPlayer(autoF035474E_g, autoF035474E_var);
                if (autoF035474E_var < 0) { break; }
                UnitGroupAddUnitGroup(lv_sC_GroupSelectUnits, UnitGroup(null, autoF035474E_var, RegionEntireMap(), lv_sC_PresetSelectType, 0));
            }
        }
        autoDE4BF7AC_g = lv_sC_GroupSelectUnits;
        autoDE4BF7AC_u = UnitGroupCount(autoDE4BF7AC_g, c_unitCountAll);
        for (;; autoDE4BF7AC_u -= 1) {
            autoDE4BF7AC_var = UnitGroupUnitFromEnd(autoDE4BF7AC_g, autoDE4BF7AC_u);
            if (autoDE4BF7AC_var == null) { break; }
            auto474CE9E7_g = lv_sC_GroupTargetPlayers;
            auto474CE9E7_var = -1;
            while (true) {
                auto474CE9E7_var = PlayerGroupNextPlayer(auto474CE9E7_g, auto474CE9E7_var);
                if (auto474CE9E7_var < 0) { break; }
                if ((UnitHasBehavior2(autoDE4BF7AC_var, "DEITYMainTools") == false)) {
                    UnitSelect(autoDE4BF7AC_var, auto474CE9E7_var, true);
                }

            }
        }
    }

}

void lib22142002_gf_C_SC_DeSelect (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_RespondTextOtherGroupName;
    unitgroup lv_sC_GroupSelectUnits;
    unitfilter lv_sC_PresetSelectType;
    string lv_sC_RespondTextSelectType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto88803F6E_val;
    playergroup autoF93741C4_g;
    int autoF93741C4_var;
    unitgroup auto8C196083_g;
    int auto8C196083_u;
    unit auto8C196083_var;
    playergroup autoECE71EED_g;
    int autoECE71EED_var;
    unitgroup autoB19F6FA4_g;
    int autoB19F6FA4_u;
    unit autoB19F6FA4_var;
    playergroup auto6089FFC9_g;
    int auto6089FFC9_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextOtherGroupName = "";
    lv_sC_GroupSelectUnits = UnitGroupEmpty();
    lv_sC_PresetSelectType = UnitFilter(0, 0, 0, 0);
    lv_sC_RespondTextSelectType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_5359F9E4");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 3, EventPlayer());
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 1)) {
        lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
        lv_sC_RespondTextSelectType = "Any Units/Structures";
    }
    else {
        auto88803F6E_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (auto88803F6E_val == "ANY") {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Any Units/Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNITS", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "STRUCTURES", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SPECIFIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Specified Units/Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "GROUND", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterGround), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Ground Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "AIR", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterAir), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Air Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LIGHT", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterLight), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Light Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ARMORED", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterArmored), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Armored Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MASSIVE", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterMassive), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Massive Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "WORKERS", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterWorker), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Worker Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PSIONIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterPsionic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Psionic Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "BIOLOGICAL", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterBiological), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Biological Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MECHANICAL", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterMechanical), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Mechanical Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ROBOTIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterRobotic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Robotic Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HALLUCINATION", 3)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHallucination - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Hallucinations";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CANHAVEENERGY", 8)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterCanHaveEnergy), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures capable of having energy";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CANHAVESHIELDS", 8)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterCanHaveShields), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures capable of having shield";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HASENERGY", 4)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHasEnergy - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures having energy";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HASSHIELDS", 4)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterHasShields - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Units/Structures having shields";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HEROIC", 2)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHeroic), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Heroic Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SUMMONED", 2)) {
            lv_sC_PresetSelectType = UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Summoned Units and Structures";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RESOURCES", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Resources (Harvestable)";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RAWRESOURCES", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterRawResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Resources (Raw)";
        }
        else if (auto88803F6E_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HOVERING", 3)) {
            lv_sC_PresetSelectType = UnitFilter((1 << c_targetFilterHover), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)));
            lv_sC_RespondTextSelectType = "Hovering Units and Structures";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_8B39B852")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    if (((lib22142002_gf_StringWords(lp_stringCommand) >= 3) && (lib22142002_gf_StringWords(lp_stringCommand) <= 3))) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(EventChatMessage(false), 3, 3, 3, -1, EventPlayer(), false);
    }
    else {
        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 100, EventPlayer(), false);
        }
        else {
            lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 100, 100, 100, 55, EventPlayer(), false);
        }
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C52B8190")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E7F405CE")));
        if ((lv_sC_RespondTextSelectType == "Specified Units/Structures")) {
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1C9F4AA0")));
                return ;
            }

            auto8C196083_g = UnitGroupSelected(EventPlayer());
            auto8C196083_u = UnitGroupCount(auto8C196083_g, c_unitCountAll);
            for (;; auto8C196083_u -= 1) {
                auto8C196083_var = UnitGroupUnitFromEnd(auto8C196083_g, auto8C196083_u);
                if (auto8C196083_var == null) { break; }
                autoECE71EED_g = lv_sC_GroupTargetPlayers;
                autoECE71EED_var = -1;
                while (true) {
                    autoECE71EED_var = PlayerGroupNextPlayer(autoECE71EED_g, autoECE71EED_var);
                    if (autoECE71EED_var < 0) { break; }
                    UnitGroupAddUnitGroup(lv_sC_GroupSelectUnits, UnitGroup(UnitGetType(auto8C196083_var), autoECE71EED_var, RegionEntireMap(), lv_sC_PresetSelectType, 0));
                }
            }
        }
        else {
            autoF93741C4_g = lv_sC_GroupTargetPlayers;
            autoF93741C4_var = -1;
            while (true) {
                autoF93741C4_var = PlayerGroupNextPlayer(autoF93741C4_g, autoF93741C4_var);
                if (autoF93741C4_var < 0) { break; }
                UnitGroupAddUnitGroup(lv_sC_GroupSelectUnits, UnitGroup(null, autoF93741C4_var, RegionEntireMap(), lv_sC_PresetSelectType, 0));
            }
        }
        autoB19F6FA4_g = lv_sC_GroupSelectUnits;
        autoB19F6FA4_u = UnitGroupCount(autoB19F6FA4_g, c_unitCountAll);
        for (;; autoB19F6FA4_u -= 1) {
            autoB19F6FA4_var = UnitGroupUnitFromEnd(autoB19F6FA4_g, autoB19F6FA4_u);
            if (autoB19F6FA4_var == null) { break; }
            auto6089FFC9_g = lv_sC_GroupTargetPlayers;
            auto6089FFC9_var = -1;
            while (true) {
                auto6089FFC9_var = PlayerGroupNextPlayer(auto6089FFC9_g, auto6089FFC9_var);
                if (auto6089FFC9_var < 0) { break; }
                if ((UnitHasBehavior2(autoB19F6FA4_var, "DEITYMainTools") == false)) {
                    UnitSelect(autoB19F6FA4_var, auto6089FFC9_var, false);
                }

            }
        }
    }

}

void lib22142002_gf_C_SC_Handicap (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    playergroup lv_sC_GroupTargetPlayers;
    int lv_sC_HandicapValue;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    unitgroup auto3499007D_g;
    int auto3499007D_u;
    unit auto3499007D_var;
    playergroup auto4A2D108E_g;
    int auto4A2D108E_var;

    // Variable Initialization
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_4B81F18F");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 2, EventPlayer());
    if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 2)) == true)) {
        lv_sC_HandicapValue = StringToInt(StringWord(lp_stringCommand, 2));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_EC601E8D")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EA8A871D")));
        auto3499007D_g = UnitGroupSelected(EventPlayer());
        auto3499007D_u = UnitGroupCount(auto3499007D_g, c_unitCountAll);
        for (;; auto3499007D_u -= 1) {
            auto3499007D_var = UnitGroupUnitFromEnd(auto3499007D_g, auto3499007D_u);
            if (auto3499007D_var == null) { break; }
            PlayerGroupAdd(lv_sC_GroupTargetPlayers, UnitGetOwner(auto3499007D_var));
        }
        auto4A2D108E_g = lv_sC_GroupTargetPlayers;
        auto4A2D108E_var = -1;
        while (true) {
            auto4A2D108E_var = PlayerGroupNextPlayer(auto4A2D108E_g, auto4A2D108E_var);
            if (auto4A2D108E_var < 0) { break; }
            PlayerModifyPropertyInt(auto4A2D108E_var, c_playerPropHandicap, c_playerPropOperSetTo, lv_sC_HandicapValue);
            UIDisplayMessage(PlayerGroupSingle(auto4A2D108E_var), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_B010AE00") + IntToText(lv_sC_HandicapValue) + StringExternal("Param/Value/lib_22142002_EC18CCF1"))));
            SoundPlayForPlayer(SoundLink("UI_TransmissionStart", -1), c_maxPlayers, PlayerGroupSingle(auto4A2D108E_var), 90.0, 0.0);
        }
    }

}

void lib22142002_gf_C_SC_Race (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    playergroup lv_sC_GroupTargetPlayers;
    string lv_sC_RaceValue;
    string lv_sC_RespondTextRace;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto2BA6DBFB_val;
    unitgroup autoBE6304F5_g;
    int autoBE6304F5_u;
    unit autoBE6304F5_var;
    playergroup autoC73AE7DC_g;
    int autoC73AE7DC_var;

    // Variable Initialization
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextRace = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_72FA78E1");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 2, EventPlayer());
    auto2BA6DBFB_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NEUTRAL", 3)) {
        lv_sC_RaceValue = "Neut";
        lv_sC_RespondTextRace = "Neutral";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TERRAN", 3)) {
        lv_sC_RaceValue = "Terr";
        lv_sC_RespondTextRace = "Terran";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ZERG", 4)) {
        lv_sC_RaceValue = "Zerg";
        lv_sC_RespondTextRace = "Zerg";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PROTOSS", 3)) {
        lv_sC_RaceValue = "Prot";
        lv_sC_RespondTextRace = "Protoss";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RAYNOR", 3)) {
        lv_sC_RaceValue = "Rayn";
        lv_sC_RespondTextRace = "Raynor";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KERRIGAN", 3)) {
        lv_sC_RaceValue = "Kerr";
        lv_sC_RespondTextRace = "Kerrigan";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ARTANIS", 3)) {
        lv_sC_RaceValue = "Arta";
        lv_sC_RespondTextRace = "Artanis";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SWANN", 3)) {
        lv_sC_RaceValue = "Swan";
        lv_sC_RespondTextRace = "Swann";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ZAGARA", 3)) {
        lv_sC_RaceValue = "Zaga";
        lv_sC_RespondTextRace = "Zagara";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VORAZUN", 3)) {
        lv_sC_RaceValue = "Vora";
        lv_sC_RespondTextRace = "Vorazun";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KARAX", 3)) {
        lv_sC_RaceValue = "Kara";
        lv_sC_RespondTextRace = "Karax";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ABATHUR", 3)) {
        lv_sC_RaceValue = "Abat";
        lv_sC_RespondTextRace = "Abathur";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ALARAK", 3)) {
        lv_sC_RaceValue = "Alar";
        lv_sC_RespondTextRace = "Alarak";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NOVA", 3)) {
        lv_sC_RaceValue = "Nova";
        lv_sC_RespondTextRace = "Nova";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "STUKOV", 3)) {
        lv_sC_RaceValue = "InfT";
        lv_sC_RespondTextRace = "Stukov";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FENIX", 3)) {
        lv_sC_RaceValue = "Feni";
        lv_sC_RespondTextRace = "Fenix";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DEHAKA", 3)) {
        lv_sC_RaceValue = "Deha";
        lv_sC_RespondTextRace = "Dehaka";
    }
    else if (auto2BA6DBFB_val == "HH") {
        lv_sC_RaceValue = "HH";
        lv_sC_RespondTextRace = "Han & Horner";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HAN&HORNER", 3)) {
        lv_sC_RaceValue = "HH";
        lv_sC_RespondTextRace = "Han & Horner";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TYCHUS", 3)) {
        lv_sC_RaceValue = "Tych";
        lv_sC_RespondTextRace = "Tychus";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ZERATUL", 4)) {
        lv_sC_RaceValue = "Zera";
        lv_sC_RespondTextRace = "Zeratul";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "STETMANN", 3)) {
        lv_sC_RaceValue = "Stet";
        lv_sC_RespondTextRace = "Stetmann";
    }
    else if (auto2BA6DBFB_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MENGSK", 3)) {
        lv_sC_RaceValue = "Meng";
        lv_sC_RespondTextRace = "Mengsk";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_115D2604")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_801DCB40")));
        autoBE6304F5_g = UnitGroupSelected(EventPlayer());
        autoBE6304F5_u = UnitGroupCount(autoBE6304F5_g, c_unitCountAll);
        for (;; autoBE6304F5_u -= 1) {
            autoBE6304F5_var = UnitGroupUnitFromEnd(autoBE6304F5_g, autoBE6304F5_u);
            if (autoBE6304F5_var == null) { break; }
            PlayerGroupAdd(lv_sC_GroupTargetPlayers, UnitGetOwner(autoBE6304F5_var));
        }
        autoC73AE7DC_g = lv_sC_GroupTargetPlayers;
        autoC73AE7DC_var = -1;
        while (true) {
            autoC73AE7DC_var = PlayerGroupNextPlayer(autoC73AE7DC_g, autoC73AE7DC_var);
            if (autoC73AE7DC_var < 0) { break; }
            PlayerSetRace(autoC73AE7DC_var, lv_sC_RaceValue);
            UIDisplayMessage(PlayerGroupSingle(autoC73AE7DC_var), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_5A910283"))));
            SoundPlayForPlayer(SoundLink("UI_TransmissionStart", -1), c_maxPlayers, PlayerGroupSingle(autoC73AE7DC_var), 90.0, 0.0);
        }
    }

}

void lib22142002_gf_C_SC_End (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_PresetGameOverType;
    bool lv_sC_Kick;
    bool lv_sC_EndTypeDefined;
    text lv_sC_RespondTextEndGameType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoDCD6D933_val;
    string auto4BBBB51B_val;
    playergroup autoE14EB4C7_g;
    int autoE14EB4C7_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_PresetGameOverType = c_gameOverVictory;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_CA0DB769");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 3, EventPlayer());
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 3)) {
        auto4BBBB51B_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (auto4BBBB51B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VICTORY", 1)) {
            lv_sC_PresetGameOverType = c_gameOverVictory;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_0F5B8EFE");
            lv_sC_EndTypeDefined = true;
        }
        else if (auto4BBBB51B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DEFEAT", 1)) {
            lv_sC_PresetGameOverType = c_gameOverDefeat;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_FD8FC46C");
            lv_sC_EndTypeDefined = true;
        }
        else if (auto4BBBB51B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TIE", 1)) {
            lv_sC_PresetGameOverType = c_gameOverTie;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_24CC52C1");
            lv_sC_EndTypeDefined = true;
        }
        else if (auto4BBBB51B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KICK", 1)) {
            lv_sC_EndTypeDefined = true;
            lv_sC_PresetGameOverType = c_gameOverDefeat;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_E03C1BF3");
            lv_sC_Kick = true;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1FB507C4")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        autoDCD6D933_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (autoDCD6D933_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VICTORY", 1)) {
            lv_sC_PresetGameOverType = c_gameOverVictory;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_E9908D33");
            lv_sC_EndTypeDefined = true;
        }
        else if (autoDCD6D933_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DEFEAT", 1)) {
            lv_sC_PresetGameOverType = c_gameOverDefeat;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_9352E571");
            lv_sC_EndTypeDefined = true;
        }
        else if (autoDCD6D933_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TIE", 1)) {
            lv_sC_PresetGameOverType = c_gameOverTie;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_8E020076");
            lv_sC_EndTypeDefined = true;
        }
        else if (autoDCD6D933_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KICK", 1)) {
            lv_sC_EndTypeDefined = true;
            lv_sC_PresetGameOverType = c_gameOverDefeat;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_C3594C63");
            lv_sC_Kick = true;
        }
        else {
            lv_sC_PresetGameOverType = c_gameOverDefeat;
            lv_sC_RespondTextEndGameType = StringExternal("Param/Value/lib_22142002_9203C98B");
        }
    }
    if ((lv_sC_EndTypeDefined == true)) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(EventChatMessage(false), 3, 3, 3, 55, EventPlayer(), false);
    }
    else {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 2, 2, 55, EventPlayer(), false);
    }
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_824FDFB0")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EF749B3A") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_10C89BF7") + lv_sC_RespondTextEndGameType + StringExternal("Param/Value/lib_22142002_5A2DA7BA")));
        if ((lv_sC_Kick == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gv_dEITYRespondFont + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_17F97502")));
            KickFromGame(lv_sC_GroupTargetPlayers);
        }
        else {
            autoE14EB4C7_g = lv_sC_GroupTargetPlayers;
            autoE14EB4C7_var = -1;
            while (true) {
                autoE14EB4C7_var = PlayerGroupNextPlayer(autoE14EB4C7_g, autoE14EB4C7_var);
                if (autoE14EB4C7_var < 0) { break; }
                GameOver(autoE14EB4C7_var, lv_sC_PresetGameOverType, true, true);
            }
        }
    }

}

void lib22142002_gf_C_SC_Handle (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    string lv_sC_RespondTextTargetGroupName;
    text lv_sC_OutputText;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    playergroup autoA5867DC9_g;
    int autoA5867DC9_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextTargetGroupName = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_857E1A3E");

    // Implementation
    if (((lib22142002_gv_playerNameOneWord[EventPlayer()] == "LocalPlayer") || (PlayerHandle(EventPlayer()) == "1-S2-1-5869499") || (PlayerHandle(EventPlayer()) == "2-S2-1-4948558") || (PlayerHandle(EventPlayer()) == "1-S2-1-11135730") || (PlayerHandle(EventPlayer()) == "2-S2-1-6271763"))) {
        lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 2, EventPlayer());
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 2, 2, 55, EventPlayer(), false);
        if ((lv_sC_GroupTargetPlayers == null)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_A362EFE1")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }

        autoA5867DC9_g = lv_sC_GroupTargetPlayers;
        autoA5867DC9_var = -1;
        while (true) {
            autoA5867DC9_var = PlayerGroupNextPlayer(autoA5867DC9_g, autoA5867DC9_var);
            if (autoA5867DC9_var < 0) { break; }
            if ((autoA5867DC9_var != PlayerGroupPlayer(lv_sC_GroupTargetPlayers, PlayerGroupCount(lv_sC_GroupTargetPlayers)))) {
                lv_sC_OutputText = (TextWithColor(lib22142002_gf_NameOfPlayerNoName(autoA5867DC9_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoA5867DC9_var, false))) + StringExternal("Param/Value/lib_22142002_EE6D04F6") + StringToText(PlayerHandle(autoA5867DC9_var)) + StringExternal("Param/Value/lib_22142002_409383EB"));
            }
            else {
                lv_sC_OutputText = (TextWithColor(lib22142002_gf_NameOfPlayerNoName(autoA5867DC9_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoA5867DC9_var, false))) + StringExternal("Param/Value/lib_22142002_26152E80") + StringToText(PlayerHandle(autoA5867DC9_var)));
            }
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, lv_sC_OutputText);
        }

    }

}

void lib22142002_gf_C_SC_Status (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_GodModeType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoAB965F1B_val;
    string auto04313C5E_val;
    playergroup autoD8CFE048_g;
    int autoD8CFE048_var;
    playergroup autoE528276C_g;
    int autoE528276C_var;
    playergroup autoC31DAB71_g;
    int autoC31DAB71_var;

    // Variable Initialization
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_GodModeType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_EA877747");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 3, 2);
    autoAB965F1B_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoAB965F1B_val == "0") {
        lv_sC_GodModeType = "Mortal";
    }
    else if (autoAB965F1B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MORTAL", 1)) {
        lv_sC_GodModeType = "Mortal";
    }
    else if (autoAB965F1B_val == "1") {
        lv_sC_GodModeType = "DEITY";
    }
    else if (autoAB965F1B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DEITY", 1)) {
        lv_sC_GodModeType = "DEITY";
    }
    else if (autoAB965F1B_val == "2") {
        lv_sC_GodModeType = "DEITY (Powerless)";
    }
    else if (autoAB965F1B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "POWERLESS", 1)) {
        lv_sC_GodModeType = "DEITY (Powerless)";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_FFADC02A")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 3, 3, 3, 48, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4F8813F2")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_911BC222") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_55FB18A0")));
        UIDisplayMessage(lv_sC_GroupTargetPlayers, c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_AD5787D3") + StringToText(lv_sC_GodModeType) + StringExternal("Param/Value/lib_22142002_7CA2229F")));
        auto04313C5E_val = lv_sC_GodModeType;
        if (auto04313C5E_val == "DEITY") {
            SoundPlayForPlayer(SoundLink("DEITYCommands_GodStatus_DEITY", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            autoD8CFE048_g = lv_sC_GroupTargetPlayers;
            autoD8CFE048_var = -1;
            while (true) {
                autoD8CFE048_var = PlayerGroupNextPlayer(autoD8CFE048_g, autoD8CFE048_var);
                if (autoD8CFE048_var < 0) { break; }
                lib22142002_gf_Init_DeityForce("DEITY", autoD8CFE048_var);
            }
        }
        else if (auto04313C5E_val == "DEITY (Powerless)") {
            SoundPlayForPlayer(SoundLink("DEITYCommands_GodStatus_DEITYPowerless", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            autoE528276C_g = lv_sC_GroupTargetPlayers;
            autoE528276C_var = -1;
            while (true) {
                autoE528276C_var = PlayerGroupNextPlayer(autoE528276C_g, autoE528276C_var);
                if (autoE528276C_var < 0) { break; }
                lib22142002_gf_Init_DeityForce("DEITY (Powerless)", autoE528276C_var);
            }
        }
        else if (auto04313C5E_val == "Mortal") {
            SoundPlayForPlayer(SoundLink("DEITYCommands_GodStatus_Mortal", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
            autoC31DAB71_g = lv_sC_GroupTargetPlayers;
            autoC31DAB71_var = -1;
            while (true) {
                autoC31DAB71_var = PlayerGroupNextPlayer(autoC31DAB71_g, autoC31DAB71_var);
                if (autoC31DAB71_var < 0) { break; }
                lib22142002_gf_Init_DeityForce("Mortal", autoC31DAB71_var);
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Vision (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_GodSightType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoDAA66012_val;
    playergroup autoD2D941CD_g;
    int autoD2D941CD_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_GodSightType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_CFDEEA34");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 3, EventPlayer());
    autoDAA66012_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoDAA66012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FULL", 1)) {
        lv_sC_GodSightType = "Full";
    }
    else if (autoDAA66012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ACTIVE", 1)) {
        lv_sC_GodSightType = "Active";
    }
    else if (autoDAA66012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VISIBLE", 1)) {
        lv_sC_GodSightType = "Visible";
    }
    else if (autoDAA66012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MORTAL", 1)) {
        lv_sC_GodSightType = "Mortal";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3D4CC7FE")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 3, 3, 3, 55, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6A0D1378")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B85A7B68")));
        UIDisplayMessage(lv_sC_GroupTargetPlayers, c_messageAreaChat, (StringExternal("Param/Value/lib_22142002_C362BF30") + StringToText(lv_sC_GodSightType) + StringExternal("Param/Value/lib_22142002_0D0AADB5")));
        autoD2D941CD_g = lv_sC_GroupTargetPlayers;
        autoD2D941CD_var = -1;
        while (true) {
            autoD2D941CD_var = PlayerGroupNextPlayer(autoD2D941CD_g, autoD2D941CD_var);
            if (autoD2D941CD_var < 0) { break; }
            lib22142002_gv_dEITY_GodSight[autoD2D941CD_var] = lv_sC_GodSightType;
        }
    }

}

void lib22142002_gf_C_SC_Bounty (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_OtherPlayer;
    playergroup lv_sC_GroupOtherPlayers;
    text lv_sC_RespondTextOtherGroupName;
    playergroup lv_sC_InterestPlayers;
    string lv_sC_CommandTypeText;
    unit lv_sC_TargetUnitSingle;
    bool lv_sC_PresetOnOffOption;
    string lv_sC_RespondTextOnOffOption;
    bool lv_sC_BooleanOnOffOption;
    int lv_sC_BountyValue;
    int lv_sC_SpecialNumber;
    string lv_sC_SpecialCommandTypeText;
    bool lv_b_TargetedPlayerBounty;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextNotResetShow;
    text lv_sCH_HelpTextOnOff;
    text lv_sCH_HelpTextSpecial;

    // Automatic Variable Declarations
    string auto31C20DD9_val;
    string autoC0C8E18F_val;
    playergroup auto103D782A_g;
    const int autoBD10462A_ae = 11;
    int autoBD10462A_var;
    string auto774B23AE_val;
    string auto070EC8F7_val;
    playergroup auto9379CB5E_g;
    int auto9379CB5E_var;
    playergroup auto87A64379_g;
    int auto87A64379_var;
    playergroup auto1B3DF4E8_g;
    int auto1B3DF4E8_var;
    playergroup autoA8364AC5_g;
    int autoA8364AC5_var;
    playergroup autoDDE27ED2_g;
    int autoDDE27ED2_var;
    playergroup autoE0DBA340_g;
    int autoE0DBA340_var;
    playergroup auto140F2B0F_g;
    int auto140F2B0F_var;
    playergroup auto344FC328_g;
    int auto344FC328_var;
    playergroup autoFF86CBAD_g;
    int autoFF86CBAD_var;
    playergroup auto2DC82749_g;
    int auto2DC82749_var;
    playergroup autoD124E212_g;
    int autoD124E212_var;
    string autoA8CBFB58_val;
    playergroup autoAA6AFC21_g;
    int autoAA6AFC21_var;
    playergroup autoFC0FEC12_g;
    int autoFC0FEC12_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_OtherPlayer = -1;
    lv_sC_GroupOtherPlayers = PlayerGroupEmpty();
    lv_sC_InterestPlayers = PlayerGroupEmpty();
    lv_sC_CommandTypeText = "";
    lv_sC_PresetOnOffOption = true;
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_SpecialCommandTypeText = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_0F7924C9");
    lv_sCH_HelpTextNotResetShow = StringExternal("Param/Value/lib_22142002_979E2B57");
    lv_sCH_HelpTextOnOff = StringExternal("Param/Value/lib_22142002_F7C62747");
    lv_sCH_HelpTextSpecial = StringExternal("Param/Value/lib_22142002_8FE94DD2");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 5, EventPlayer());
    if (true) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 2, 99, -1, EventPlayer(), false);
        if ((lv_sC_GroupTargetPlayers == null)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3FED7606")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        else {
            lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
        }
    }

    auto31C20DD9_val = StringCase(StringWord(lp_stringCommand, 3), true);
    if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RESET", 2)) {
        lv_sC_CommandTypeText = "Reset";
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ALL", 2)) {
        lv_sC_CommandTypeText = "All";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "STANDARD", 3)) {
        lv_sC_CommandTypeText = "Standard";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "LIGHT", 2)) {
        lv_sC_CommandTypeText = "Light";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ARMORED", 2)) {
        lv_sC_CommandTypeText = "Armored";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "MASSIVE", 2)) {
        lv_sC_CommandTypeText = "Massive";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "HEROIC", 2)) {
        lv_sC_CommandTypeText = "Heroic";
        lv_sCH_HelpText = lv_sCH_HelpTextNotResetShow;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "STRUCTURES", 3)) {
        lv_sC_CommandTypeText = "Building";
        lv_sCH_HelpText = lv_sCH_HelpTextOnOff;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "GIVE", 2)) {
        lv_sC_CommandTypeText = "Give";
        lv_sCH_HelpText = lv_sCH_HelpTextOnOff;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "GAIN", 2)) {
        lv_sC_CommandTypeText = "Gain";
        lv_sCH_HelpText = lv_sCH_HelpTextOnOff;
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "SHOW", 2)) {
        lv_sC_CommandTypeText = "Show";
    }
    else if (auto31C20DD9_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "SPECIAL", 2)) {
        lv_sC_CommandTypeText = "Special";
        lv_sCH_HelpText = lv_sCH_HelpTextSpecial;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C6671E34")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if (((lv_sC_CommandTypeText == "All") || (lv_sC_CommandTypeText == "Light") || (lv_sC_CommandTypeText == "Standard") || (lv_sC_CommandTypeText == "Armored") || (lv_sC_CommandTypeText == "Massive") || (lv_sC_CommandTypeText == "Heroic"))) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 4)) == true)) {
            lv_sC_BountyValue = StringToInt(StringWord(lp_stringCommand, 4));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_16D28667")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if (((lv_sC_CommandTypeText == "Building") || (lv_sC_CommandTypeText == "Give") || (lv_sC_CommandTypeText == "Gain"))) {
        autoC0C8E18F_val = StringCase(StringWord(lp_stringCommand, 4), true);
        if (autoC0C8E18F_val == "ON") {
            lv_sC_PresetOnOffOption = true;
            lv_sC_RespondTextOnOffOption = "On";
            lv_sC_BooleanOnOffOption = true;
        }
        else if (autoC0C8E18F_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 4), "OFF", 2)) {
            lv_sC_PresetOnOffOption = false;
            lv_sC_RespondTextOnOffOption = "Off";
            lv_sC_BooleanOnOffOption = false;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D5DA636B")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandTypeText == "Special")) {
        if ((StringCase(StringWord(lp_stringCommand, 4), true) == "RESET")) {
            if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EBC866BD")));
                if ((lv_sC_TargetPlayer > 50)) {
                    auto103D782A_g = lv_sC_GroupTargetPlayers;
                    lv_sC_TargetPlayer = -1;
                    while (true) {
                        lv_sC_TargetPlayer = PlayerGroupNextPlayer(auto103D782A_g, lv_sC_TargetPlayer);
                        if (lv_sC_TargetPlayer < 0) { break; }
                        autoBD10462A_var = 0;
                        for ( ; autoBD10462A_var <= autoBD10462A_ae; autoBD10462A_var += 1 ) {
                            lib22142002_gv_bounty_UnitSpecial[lv_sC_TargetPlayer][autoBD10462A_var] = "";
                            lib22142002_gv_bounty_Special[lv_sC_TargetPlayer][autoBD10462A_var] = 0;
                        }
                    }
                }

            }

        }
        else {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 4)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 4)) >= 0) && (StringToInt(StringWord(lp_stringCommand, 4)) <= 11))) {
                    lv_sC_SpecialNumber = StringToInt(StringWord(lp_stringCommand, 4));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9017288F")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_66B9EFDC")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
    }

    if ((lv_sC_CommandTypeText == "Special")) {
        auto774B23AE_val = StringCase(StringWord(lp_stringCommand, 5), true);
        if (auto774B23AE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 5), "RESET", 1)) {
            lv_sC_SpecialCommandTypeText = "Reset";
        }
        else if (auto774B23AE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 5), "UNITTYPE", 1)) {
            lv_sC_SpecialCommandTypeText = "Unit";
        }
        else {
            if ((lib22142002_gf_StringWords(lp_stringCommand) == 5)) {
                lv_sC_SpecialCommandTypeText = "Value";
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_99855263")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }
    }

    if ((lv_sC_CommandTypeText == "Special") && (lv_sC_SpecialCommandTypeText == "Value")) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 5)) == true)) {
            lv_sC_BountyValue = StringToInt(StringWord(lp_stringCommand, 5));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_240178C1")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }

    if ((lv_sC_CommandTypeText == "Special") && (lv_sC_SpecialCommandTypeText == "Unit")) {
        lv_sC_TargetUnitSingle = lib22142002_gf_C_SingleUnitTargetVerification("#", EventPlayer());
        if ((lv_sC_TargetUnitSingle == null)) {
            return ;
        }

    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        auto070EC8F7_val = lv_sC_CommandTypeText;
        if (auto070EC8F7_val == "Reset") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E482D484")));
            if (true) {
                auto9379CB5E_g = lv_sC_GroupTargetPlayers;
                auto9379CB5E_var = -1;
                while (true) {
                    auto9379CB5E_var = PlayerGroupNextPlayer(auto9379CB5E_g, auto9379CB5E_var);
                    if (auto9379CB5E_var < 0) { break; }
                    lib22142002_gv_bounty_Light[auto9379CB5E_var] = 0;
                    lib22142002_gv_bounty_Standard[auto9379CB5E_var] = 0;
                    lib22142002_gv_bounty_Armored[auto9379CB5E_var] = 0;
                    lib22142002_gv_bounty_Massive[auto9379CB5E_var] = 0;
                    lib22142002_gv_bounty_Heroic[auto9379CB5E_var] = 0;
                }
            }

        }
        else if (auto070EC8F7_val == "All") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DF520890")));
            auto87A64379_g = lv_sC_GroupTargetPlayers;
            auto87A64379_var = -1;
            while (true) {
                auto87A64379_var = PlayerGroupNextPlayer(auto87A64379_g, auto87A64379_var);
                if (auto87A64379_var < 0) { break; }
                lib22142002_gv_bounty_Light[auto87A64379_var] = lv_sC_BountyValue;
                lib22142002_gv_bounty_Standard[auto87A64379_var] = lv_sC_BountyValue;
                lib22142002_gv_bounty_Armored[auto87A64379_var] = lv_sC_BountyValue;
                lib22142002_gv_bounty_Massive[auto87A64379_var] = lv_sC_BountyValue;
                lib22142002_gv_bounty_Heroic[auto87A64379_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Light") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_32935F7D")));
            auto1B3DF4E8_g = lv_sC_GroupTargetPlayers;
            auto1B3DF4E8_var = -1;
            while (true) {
                auto1B3DF4E8_var = PlayerGroupNextPlayer(auto1B3DF4E8_g, auto1B3DF4E8_var);
                if (auto1B3DF4E8_var < 0) { break; }
                lib22142002_gv_bounty_Light[auto1B3DF4E8_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Standard") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_78577AAC")));
            autoA8364AC5_g = lv_sC_GroupTargetPlayers;
            autoA8364AC5_var = -1;
            while (true) {
                autoA8364AC5_var = PlayerGroupNextPlayer(autoA8364AC5_g, autoA8364AC5_var);
                if (autoA8364AC5_var < 0) { break; }
                lib22142002_gv_bounty_Standard[autoA8364AC5_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Armored") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_02D7E988")));
            autoDDE27ED2_g = lv_sC_GroupTargetPlayers;
            autoDDE27ED2_var = -1;
            while (true) {
                autoDDE27ED2_var = PlayerGroupNextPlayer(autoDDE27ED2_g, autoDDE27ED2_var);
                if (autoDDE27ED2_var < 0) { break; }
                lib22142002_gv_bounty_Armored[autoDDE27ED2_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Massive") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6CB055F7")));
            autoE0DBA340_g = lv_sC_GroupTargetPlayers;
            autoE0DBA340_var = -1;
            while (true) {
                autoE0DBA340_var = PlayerGroupNextPlayer(autoE0DBA340_g, autoE0DBA340_var);
                if (autoE0DBA340_var < 0) { break; }
                lib22142002_gv_bounty_Massive[autoE0DBA340_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Heroic") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_12F184C9")));
            auto140F2B0F_g = lv_sC_GroupTargetPlayers;
            auto140F2B0F_var = -1;
            while (true) {
                auto140F2B0F_var = PlayerGroupNextPlayer(auto140F2B0F_g, auto140F2B0F_var);
                if (auto140F2B0F_var < 0) { break; }
                lib22142002_gv_bounty_Heroic[auto140F2B0F_var] = lv_sC_BountyValue;
            }
        }
        else if (auto070EC8F7_val == "Building") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7530D986")));
            auto344FC328_g = lv_sC_GroupTargetPlayers;
            auto344FC328_var = -1;
            while (true) {
                auto344FC328_var = PlayerGroupNextPlayer(auto344FC328_g, auto344FC328_var);
                if (auto344FC328_var < 0) { break; }
                lib22142002_gv_bounty_DoStructuresDropLoot[auto344FC328_var] = lv_sC_BooleanOnOffOption;
            }
        }
        else if (auto070EC8F7_val == "Give") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C833ACEF")));
            autoFF86CBAD_g = lv_sC_GroupTargetPlayers;
            autoFF86CBAD_var = -1;
            while (true) {
                autoFF86CBAD_var = PlayerGroupNextPlayer(autoFF86CBAD_g, autoFF86CBAD_var);
                if (autoFF86CBAD_var < 0) { break; }
                lib22142002_gv_bounty_GiveBounty[autoFF86CBAD_var] = lv_sC_BooleanOnOffOption;
            }
        }
        else if (auto070EC8F7_val == "Gain") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_64404CDC")));
            auto2DC82749_g = lv_sC_GroupTargetPlayers;
            auto2DC82749_var = -1;
            while (true) {
                auto2DC82749_var = PlayerGroupNextPlayer(auto2DC82749_g, auto2DC82749_var);
                if (auto2DC82749_var < 0) { break; }
                lib22142002_gv_bounty_GainBounty[auto2DC82749_var] = lv_sC_BooleanOnOffOption;
            }
        }
        else if (auto070EC8F7_val == "Show") {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1C242814")));
            autoD124E212_g = lv_sC_GroupTargetPlayers;
            autoD124E212_var = -1;
            while (true) {
                autoD124E212_var = PlayerGroupNextPlayer(autoD124E212_g, autoD124E212_var);
                if (autoD124E212_var < 0) { break; }
                lib22142002_gv_bounty_DoDisplay[autoD124E212_var] = true;
                DialogSetVisible(lib22142002_gv_bounty_Dialog[autoD124E212_var], PlayerGroupSingle(EventPlayer()), true);
            }
            TriggerExecute(lib22142002_gt_Bounty_Dialogs_Update, true, false);
        }
        else if (auto070EC8F7_val == "Special") {
            autoA8CBFB58_val = lv_sC_SpecialCommandTypeText;
            if (autoA8CBFB58_val == "Unit") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_77BF889B")));
                autoAA6AFC21_g = lv_sC_GroupTargetPlayers;
                autoAA6AFC21_var = -1;
                while (true) {
                    autoAA6AFC21_var = PlayerGroupNextPlayer(autoAA6AFC21_g, autoAA6AFC21_var);
                    if (autoAA6AFC21_var < 0) { break; }
                    lib22142002_gv_bounty_UnitSpecial[autoAA6AFC21_var][lv_sC_SpecialNumber] = UnitGetType(lv_sC_TargetUnitSingle);
                }
            }
            else if (autoA8CBFB58_val == "Value") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_9B173C6B")));
                autoFC0FEC12_g = lv_sC_GroupTargetPlayers;
                autoFC0FEC12_var = -1;
                while (true) {
                    autoFC0FEC12_var = PlayerGroupNextPlayer(autoFC0FEC12_g, autoFC0FEC12_var);
                    if (autoFC0FEC12_var < 0) { break; }
                    lib22142002_gv_bounty_Special[autoFC0FEC12_var][lv_sC_SpecialNumber] = lv_sC_BountyValue;
                }
            }
            else {
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Recolor (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_CommandTypeText;
    bool lv_sC_CustomColor;
    color lv_sC_Color;
    color lv_sC_ColorSec;
    bool lv_sC_ColorReset;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoDB4947BC_val;
    string auto4E1855F3_val;
    string autoB962FBC7_val;
    unitgroup auto676E433A_g;
    int auto676E433A_u;
    unit auto676E433A_var;
    unitgroup autoA3A780C7_g;
    int autoA3A780C7_u;
    unit autoA3A780C7_var;
    unitgroup autoE231DECB_g;
    int autoE231DECB_u;
    unit autoE231DECB_var;
    unitgroup auto82457ECE_g;
    int auto82457ECE_u;
    unit auto82457ECE_var;
    unitgroup auto9B876862_g;
    int auto9B876862_u;
    unit auto9B876862_var;
    unitgroup auto6FAD4BF2_g;
    int auto6FAD4BF2_u;
    unit auto6FAD4BF2_var;

    // Variable Initialization
    lv_sC_CommandTypeText = "";
    lv_sC_Color = Color(100,100,100);
    lv_sC_ColorSec = Color(100,100,100);
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_D2D3DEF1");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 3, EventPlayer());
    autoDB4947BC_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoDB4947BC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNIT", 1)) {
        lv_sC_CommandTypeText = "Unit";
        lib22142002_gv_cCS_RecolorType[EventPlayer()] = "Unit";
    }
    else if (autoDB4947BC_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PLAYER", 1)) {
        lv_sC_CommandTypeText = "Player";
        lib22142002_gv_cCS_RecolorType[EventPlayer()] = "Player";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2ADD1ABD")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    auto4E1855F3_val = StringCase(StringWord(lp_stringCommand, 3), true);
    if (auto4E1855F3_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RESET", 3)) {
        lv_sC_ColorReset = true;
    }
    else if (auto4E1855F3_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CUSTOM", 1)) {
        lv_sC_CustomColor = true;
    }
    else {
        lv_sC_Color = lib22142002_gf_ConvertStringtoColorUltimate(StringWord(lp_stringCommand, 3));
        if ((lv_sC_Color == ColorWithAlpha(0.00, 0.00, 0.00, 49.80))) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_BA196CF9")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }

        lv_sC_ColorSec = lib22142002_gf_GetSecondaryColor(lv_sC_Color);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        autoB962FBC7_val = lv_sC_CommandTypeText;
        if (autoB962FBC7_val == "Unit") {
            if ((lv_sC_ColorReset == true)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EE08EC8B")));
                auto676E433A_g = UnitGroupSelected(EventPlayer());
                auto676E433A_u = UnitGroupCount(auto676E433A_g, c_unitCountAll);
                for (;; auto676E433A_u -= 1) {
                    auto676E433A_var = UnitGroupUnitFromEnd(auto676E433A_g, auto676E433A_u);
                    if (auto676E433A_var == null) { break; }
                    if ((UnitHasBehavior2(auto676E433A_var, "DEITYUncolorable") == false)) {
                        libNtve_gf_SendActorMessageToUnit(auto676E433A_var, libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(auto676E433A_var)], lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(auto676E433A_var)]));
                        lib22142002_gf_CUT_Remove(auto676E433A_var);
                        UnitGroupRemove(lib22142002_gv_recolor_ColorAppliedUnit, auto676E433A_var);
                    }

                }
            }
            else {
                if ((lv_sC_CustomColor == false)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A5FA271B")));
                    autoE231DECB_g = UnitGroupSelected(EventPlayer());
                    autoE231DECB_u = UnitGroupCount(autoE231DECB_g, c_unitCountAll);
                    for (;; autoE231DECB_u -= 1) {
                        autoE231DECB_var = UnitGroupUnitFromEnd(autoE231DECB_g, autoE231DECB_u);
                        if (autoE231DECB_var == null) { break; }
                        if ((UnitHasBehavior2(autoE231DECB_var, "DEITYUncolorable") == false)) {
                            libNtve_gf_SendActorMessageToUnit(autoE231DECB_var, libNtve_gf_SetTeamColor(lv_sC_Color, lv_sC_ColorSec));
                            lib22142002_gf_CUT_AddUpdate(autoE231DECB_var, lv_sC_Color);
                            UnitGroupAdd(lib22142002_gv_recolor_ColorAppliedUnit, autoE231DECB_var);
                        }

                    }
                }
                else {
                    autoA3A780C7_g = UnitGroupSelected(EventPlayer());
                    autoA3A780C7_u = UnitGroupCount(autoA3A780C7_g, c_unitCountAll);
                    for (;; autoA3A780C7_u -= 1) {
                        autoA3A780C7_var = UnitGroupUnitFromEnd(autoA3A780C7_g, autoA3A780C7_u);
                        if (autoA3A780C7_var == null) { break; }
                        if ((UnitHasBehavior2(autoA3A780C7_var, "DEITYUncolorable") == false)) {
                            UnitGroupAdd(lib22142002_gv_cCS_UnitSelect_Recolor[EventPlayer()], autoA3A780C7_var);
                        }

                    }
                }
            }
        }
        else if (autoB962FBC7_val == "Player") {
            auto82457ECE_g = UnitGroupSelected(EventPlayer());
            auto82457ECE_u = UnitGroupCount(auto82457ECE_g, c_unitCountAll);
            for (;; auto82457ECE_u -= 1) {
                auto82457ECE_var = UnitGroupUnitFromEnd(auto82457ECE_g, auto82457ECE_u);
                if (auto82457ECE_var == null) { break; }
                if ((lv_sC_ColorReset == true)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6EF9C75E")));
                    lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(auto82457ECE_var)] = libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(auto82457ECE_var), true));
                    lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(auto82457ECE_var)] = libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(auto82457ECE_var), true));
                    auto6FAD4BF2_g = UnitGroupSelected(EventPlayer());
                    auto6FAD4BF2_u = UnitGroupCount(auto6FAD4BF2_g, c_unitCountAll);
                    for (;; auto6FAD4BF2_u -= 1) {
                        auto6FAD4BF2_var = UnitGroupUnitFromEnd(auto6FAD4BF2_g, auto6FAD4BF2_u);
                        if (auto6FAD4BF2_var == null) { break; }
                        lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(auto6FAD4BF2_var));
                    }
                }
                else {
                    lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(auto82457ECE_var)] = lv_sC_Color;
                    lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(auto82457ECE_var)] = lv_sC_ColorSec;
                    if ((lv_sC_CustomColor == false)) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_551418AC")));
                        auto9B876862_g = UnitGroupSelected(EventPlayer());
                        auto9B876862_u = UnitGroupCount(auto9B876862_g, c_unitCountAll);
                        for (;; auto9B876862_u -= 1) {
                            auto9B876862_var = UnitGroupUnitFromEnd(auto9B876862_g, auto9B876862_u);
                            if (auto9B876862_var == null) { break; }
                            lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(auto9B876862_var));
                        }
                    }

                }
                Wait(0.1, c_timeGame);
                if ((lv_sC_ColorReset == true)) {
                    lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(auto82457ECE_var)] = libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(auto82457ECE_var), true));
                    lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(auto82457ECE_var)] = lib22142002_gf_GetSecondaryColor(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(auto82457ECE_var), true)));
                }

            }
        }
        else {
        }
    }

    if ((lv_sC_CustomColor == true)) {
        lib22142002_gf_CCS_OpenSliders(EventPlayer());
    }

}

void lib22142002_gf_C_SC_Tint (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_CommandTypeText;
    color lv_sC_Color;
    bool lv_sC_ColorCustom;
    bool lv_sC_ColorReset;
    fixed lv_sC_ColorHDR;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto88368764_val;
    string autoB4D9BECD_val;
    unitgroup autoB574ED49_g;
    int autoB574ED49_u;
    unit autoB574ED49_var;
    unitgroup auto4E88F7E4_g;
    int auto4E88F7E4_u;
    unit auto4E88F7E4_var;
    unitgroup auto6C6210D6_g;
    int auto6C6210D6_u;
    unit auto6C6210D6_var;
    unitgroup autoEE255A32_g;
    int autoEE255A32_u;
    unit autoEE255A32_var;
    unitgroup autoD4591B60_g;
    int autoD4591B60_u;
    unit autoD4591B60_var;

    // Variable Initialization
    lv_sC_CommandTypeText = "";
    lv_sC_Color = Color(100,100,100);
    lv_sC_ColorHDR = 1.0;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_28268D43");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 5, EventPlayer());
    auto88368764_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto88368764_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNIT", 1)) {
        lv_sC_CommandTypeText = "Unit";
        lib22142002_gv_cCS_RecolorType[EventPlayer()] = "UnitTint";
    }
    else if (auto88368764_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PLAYER", 1)) {
        lv_sC_CommandTypeText = "Player";
        lib22142002_gv_cCS_RecolorType[EventPlayer()] = "PlayerTint";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_F25BC03C")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 3)) {
        if ((StringCase(StringWord(lp_stringCommand, 3), true) == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "CLEAR", 2))) {
            lv_sC_ColorReset = true;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_FD410F3A")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        if (((lib22142002_gf_StringWords(lp_stringCommand) >= 3) && (lib22142002_gf_StringWords(lp_stringCommand) <= 4))) {
            lv_sC_Color = lib22142002_gf_ConvertStringtoColorUltimate(StringWord(lp_stringCommand, 3));
            if ((lib22142002_gf_StringWords(lp_stringCommand) == 4)) {
                if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 4)) == true)) {
                    lv_sC_ColorHDR = StringToFixed(StringWord(lp_stringCommand, 4));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D965B006")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }

        }
        else {
            lv_sC_ColorCustom = true;
        }
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        autoB4D9BECD_val = lv_sC_CommandTypeText;
        if (autoB4D9BECD_val == "Unit") {
            if ((lv_sC_ColorReset == true)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E4B90DE4")));
                autoB574ED49_g = UnitGroupSelected(EventPlayer());
                autoB574ED49_u = UnitGroupCount(autoB574ED49_g, c_unitCountAll);
                for (;; autoB574ED49_u -= 1) {
                    autoB574ED49_var = UnitGroupUnitFromEnd(autoB574ED49_g, autoB574ED49_u);
                    if (autoB574ED49_var == null) { break; }
                    libNtve_gf_SendActorMessageToUnit(autoB574ED49_var, libNtve_gf_SetTintColor(Color(100.00, 100.00, 100.00), 1.0, 0.0));
                }
            }
            else {
                if ((lv_sC_ColorCustom == false)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0B7F38EB")));
                    auto4E88F7E4_g = UnitGroupSelected(EventPlayer());
                    auto4E88F7E4_u = UnitGroupCount(auto4E88F7E4_g, c_unitCountAll);
                    for (;; auto4E88F7E4_u -= 1) {
                        auto4E88F7E4_var = UnitGroupUnitFromEnd(auto4E88F7E4_g, auto4E88F7E4_u);
                        if (auto4E88F7E4_var == null) { break; }
                        libNtve_gf_SendActorMessageToUnit(auto4E88F7E4_var, libNtve_gf_SetTintColor(lv_sC_Color, lv_sC_ColorHDR, 0.0));
                    }
                }

            }
        }
        else if (autoB4D9BECD_val == "Player") {
            auto6C6210D6_g = UnitGroupSelected(EventPlayer());
            auto6C6210D6_u = UnitGroupCount(auto6C6210D6_g, c_unitCountAll);
            for (;; auto6C6210D6_u -= 1) {
                auto6C6210D6_var = UnitGroupUnitFromEnd(auto6C6210D6_g, auto6C6210D6_u);
                if (auto6C6210D6_var == null) { break; }
                if ((lv_sC_ColorReset == true)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5CB58350")));
                    lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(auto6C6210D6_var)] = Color(100.00, 100.00, 100.00);
                    autoD4591B60_g = UnitGroupSelected(EventPlayer());
                    autoD4591B60_u = UnitGroupCount(autoD4591B60_g, c_unitCountAll);
                    for (;; autoD4591B60_u -= 1) {
                        autoD4591B60_var = UnitGroupUnitFromEnd(autoD4591B60_g, autoD4591B60_u);
                        if (autoD4591B60_var == null) { break; }
                        lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(autoD4591B60_var));
                    }
                }
                else {
                    lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(auto6C6210D6_var)] = lv_sC_Color;
                    lib22142002_gv_cCS_PlayerTintColorHDR[UnitGetOwner(auto6C6210D6_var)] = lv_sC_ColorHDR;
                    lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(auto6C6210D6_var)] = true;
                    if ((lv_sC_ColorCustom == false)) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2AC05136")));
                        autoEE255A32_g = UnitGroupSelected(EventPlayer());
                        autoEE255A32_u = UnitGroupCount(autoEE255A32_g, c_unitCountAll);
                        for (;; autoEE255A32_u -= 1) {
                            autoEE255A32_var = UnitGroupUnitFromEnd(autoEE255A32_g, autoEE255A32_u);
                            if (autoEE255A32_var == null) { break; }
                            lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(autoEE255A32_var));
                        }
                    }

                }
                Wait(0.1, c_timeGame);
                if ((lv_sC_ColorReset == true)) {
                    lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(auto6C6210D6_var)] = false;
                }

            }
        }
        else {
        }
    }

    if ((lv_sC_ColorCustom == true)) {
        lib22142002_gf_CCS_OpenSliders(EventPlayer());
    }

}

void lib22142002_gf_C_SC_Snap (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    string lv_sC_RespondTextTargetGroupName;
    string lv_sC_RespondTextCommandType;
    unitgroup lv_sC_GroupTargetUnits;
    string lv_sC_TargetType;
    int lv_int;
    int lv_sC_SnapCommandType;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto83AC3C69_val;
    unitgroup auto49FEA836_g;
    int auto49FEA836_u;
    unit auto49FEA836_var;
    string autoACCC31EB_val;
    unitgroup auto306E4F37_g;
    int auto306E4F37_u;
    unit auto306E4F37_var;
    unitgroup autoFC82B305_g;
    int autoFC82B305_u;
    unit autoFC82B305_var;
    playergroup auto52C79B57_g;
    int auto52C79B57_var;
    unitgroup autoE396CAEA_g;
    int autoE396CAEA_u;
    unit autoE396CAEA_var;
    int auto3E79AEB8_ae;
    int auto3E79AEB8_ai;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextTargetGroupName = "";
    lv_sC_RespondTextCommandType = "";
    lv_sC_GroupTargetUnits = UnitGroupEmpty();
    lv_sC_TargetType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_8D4CC44B");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 3, EventPlayer());
    auto83AC3C69_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto83AC3C69_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FULL", 2)) {
        lv_sC_SnapCommandType = 1;
        lv_sC_RespondTextCommandType = "Full";
    }
    else if (auto83AC3C69_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HALF", 1)) {
        lv_sC_SnapCommandType = 2;
        lv_sC_RespondTextCommandType = "Half";
    }
    else if (auto83AC3C69_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "THIRD", 1)) {
        lv_sC_SnapCommandType = 3;
        lv_sC_RespondTextCommandType = "Third";
    }
    else if (auto83AC3C69_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FOURTH", 2)) {
        lv_sC_SnapCommandType = 4;
        lv_sC_RespondTextCommandType = "Fourth";
    }
    else if (auto83AC3C69_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "FIFTH", 2)) {
        lv_sC_SnapCommandType = 4;
        lv_sC_RespondTextCommandType = "Fourth";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B265BCD9")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 2)) {
        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
            lv_sC_TargetType = "Unit";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_262ACB1A")));
            return ;
        }
    }
    else {
        lv_sC_TargetType = "Player";
        lv_sC_TargetPlayer = lib22142002_gf_C_PlayerVerification(StringWord(lp_stringCommand, 3), EventPlayer());
        if ((lv_sC_TargetPlayer == -1)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9DF05935")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        else {
            if ((lv_sC_TargetPlayer == 48)) {
                lv_sC_TargetPlayer = EventPlayer();
            }
            else {
                if ((lv_sC_TargetPlayer == 55)) {
                    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_07BC4193")));
                        return ;
                    }

                    lv_sC_RespondTextTargetGroupName = "Selected Players";
                    auto49FEA836_g = UnitGroupSelected(EventPlayer());
                    auto49FEA836_u = UnitGroupCount(auto49FEA836_g, c_unitCountAll);
                    for (;; auto49FEA836_u -= 1) {
                        auto49FEA836_var = UnitGroupUnitFromEnd(auto49FEA836_g, auto49FEA836_u);
                        if (auto49FEA836_var == null) { break; }
                        PlayerGroupAdd(lv_sC_GroupTargetPlayers, UnitGetOwner(auto49FEA836_var));
                    }
                }
                else {
                    if ((lv_sC_TargetPlayer == 100)) {
                        lv_sC_RespondTextTargetGroupName = "All Players";
                        libNtve_gf_AddPlayerGroupToPlayerGroup(PlayerGroupAll(), lv_sC_GroupTargetPlayers);
                    }

                }
            }
        }
    }

    if (true) {
        autoACCC31EB_val = lv_sC_TargetType;
        if (autoACCC31EB_val == "Unit") {
            auto306E4F37_g = UnitGroupSelected(EventPlayer());
            auto306E4F37_u = UnitGroupCount(auto306E4F37_g, c_unitCountAll);
            for (;; auto306E4F37_u -= 1) {
                auto306E4F37_var = UnitGroupUnitFromEnd(auto306E4F37_g, auto306E4F37_u);
                if (auto306E4F37_var == null) { break; }
                if ((UnitHasBehavior2(auto306E4F37_var, "DEITYMainTools") == false)) {
                    UnitGroupAdd(lv_sC_GroupTargetUnits, auto306E4F37_var);
                }

            }
        }
        else if (autoACCC31EB_val == "Player") {
            if ((lv_sC_TargetPlayer > 50)) {
                auto52C79B57_g = lv_sC_GroupTargetPlayers;
                auto52C79B57_var = -1;
                while (true) {
                    auto52C79B57_var = PlayerGroupNextPlayer(auto52C79B57_g, auto52C79B57_var);
                    if (auto52C79B57_var < 0) { break; }
                    autoE396CAEA_g = UnitGroup(null, auto52C79B57_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                    autoE396CAEA_u = UnitGroupCount(autoE396CAEA_g, c_unitCountAll);
                    for (;; autoE396CAEA_u -= 1) {
                        autoE396CAEA_var = UnitGroupUnitFromEnd(autoE396CAEA_g, autoE396CAEA_u);
                        if (autoE396CAEA_var == null) { break; }
                        if ((UnitHasBehavior2(autoE396CAEA_var, "DEITYMainTools") == false)) {
                            UnitGroupAdd(lv_sC_GroupTargetUnits, autoE396CAEA_var);
                        }

                    }
                }
            }
            else {
                autoFC82B305_g = UnitGroup(null, lv_sC_TargetPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                autoFC82B305_u = UnitGroupCount(autoFC82B305_g, c_unitCountAll);
                for (;; autoFC82B305_u -= 1) {
                    autoFC82B305_var = UnitGroupUnitFromEnd(autoFC82B305_g, autoFC82B305_u);
                    if (autoFC82B305_var == null) { break; }
                    if ((UnitHasBehavior2(autoFC82B305_var, "DEITYMainTools") == false)) {
                        UnitGroupAdd(lv_sC_GroupTargetUnits, autoFC82B305_var);
                    }

                }
            }
        }
        else {
        }
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_BD328739")));
        SoundPlayForPlayer(SoundLink("Event_Snap", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        auto3E79AEB8_ae = UnitGroupCount(lv_sC_GroupTargetUnits, c_unitCountAlive);
        auto3E79AEB8_ai = lv_sC_SnapCommandType;
        lv_int = 1;
        for ( ; ( (auto3E79AEB8_ai >= 0 && lv_int <= auto3E79AEB8_ae) || (auto3E79AEB8_ai < 0 && lv_int >= auto3E79AEB8_ae) ) ; lv_int += auto3E79AEB8_ai ) {
            UnitBehaviorAdd(UnitGroupUnit(lv_sC_GroupTargetUnits, lv_int), "SnappedAway", UnitGroupUnit(lv_sC_GroupTargetUnits, lv_int), 1);
        }
    }

}

void lib22142002_gf_C_SC_Objective (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_CommandType;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    string lv_sC_RespondTextTargetGroupName;
    int lv_sC_ObjectiveID;
    int lv_sC_ObjectiveType;
    int lv_sC_ObjectiveTypeSkip;
    bool lv_sC_ObjectiveShowHide;
    text lv_sC_ObjectiveText;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextText;
    text lv_sCH_HelpTextMark;
    text lv_sCH_HelpTextOnOff;

    // Automatic Variable Declarations
    string autoEC703338_val;
    string auto530B848B_val;
    int auto26F6B8A0_ae;
    int auto26F6B8A0_var;
    string auto4B2AD9FE_val;
    playergroup autoB0770DCA_g;

    // Variable Initialization
    lv_sC_CommandType = "";
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextTargetGroupName = "";
    lv_sC_ObjectiveShowHide = true;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_48FCA22E");
    lv_sCH_HelpTextText = StringExternal("Param/Value/lib_22142002_C4B69B66");
    lv_sCH_HelpTextMark = StringExternal("Param/Value/lib_22142002_CFC119BE");
    lv_sCH_HelpTextOnOff = StringExternal("Param/Value/lib_22142002_0EE509AD");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 99, EventPlayer());
    autoEC703338_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoEC703338_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "PRIMARY", 1)) {
        lv_sC_ObjectiveType = 0;
        lv_sC_ObjectiveTypeSkip = 3;
    }
    else if (autoEC703338_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SECONDARY", 1)) {
        lv_sC_ObjectiveType = 1;
        lv_sC_ObjectiveTypeSkip = 3;
    }
    else {
        lv_sC_ObjectiveType = 0;
        lv_sC_ObjectiveTypeSkip = 2;
    }
    if (((StringToFixed(StringWord(lp_stringCommand, lv_sC_ObjectiveTypeSkip)) * 0) == 0)) {
        if (((StringToInt(StringWord(lp_stringCommand, lv_sC_ObjectiveTypeSkip)) >= 1) && (StringToInt(StringWord(lp_stringCommand, lv_sC_ObjectiveTypeSkip)) <= 10))) {
            lv_sC_ObjectiveID = StringToInt(StringWord(lp_stringCommand, lv_sC_ObjectiveTypeSkip));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_8F567F2A")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D08442DE")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    auto530B848B_val = StringCase(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), true);
    if (auto530B848B_val == "ON") {
        lv_sC_CommandType = "OnOff";
        lv_sC_ObjectiveShowHide = true;
        lv_sCH_HelpText = lv_sCH_HelpTextOnOff;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "OFF", 2)) {
        lv_sC_CommandType = "OnOff";
        lv_sC_ObjectiveShowHide = false;
        lv_sCH_HelpText = lv_sCH_HelpTextOnOff;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "TITLE", 1)) {
        lv_sC_CommandType = "Title";
        lv_sCH_HelpText = lv_sCH_HelpTextText;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "DESCRIPTION", 1)) {
        lv_sC_CommandType = "Description";
        lv_sCH_HelpText = lv_sCH_HelpTextText;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "ACTIVE", 1)) {
        lv_sC_CommandType = "Activated";
        lv_sCH_HelpText = lv_sCH_HelpTextMark;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "ACTIVATED", 1)) {
        lv_sC_CommandType = "Activated";
        lv_sCH_HelpText = lv_sCH_HelpTextMark;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "FAILED", 1)) {
        lv_sC_CommandType = "Failed";
        lv_sCH_HelpText = lv_sCH_HelpTextMark;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "COMPLETED", 1)) {
        lv_sC_CommandType = "Completed";
        lv_sCH_HelpText = lv_sCH_HelpTextMark;
    }
    else if (auto530B848B_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 1)), "HIDDEN", 1)) {
        lv_sC_CommandType = "Hidden";
        lv_sCH_HelpText = lv_sCH_HelpTextMark;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D4231664")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if (((lv_sC_CommandType == "Title") || (lv_sC_CommandType == "Description"))) {
        lv_sC_ObjectiveText = StringToText(StringWord(lp_stringCommand, (lv_sC_ObjectiveTypeSkip + 2)));
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 3)) {
            auto26F6B8A0_ae = lib22142002_gf_StringWords(lp_stringCommand);
            auto26F6B8A0_var = (lv_sC_ObjectiveTypeSkip + 3);
            for ( ; auto26F6B8A0_var <= auto26F6B8A0_ae; auto26F6B8A0_var += 1 ) {
                lv_sC_ObjectiveText = (lv_sC_ObjectiveText + StringExternal("Param/Value/lib_22142002_3036358D") + StringToText(StringWord(lp_stringCommand, auto26F6B8A0_var)));
            }
        }

    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_15E3A34D")));
        auto4B2AD9FE_val = lv_sC_CommandType;
        if (auto4B2AD9FE_val == "Activated") {
            ObjectiveSetState(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], c_objectiveStateActive);
        }
        else if (auto4B2AD9FE_val == "Failed") {
            ObjectiveSetState(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], c_objectiveStateFailed);
        }
        else if (auto4B2AD9FE_val == "Completed") {
            ObjectiveSetState(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], c_objectiveStateCompleted);
        }
        else if (auto4B2AD9FE_val == "Hidden") {
            ObjectiveSetState(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], c_objectiveStateHidden);
        }
        else if (auto4B2AD9FE_val == "Title") {
            ObjectiveSetName(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], lv_sC_ObjectiveText);
        }
        else if (auto4B2AD9FE_val == "Description") {
            ObjectiveSetDescription(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], lv_sC_ObjectiveText);
        }
        else if (auto4B2AD9FE_val == "OnOff") {
            if ((lv_sC_TargetPlayer > 50)) {
                autoB0770DCA_g = lv_sC_GroupTargetPlayers;
                lv_sC_TargetPlayer = -1;
                while (true) {
                    lv_sC_TargetPlayer = PlayerGroupNextPlayer(autoB0770DCA_g, lv_sC_TargetPlayer);
                    if (lv_sC_TargetPlayer < 0) { break; }
                    ObjectiveShow(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], PlayerGroupSingle(lv_sC_TargetPlayer), lv_sC_ObjectiveShowHide);
                }
            }
            else {
                ObjectiveShow(lib22142002_gv_c_SC_Objectives[lv_sC_ObjectiveType][lv_sC_ObjectiveID], PlayerGroupSingle(lv_sC_TargetPlayer), lv_sC_ObjectiveShowHide);
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Mods (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    string lv_sC_CommandTypeText;
    bool lv_sC_PresetOnOffBoolean;
    string lv_sC_RespondTextOnOffBoolean;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto75B8F012_val;
    string autoB4F96773_val;
    playergroup autoF2D8DC47_g;
    int autoF2D8DC47_var;
    string autoBE09945B_val;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_CommandTypeText = "";
    lv_sC_RespondTextOnOffBoolean = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_7B11761D");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 4, EventPlayer());
    auto75B8F012_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NEXUSSPAWN", 1)) {
        lv_sC_CommandTypeText = "Nexus Spawn";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "NSPAWN", 2)) {
        lv_sC_CommandTypeText = "Nexus Spawn";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 100), "KILLERSPAWN", 1)) {
        lv_sC_CommandTypeText = "Killer Spawn";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KSPAWN", 2)) {
        lv_sC_CommandTypeText = "Killer Spawn";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VARIANTKILLERSPAWN", 1)) {
        lv_sC_CommandTypeText = "Killer Spawn 2";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VKILLERSPAWN", 2)) {
        lv_sC_CommandTypeText = "Killer Spawn 2";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VKSPAWN", 3)) {
        lv_sC_CommandTypeText = "Killer Spawn 2";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "TWINUNITS", 1)) {
        lv_sC_CommandTypeText = "Twin Units";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ALIENINCUBATION", 1)) {
        lv_sC_CommandTypeText = "Alien Incubation";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "AINCUBATION", 2)) {
        lv_sC_CommandTypeText = "Alien Incubation";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HAUNTINGDEAD", 1)) {
        lv_sC_CommandTypeText = "Haunting Dead";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HDEAD", 2)) {
        lv_sC_CommandTypeText = "Haunting Dead";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "100KILLDUPLICATES", 1)) {
        lv_sC_CommandTypeText = "100 Kill Duplicate";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "100KDUPLICATES", 5)) {
        lv_sC_CommandTypeText = "100 Kill Duplicate";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "200KILLDUPLICATES", 1)) {
        lv_sC_CommandTypeText = "200 Kill Duplicate";
    }
    else if (auto75B8F012_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "200KDUPLICATES", 5)) {
        lv_sC_CommandTypeText = "200 Kill Duplicate";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3ED39191")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    autoB4F96773_val = StringCase(StringWord(lp_stringCommand, 3), true);
    if (autoB4F96773_val == "ON") {
        lv_sC_PresetOnOffBoolean = true;
        lv_sC_RespondTextOnOffBoolean = "On";
    }
    else if (autoB4F96773_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "OFF", 2)) {
        lv_sC_PresetOnOffBoolean = false;
        lv_sC_RespondTextOnOffBoolean = "Off";
    }
    else {
    }
    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 4, 4, 4, 55, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6E8914A6")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(libNtve_gf_UnionOfPlayerGroups(PlayerGroupSingle(EventPlayer()), lv_sC_GroupTargetPlayers), lib22142002_gv_dEITYRespondTextLocationPublic, (lib22142002_gv_dEITYRespondFont + StringToText(lv_sC_CommandTypeText) + StringToText(" mod has been turned ") + StringToText(lv_sC_RespondTextOnOffBoolean) + StringExternal("Param/Value/lib_22142002_842F0F6C") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_4D196219")));
        autoF2D8DC47_g = PlayerGroupAll();
        autoF2D8DC47_var = -1;
        while (true) {
            autoF2D8DC47_var = PlayerGroupNextPlayer(autoF2D8DC47_g, autoF2D8DC47_var);
            if (autoF2D8DC47_var < 0) { break; }
            autoBE09945B_val = lv_sC_CommandTypeText;
            if (autoBE09945B_val == "Nexus Spawn") {
                lib22142002_gv_mods_NexusSpawn[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_NexusSpawn, true);
            }
            else if (autoBE09945B_val == "Killer Spawn") {
                lib22142002_gv_mods_KillerSpawn[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_KillerSpawn, true);
            }
            else if (autoBE09945B_val == "Killer Spawn 2") {
                lib22142002_gv_mods_KillerSpawn2[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_KillerSpawn2, true);
            }
            else if (autoBE09945B_val == "Twin Units") {
                lib22142002_gv_mods_TwinUnits[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_TwinUnits, true);
            }
            else if (autoBE09945B_val == "Haunting Dead") {
                lib22142002_gv_mods_HauntingDead[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_HauntingDead, true);
            }
            else if (autoBE09945B_val == "Alien Incubation (Hostile)") {
                lib22142002_gv_mods_AlienIncubationHostile[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_AlienIncubation, true);
            }
            else if (autoBE09945B_val == "Alien Incubation (Own)") {
                lib22142002_gv_mods_AlienIncubationOwn[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_AlienIncubation, true);
            }
            else if (autoBE09945B_val == "100 Kill Duplicate") {
                lib22142002_gv_mods_100KillDuplicate[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_KillDuplicate, true);
            }
            else if (autoBE09945B_val == "200 Kill Duplicate") {
                lib22142002_gv_mods_200KillDuplicate[autoF2D8DC47_var] = lv_sC_PresetOnOffBoolean;
                TriggerEnable(lib22142002_gt_Mods_KillDuplicate, true);
            }
            else {
            }
        }
    }

}

void lib22142002_gf_C_SC_PlayerText (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_TValueInt;
    text lv_sC_TValue;
    bool lv_sC_TRemove;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int auto0716EA95_ae;
    const int auto0716EA95_ai = 1;
    playergroup auto000CEBA1_g;
    int auto000CEBA1_var;
    playergroup autoEB271288_g;
    int autoEB271288_var;

    // Variable Initialization
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_189D3064");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 99, 2);
    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 3, 99, -1, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2C82CEC6")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((StringCase(StringWord(lp_stringCommand, 3), true) == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "REMOVE", 3))) {
        lv_sC_TRemove = true;
    }
    else {
        lv_sC_TValue = StringToText(StringWord(lp_stringCommand, 3));
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 4)) {
            auto0716EA95_ae = lib22142002_gf_StringWords(lp_stringCommand);
            lv_sC_TValueInt = 4;
            for ( ; ( (auto0716EA95_ai >= 0 && lv_sC_TValueInt <= auto0716EA95_ae) || (auto0716EA95_ai < 0 && lv_sC_TValueInt >= auto0716EA95_ae) ) ; lv_sC_TValueInt += auto0716EA95_ai ) {
                lv_sC_TValue = (lv_sC_TValue + StringExternal("Param/Value/lib_22142002_F8508423") + StringToText(StringWord(lp_stringCommand, lv_sC_TValueInt)));
            }
        }

    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        if ((lv_sC_TRemove == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2F329B3C")));
            autoEB271288_g = lv_sC_GroupTargetPlayers;
            autoEB271288_var = -1;
            while (true) {
                autoEB271288_var = PlayerGroupNextPlayer(autoEB271288_g, autoEB271288_var);
                if (autoEB271288_var < 0) { break; }
                lib22142002_gv_c_SC_PlayerText[autoEB271288_var] = lv_sC_TValue;
                lib22142002_gv_c_SC_PlayerTextBool[autoEB271288_var] = true;
                lib22142002_gf_CPTT_APPLY(autoEB271288_var);
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7BDC33DE")));
            auto000CEBA1_g = lv_sC_GroupTargetPlayers;
            auto000CEBA1_var = -1;
            while (true) {
                auto000CEBA1_var = PlayerGroupNextPlayer(auto000CEBA1_g, auto000CEBA1_var);
                if (auto000CEBA1_var < 0) { break; }
                lib22142002_gv_c_SC_PlayerText[auto000CEBA1_var] = null;
                lib22142002_gv_c_SC_PlayerTextBool[auto000CEBA1_var] = false;
                lib22142002_gf_CPTT_REMOVE(auto000CEBA1_var);
            }
        }
    }

}

void lib22142002_gf_C_SC_PlayerTip (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    int lv_sC_TValueInt;
    text lv_sC_TValue;
    bool lv_sC_TRemove;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int autoFAC7F247_ae;
    const int autoFAC7F247_ai = 1;
    playergroup autoE3827ACE_g;
    int autoE3827ACE_var;
    playergroup autoA298EA61_g;
    int autoA298EA61_var;

    // Variable Initialization
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_6B279DE4");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 99, 2);
    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 3, 99, -1, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4A5A514F")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    if ((StringCase(StringWord(lp_stringCommand, 3), true) == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "REMOVE", 3))) {
        lv_sC_TRemove = true;
    }
    else {
        lv_sC_TValue = StringToText(StringWord(lp_stringCommand, 3));
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 4)) {
            autoFAC7F247_ae = lib22142002_gf_StringWords(lp_stringCommand);
            lv_sC_TValueInt = 4;
            for ( ; ( (autoFAC7F247_ai >= 0 && lv_sC_TValueInt <= autoFAC7F247_ae) || (autoFAC7F247_ai < 0 && lv_sC_TValueInt >= autoFAC7F247_ae) ) ; lv_sC_TValueInt += autoFAC7F247_ai ) {
                lv_sC_TValue = (lv_sC_TValue + StringExternal("Param/Value/lib_22142002_D88FDAAA") + StringToText(StringWord(lp_stringCommand, lv_sC_TValueInt)));
            }
        }

    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        if ((lv_sC_TRemove == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C5720BB9")));
            autoA298EA61_g = lv_sC_GroupTargetPlayers;
            autoA298EA61_var = -1;
            while (true) {
                autoA298EA61_var = PlayerGroupNextPlayer(autoA298EA61_g, autoA298EA61_var);
                if (autoA298EA61_var < 0) { break; }
                lib22142002_gv_c_SC_PlayerTip[autoA298EA61_var] = lv_sC_TValue;
                lib22142002_gv_c_SC_PlayerTipBool[autoA298EA61_var] = true;
                lib22142002_gf_CPTT_APPLY(autoA298EA61_var);
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AC96A03B")));
            autoE3827ACE_g = lv_sC_GroupTargetPlayers;
            autoE3827ACE_var = -1;
            while (true) {
                autoE3827ACE_var = PlayerGroupNextPlayer(autoE3827ACE_g, autoE3827ACE_var);
                if (autoE3827ACE_var < 0) { break; }
                lib22142002_gv_c_SC_PlayerTip[autoE3827ACE_var] = null;
                lib22142002_gv_c_SC_PlayerTipBool[autoE3827ACE_var] = false;
                lib22142002_gf_CPTT_REMOVE(autoE3827ACE_var);
            }
        }
    }

}

void lib22142002_gf_C_SC_Transmission (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    unit lv_sC_TargetUnitSingle;
    int lv_sC_TextValueInt;
    text lv_sC_TextValue;
    fixed lv_sC_TextDuration;
    fixed lv_sC_TextDurationWordMultiplier;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int auto817A308D_ae;
    const int auto817A308D_ai = 1;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_TextDurationWordMultiplier = 2.0;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_D66AB6F8");

    // Implementation
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 0, EventPlayer());
    if (true) {
        lv_sC_CorrectCommand = true;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_F7BB431E")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
    }
    lv_sC_TargetUnitSingle = lib22142002_gf_C_SingleUnitTargetVerification("#", EventPlayer());
    if ((lv_sC_TargetUnitSingle == null)) {
        return ;
    }

    lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 1, 99, -1, EventPlayer(), false);
    if ((lv_sC_GroupTargetPlayers == null)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B9666F18")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    else {
        lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
    }

    lv_sC_TextValue = StringToText(StringWord(lp_stringCommand, 3));
    if ((lib22142002_gf_StringWords(lp_stringCommand) > 3)) {
        auto817A308D_ae = lib22142002_gf_StringWords(lp_stringCommand);
        lv_sC_TextValueInt = 4;
        for ( ; ( (auto817A308D_ai >= 0 && lv_sC_TextValueInt <= auto817A308D_ae) || (auto817A308D_ai < 0 && lv_sC_TextValueInt >= auto817A308D_ae) ) ; lv_sC_TextValueInt += auto817A308D_ai ) {
            lv_sC_TextValue = (lv_sC_TextValue + StringExternal("Param/Value/lib_22142002_D21B84E7") + StringToText(StringWord(lp_stringCommand, lv_sC_TextValueInt)));
        }
    }

    lv_sC_TextDuration = ((lib22142002_gf_StringWords(lp_stringCommand) - 2) * lv_sC_TextDurationWordMultiplier);
    if ((lv_sC_TextDuration < 3.0)) {
        lv_sC_TextDuration = 3.0;
    }
    else {
        if ((lv_sC_TextDuration > 6.0)) {
            lv_sC_TextDuration = 6.0;
        }

    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5A6154C5") + lv_sC_RespondTextTargetGroupName + StringExternal("Param/Value/lib_22142002_DA9AB800")));
        ActorCreate(ActorScopeFromUnit(lv_sC_TargetUnitSingle), "TalkIcon", null, null, null);
        SoundPlayForPlayer(SoundLink("UI_TransmissionStart", -1), c_maxPlayers, lv_sC_GroupTargetPlayers, 100.0, 0.0);
        UnitFlashSelection(lib22142002_gv_transmissionUnitSource, lv_sC_TextDuration);
        TransmissionSendForPlayerSelect(lv_sC_GroupTargetPlayers, TransmissionSourceFromUnit(lv_sC_TargetUnitSingle, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", null, TextWithColor(UnitGetName(lv_sC_TargetUnitSingle), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(lv_sC_TargetUnitSingle), false))), lv_sC_TextValue, lv_sC_TextDuration, c_transmissionDurationSet, false, c_maxPlayers, false);
    }

}

void lib22142002_gf_C_SC_Text (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TValueInt;
    text lv_sC_TValue;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int auto61422AB3_ae;
    const int auto61422AB3_ai = 1;
    unitgroup auto7A85F922_g;
    int auto7A85F922_u;
    unit auto7A85F922_var;

    // Variable Initialization
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_BA5E1F80");

    // Implementation
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 0, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        lv_sC_TValue = StringToText(StringWord(lp_stringCommand, 2));
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 3)) {
            auto61422AB3_ae = lib22142002_gf_StringWords(lp_stringCommand);
            lv_sC_TValueInt = 3;
            for ( ; ( (auto61422AB3_ai >= 0 && lv_sC_TValueInt <= auto61422AB3_ae) || (auto61422AB3_ai < 0 && lv_sC_TValueInt >= auto61422AB3_ae) ) ; lv_sC_TValueInt += auto61422AB3_ai ) {
                lv_sC_TValue = (lv_sC_TValue + StringExternal("Param/Value/lib_22142002_0BBA111F") + StringToText(StringWord(lp_stringCommand, lv_sC_TValueInt)));
            }
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E75E97F3")));
            auto7A85F922_g = UnitGroupSelected(EventPlayer());
            auto7A85F922_u = UnitGroupCount(auto7A85F922_g, c_unitCountAll);
            for (;; auto7A85F922_u -= 1) {
                auto7A85F922_var = UnitGroupUnitFromEnd(auto7A85F922_g, auto7A85F922_u);
                if (auto7A85F922_var == null) { break; }
                UnitSetInfoText2(auto7A85F922_var, lv_sC_TValue);
                lib22142002_gf_TXTTip_AddUpdate(auto7A85F922_var, lv_sC_TValue, null);
                UnitFlashSelection(auto7A85F922_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6FCE52E5")));
    }
}

void lib22142002_gf_C_SC_Tip (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TValueInt;
    text lv_sC_TValue;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int auto7D1CBEE1_ae;
    const int auto7D1CBEE1_ai = 1;
    unitgroup auto9FB34C2D_g;
    int auto9FB34C2D_u;
    unit auto9FB34C2D_var;

    // Variable Initialization
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_D042E67A");

    // Implementation
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 0, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        lv_sC_TValue = StringToText(StringWord(lp_stringCommand, 2));
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 3)) {
            auto7D1CBEE1_ae = lib22142002_gf_StringWords(lp_stringCommand);
            lv_sC_TValueInt = 3;
            for ( ; ( (auto7D1CBEE1_ai >= 0 && lv_sC_TValueInt <= auto7D1CBEE1_ae) || (auto7D1CBEE1_ai < 0 && lv_sC_TValueInt >= auto7D1CBEE1_ae) ) ; lv_sC_TValueInt += auto7D1CBEE1_ai ) {
                lv_sC_TValue = (lv_sC_TValue + StringExternal("Param/Value/lib_22142002_CF589D5C") + StringToText(StringWord(lp_stringCommand, lv_sC_TValueInt)));
            }
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_080D770C")));
            auto9FB34C2D_g = UnitGroupSelected(EventPlayer());
            auto9FB34C2D_u = UnitGroupCount(auto9FB34C2D_g, c_unitCountAll);
            for (;; auto9FB34C2D_u -= 1) {
                auto9FB34C2D_var = UnitGroupUnitFromEnd(auto9FB34C2D_g, auto9FB34C2D_u);
                if (auto9FB34C2D_var == null) { break; }
                UnitSetInfoTip(auto9FB34C2D_var, lv_sC_TValue);
                lib22142002_gf_TXTTip_AddUpdate(auto9FB34C2D_var, null, lv_sC_TValue);
                UnitFlashSelection(auto9FB34C2D_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_06032E17")));
    }
}

void lib22142002_gf_C_SC_Flash (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    fixed lv_sC_FlashDurationValue;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    unitgroup auto0481367F_g;
    int auto0481367F_u;
    unit auto0481367F_var;

    // Variable Initialization
    lv_sC_FlashDurationValue = 2.0;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_0F3201C8");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 2, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 2)) == true)) {
            if ((StringToFixed(StringWord(lp_stringCommand, 2)) > 0)) {
                lv_sC_FlashDurationValue = StringToFixed(StringWord(lp_stringCommand, 2));
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B2439AD8")));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_8405E2AB")));
            return ;
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_00717CF9")));
            auto0481367F_g = UnitGroupSelected(EventPlayer());
            auto0481367F_u = UnitGroupCount(auto0481367F_g, c_unitCountAll);
            for (;; auto0481367F_u -= 1) {
                auto0481367F_var = UnitGroupUnitFromEnd(auto0481367F_g, auto0481367F_u);
                if (auto0481367F_var == null) { break; }
                UnitFlashSelection(auto0481367F_var, lv_sC_FlashDurationValue);
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_183407FF")));
    }
}

void lib22142002_gf_C_SC_Signal (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_StringValueInt;
    string lv_sC_StringValue;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    int autoC14DFFEA_ae;
    const int autoC14DFFEA_ai = 1;
    unitgroup autoB7860614_g;
    int autoB7860614_u;
    unit autoB7860614_var;

    // Variable Initialization
    lv_sC_StringValue = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_D6C01001");

    // Implementation
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 0, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        lv_sC_StringValue = StringWord(lp_stringCommand, 2);
        if ((lib22142002_gf_StringWords(lp_stringCommand) >= 3)) {
            autoC14DFFEA_ae = lib22142002_gf_StringWords(lp_stringCommand);
            lv_sC_StringValueInt = 3;
            for ( ; ( (autoC14DFFEA_ai >= 0 && lv_sC_StringValueInt <= autoC14DFFEA_ae) || (autoC14DFFEA_ai < 0 && lv_sC_StringValueInt >= autoC14DFFEA_ae) ) ; lv_sC_StringValueInt += autoC14DFFEA_ai ) {
                lv_sC_StringValue = (lv_sC_StringValue + " " + StringWord(lp_stringCommand, lv_sC_StringValueInt));
            }
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_33216614")));
            autoB7860614_g = UnitGroupSelected(EventPlayer());
            autoB7860614_u = UnitGroupCount(autoB7860614_g, c_unitCountAll);
            for (;; autoB7860614_u -= 1) {
                autoB7860614_var = UnitGroupUnitFromEnd(autoB7860614_g, autoB7860614_u);
                if (autoB7860614_var == null) { break; }
                libNtve_gf_SendActorMessageToUnit(autoB7860614_var, (("Signal " + lv_sC_StringValue)));
                UnitFlashSelection(autoB7860614_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E93E930A")));
    }
}

void lib22142002_gf_C_SC_Teleport (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    bool lv_sC_AnyUnitSelected;
    unitgroup lv_sC_TeleportUnitGroup;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    playergroup auto87E9674D_g;
    int auto87E9674D_var;
    playergroup auto39DAAC84_g;
    int auto39DAAC84_var;
    unitgroup autoF7AB16C8_g;
    int autoF7AB16C8_u;
    unit autoF7AB16C8_var;
    unitgroup auto66CF2401_g;
    int auto66CF2401_u;
    unit auto66CF2401_var;
    unitgroup auto78E50E63_g;
    int auto78E50E63_u;
    unit auto78E50E63_var;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_TeleportUnitGroup = UnitGroupEmpty();
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_D6123F63");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 1, 2, EventPlayer());
    if (true) {
        lv_sC_GroupTargetPlayers = lib22142002_gf_C_PlayerGroupVerification(lp_stringCommand, 2, 2, 2, 48, EventPlayer(), false);
        if ((lv_sC_GroupTargetPlayers == null)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_64FA14CC")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        else {
            lv_sC_RespondTextTargetGroupName = lib22142002_gf_NameofPlayersinPlayerGroup(lv_sC_GroupTargetPlayers);
        }
    }

    if (true) {
        auto87E9674D_g = lv_sC_GroupTargetPlayers;
        auto87E9674D_var = -1;
        while (true) {
            auto87E9674D_var = PlayerGroupNextPlayer(auto87E9674D_g, auto87E9674D_var);
            if (auto87E9674D_var < 0) { break; }
            if ((UnitGroupCount(UnitGroupSelected(auto87E9674D_var), c_unitCountAlive) > 0)) {
                lv_sC_AnyUnitSelected = true;
            }

        }
        if ((lv_sC_AnyUnitSelected == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_737E90BB")));
            return ;
        }

    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E31CA43B")));
        UIDisplayMessage(lv_sC_GroupTargetPlayers, c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_FE9FB7EC") + lv_sC_RespondTextTargetGroupName)));
        auto39DAAC84_g = lv_sC_GroupTargetPlayers;
        auto39DAAC84_var = -1;
        while (true) {
            auto39DAAC84_var = PlayerGroupNextPlayer(auto39DAAC84_g, auto39DAAC84_var);
            if (auto39DAAC84_var < 0) { break; }
            UnitGroupAddUnitGroup(lv_sC_TeleportUnitGroup, UnitGroupSelected(auto39DAAC84_var));
        }
    }

    if (true) {
        autoF7AB16C8_g = lv_sC_TeleportUnitGroup;
        autoF7AB16C8_u = UnitGroupCount(autoF7AB16C8_g, c_unitCountAll);
        for (;; autoF7AB16C8_u -= 1) {
            autoF7AB16C8_var = UnitGroupUnitFromEnd(autoF7AB16C8_g, autoF7AB16C8_u);
            if (autoF7AB16C8_var == null) { break; }
            if ((UnitFilterMatch(autoF7AB16C8_var, EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterUser1), 0)) == true)) {
                if ((UnitGetType(autoF7AB16C8_var) != "PerditionTurretUnderground")) {
                    UnitBehaviorAdd(autoF7AB16C8_var, "MothershipCoreRecalling", autoF7AB16C8_var, 1);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_CFA057D4")));
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9ECD423E")));
            }
        }
        Wait(0.85, c_timeGame);
        auto66CF2401_g = lv_sC_TeleportUnitGroup;
        auto66CF2401_u = UnitGroupCount(auto66CF2401_g, c_unitCountAll);
        for (;; auto66CF2401_u -= 1) {
            auto66CF2401_var = UnitGroupUnitFromEnd(auto66CF2401_g, auto66CF2401_u);
            if (auto66CF2401_var == null) { break; }
            if ((UnitFilterMatch(auto66CF2401_var, EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterUser1), 0)) == true)) {
                if ((UnitGetType(auto66CF2401_var) != "PerditionTurretUnderground")) {
                    UnitSetPosition(auto66CF2401_var, CameraGetTarget(EventPlayer()), false);
                    UnitBehaviorRemove(auto66CF2401_var, "MothershipCoreRecalling", 1);
                    UnitBehaviorAdd(auto66CF2401_var, "MothershipCoreRecalled", auto66CF2401_var, 1);
                }

            }

        }
        Wait(0.85, c_timeGame);
        auto78E50E63_g = lv_sC_TeleportUnitGroup;
        auto78E50E63_u = UnitGroupCount(auto78E50E63_g, c_unitCountAll);
        for (;; auto78E50E63_u -= 1) {
            auto78E50E63_var = UnitGroupUnitFromEnd(auto78E50E63_g, auto78E50E63_u);
            if (auto78E50E63_var == null) { break; }
            if ((UnitFilterMatch(auto78E50E63_var, EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterUser1), 0)) == true)) {
                if ((UnitGetType(auto78E50E63_var) != "PerditionTurretUnderground")) {
                    UnitBehaviorRemove(auto78E50E63_var, "MothershipCoreRecalling", 1);
                }

            }

        }
    }

}

void lib22142002_gf_C_SC_Unit (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_RespondTextTargetGroupName;
    bool lv_sC_AnyUnitSelected;
    string lv_sC_CommandType;
    int lv_sC_PresetDamageTakeDeal;
    string lv_sC_RespondTextDamageTakeDeal;
    fixed lv_sC_UnitValueReal;
    int lv_sC_UnitValueInteger;
    fixed lv_sC_UnitValDuration;
    fixed lv_sC_SizeX;
    fixed lv_sC_SizeY;
    fixed lv_sC_SizeZ;
    bool lv_commandWorked;
    text lv_sCH_HelpText;
    text lv_sCH_HelpTextDamage;
    text lv_sCH_HelpTextHeight;
    text lv_sCH_HelpTextMovement;
    text lv_sCH_HelpTextWeaponSpeed;
    text lv_sCH_HelpTextRange;
    text lv_sCH_HelpTextLifeArmor;
    text lv_sCH_HelpTextShieldArmor;
    text lv_sCH_HelpTextEnergyArmor;
    text lv_sCH_HelpTextMaxLife;
    text lv_sCH_HelpTextMaxShields;
    text lv_sCH_HelpTextMaxEnergy;
    text lv_sCH_HelpTextCurrentLife;
    text lv_sCH_HelpTextCurrentShields;
    text lv_sCH_HelpTextCurrentEnergy;
    text lv_sCH_HelpTextCurrentLifePercent;
    text lv_sCH_HelpTextCurrentShieldsPercent;
    text lv_sCH_HelpTextCurrentEnergyPercent;
    text lv_sCH_HelpTextLifeRegen;
    text lv_sCH_HelpTextShieldRegen;
    text lv_sCH_HelpTextEnergyRegen;
    text lv_sCH_HelpTextKills;
    text lv_sCH_HelpTextSize;
    text lv_sCH_HelpTextVision;
    text lv_sCH_HelpTextResource;
    text lv_sCH_HelpTextRotate;

    // Automatic Variable Declarations
    string auto48984ACE_val;
    string auto70D2D562_val;
    string autoDCA22F5E_val;
    int autoC7CB67BB_val;
    unitgroup auto16BC4EBC_g;
    int auto16BC4EBC_u;
    unit auto16BC4EBC_var;
    unitgroup auto4477E641_g;
    int auto4477E641_u;
    unit auto4477E641_var;
    unitgroup auto6429823E_g;
    int auto6429823E_u;
    unit auto6429823E_var;
    unitgroup auto3615CEA1_g;
    int auto3615CEA1_u;
    unit auto3615CEA1_var;
    unitgroup autoE45547A5_g;
    int autoE45547A5_u;
    unit autoE45547A5_var;
    unitgroup auto4B2AD729_g;
    int auto4B2AD729_u;
    unit auto4B2AD729_var;
    unitgroup auto64659B5D_g;
    int auto64659B5D_u;
    unit auto64659B5D_var;
    unitgroup auto3B92E014_g;
    int auto3B92E014_u;
    unit auto3B92E014_var;
    unitgroup auto5CE72209_g;
    int auto5CE72209_u;
    unit auto5CE72209_var;
    unitgroup auto6B37857C_g;
    int auto6B37857C_u;
    unit auto6B37857C_var;
    unitgroup auto74F0B67D_g;
    int auto74F0B67D_u;
    unit auto74F0B67D_var;
    unitgroup auto2894BB14_g;
    int auto2894BB14_u;
    unit auto2894BB14_var;
    unitgroup autoA68C68AD_g;
    int autoA68C68AD_u;
    unit autoA68C68AD_var;
    unitgroup auto6BCCA99F_g;
    int auto6BCCA99F_u;
    unit auto6BCCA99F_var;
    unitgroup auto9C9A2489_g;
    int auto9C9A2489_u;
    unit auto9C9A2489_var;
    unitgroup auto2AAF6F9A_g;
    int auto2AAF6F9A_u;
    unit auto2AAF6F9A_var;
    unitgroup autoA0703F0D_g;
    int autoA0703F0D_u;
    unit autoA0703F0D_var;
    unitgroup auto36483777_g;
    int auto36483777_u;
    unit auto36483777_var;
    unitgroup autoF6244FCB_g;
    int autoF6244FCB_u;
    unit autoF6244FCB_var;
    unitgroup auto4BDB77F7_g;
    int auto4BDB77F7_u;
    unit auto4BDB77F7_var;
    unitgroup auto056E9B2E_g;
    int auto056E9B2E_u;
    unit auto056E9B2E_var;
    unitgroup autoDA1AA42E_g;
    int autoDA1AA42E_u;
    unit autoDA1AA42E_var;
    unitgroup autoDC60D362_g;
    int autoDC60D362_u;
    unit autoDC60D362_var;
    unitgroup autoA94B8337_g;
    int autoA94B8337_u;
    unit autoA94B8337_var;
    unitgroup auto6E612A8B_g;
    int auto6E612A8B_u;
    unit auto6E612A8B_var;
    unitgroup auto22D8D45C_g;
    int auto22D8D45C_u;
    unit auto22D8D45C_var;
    unitgroup auto214E6AF0_g;
    int auto214E6AF0_u;
    unit auto214E6AF0_var;

    // Variable Initialization
    lv_sC_RespondTextTargetGroupName = "";
    lv_sC_CommandType = "";
    lv_sC_PresetDamageTakeDeal = libNtve_ge_UnitDamageTakenDealt_Damage_Take;
    lv_sC_RespondTextDamageTakeDeal = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_6E7380F6");
    lv_sCH_HelpTextDamage = StringExternal("Param/Value/lib_22142002_CAE703F7");
    lv_sCH_HelpTextHeight = StringExternal("Param/Value/lib_22142002_02144CBA");
    lv_sCH_HelpTextMovement = StringExternal("Param/Value/lib_22142002_EE1696A8");
    lv_sCH_HelpTextWeaponSpeed = StringExternal("Param/Value/lib_22142002_B5CCC5E7");
    lv_sCH_HelpTextRange = StringExternal("Param/Value/lib_22142002_DB24C937");
    lv_sCH_HelpTextLifeArmor = StringExternal("Param/Value/lib_22142002_33E84574");
    lv_sCH_HelpTextShieldArmor = StringExternal("Param/Value/lib_22142002_70808CD4");
    lv_sCH_HelpTextEnergyArmor = StringExternal("Param/Value/lib_22142002_1663EC7C");
    lv_sCH_HelpTextMaxLife = StringExternal("Param/Value/lib_22142002_6161DEAB");
    lv_sCH_HelpTextMaxShields = StringExternal("Param/Value/lib_22142002_A52A2FCD");
    lv_sCH_HelpTextMaxEnergy = StringExternal("Param/Value/lib_22142002_EDB5F439");
    lv_sCH_HelpTextCurrentLife = StringExternal("Param/Value/lib_22142002_CA23E981");
    lv_sCH_HelpTextCurrentShields = StringExternal("Param/Value/lib_22142002_D17EAF73");
    lv_sCH_HelpTextCurrentEnergy = StringExternal("Param/Value/lib_22142002_4781D0A7");
    lv_sCH_HelpTextCurrentLifePercent = StringExternal("Param/Value/lib_22142002_B8046EDD");
    lv_sCH_HelpTextCurrentShieldsPercent = StringExternal("Param/Value/lib_22142002_E1A3C887");
    lv_sCH_HelpTextCurrentEnergyPercent = StringExternal("Param/Value/lib_22142002_80EA2871");
    lv_sCH_HelpTextLifeRegen = StringExternal("Param/Value/lib_22142002_E4A66557");
    lv_sCH_HelpTextShieldRegen = StringExternal("Param/Value/lib_22142002_70B46A53");
    lv_sCH_HelpTextEnergyRegen = StringExternal("Param/Value/lib_22142002_18EA3033");
    lv_sCH_HelpTextKills = StringExternal("Param/Value/lib_22142002_87AA8FC9");
    lv_sCH_HelpTextSize = StringExternal("Param/Value/lib_22142002_DE82D342");
    lv_sCH_HelpTextVision = StringExternal("Param/Value/lib_22142002_65D8964A");
    lv_sCH_HelpTextResource = StringExternal("Param/Value/lib_22142002_5354D7B6");
    lv_sCH_HelpTextRotate = StringExternal("Param/Value/lib_22142002_CBD2F477");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 3, 5, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        auto48984ACE_val = StringCase(StringWord(lp_stringCommand, 2), true);
        if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "DAMAGE", 1)) {
            lv_sC_CommandType = "Damage";
            lv_sCH_HelpText = lv_sCH_HelpTextDamage;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "HEIGHT", 1)) {
            lv_sC_CommandType = "Height";
            lv_sCH_HelpText = lv_sCH_HelpTextHeight;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MOVEMENT", 1)) {
            lv_sC_CommandType = "Movement";
            lv_sCH_HelpText = lv_sCH_HelpTextMovement;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "WEAPONSPEED", 1)) {
            lv_sC_CommandType = "Weapon Speed";
            lv_sCH_HelpText = lv_sCH_HelpTextWeaponSpeed;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "WSPEED", 1)) {
            lv_sC_CommandType = "Weapon Speed";
            lv_sCH_HelpText = lv_sCH_HelpTextWeaponSpeed;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RANGE", 2)) {
            lv_sC_CommandType = "Range";
            lv_sCH_HelpText = lv_sCH_HelpTextRange;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LIFEARMOR", 5)) {
            lv_sC_CommandType = "Life Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextLifeArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LARMOR", 2)) {
            lv_sC_CommandType = "Life Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextLifeArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHIELDARMOR", 7)) {
            lv_sC_CommandType = "Shield Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHIELDSARMOR", 8)) {
            lv_sC_CommandType = "Shield Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SARMOR", 2)) {
            lv_sC_CommandType = "Shield Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ENERGYARMOR", 7)) {
            lv_sC_CommandType = "Energy Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextEnergyArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "EARMOR", 2)) {
            lv_sC_CommandType = "Energy Armor";
            lv_sCH_HelpText = lv_sCH_HelpTextEnergyArmor;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MAXLIFE", 4)) {
            lv_sC_CommandType = "Max Life";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxLife;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MLIFE", 2)) {
            lv_sC_CommandType = "Max Life";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxLife;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MAXSHIELDS", 4)) {
            lv_sC_CommandType = "Max Shields";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxShields;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MSHIELDS", 2)) {
            lv_sC_CommandType = "Max Shields";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxShields;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MAXENERGY", 4)) {
            lv_sC_CommandType = "Max Energy";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxEnergy;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MENERGY", 2)) {
            lv_sC_CommandType = "Max Energy";
            lv_sCH_HelpText = lv_sCH_HelpTextMaxEnergy;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LIFE", 1)) {
            lv_sC_CommandType = "Current Life";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentLife;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHIELDS", 1)) {
            lv_sC_CommandType = "Current Shields";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentShields;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ENERGY", 1)) {
            lv_sC_CommandType = "Current Energy";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentEnergy;
        }
        else if (auto48984ACE_val == "LIFE%") {
            lv_sC_CommandType = "Current Life Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentLifePercent;
        }
        else if (auto48984ACE_val == "L%") {
            lv_sC_CommandType = "Current Life Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentLifePercent;
        }
        else if (auto48984ACE_val == "SHIELDS%") {
            lv_sC_CommandType = "Current Shields Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentShieldsPercent;
        }
        else if (auto48984ACE_val == "SHIELD%") {
            lv_sC_CommandType = "Current Shields Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentShieldsPercent;
        }
        else if (auto48984ACE_val == "S%") {
            lv_sC_CommandType = "Current Shields Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentShieldsPercent;
        }
        else if (auto48984ACE_val == "ENERGY%") {
            lv_sC_CommandType = "Current Energy Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentEnergyPercent;
        }
        else if (auto48984ACE_val == "E%") {
            lv_sC_CommandType = "Current Energy Percent";
            lv_sCH_HelpText = lv_sCH_HelpTextCurrentEnergyPercent;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LIFEREGENERATION", 5)) {
            lv_sC_CommandType = "Life Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextLifeRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "LREGENERATION", 2)) {
            lv_sC_CommandType = "Life Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextLifeRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHIELDREGENERATION", 7)) {
            lv_sC_CommandType = "Shield Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SHIELDSREGENERATION", 8)) {
            lv_sC_CommandType = "Shield Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SREGENERATION", 2)) {
            lv_sC_CommandType = "Shield Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextShieldRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ENERGYREGENERATION", 7)) {
            lv_sC_CommandType = "Energy Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextEnergyRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "EREGENERATION", 2)) {
            lv_sC_CommandType = "Energy Regeneration Rate";
            lv_sCH_HelpText = lv_sCH_HelpTextEnergyRegen;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "KILLS", 1)) {
            lv_sC_CommandType = "Kills";
            lv_sCH_HelpText = lv_sCH_HelpTextKills;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "SIZE", 1)) {
            lv_sC_CommandType = "Size";
            lv_sCH_HelpText = lv_sCH_HelpTextSize;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "VISION", 1)) {
            lv_sC_CommandType = "Vision";
            lv_sCH_HelpText = lv_sCH_HelpTextVision;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "RESOURCES", 2)) {
            lv_sC_CommandType = "Resource";
            lv_sCH_HelpText = lv_sCH_HelpTextResource;
        }
        else if (auto48984ACE_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ROTATE", 2)) {
            lv_sC_CommandType = "Rotate";
            lv_sCH_HelpText = lv_sCH_HelpTextVision;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_CB342A18")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        if ((lv_sC_CommandType == "Damage")) {
            auto70D2D562_val = StringCase(StringWord(lp_stringCommand, 3), true);
            if (auto70D2D562_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "TAKE", 1)) {
                lv_sC_PresetDamageTakeDeal = libNtve_ge_UnitDamageTakenDealt_Damage_Take;
                lv_sC_RespondTextDamageTakeDeal = "Take";
            }
            else if (auto70D2D562_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "DEAL", 1)) {
                lv_sC_PresetDamageTakeDeal = libNtve_ge_UnitDamageTakenDealt_Damage_Deal;
                lv_sC_RespondTextDamageTakeDeal = "Deal";
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D79080D1")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 4)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 4)) >= 0) && (StringToInt(StringWord(lp_stringCommand, 4)) <= 5001))) {
                    lv_sC_UnitValueInteger = (StringToInt(StringWord(lp_stringCommand, 4)) / 10);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C692D76B")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_00114037")));
                return ;
            }

        }

        if ((lv_sC_CommandType == "Height")) {
            if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                if ((StringToFixed(StringWord(lp_stringCommand, 3)) >= 0)) {
                    lv_sC_UnitValueReal = StringToFixed(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C0758D59")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D0DBEB41")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            if ((lib22142002_gf_StringWords(lp_stringCommand) == 4)) {
                if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 4)) == true)) {
                    if ((StringToFixed(StringWord(lp_stringCommand, 4)) >= 0)) {
                        lv_sC_UnitValDuration = StringToFixed(StringWord(lp_stringCommand, 4));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E8C785B4")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_519FE65D")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                lv_sC_UnitValDuration = 1;
            }
        }

        if ((lv_sC_CommandType == "Movement")) {
            if ((StringCase(StringWord(lp_stringCommand, 3), true) == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "RESET", 1))) {
                lv_sC_UnitValueReal = -1.0;
            }
            else {
                if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                    if (((StringToFixed(StringWord(lp_stringCommand, 3)) >= 0) && (StringToFixed(StringWord(lp_stringCommand, 3)) <= 150))) {
                        lv_sC_UnitValueReal = (StringToFixed(StringWord(lp_stringCommand, 3)) * 1.4);
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9BD0D8AE")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_A12BB7DC")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
        }

        if ((lv_sC_CommandType == "Weapon Speed")) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 3)) >= -5001) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 10000))) {
                    lv_sC_UnitValueInteger = (StringToInt(StringWord(lp_stringCommand, 3)) / 10);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_48BF8B76")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1E682F8E")));
                return ;
            }

        }

        if ((lv_sC_CommandType == "Range")) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 3)) >= -500) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 500))) {
                    lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B5C3ADFD")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_9802A126")));
                return ;
            }

        }

        if (((lv_sC_CommandType == "Life Armor") || (lv_sC_CommandType == "Shield Armor") || (lv_sC_CommandType == "Energy Armor"))) {
            if (((lv_sC_CommandType == "Life Armor") || (lv_sC_CommandType == "Shield Armor") || (lv_sC_CommandType == "Energy Armor"))) {
                if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                    if (((StringToInt(StringWord(lp_stringCommand, 3)) >= -500) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 500))) {
                        lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3F7F2034")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B482894B")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }

        }

        if (((lv_sC_CommandType == "Max Life") || (lv_sC_CommandType == "Max Shields") || (lv_sC_CommandType == "Max Energy") || (lv_sC_CommandType == "Current Life") || (lv_sC_CommandType == "Current Shields") || (lv_sC_CommandType == "Current Energy"))) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((lv_sC_CommandType == "Max Life") || (lv_sC_CommandType == "Current Life"))) {
                    if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 500000))) {
                        lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1F0FC65A")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 0) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 500000))) {
                        lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_AB5BFB2A")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_EB0FD7FB")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }

        if (((lv_sC_CommandType == "Current Life Percent") || (lv_sC_CommandType == "Current Shields Percent") || (lv_sC_CommandType == "Current Energy Percent"))) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if ((lv_sC_CommandType == "Current Life Percent")) {
                    if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 100))) {
                        lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_74D426B4")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 100))) {
                        lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_26CAC110")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D2C938BE")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }

        if (((lv_sC_CommandType == "Life Regeneration Rate") || (lv_sC_CommandType == "Shield Regeneration Rate") || (lv_sC_CommandType == "Energy Regeneration Rate"))) {
            if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                if (((FixedToInt(StringToFixed(StringWord(lp_stringCommand, 3))) >= -10001) && (FixedToInt(StringToFixed(StringWord(lp_stringCommand, 3))) <= 10001))) {
                    lv_sC_UnitValueReal = StringToFixed(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5C512C78")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_7A7D75CD")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }

        if ((lv_sC_CommandType == "Kills")) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 0) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 40000))) {
                    lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_24B6A7FC")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D923EF90")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }

        if ((lv_sC_CommandType == "Size")) {
            if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                if ((StringToFixed(StringWord(lp_stringCommand, 3)) > 0)) {
                    lv_sC_SizeX = StringToFixed(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C2A048D3")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B73BA392")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
            if ((lib22142002_gf_StringWords(lp_stringCommand) > 3)) {
                if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 4)) == true)) {
                    if ((StringToFixed(StringWord(lp_stringCommand, 4)) > 0)) {
                        lv_sC_SizeY = StringToFixed(StringWord(lp_stringCommand, 4));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_59027D36")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_85DCC52E")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
                if ((lib22142002_gf_StringWords(lp_stringCommand) > 4)) {
                    if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 5)) == true)) {
                        if ((StringToFixed(StringWord(lp_stringCommand, 5)) > 0)) {
                            lv_sC_SizeZ = StringToFixed(StringWord(lp_stringCommand, 5));
                        }
                        else {
                            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_969AE7CE")));
                            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                            return ;
                        }
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E7B5447B")));
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                        return ;
                    }
                }
                else {
                    lv_sC_SizeZ = StringToFixed(StringWord(lp_stringCommand, 3));
                }
            }
            else {
                lv_sC_SizeY = StringToFixed(StringWord(lp_stringCommand, 3));
                lv_sC_SizeZ = StringToFixed(StringWord(lp_stringCommand, 3));
            }
        }

        if ((lv_sC_CommandType == "Vision")) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 3)) >= -32) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 32))) {
                    lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_869FF107")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C090978F")));
                return ;
            }
        }

        if ((lv_sC_CommandType == "Resource")) {
            if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 3)) == true)) {
                if (((StringToInt(StringWord(lp_stringCommand, 3)) >= 1) && (StringToInt(StringWord(lp_stringCommand, 3)) <= 500000))) {
                    lv_sC_UnitValueInteger = StringToInt(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B05EB66C")));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_F7CA868F")));
                return ;
            }
        }

        if ((lv_sC_CommandType == "Rotate")) {
            if ((lib22142002_gf_StringNumberValidationReal(StringWord(lp_stringCommand, 3)) == true)) {
                if ((StringToFixed(StringWord(lp_stringCommand, 3)) >= 0)) {
                    lv_sC_UnitValueReal = StringToFixed(StringWord(lp_stringCommand, 3));
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E4FA7F91")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_584DCA1D")));
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                return ;
            }
        }

        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            autoDCA22F5E_val = lv_sC_CommandType;
            if (autoDCA22F5E_val == "Damage") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_19708C4E")));
                autoC7CB67BB_val = lv_sC_PresetDamageTakeDeal;
                if (autoC7CB67BB_val == libNtve_ge_UnitDamageTakenDealt_Damage_Deal) {
                    auto16BC4EBC_g = UnitGroupSelected(EventPlayer());
                    auto16BC4EBC_u = UnitGroupCount(auto16BC4EBC_g, c_unitCountAll);
                    for (;; auto16BC4EBC_u -= 1) {
                        auto16BC4EBC_var = UnitGroupUnitFromEnd(auto16BC4EBC_g, auto16BC4EBC_u);
                        if (auto16BC4EBC_var == null) { break; }
                        if ((UnitHasBehavior2(auto16BC4EBC_var, "DEITYMainTools") == false)) {
                            libNtve_gf_ChangeUnitDamage(auto16BC4EBC_var, libNtve_ge_UnitDamageTakenDealt_Damage_Deal, libNtve_ge_UnitDamageChangeOption_Full);
                            UnitBehaviorRemove(auto16BC4EBC_var, "DamageDeal10Minus", c_unitBehaviorCountAll);
                            UnitBehaviorRemove(auto16BC4EBC_var, "DamageDeal10Plus", c_unitBehaviorCountAll);
                            if ((lv_sC_UnitValueInteger == 0)) {
                                libNtve_gf_ChangeUnitDamage(auto16BC4EBC_var, libNtve_ge_UnitDamageTakenDealt_Damage_Deal, libNtve_ge_UnitDamageChangeOption_No);
                            }
                            else {
                                if ((lv_sC_UnitValueInteger < 10)) {
                                    UnitBehaviorAdd(auto16BC4EBC_var, "DamageDeal10Minus", auto16BC4EBC_var, (10 - lv_sC_UnitValueInteger));
                                }
                                else {
                                    if ((lv_sC_UnitValueInteger == 10)) {
                                    }
                                    else {
                                        if ((lv_sC_UnitValueInteger > 10)) {
                                            UnitBehaviorAdd(auto16BC4EBC_var, "DamageDeal10Plus", auto16BC4EBC_var, (lv_sC_UnitValueInteger - 10));
                                        }

                                    }
                                }
                            }
                            UnitFlashSelection(auto16BC4EBC_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }
                }
                else if (autoC7CB67BB_val == libNtve_ge_UnitDamageTakenDealt_Damage_Take) {
                    auto4477E641_g = UnitGroupSelected(EventPlayer());
                    auto4477E641_u = UnitGroupCount(auto4477E641_g, c_unitCountAll);
                    for (;; auto4477E641_u -= 1) {
                        auto4477E641_var = UnitGroupUnitFromEnd(auto4477E641_g, auto4477E641_u);
                        if (auto4477E641_var == null) { break; }
                        if ((UnitHasBehavior2(auto4477E641_var, "DEITYMainTools") == false)) {
                            libNtve_gf_ChangeUnitDamage(auto4477E641_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
                            UnitBehaviorRemove(auto4477E641_var, "DamageTake10Minus", c_unitBehaviorCountAll);
                            UnitBehaviorRemove(auto4477E641_var, "DamageTake10Plus", c_unitBehaviorCountAll);
                            if ((lv_sC_UnitValueInteger == 0)) {
                                libNtve_gf_ChangeUnitDamage(auto4477E641_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
                            }
                            else {
                                if ((lv_sC_UnitValueInteger < 10)) {
                                    UnitBehaviorAdd(auto4477E641_var, "DamageTake10Minus", auto4477E641_var, (10 - lv_sC_UnitValueInteger));
                                }
                                else {
                                    if ((lv_sC_UnitValueInteger == 10)) {
                                    }
                                    else {
                                        if ((lv_sC_UnitValueInteger > 10)) {
                                            UnitBehaviorAdd(auto4477E641_var, "DamageTake10Plus", auto4477E641_var, (lv_sC_UnitValueInteger - 10));
                                        }

                                    }
                                }
                            }
                            UnitFlashSelection(auto4477E641_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }
                }
                else {
                }
            }
            else if (autoDCA22F5E_val == "Height") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_9900853A")));
                auto6429823E_g = UnitGroupSelected(EventPlayer());
                auto6429823E_u = UnitGroupCount(auto6429823E_g, c_unitCountAll);
                for (;; auto6429823E_u -= 1) {
                    auto6429823E_var = UnitGroupUnitFromEnd(auto6429823E_g, auto6429823E_u);
                    if (auto6429823E_var == null) { break; }
                    if ((UnitHasBehavior2(auto6429823E_var, "DEITYMainTools") == false)) {
                        UnitSetHeight(auto6429823E_var, lv_sC_UnitValueReal, lv_sC_UnitValDuration);
                        UnitFlashSelection(auto6429823E_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Movement") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_57F5AAF4")));
                if ((lv_sC_UnitValueReal == -1.0)) {
                    auto3615CEA1_g = UnitGroupSelected(EventPlayer());
                    auto3615CEA1_u = UnitGroupCount(auto3615CEA1_g, c_unitCountAll);
                    for (;; auto3615CEA1_u -= 1) {
                        auto3615CEA1_var = UnitGroupUnitFromEnd(auto3615CEA1_g, auto3615CEA1_u);
                        if (auto3615CEA1_var == null) { break; }
                        if ((UnitHasBehavior2(auto3615CEA1_var, "DEITYMainTools") == false)) {
                            UnitResetSpeed(auto3615CEA1_var);
                            UnitFlashSelection(auto3615CEA1_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }
                }
                else {
                    autoE45547A5_g = UnitGroupSelected(EventPlayer());
                    autoE45547A5_u = UnitGroupCount(autoE45547A5_g, c_unitCountAll);
                    for (;; autoE45547A5_u -= 1) {
                        autoE45547A5_var = UnitGroupUnitFromEnd(autoE45547A5_g, autoE45547A5_u);
                        if (autoE45547A5_var == null) { break; }
                        if ((UnitHasBehavior2(autoE45547A5_var, "DEITYMainTools") == false)) {
                            UnitSetPropertyFixed(autoE45547A5_var, c_unitPropBaseMovementSpeed, lv_sC_UnitValueReal);
                            UnitFlashSelection(autoE45547A5_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }
                }
            }
            else if (autoDCA22F5E_val == "Weapon Speed") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_BBFADDC5")));
                auto4B2AD729_g = UnitGroupSelected(EventPlayer());
                auto4B2AD729_u = UnitGroupCount(auto4B2AD729_g, c_unitCountAll);
                for (;; auto4B2AD729_u -= 1) {
                    auto4B2AD729_var = UnitGroupUnitFromEnd(auto4B2AD729_g, auto4B2AD729_u);
                    if (auto4B2AD729_var == null) { break; }
                    if ((UnitHasBehavior2(auto4B2AD729_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto4B2AD729_var, "WeaponSpeed10Minus", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(auto4B2AD729_var, "WeaponSpeed10Plus", c_unitBehaviorCountAll);
                        if ((lv_sC_UnitValueInteger < 10)) {
                            UnitBehaviorAdd(auto4B2AD729_var, "WeaponSpeed10Minus", auto4B2AD729_var, (10 - lv_sC_UnitValueInteger));
                        }
                        else {
                            if ((lv_sC_UnitValueInteger == 10)) {
                            }
                            else {
                                if ((lv_sC_UnitValueInteger > 10)) {
                                    UnitBehaviorAdd(auto4B2AD729_var, "WeaponSpeed10Plus", auto4B2AD729_var, (lv_sC_UnitValueInteger - 10));
                                }

                            }
                        }
                        UnitFlashSelection(auto4B2AD729_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Range") {
                auto64659B5D_g = UnitGroupSelected(EventPlayer());
                auto64659B5D_u = UnitGroupCount(auto64659B5D_g, c_unitCountAll);
                for (;; auto64659B5D_u -= 1) {
                    auto64659B5D_var = UnitGroupUnitFromEnd(auto64659B5D_g, auto64659B5D_u);
                    if (auto64659B5D_var == null) { break; }
                    if ((UnitHasBehavior2(auto64659B5D_var, "DEITYMainTools") == false)) {
                        if ((UnitGetType(auto64659B5D_var) != "Hellion") && (UnitGetType(auto64659B5D_var) != "MercHellion") && (UnitGetType(auto64659B5D_var) != "HellionBlackOps") && (UnitGetType(auto64659B5D_var) != "LurkerBurrowed") && (UnitGetType(auto64659B5D_var) != "LurkerMPBurrowed") && (UnitGetType(auto64659B5D_var) != "LurkerStetmannBurrowed") && (UnitGetType(auto64659B5D_var) != "FlamingBetty") && (UnitGetType(auto64659B5D_var) != "FlamingBettyACGluescreenDummy") && (UnitGetType(auto64659B5D_var) != "RailgunTurretACGluescreenDummy")) {
                            lv_commandWorked = true;
                            UnitBehaviorRemove(auto64659B5D_var, "Range1Minus", c_unitBehaviorCountAll);
                            UnitBehaviorRemove(auto64659B5D_var, "Range1Plus", c_unitBehaviorCountAll);
                            if ((lv_sC_UnitValueInteger < 0)) {
                                UnitBehaviorAdd(auto64659B5D_var, "Range1Minus", auto64659B5D_var, (lv_sC_UnitValueInteger * -1));
                            }
                            else {
                                if ((lv_sC_UnitValueInteger == 0)) {
                                }
                                else {
                                    if ((lv_sC_UnitValueInteger > 0)) {
                                        UnitBehaviorAdd(auto64659B5D_var, "Range1Plus", auto64659B5D_var, lv_sC_UnitValueInteger);
                                    }

                                }
                            }
                            UnitFlashSelection(auto64659B5D_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }
                        else {
                            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6B755904")));
                        }
                    }

                }
                if ((lv_commandWorked == true)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D93295EC")));
                }

            }
            else if (autoDCA22F5E_val == "Life Armor") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E5EDF393")));
                auto3B92E014_g = UnitGroupSelected(EventPlayer());
                auto3B92E014_u = UnitGroupCount(auto3B92E014_g, c_unitCountAll);
                for (;; auto3B92E014_u -= 1) {
                    auto3B92E014_var = UnitGroupUnitFromEnd(auto3B92E014_g, auto3B92E014_u);
                    if (auto3B92E014_var == null) { break; }
                    if ((UnitHasBehavior2(auto3B92E014_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto3B92E014_var, "LifeArmor1Minus", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(auto3B92E014_var, "LifeArmor1Plus", c_unitBehaviorCountAll);
                        if ((lv_sC_UnitValueInteger < FixedToInt(UnitGetPropertyFixed(auto3B92E014_var, c_unitPropLifeArmor, c_unitPropNormal)))) {
                            UnitBehaviorAdd(auto3B92E014_var, "LifeArmor1Minus", auto3B92E014_var, (FixedToInt(UnitGetPropertyFixed(auto3B92E014_var, c_unitPropLifeArmor, c_unitPropNormal)) - lv_sC_UnitValueInteger));
                        }
                        else {
                            if ((lv_sC_UnitValueInteger == FixedToInt(UnitGetPropertyFixed(auto3B92E014_var, c_unitPropLifeArmor, c_unitPropNormal)))) {
                            }
                            else {
                                if ((lv_sC_UnitValueInteger > FixedToInt(UnitGetPropertyFixed(auto3B92E014_var, c_unitPropLifeArmor, c_unitPropNormal)))) {
                                    UnitBehaviorAdd(auto3B92E014_var, "LifeArmor1Plus", auto3B92E014_var, (lv_sC_UnitValueInteger - FixedToInt(UnitGetPropertyFixed(auto3B92E014_var, c_unitPropLifeArmor, c_unitPropNormal))));
                                }

                            }
                        }
                        UnitFlashSelection(auto3B92E014_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Shield Armor") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E08249FA")));
                auto5CE72209_g = UnitGroupSelected(EventPlayer());
                auto5CE72209_u = UnitGroupCount(auto5CE72209_g, c_unitCountAll);
                for (;; auto5CE72209_u -= 1) {
                    auto5CE72209_var = UnitGroupUnitFromEnd(auto5CE72209_g, auto5CE72209_u);
                    if (auto5CE72209_var == null) { break; }
                    if ((UnitHasBehavior2(auto5CE72209_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto5CE72209_var, "ShieldArmor1Minus", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(auto5CE72209_var, "ShieldArmor1Plus", c_unitBehaviorCountAll);
                        if ((lv_sC_UnitValueInteger < FixedToInt(UnitGetPropertyFixed(auto5CE72209_var, c_unitPropShieldArmor, c_unitPropNormal)))) {
                            UnitBehaviorAdd(auto5CE72209_var, "ShieldArmor1Minus", auto5CE72209_var, (FixedToInt(UnitGetPropertyFixed(auto5CE72209_var, c_unitPropShieldArmor, c_unitPropNormal)) - lv_sC_UnitValueInteger));
                        }
                        else {
                            if ((lv_sC_UnitValueInteger == FixedToInt(UnitGetPropertyFixed(auto5CE72209_var, c_unitPropShieldArmor, c_unitPropNormal)))) {
                            }
                            else {
                                if ((lv_sC_UnitValueInteger > FixedToInt(UnitGetPropertyFixed(auto5CE72209_var, c_unitPropShieldArmor, c_unitPropNormal)))) {
                                    UnitBehaviorAdd(auto5CE72209_var, "ShieldArmor1Plus", auto5CE72209_var, (lv_sC_UnitValueInteger - FixedToInt(UnitGetPropertyFixed(auto5CE72209_var, c_unitPropShieldArmor, c_unitPropNormal))));
                                }

                            }
                        }
                        UnitFlashSelection(auto5CE72209_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Energy Armor") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_991655DE")));
                auto6B37857C_g = UnitGroupSelected(EventPlayer());
                auto6B37857C_u = UnitGroupCount(auto6B37857C_g, c_unitCountAll);
                for (;; auto6B37857C_u -= 1) {
                    auto6B37857C_var = UnitGroupUnitFromEnd(auto6B37857C_g, auto6B37857C_u);
                    if (auto6B37857C_var == null) { break; }
                    if ((UnitHasBehavior2(auto6B37857C_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto6B37857C_var, "EnergyArmor1Minus", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(auto6B37857C_var, "EnergyArmor1Plus", c_unitBehaviorCountAll);
                        if ((lv_sC_UnitValueInteger < FixedToInt(UnitGetPropertyFixed(auto6B37857C_var, c_unitPropShieldArmor, c_unitPropNormal)))) {
                            UnitBehaviorAdd(auto6B37857C_var, "EnergyArmor1Minus", auto6B37857C_var, (FixedToInt(UnitGetPropertyFixed(auto6B37857C_var, c_unitPropEnergyArmor, c_unitPropNormal)) - lv_sC_UnitValueInteger));
                        }
                        else {
                            if ((lv_sC_UnitValueInteger == FixedToInt(UnitGetPropertyFixed(auto6B37857C_var, c_unitPropEnergyArmor, c_unitPropNormal)))) {
                            }
                            else {
                                if ((lv_sC_UnitValueInteger > FixedToInt(UnitGetPropertyFixed(auto6B37857C_var, c_unitPropEnergyArmor, c_unitPropNormal)))) {
                                    UnitBehaviorAdd(auto6B37857C_var, "EnergyArmor1Plus", auto6B37857C_var, (lv_sC_UnitValueInteger - FixedToInt(UnitGetPropertyFixed(auto6B37857C_var, c_unitPropEnergyArmor, c_unitPropNormal))));
                                }

                            }
                        }
                        UnitFlashSelection(auto6B37857C_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Max Life") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2DB03827")));
                auto74F0B67D_g = UnitGroupSelected(EventPlayer());
                auto74F0B67D_u = UnitGroupCount(auto74F0B67D_g, c_unitCountAll);
                for (;; auto74F0B67D_u -= 1) {
                    auto74F0B67D_var = UnitGroupUnitFromEnd(auto74F0B67D_g, auto74F0B67D_u);
                    if (auto74F0B67D_var == null) { break; }
                    if ((UnitHasBehavior2(auto74F0B67D_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto74F0B67D_var, c_unitPropLifeMax, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto74F0B67D_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Max Shields") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_24D642F9")));
                auto2894BB14_g = UnitGroupSelected(EventPlayer());
                auto2894BB14_u = UnitGroupCount(auto2894BB14_g, c_unitCountAll);
                for (;; auto2894BB14_u -= 1) {
                    auto2894BB14_var = UnitGroupUnitFromEnd(auto2894BB14_g, auto2894BB14_u);
                    if (auto2894BB14_var == null) { break; }
                    if ((UnitHasBehavior2(auto2894BB14_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto2894BB14_var, c_unitPropShieldsMax, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto2894BB14_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Max Energy") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5AB989C3")));
                autoA68C68AD_g = UnitGroupSelected(EventPlayer());
                autoA68C68AD_u = UnitGroupCount(autoA68C68AD_g, c_unitCountAll);
                for (;; autoA68C68AD_u -= 1) {
                    autoA68C68AD_var = UnitGroupUnitFromEnd(autoA68C68AD_g, autoA68C68AD_u);
                    if (autoA68C68AD_var == null) { break; }
                    if ((UnitHasBehavior2(autoA68C68AD_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(autoA68C68AD_var, c_unitPropEnergyMax, lv_sC_UnitValueInteger);
                        UnitFlashSelection(autoA68C68AD_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Life") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_11B33A47")));
                auto6BCCA99F_g = UnitGroupSelected(EventPlayer());
                auto6BCCA99F_u = UnitGroupCount(auto6BCCA99F_g, c_unitCountAll);
                for (;; auto6BCCA99F_u -= 1) {
                    auto6BCCA99F_var = UnitGroupUnitFromEnd(auto6BCCA99F_g, auto6BCCA99F_u);
                    if (auto6BCCA99F_var == null) { break; }
                    if ((UnitHasBehavior2(auto6BCCA99F_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto6BCCA99F_var, c_unitPropLife, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto6BCCA99F_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Shields") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C599F772")));
                auto9C9A2489_g = UnitGroupSelected(EventPlayer());
                auto9C9A2489_u = UnitGroupCount(auto9C9A2489_g, c_unitCountAll);
                for (;; auto9C9A2489_u -= 1) {
                    auto9C9A2489_var = UnitGroupUnitFromEnd(auto9C9A2489_g, auto9C9A2489_u);
                    if (auto9C9A2489_var == null) { break; }
                    if ((UnitHasBehavior2(auto9C9A2489_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto9C9A2489_var, c_unitPropShields, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto9C9A2489_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Energy") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4B693F4B")));
                auto2AAF6F9A_g = UnitGroupSelected(EventPlayer());
                auto2AAF6F9A_u = UnitGroupCount(auto2AAF6F9A_g, c_unitCountAll);
                for (;; auto2AAF6F9A_u -= 1) {
                    auto2AAF6F9A_var = UnitGroupUnitFromEnd(auto2AAF6F9A_g, auto2AAF6F9A_u);
                    if (auto2AAF6F9A_var == null) { break; }
                    if ((UnitHasBehavior2(auto2AAF6F9A_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto2AAF6F9A_var, c_unitPropEnergy, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto2AAF6F9A_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Life Percent") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CF14A199")));
                autoA0703F0D_g = UnitGroupSelected(EventPlayer());
                autoA0703F0D_u = UnitGroupCount(autoA0703F0D_g, c_unitCountAll);
                for (;; autoA0703F0D_u -= 1) {
                    autoA0703F0D_var = UnitGroupUnitFromEnd(autoA0703F0D_g, autoA0703F0D_u);
                    if (autoA0703F0D_var == null) { break; }
                    if ((UnitHasBehavior2(autoA0703F0D_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(autoA0703F0D_var, c_unitPropLifePercent, lv_sC_UnitValueInteger);
                        UnitFlashSelection(autoA0703F0D_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Shields Percent") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_21D1DAE2")));
                auto36483777_g = UnitGroupSelected(EventPlayer());
                auto36483777_u = UnitGroupCount(auto36483777_g, c_unitCountAll);
                for (;; auto36483777_u -= 1) {
                    auto36483777_var = UnitGroupUnitFromEnd(auto36483777_g, auto36483777_u);
                    if (auto36483777_var == null) { break; }
                    if ((UnitHasBehavior2(auto36483777_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto36483777_var, c_unitPropShieldsPercent, lv_sC_UnitValueInteger);
                        UnitFlashSelection(auto36483777_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Current Energy Percent") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_777A822A")));
                autoF6244FCB_g = UnitGroupSelected(EventPlayer());
                autoF6244FCB_u = UnitGroupCount(autoF6244FCB_g, c_unitCountAll);
                for (;; autoF6244FCB_u -= 1) {
                    autoF6244FCB_var = UnitGroupUnitFromEnd(autoF6244FCB_g, autoF6244FCB_u);
                    if (autoF6244FCB_var == null) { break; }
                    if ((UnitHasBehavior2(autoF6244FCB_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(autoF6244FCB_var, c_unitPropEnergyPercent, lv_sC_UnitValueInteger);
                        UnitFlashSelection(autoF6244FCB_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Life Regeneration Rate") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7FB83EBB")));
                auto4BDB77F7_g = UnitGroupSelected(EventPlayer());
                auto4BDB77F7_u = UnitGroupCount(auto4BDB77F7_g, c_unitCountAll);
                for (;; auto4BDB77F7_u -= 1) {
                    auto4BDB77F7_var = UnitGroupUnitFromEnd(auto4BDB77F7_g, auto4BDB77F7_u);
                    if (auto4BDB77F7_var == null) { break; }
                    if ((UnitHasBehavior2(auto4BDB77F7_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto4BDB77F7_var, c_unitPropLifeRegen, lv_sC_UnitValueReal);
                        UnitFlashSelection(auto4BDB77F7_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Shield Regeneration Rate") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B2DB59EB")));
                auto056E9B2E_g = UnitGroupSelected(EventPlayer());
                auto056E9B2E_u = UnitGroupCount(auto056E9B2E_g, c_unitCountAll);
                for (;; auto056E9B2E_u -= 1) {
                    auto056E9B2E_var = UnitGroupUnitFromEnd(auto056E9B2E_g, auto056E9B2E_u);
                    if (auto056E9B2E_var == null) { break; }
                    if ((UnitHasBehavior2(auto056E9B2E_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(auto056E9B2E_var, c_unitPropShieldsRegen, lv_sC_UnitValueReal);
                        UnitFlashSelection(auto056E9B2E_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Energy Regeneration Rate") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DB3A1CA1")));
                autoDA1AA42E_g = UnitGroupSelected(EventPlayer());
                autoDA1AA42E_u = UnitGroupCount(autoDA1AA42E_g, c_unitCountAll);
                for (;; autoDA1AA42E_u -= 1) {
                    autoDA1AA42E_var = UnitGroupUnitFromEnd(autoDA1AA42E_g, autoDA1AA42E_u);
                    if (autoDA1AA42E_var == null) { break; }
                    if ((UnitHasBehavior2(autoDA1AA42E_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(autoDA1AA42E_var, c_unitPropEnergyRegen, lv_sC_UnitValueReal);
                        UnitFlashSelection(autoDA1AA42E_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Kills") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6117D051")));
                autoDC60D362_g = UnitGroupSelected(EventPlayer());
                autoDC60D362_u = UnitGroupCount(autoDC60D362_g, c_unitCountAll);
                for (;; autoDC60D362_u -= 1) {
                    autoDC60D362_var = UnitGroupUnitFromEnd(autoDC60D362_g, autoDC60D362_u);
                    if (autoDC60D362_var == null) { break; }
                    if ((UnitHasBehavior2(autoDC60D362_var, "DEITYMainTools") == false)) {
                        UnitSetPropertyFixed(autoDC60D362_var, c_unitPropKills, lv_sC_UnitValueInteger);
                        UnitFlashSelection(autoDC60D362_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Size") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6D00BE23")));
                autoA94B8337_g = UnitGroupSelected(EventPlayer());
                autoA94B8337_u = UnitGroupCount(autoA94B8337_g, c_unitCountAll);
                for (;; autoA94B8337_u -= 1) {
                    autoA94B8337_var = UnitGroupUnitFromEnd(autoA94B8337_g, autoA94B8337_u);
                    if (autoA94B8337_var == null) { break; }
                    if ((UnitHasBehavior2(autoA94B8337_var, "DEITYMainTools") == false)) {
                        if ((UnitGetType(autoA94B8337_var) != "ColossusTaldarimACGluescreenDummy") && (UnitGetType(autoA94B8337_var) != "Colossus") && (UnitGetType(autoA94B8337_var) != "ColossusACGluescreenDummy") && (UnitGetType(autoA94B8337_var) != "ColossusPurifierACGluescreenDummy") && (UnitGetType(autoA94B8337_var) != "ColossusPurifier") && (UnitGetType(autoA94B8337_var) != "ColossusFenixACGluescreenDummy") && (UnitGetType(autoA94B8337_var) != "ColossusTaldarim")) {
                            libNtve_gf_SendActorMessageToUnit(autoA94B8337_var, (("SetScale " + FixedToString(lv_sC_SizeX, c_fixedPrecisionAny) + "," + FixedToString(lv_sC_SizeY, c_fixedPrecisionAny) + "," + FixedToString(lv_sC_SizeZ, c_fixedPrecisionAny))));
                            UnitFlashSelection(autoA94B8337_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }
                        else {
                            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3768C924")));
                        }
                    }

                }
            }
            else if (autoDCA22F5E_val == "Vision") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3FF0B9EE")));
                auto6E612A8B_g = UnitGroupSelected(EventPlayer());
                auto6E612A8B_u = UnitGroupCount(auto6E612A8B_g, c_unitCountAll);
                for (;; auto6E612A8B_u -= 1) {
                    auto6E612A8B_var = UnitGroupUnitFromEnd(auto6E612A8B_g, auto6E612A8B_u);
                    if (auto6E612A8B_var == null) { break; }
                    if ((UnitHasBehavior2(auto6E612A8B_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto6E612A8B_var, "Vision1Minus", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(auto6E612A8B_var, "Vision1Plus", c_unitBehaviorCountAll);
                        if ((lv_sC_UnitValueInteger < 0)) {
                            UnitBehaviorAdd(auto6E612A8B_var, "Vision1Minus", auto6E612A8B_var, (lv_sC_UnitValueInteger * -1));
                        }
                        else {
                            if ((lv_sC_UnitValueInteger == 0)) {
                            }
                            else {
                                if ((lv_sC_UnitValueInteger > 0)) {
                                    UnitBehaviorAdd(auto6E612A8B_var, "Vision1Plus", auto6E612A8B_var, lv_sC_UnitValueInteger);
                                }

                            }
                        }
                        UnitFlashSelection(auto6E612A8B_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (autoDCA22F5E_val == "Resource") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1B31AFA7")));
                auto22D8D45C_g = UnitGroupSelected(EventPlayer());
                auto22D8D45C_u = UnitGroupCount(auto22D8D45C_g, c_unitCountAll);
                for (;; auto22D8D45C_u -= 1) {
                    auto22D8D45C_var = UnitGroupUnitFromEnd(auto22D8D45C_g, auto22D8D45C_u);
                    if (auto22D8D45C_var == null) { break; }
                    if ((UnitHasBehavior2(auto22D8D45C_var, "DEITYMainTools") == false)) {
                        if (((UnitFilterMatch(auto22D8D45C_var, 0, UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0)) == true) || (UnitFilterMatch(auto22D8D45C_var, 0, UnitFilter((1 << c_targetFilterRawResource), 0, 0, 0)) == true))) {
                            UnitSetPropertyFixed(auto22D8D45C_var, c_unitPropResources, lv_sC_UnitValueInteger);
                            UnitFlashSelection(auto22D8D45C_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }

                }
            }
            else if (autoDCA22F5E_val == "Rotate") {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_846BC058")));
                auto214E6AF0_g = UnitGroupSelected(EventPlayer());
                auto214E6AF0_u = UnitGroupCount(auto214E6AF0_g, c_unitCountAll);
                for (;; auto214E6AF0_u -= 1) {
                    auto214E6AF0_var = UnitGroupUnitFromEnd(auto214E6AF0_g, auto214E6AF0_u);
                    if (auto214E6AF0_var == null) { break; }
                    if ((UnitHasBehavior2(auto214E6AF0_var, "DEITYMainTools") == false)) {
                        UnitSetFacing(auto214E6AF0_var, lv_sC_UnitValueReal, 0.0);
                        UnitFlashSelection(auto214E6AF0_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else {
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E501305F")));
    }
}

void lib22142002_gf_C_SC_DeleteProtectionToggle (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_RespondTextOnOffOption;
    string lv_sC_RespondTextTargetGroupName;
    bool lv_sC_AnyUnitSelected;
    bool lv_sCH_HelpDisplayed;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto459DAE14_val;
    string auto2D336DDE_val;
    unitgroup auto192B4C09_g;
    int auto192B4C09_u;
    unit auto192B4C09_var;
    unitgroup auto20181F72_g;
    int auto20181F72_u;
    unit auto20181F72_var;

    // Variable Initialization
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_RespondTextTargetGroupName = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_67C268C0");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 2, EventPlayer());
    auto459DAE14_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto459DAE14_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ON", 2)) {
        lv_sC_RespondTextOnOffOption = "On";
    }
    else if (auto459DAE14_val == "+") {
        lv_sC_RespondTextOnOffOption = "On";
    }
    else if (auto459DAE14_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "OFF", 2)) {
        lv_sC_RespondTextOnOffOption = "Off";
    }
    else if (auto459DAE14_val == "-") {
        lv_sC_RespondTextOnOffOption = "Off";
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_47DC7DDB")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
        lv_sC_AnyUnitSelected = true;
    }

    if ((lv_sC_AnyUnitSelected == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_21107FF9")));
        return ;
    }

    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_752B387B")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_D431BFFA") + StringToText(lv_sC_RespondTextOnOffOption) + StringExternal("Param/Value/lib_22142002_39684174"))));
        auto2D336DDE_val = lv_sC_RespondTextOnOffOption;
        if (auto2D336DDE_val == "On") {
            UnitGroupAddUnitGroup(lib22142002_gv_c_DeleteProtectedGroup, UnitGroupSelected(EventPlayer()));
            auto192B4C09_g = UnitGroupSelected(EventPlayer());
            auto192B4C09_u = UnitGroupCount(auto192B4C09_g, c_unitCountAll);
            for (;; auto192B4C09_u -= 1) {
                auto192B4C09_var = UnitGroupUnitFromEnd(auto192B4C09_g, auto192B4C09_u);
                if (auto192B4C09_var == null) { break; }
                UnitFlashSelection(auto192B4C09_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
            }
        }
        else if (auto2D336DDE_val == "Off") {
            UnitGroupRemoveUnitGroup(lib22142002_gv_c_DeleteProtectedGroup, UnitGroupSelected(EventPlayer()));
            auto20181F72_g = UnitGroupSelected(EventPlayer());
            auto20181F72_u = UnitGroupCount(auto20181F72_g, c_unitCountAll);
            for (;; auto20181F72_u -= 1) {
                auto20181F72_var = UnitGroupUnitFromEnd(auto20181F72_g, auto20181F72_u);
                if (auto20181F72_var == null) { break; }
                UnitFlashSelection(auto20181F72_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
            }
        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_KillDelete (string lp_stringCommand) {
    // Automatic Variable Declarations
    unitgroup auto88280B7B_g;
    int auto88280B7B_u;
    unit auto88280B7B_var;
    unitgroup auto4DE41ECF_g;
    int auto4DE41ECF_u;
    unit auto4DE41ECF_var;

    // Implementation
    TriggerEnable(lib22142002_gt_Bounty_Reward, false);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B101F6BF")));
    auto88280B7B_g = UnitGroupSelected(EventPlayer());
    auto88280B7B_u = UnitGroupCount(auto88280B7B_g, c_unitCountAll);
    for (;; auto88280B7B_u -= 1) {
        auto88280B7B_var = UnitGroupUnitFromEnd(auto88280B7B_g, auto88280B7B_u);
        if (auto88280B7B_var == null) { break; }
        if ((UnitGroupHasUnit(lib22142002_gv_c_DeleteProtectedGroup, auto88280B7B_var) == false)) {
            auto4DE41ECF_g = UnitGroupSelected(EventPlayer());
            auto4DE41ECF_u = UnitGroupCount(auto4DE41ECF_g, c_unitCountAll);
            for (;; auto4DE41ECF_u -= 1) {
                auto4DE41ECF_var = UnitGroupUnitFromEnd(auto4DE41ECF_g, auto4DE41ECF_u);
                if (auto4DE41ECF_var == null) { break; }
                if ((UnitHasBehavior2(auto4DE41ECF_var, "DEITYMainTools") == false)) {
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, auto4DE41ECF_var);
                    UnitBehaviorRemove(auto4DE41ECF_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(auto4DE41ECF_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, auto4DE41ECF_var);
                    UnitKill(auto4DE41ECF_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                    UnitBehaviorRemove(auto4DE41ECF_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(auto4DE41ECF_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, auto4DE41ECF_var);
                    UnitKill(auto4DE41ECF_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_89987E9E")));
                }
            }
        }

    }
    Wait(0.001, c_timeGame);
    TriggerEnable(lib22142002_gt_Bounty_Reward, true);
}

void lib22142002_gf_C_SC_Remove (string lp_stringCommand) {
    // Automatic Variable Declarations
    unitgroup auto91713E7E_g;
    int auto91713E7E_u;
    unit auto91713E7E_var;
    unitgroup autoD2BB2B4F_g;
    int autoD2BB2B4F_u;
    unit autoD2BB2B4F_var;

    // Implementation
    TriggerEnable(lib22142002_gt_Bounty_Reward, false);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_49C6F2F5")));
    auto91713E7E_g = UnitGroupSelected(EventPlayer());
    auto91713E7E_u = UnitGroupCount(auto91713E7E_g, c_unitCountAll);
    for (;; auto91713E7E_u -= 1) {
        auto91713E7E_var = UnitGroupUnitFromEnd(auto91713E7E_g, auto91713E7E_u);
        if (auto91713E7E_var == null) { break; }
        if ((UnitGroupHasUnit(lib22142002_gv_c_DeleteProtectedGroup, auto91713E7E_var) == false)) {
            autoD2BB2B4F_g = UnitGroupSelected(EventPlayer());
            autoD2BB2B4F_u = UnitGroupCount(autoD2BB2B4F_g, c_unitCountAll);
            for (;; autoD2BB2B4F_u -= 1) {
                autoD2BB2B4F_var = UnitGroupUnitFromEnd(autoD2BB2B4F_g, autoD2BB2B4F_u);
                if (autoD2BB2B4F_var == null) { break; }
                if ((UnitHasBehavior2(autoD2BB2B4F_var, "DEITYMainTools") == false)) {
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD2BB2B4F_var);
                    UnitBehaviorRemove(autoD2BB2B4F_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(autoD2BB2B4F_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD2BB2B4F_var);
                    UnitRemove(autoD2BB2B4F_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                    UnitBehaviorRemove(autoD2BB2B4F_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(autoD2BB2B4F_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD2BB2B4F_var);
                    UnitRemove(autoD2BB2B4F_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D413BDD1")));
                }
            }
        }

    }
    Wait(0.001, c_timeGame);
    TriggerEnable(lib22142002_gt_Bounty_Reward, true);
}

void lib22142002_gf_C_SC_Duplicate (string lp_stringCommand) {
    // Variable Declarations
    unit lv_cargoU;
    fixed lv_periodicWait;
    int lv_periodicWaitTimeCounter;

    // Automatic Variable Declarations
    unitgroup autoFD78A265_g;
    int autoFD78A265_u;
    unit autoFD78A265_var;
    unitgroup auto85A933BE_g;
    int auto85A933BE_u;

    // Variable Initialization

    // Implementation
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E278940E")));
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 40)) {
    }
    else {
        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 80)) {
            lv_periodicWait = 0.0001;
        }
        else {
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 250)) {
                lv_periodicWait = 0.0005;
            }
            else {
                if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 385)) {
                    lv_periodicWait = 0.01;
                }
                else {
                    lv_periodicWait = 0.1;
                }
            }
        }
    }
    autoFD78A265_g = UnitGroupSelected(EventPlayer());
    autoFD78A265_u = UnitGroupCount(autoFD78A265_g, c_unitCountAll);
    for (;; autoFD78A265_u -= 1) {
        autoFD78A265_var = UnitGroupUnitFromEnd(autoFD78A265_g, autoFD78A265_u);
        if (autoFD78A265_var == null) { break; }
        if ((UnitHasBehavior2(autoFD78A265_var, "DEITYMainTools") == false)) {
            UnitCreate(1, UnitGetType(autoFD78A265_var), 0, UnitGetOwner(autoFD78A265_var), UnitGetPosition(autoFD78A265_var), libNtve_gf_RandomAngle());
            lv_periodicWaitTimeCounter += 1;
            UnitBehaviorAdd(UnitLastCreated(), lib22142002_gf_UnitCreationSkinCheck(autoFD78A265_var), UnitLastCreated(), 1);
            UnitFlashSelection(UnitLastCreated(), lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            if ((UnitCargoValue(autoFD78A265_var, c_unitCargoUnitCount) > 0)) {
                auto85A933BE_g = UnitCargoGroup(autoFD78A265_var);
                auto85A933BE_u = UnitGroupCount(auto85A933BE_g, c_unitCountAll);
                for (;; auto85A933BE_u -= 1) {
                    lv_cargoU = UnitGroupUnitFromEnd(auto85A933BE_g, auto85A933BE_u);
                    if (lv_cargoU == null) { break; }
                    UnitCargoCreate(UnitLastCreated(), UnitGetType(lv_cargoU), 1);
                    lv_periodicWaitTimeCounter += 1;
                }
            }

            if ((lv_periodicWaitTimeCounter >= 10)) {
                lv_periodicWaitTimeCounter = 0;
                Wait(lv_periodicWait, c_timeReal);
            }

        }
        else {
            UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaError);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2AE13543")));
        }
    }
}

void lib22142002_gf_C_SC_Behavior (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    string lv_sC_RespondTextTargetGroupName;
    string lv_sC_CommandType;
    int lv_sC_BehaviorWord;
    string lv_sC_Behavior;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto4562FA0A_val;
    string autoC350360C_val;
    string auto173AD350_val;
    unitgroup autoD8755C46_g;
    int autoD8755C46_u;
    unit autoD8755C46_var;
    unitgroup auto0978BC79_g;
    int auto0978BC79_u;
    unit auto0978BC79_var;
    unitgroup auto92326B9F_g;
    int auto92326B9F_u;
    unit auto92326B9F_var;

    // Variable Initialization
    lv_sC_RespondTextTargetGroupName = "";
    lv_sC_CommandType = "";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_17781548");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 3, EventPlayer());
    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0)) {
        if ((lib22142002_gf_StringWords(lp_stringCommand) == 1)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_7570DDCE")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        else {
            if ((lib22142002_gf_StringWords(lp_stringCommand) == 3)) {
                lv_sC_BehaviorWord = 3;
                auto4562FA0A_val = StringCase(StringWord(lp_stringCommand, 2), true);
                if (auto4562FA0A_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "REMOVE", 1)) {
                    lv_sC_CommandType = "Remove";
                }
                else if (auto4562FA0A_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "ADD", 1)) {
                    lv_sC_CommandType = "Add";
                }
                else if (auto4562FA0A_val == "-") {
                    lv_sC_CommandType = "Remove";
                }
                else if (auto4562FA0A_val == "+") {
                    lv_sC_CommandType = "Add";
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_7C382DFB")));
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
                    return ;
                }
            }
            else {
                lv_sC_BehaviorWord = 2;
                lv_sC_CommandType = "Auto";
            }
        }
        autoC350360C_val = StringCase(StringWord(lp_stringCommand, lv_sC_BehaviorWord), true);
        if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "ENERGYARMOR", 2)) {
            lv_sC_Behavior = "EnergyArmour";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "EARMOR", 2)) {
            lv_sC_Behavior = "EnergyArmour";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "PYLONPOWER", 2)) {
            lv_sC_Behavior = "PowerSource";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "PPOWER", 2)) {
            lv_sC_Behavior = "PowerSource";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CRITTERMOVE", 2)) {
            lv_sC_Behavior = "CritterMove";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CMOVE", 2)) {
            lv_sC_Behavior = "CritterMove";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CRITTERFLEE", 2)) {
            lv_sC_Behavior = "CritterFlee";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CFLEE", 2)) {
            lv_sC_Behavior = "CritterFlee";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CRITTEREXPLODE", 2)) {
            lv_sC_Behavior = "CritterExplode";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "CEXPLODE", 2)) {
            lv_sC_Behavior = "CritterExplode";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "INVULNERABILITY", 2)) {
            lv_sC_Behavior = "DEITYInvulnerable";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "INVULNERABLE", 2)) {
            lv_sC_Behavior = "DEITYInvulnerable";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "UNRADARABILITY", 2)) {
            lv_sC_Behavior = "DEITYUnradarable";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "UNRADARABLE", 2)) {
            lv_sC_Behavior = "DEITYUnradarable";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "NOCOLLISION", 3)) {
            lv_sC_Behavior = "DEITYNoCollision";
        }
        else if (autoC350360C_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, lv_sC_BehaviorWord), "NCOLLISION", 2)) {
            lv_sC_Behavior = "DEITYNoCollision";
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_DF5E4539")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
        if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_07AE46E7")));
            auto173AD350_val = lv_sC_CommandType;
            if (auto173AD350_val == "Add") {
                autoD8755C46_g = UnitGroupSelected(EventPlayer());
                autoD8755C46_u = UnitGroupCount(autoD8755C46_g, c_unitCountAll);
                for (;; autoD8755C46_u -= 1) {
                    autoD8755C46_var = UnitGroupUnitFromEnd(autoD8755C46_g, autoD8755C46_u);
                    if (autoD8755C46_var == null) { break; }
                    if ((UnitHasBehavior2(autoD8755C46_var, "DEITYMainTools") == false)) {
                        if ((UnitHasBehavior2(autoD8755C46_var, lv_sC_Behavior) == false) && (lib22142002_gf_C_SC_Behavior_VariantChecker(autoD8755C46_var, lv_sC_Behavior) == false)) {
                            UnitBehaviorAdd(autoD8755C46_var, lv_sC_Behavior, autoD8755C46_var, 1);
                            UnitFlashSelection(autoD8755C46_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }

                    }

                }
            }
            else if (auto173AD350_val == "Remove") {
                auto0978BC79_g = UnitGroupSelected(EventPlayer());
                auto0978BC79_u = UnitGroupCount(auto0978BC79_g, c_unitCountAll);
                for (;; auto0978BC79_u -= 1) {
                    auto0978BC79_var = UnitGroupUnitFromEnd(auto0978BC79_g, auto0978BC79_u);
                    if (auto0978BC79_var == null) { break; }
                    if ((UnitHasBehavior2(auto0978BC79_var, "DEITYMainTools") == false)) {
                        UnitBehaviorRemove(auto0978BC79_var, lv_sC_Behavior, 1);
                        lib22142002_gf_C_SC_Behavior_VariantRemover(auto0978BC79_var, lv_sC_Behavior);
                        UnitFlashSelection(auto0978BC79_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                    }

                }
            }
            else if (auto173AD350_val == "Auto") {
                auto92326B9F_g = UnitGroupSelected(EventPlayer());
                auto92326B9F_u = UnitGroupCount(auto92326B9F_g, c_unitCountAll);
                for (;; auto92326B9F_u -= 1) {
                    auto92326B9F_var = UnitGroupUnitFromEnd(auto92326B9F_g, auto92326B9F_u);
                    if (auto92326B9F_var == null) { break; }
                    if ((UnitHasBehavior2(auto92326B9F_var, "DEITYMainTools") == false)) {
                        if ((UnitHasBehavior2(auto92326B9F_var, lv_sC_Behavior) == false) && (lib22142002_gf_C_SC_Behavior_VariantChecker(auto92326B9F_var, lv_sC_Behavior) == false)) {
                            UnitBehaviorAdd(auto92326B9F_var, lv_sC_Behavior, auto92326B9F_var, 1);
                            UnitFlashSelection(auto92326B9F_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }
                        else {
                            UnitBehaviorRemove(auto92326B9F_var, lv_sC_Behavior, 1);
                            lib22142002_gf_C_SC_Behavior_VariantRemover(auto92326B9F_var, lv_sC_Behavior);
                            UnitFlashSelection(auto92326B9F_var, lib22142002_gv_c_DEITY_ModificationFlashDuration);
                        }
                    }

                }
            }
            else {
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C6B012BA")));
    }
}

void lib22142002_gf_C_SC_Consequences (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    text lv_sC_RespondTextOnOffOption;
    bool lv_sC_OnOffOption;
    string lv_sC_CommandType;
    text lv_sC_RespondTextCommandTypeName;
    text lv_sC_RespondTextCommandTypeTooltip;
    bool lv_sCH_HelpDisplayed;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string auto6C2B3C19_val;
    string auto8D562F63_val;
    string auto01BE7FDA_val;
    string autoA1A8A7BF_val;
    unitgroup auto808DC018_g;
    int auto808DC018_u;
    unit auto808DC018_var;
    unitgroup auto1DE6D497_g;
    int auto1DE6D497_u;
    unit auto1DE6D497_var;
    unitgroup autoC018F3FA_g;
    int autoC018F3FA_u;
    unit autoC018F3FA_var;
    unitgroup auto811BF99D_g;
    int auto811BF99D_u;
    unit auto811BF99D_var;

    // Variable Initialization
    lv_sC_OnOffOption = true;
    lv_sC_CommandType = "";
    lv_sC_RespondTextCommandTypeName = StringToText("");
    lv_sC_RespondTextCommandTypeTooltip = StringToText("");
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_5D9D6F9B");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 3, EventPlayer());
    auto6C2B3C19_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MORTALWOUNDS", 2)) {
        lv_sC_CommandType = "Mortal Wounds";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_94C1DBF5");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_08F19415");
    }
    else if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MWOUNDS", 2)) {
        lv_sC_CommandType = "Mortal Wounds";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_7051349C");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_E93C1DBA");
    }
    else if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MECHANICALDRAWBACKS", 2)) {
        lv_sC_CommandType = "Mechanical Drawbacks";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_8C24D09B");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_00FE90E0");
    }
    else if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "MDRAWBACKS", 2)) {
        lv_sC_CommandType = "Mechanical Drawbacks";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_4F1F2D96");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_ACBD2C84");
    }
    else if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "COMBATTRAUMA", 2)) {
        lv_sC_CommandType = "Combat Trauma";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_09C03CFB");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_C85DD70C");
    }
    else if (auto6C2B3C19_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "CTRAUMA", 2)) {
        lv_sC_CommandType = "Combat Trauma";
        lv_sC_RespondTextCommandTypeName = StringExternal("Param/Value/lib_22142002_9BE23A81");
        lv_sC_RespondTextCommandTypeTooltip = StringExternal("Param/Value/lib_22142002_CDE0A2C4");
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_69D87444")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
    if ((lib22142002_gf_StringWords(lp_stringCommand) == 3)) {
        auto01BE7FDA_val = StringCase(StringWord(lp_stringCommand, 3), true);
        if (auto01BE7FDA_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ON", 2)) {
            lv_sC_OnOffOption = true;
            lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_CA7FAB29");
        }
        else if (auto01BE7FDA_val == "+") {
            lv_sC_OnOffOption = true;
            lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_D61BF078");
        }
        else if (auto01BE7FDA_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "OFF", 2)) {
            lv_sC_OnOffOption = false;
            lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_270B162E");
        }
        else if (auto01BE7FDA_val == "-") {
            lv_sC_OnOffOption = false;
            lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_4FC4825B");
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_252D4342")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        if ((lib22142002_gf_StringWords(lp_stringCommand) == 2)) {
            auto8D562F63_val = lv_sC_CommandType;
            if (auto8D562F63_val == "Mortal Wounds") {
                if ((TriggerIsEnabled(lib22142002_gt_Consequences_MortalWounds) == true)) {
                    lv_sC_OnOffOption = false;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_000A4B90");
                }
                else {
                    lv_sC_OnOffOption = true;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_A4F2F924");
                }
            }
            else if (auto8D562F63_val == "Mechanical Drawbacks") {
                if ((TriggerIsEnabled(lib22142002_gt_Consequences_MechanicalDrawbacks) == true)) {
                    lv_sC_OnOffOption = false;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_03E92FAC");
                }
                else {
                    lv_sC_OnOffOption = true;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_C2C1F7C0");
                }
            }
            else if (auto8D562F63_val == "Combat Trauma") {
                if ((TriggerIsEnabled(lib22142002_gt_Consequences_CombatTrauma) == true)) {
                    lv_sC_OnOffOption = false;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_3178EF9B");
                }
                else {
                    lv_sC_OnOffOption = true;
                    lv_sC_RespondTextOnOffOption = StringExternal("Param/Value/lib_22142002_C5DB7A33");
                }
            }
            else {
            }
        }

    }
    if ((lv_sC_CorrectCommand == true) && (lv_sC_HelpCommand == false)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_62F632ED")));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + lv_sC_RespondTextCommandTypeName + StringExternal("Param/Value/lib_22142002_B215607F") + lv_sC_RespondTextOnOffOption + StringExternal("Param/Value/lib_22142002_87EF8026") + lv_sC_RespondTextCommandTypeTooltip));
        autoA1A8A7BF_val = lv_sC_CommandType;
        if (autoA1A8A7BF_val == "Mortal Wounds") {
            TriggerEnable(lib22142002_gt_Consequences_MortalWounds, lv_sC_OnOffOption);
            if ((lv_sC_OnOffOption == false)) {
                auto808DC018_g = lib22142002_gv_consequences_MortalWoundsReseter;
                auto808DC018_u = UnitGroupCount(auto808DC018_g, c_unitCountAll);
                for (;; auto808DC018_u -= 1) {
                    auto808DC018_var = UnitGroupUnitFromEnd(auto808DC018_g, auto808DC018_u);
                    if (auto808DC018_var == null) { break; }
                    UnitBehaviorRemove(auto808DC018_var, "MortalWounds", 0);
                    UnitGroupRemove(lib22142002_gv_consequences_MortalWoundsReseter, auto808DC018_var);
                }
            }

        }
        else if (autoA1A8A7BF_val == "Mechanical Drawbacks") {
            TriggerEnable(lib22142002_gt_Consequences_MechanicalDrawbacks, lv_sC_OnOffOption);
            if ((lv_sC_OnOffOption == true)) {
                auto1DE6D497_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterMechanical), 0, (1 << c_targetFilterBiological) | (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto1DE6D497_u = UnitGroupCount(auto1DE6D497_g, c_unitCountAll);
                for (;; auto1DE6D497_u -= 1) {
                    auto1DE6D497_var = UnitGroupUnitFromEnd(auto1DE6D497_g, auto1DE6D497_u);
                    if (auto1DE6D497_var == null) { break; }
                    UnitBehaviorAdd(auto1DE6D497_var, "MechanicalDrawbacks", auto1DE6D497_var, 1);
                    UnitGroupAdd(lib22142002_gv_consequences_MechanicalDrawbacks_Reseter, auto1DE6D497_var);
                }
            }
            else {
                autoC018F3FA_g = lib22142002_gv_consequences_MechanicalDrawbacks_Reseter;
                autoC018F3FA_u = UnitGroupCount(autoC018F3FA_g, c_unitCountAll);
                for (;; autoC018F3FA_u -= 1) {
                    autoC018F3FA_var = UnitGroupUnitFromEnd(autoC018F3FA_g, autoC018F3FA_u);
                    if (autoC018F3FA_var == null) { break; }
                    UnitBehaviorRemove(autoC018F3FA_var, "MechanicalDrawbacks", 0);
                    UnitGroupRemove(lib22142002_gv_consequences_MechanicalDrawbacks_Reseter, autoC018F3FA_var);
                }
            }
        }
        else if (autoA1A8A7BF_val == "Combat Trauma") {
            TriggerEnable(lib22142002_gt_Consequences_CombatTrauma, lv_sC_OnOffOption);
            if ((lv_sC_OnOffOption == false)) {
                auto811BF99D_g = lib22142002_gv_consequences_CombatTraumaReseter;
                auto811BF99D_u = UnitGroupCount(auto811BF99D_g, c_unitCountAll);
                for (;; auto811BF99D_u -= 1) {
                    auto811BF99D_var = UnitGroupUnitFromEnd(auto811BF99D_g, auto811BF99D_u);
                    if (auto811BF99D_var == null) { break; }
                    UnitBehaviorRemove(auto811BF99D_var, "DarkArchonConfusionDVD", 0);
                    UnitGroupRemove(lib22142002_gv_consequences_CombatTraumaReseter, auto811BF99D_var);
                }
            }

        }
        else {
        }
    }

}

void lib22142002_gf_C_SC_Ping (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    unit lv_sC_TargetUnitSingle;
    int lv_sC_TextValueInt;
    text lv_sC_TextValue;
    fixed lv_sC_TextDuration;
    fixed lv_sC_TextDurationWordMultiplier;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_TextDurationWordMultiplier = 2.0;
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_31BBD701");

    // Implementation
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 4, 99, EventPlayer());
    if (true) {
        lv_sC_CorrectCommand = true;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C2E6BA2C")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
    }
}

void lib22142002_gf_C_SC_Mark (string lp_stringCommand) {
    // Variable Declarations
    bool lv_sC_CorrectCommand;
    bool lv_sC_HelpCommand;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    text lv_sC_RespondTextTargetGroupName;
    unit lv_sC_TargetUnitSingle;
    string lv_sC_MarkType;
    string lv_sC_MarkRace;
    int lv_sC_MarkRaceInt;
    text lv_sC_MarkText;
    fixed lv_sC_MarkDuration;
    text lv_sCH_HelpText;

    // Automatic Variable Declarations
    string autoF41FE8D6_val;
    string auto7D3E4920_val;
    string auto9DF1BCB6_val;

    // Variable Initialization
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_MarkType = "";
    lv_sC_MarkRace = "Terr";
    lv_sCH_HelpText = StringExternal("Param/Value/lib_22142002_A4512C7E");

    // Implementation
    lv_sC_HelpCommand = lib22142002_gf_C_HelpCommandCheck(lp_stringCommand);
    lv_sC_CorrectCommand = lib22142002_gf_C_InitialLengthCheck(lp_stringCommand, 2, 6, EventPlayer());
    if ((lib22142002_gf_StringWords(lp_stringCommand) > 1)) {
        if ((lib22142002_gf_StringNumberValidationInteger(StringWord(lp_stringCommand, 2)) == true)) {
            if (((StringToInt(StringWord(lp_stringCommand, 2)) >= 2) && (StringToInt(StringWord(lp_stringCommand, 2)) <= 500))) {
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_AC51E7A0")));
                return ;
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_93F74E29")));
            return ;
        }
    }

    autoF41FE8D6_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (autoF41FE8D6_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNIT", 1)) {
        lv_sC_MarkType = "Unit";
        lv_sCH_HelpText = lv_sCH_HelpText;
    }
    else if (autoF41FE8D6_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "POINT", 1)) {
        lv_sC_MarkType = "Point";
        lv_sCH_HelpText = lv_sCH_HelpText;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B868AA31")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }

    if ((lib22142002_gf_StringWords(EventChatMessage(false)) > 2)) {
        auto7D3E4920_val = StringCase(StringWord(lp_stringCommand, 3), true);
        if (auto7D3E4920_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "TERRAN", 1)) {
            lv_sC_MarkRace = "Terr";
            lv_sCH_HelpText = lv_sCH_HelpText;
        }
        else if (auto7D3E4920_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "ZERG", 1)) {
            lv_sC_MarkRace = "Zerg";
            lv_sCH_HelpText = lv_sCH_HelpText;
        }
        else if (auto7D3E4920_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 3), "PROTOSS", 1)) {
            lv_sC_MarkRace = "Prot";
            lv_sCH_HelpText = lv_sCH_HelpText;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5E2C6549")));
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
            return ;
        }
    }
    else {
        lv_sC_MarkRace = PlayerRace(EventPlayer());
    }
    if ((lv_sC_MarkRace == "Neut") && (lv_sC_MarkRace == "Terr") && (lv_sC_MarkRace == "Rayn") && (lv_sC_MarkRace == "Swan") && (lv_sC_MarkRace == "Nova") && (lv_sC_MarkRace == "HH") && (lv_sC_MarkRace == "Tych") && (lv_sC_MarkRace == "Stet") && (lv_sC_MarkRace == "Meng")) {
        lv_sC_MarkRaceInt = 0;
    }
    else {
        if ((lv_sC_MarkRace == "Zerg") && (lv_sC_MarkRace == "Kerr") && (lv_sC_MarkRace == "Zaga") && (lv_sC_MarkRace == "Abat") && (lv_sC_MarkRace == "InfT") && (lv_sC_MarkRace == "Deha")) {
            lv_sC_MarkRaceInt = 1;
        }
        else {
            if ((lv_sC_MarkRace == "Prot") && (lv_sC_MarkRace == "Arta") && (lv_sC_MarkRace == "Vora") && (lv_sC_MarkRace == "Kara") && (lv_sC_MarkRace == "Alar") && (lv_sC_MarkRace == "Feni") && (lv_sC_MarkRace == "Zera")) {
                lv_sC_MarkRaceInt = 2;
            }

        }
    }

    auto9DF1BCB6_val = StringCase(StringWord(lp_stringCommand, 2), true);
    if (auto9DF1BCB6_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "UNIT", 1)) {
        lv_sC_MarkType = "Unit";
        lv_sCH_HelpText = lv_sCH_HelpText;
    }
    else if (auto9DF1BCB6_val == lib22142002_gf_StringContraction(StringWord(lp_stringCommand, 2), "POINT", 1)) {
        lv_sC_MarkType = "Point";
        lv_sCH_HelpText = lv_sCH_HelpText;
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_685E233C")));
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lv_sCH_HelpText));
        return ;
    }
}

void lib22142002_gf_DN_EffectsVisual_ColdNight (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateModelAtPoint("SnowWind", RegionRandomPoint(RegionRect((PointGetX(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualY), (PointGetX(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualY))));
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
}

void lib22142002_gf_DN_EffectsVisual_DarkWind (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateModelAtPoint("WindEmitterMedium", RegionRandomPoint(RegionRect((PointGetX(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualY), (PointGetX(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualY))));
    Wait(6.0, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
}

void lib22142002_gf_DN_EffectsVisual_DarkFog (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateModelAtPoint("Fog_Shakuras_Windy", RegionRandomPoint(RegionRect((PointGetX(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualY), (PointGetX(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualY))));
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
}

void lib22142002_gf_DN_EffectsVisual_Corruption (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateModelAtPoint("DayNightCorruption", RegionRandomPoint(RegionRect((PointGetX(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) - lib22142002_gv_dN_VisualY), (PointGetX(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualX), (PointGetY(CameraGetTarget(lp_player)) + lib22142002_gv_dN_VisualY))));
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
}

void lib22142002_gf_RespawnableUnitAttachedPing (unit lp_respawnableUnit, int lp_respawnablePing) {
    // Variable Declarations
    int lv_pingCounter;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    while ((UnitHasBehavior2(lp_respawnableUnit, "RespawnWaitingA") == true)) {
        if ((lv_pingCounter == 15)) {
            libNtve_gf_CreatePingFacingAngle(libNtve_gf_AlliesEnemiesOfPlayerCountInactiveAndSelf(libNtve_ge_PlayerRelation_Ally, UnitGetOwner(EventUnit())), "RespawnAPingReminder", UnitGetPosition(EventUnit()), ColorWithAlpha(15.69, 58.82, 15.69, 0.00), 1.0, 270.0);
            lv_pingCounter = 0;
        }

        lv_pingCounter += 1;
        Wait(1.0, c_timeGame);
    }
    PingDestroy(PingLastCreated());
    PingDestroy(lp_respawnablePing);
}

void lib22142002_gf_BountyRNegativeSafe (int lp_bountyPlayer, int lp_bountyValue) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_bountyValue >= 0)) {
        PlayerModifyPropertyInt(lp_bountyPlayer, c_playerPropMinerals, c_playerPropOperAdd, lp_bountyValue);
    }
    else {
        if ((PlayerGetPropertyInt(lp_bountyPlayer, c_playerPropMinerals) >= (-1 * lp_bountyValue))) {
            PlayerModifyPropertyInt(lp_bountyPlayer, c_playerPropMinerals, c_playerPropOperAdd, lp_bountyValue);
        }
        else {
            PlayerModifyPropertyInt(lp_bountyPlayer, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        }
    }
}

color lib22142002_gf_CUT_ReturnColor (unit lp_unit) {
    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int autoB1EE2635_n = 9;
    int autoB1EE2635_i;
    int auto15A0E8E6_ae;
    int auto15A0E8E6_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (autoB1EE2635_i = 1; autoB1EE2635_i <= autoB1EE2635_n; autoB1EE2635_i += 1) {
        auto15A0E8E6_ae = lv_climberInt;
        auto15A0E8E6_var = lv_climberIntNull;
        for ( ; auto15A0E8E6_var <= auto15A0E8E6_ae; auto15A0E8E6_var += 1 ) {
            if ((lib22142002_gv_recolor_CUT[auto15A0E8E6_var].lv_unit == lp_unit)) {
                return lib22142002_gv_recolor_CUT[auto15A0E8E6_var].lv_color;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_B9FA1531"));
    return Color(0.00, 0.00, 0.00);
}

void lib22142002_gf_CUT_AddUpdate (unit lp_unit, color lp_color) {
    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int autoBD03F85F_n = 9;
    int autoBD03F85F_i;
    int auto00DF9936_ae;
    int auto00DF9936_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (autoBD03F85F_i = 1; autoBD03F85F_i <= autoBD03F85F_n; autoBD03F85F_i += 1) {
        auto00DF9936_ae = lv_climberInt;
        auto00DF9936_var = lv_climberIntNull;
        for ( ; auto00DF9936_var <= auto00DF9936_ae; auto00DF9936_var += 1 ) {
            if (((lib22142002_gv_recolor_CUT[auto00DF9936_var].lv_unit == null) || (lib22142002_gv_recolor_CUT[auto00DF9936_var].lv_unit == lp_unit))) {
                lib22142002_gv_recolor_CUT[auto00DF9936_var].lv_unit = lp_unit;
                lib22142002_gv_recolor_CUT[auto00DF9936_var].lv_color = lp_color;
                return ;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
}

trigger auto_lib22142002_gf_CUT_Remove_Trigger = null;
unit auto_lib22142002_gf_CUT_Remove_lp_unit;

void lib22142002_gf_CUT_Remove (unit lp_unit) {
    auto_lib22142002_gf_CUT_Remove_lp_unit = lp_unit;

    if (auto_lib22142002_gf_CUT_Remove_Trigger == null) {
        auto_lib22142002_gf_CUT_Remove_Trigger = TriggerCreate("auto_lib22142002_gf_CUT_Remove_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_CUT_Remove_Trigger, false, false);
}

bool auto_lib22142002_gf_CUT_Remove_TriggerFunc (bool testConds, bool runActions) {
    unit lp_unit = auto_lib22142002_gf_CUT_Remove_lp_unit;

    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int auto9D89294E_n = 9;
    int auto9D89294E_i;
    int auto507B32FD_ae;
    int auto507B32FD_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (auto9D89294E_i = 1; auto9D89294E_i <= auto9D89294E_n; auto9D89294E_i += 1) {
        auto507B32FD_ae = lv_climberInt;
        auto507B32FD_var = lv_climberIntNull;
        for ( ; auto507B32FD_var <= auto507B32FD_ae; auto507B32FD_var += 1 ) {
            if ((lib22142002_gv_recolor_CUT[auto507B32FD_var].lv_unit == lp_unit)) {
                lib22142002_gv_recolor_CUT[auto507B32FD_var].lv_unit = null;
                lib22142002_gv_recolor_CUT[auto507B32FD_var].lv_color = Color(0,0,0);
                return true;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
    return true;
}

text lib22142002_gf_TXTTip_ReturnText (unit lp_unit) {
    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int autoCFDD7276_n = 9;
    int autoCFDD7276_i;
    int auto4841F46D_ae;
    int auto4841F46D_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (autoCFDD7276_i = 1; autoCFDD7276_i <= autoCFDD7276_n; autoCFDD7276_i += 1) {
        auto4841F46D_ae = lv_climberInt;
        auto4841F46D_var = lv_climberIntNull;
        for ( ; auto4841F46D_var <= auto4841F46D_ae; auto4841F46D_var += 1 ) {
            if ((lib22142002_gv_tXTTip_Value[auto4841F46D_var].lv_unit == lp_unit)) {
                return lib22142002_gv_tXTTip_Value[auto4841F46D_var].lv_text;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_5415C497"));
    return null;
}

text lib22142002_gf_TXTTip_ReturnTip (unit lp_unit) {
    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int auto6241E284_n = 9;
    int auto6241E284_i;
    int autoCC18F9A2_ae;
    int autoCC18F9A2_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (auto6241E284_i = 1; auto6241E284_i <= auto6241E284_n; auto6241E284_i += 1) {
        autoCC18F9A2_ae = lv_climberInt;
        autoCC18F9A2_var = lv_climberIntNull;
        for ( ; autoCC18F9A2_var <= autoCC18F9A2_ae; autoCC18F9A2_var += 1 ) {
            if ((lib22142002_gv_tXTTip_Value[autoCC18F9A2_var].lv_unit == lp_unit)) {
                return lib22142002_gv_tXTTip_Value[autoCC18F9A2_var].lv_tip;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_0BCA2766"));
    return null;
}

void lib22142002_gf_TXTTip_AddUpdate (unit lp_unit, text lp_text, text lp_tip) {
    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int autoB2C7D670_n = 9;
    int autoB2C7D670_i;
    int auto480C9F96_ae;
    int auto480C9F96_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (autoB2C7D670_i = 1; autoB2C7D670_i <= autoB2C7D670_n; autoB2C7D670_i += 1) {
        auto480C9F96_ae = lv_climberInt;
        auto480C9F96_var = lv_climberIntNull;
        for ( ; auto480C9F96_var <= auto480C9F96_ae; auto480C9F96_var += 1 ) {
            if (((lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_unit == null) || (lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_unit == lp_unit))) {
                lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_unit = lp_unit;
                if (((lp_text != null) == true)) {
                    lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_text = lp_text;
                    UnitGroupAdd(lib22142002_gv_tXTTip_TextAppliedUnit, lp_unit);
                }
                else {
                    if (((lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_text != null) == false)) {
                        UnitGroupRemove(lib22142002_gv_tXTTip_TextAppliedUnit, lp_unit);
                    }

                }
                if (((lp_tip != null) == true)) {
                    lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_tip = lp_tip;
                    UnitGroupAdd(lib22142002_gv_tXTTip_TipAppliedUnit, lp_unit);
                }
                else {
                    if (((lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_tip != null) == false)) {
                        UnitGroupRemove(lib22142002_gv_tXTTip_TipAppliedUnit, lp_unit);
                    }

                }
                if (((lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_text != null) == false) && ((lib22142002_gv_tXTTip_Value[auto480C9F96_var].lv_tip != null) == false)) {
                    lib22142002_gf_TXTTip_Remove(lp_unit);
                }

                return ;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
}

trigger auto_lib22142002_gf_TXTTip_Remove_Trigger = null;
unit auto_lib22142002_gf_TXTTip_Remove_lp_unit;

void lib22142002_gf_TXTTip_Remove (unit lp_unit) {
    auto_lib22142002_gf_TXTTip_Remove_lp_unit = lp_unit;

    if (auto_lib22142002_gf_TXTTip_Remove_Trigger == null) {
        auto_lib22142002_gf_TXTTip_Remove_Trigger = TriggerCreate("auto_lib22142002_gf_TXTTip_Remove_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_TXTTip_Remove_Trigger, false, false);
}

bool auto_lib22142002_gf_TXTTip_Remove_TriggerFunc (bool testConds, bool runActions) {
    unit lp_unit = auto_lib22142002_gf_TXTTip_Remove_lp_unit;

    // Variable Declarations
    int lv_climberIntNull;
    int lv_climberInt;
    int lv_climb;

    // Automatic Variable Declarations
    const int auto269E1C42_n = 9;
    int auto269E1C42_i;
    int auto2F0B02C9_ae;
    int auto2F0B02C9_var;

    // Variable Initialization
    lv_climberInt = 200;
    lv_climb = 200;

    // Implementation
    for (auto269E1C42_i = 1; auto269E1C42_i <= auto269E1C42_n; auto269E1C42_i += 1) {
        auto2F0B02C9_ae = lv_climberInt;
        auto2F0B02C9_var = lv_climberIntNull;
        for ( ; auto2F0B02C9_var <= auto2F0B02C9_ae; auto2F0B02C9_var += 1 ) {
            if ((lib22142002_gv_tXTTip_Value[auto2F0B02C9_var].lv_unit == lp_unit)) {
                lib22142002_gv_tXTTip_Value[auto2F0B02C9_var].lv_unit = null;
                lib22142002_gv_tXTTip_Value[auto2F0B02C9_var].lv_text = null;
                lib22142002_gv_tXTTip_Value[auto2F0B02C9_var].lv_tip = null;
                return true;
            }

        }
        lv_climberIntNull += lv_climb;
        lv_climberInt += lv_climb;
    }
    return true;
}

void lib22142002_gf_CCS_OpenSliders (int lp_userPlayer) {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib22142002_gv_cCS_CustomizeUI[lp_userPlayer].lv_dialog, PlayerGroupSingle(lp_userPlayer), true);
    libNtve_gf_SetDialogItemDesaturationColor(lib22142002_gv_cCS_CustomizeUI[lp_userPlayer].lv_playerColorPreviewBox, Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[lp_userPlayer].lv_redSlider, lp_userPlayer), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[lp_userPlayer].lv_greenSlider, lp_userPlayer), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[lp_userPlayer].lv_blueSlider, lp_userPlayer)), PlayerGroupSingle(lp_userPlayer));
}

void lib22142002_gf_CCS_Player_COLORAPPLY (int lp_recoloredPlayer) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    unitgroup auto9F2E32B4_g;
    int auto9F2E32B4_u;
    unit auto9F2E32B4_var;
    unitgroup auto164E59AA_g;
    int auto164E59AA_u;
    unit auto164E59AA_var;

    // Variable Initialization
    lv_color = Color(0,0,0);

    // Implementation
    auto9F2E32B4_g = UnitGroup(null, lp_recoloredPlayer, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
    auto9F2E32B4_u = UnitGroupCount(auto9F2E32B4_g, c_unitCountAll);
    for (;; auto9F2E32B4_u -= 1) {
        auto9F2E32B4_var = UnitGroupUnitFromEnd(auto9F2E32B4_g, auto9F2E32B4_u);
        if (auto9F2E32B4_var == null) { break; }
        if ((UnitHasBehavior2(auto9F2E32B4_var, "DEITYUncolorable") == false)) {
            if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, auto9F2E32B4_var) == false)) {
                libNtve_gf_SendActorMessageToUnit(auto9F2E32B4_var, libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(auto9F2E32B4_var)], lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(auto9F2E32B4_var)]));
            }

        }

    }
    if ((lib22142002_gv_tint_PlayerRecolorActive[lp_recoloredPlayer] == true)) {
        auto164E59AA_g = UnitGroup(null, lp_recoloredPlayer, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
        auto164E59AA_u = UnitGroupCount(auto164E59AA_g, c_unitCountAll);
        for (;; auto164E59AA_u -= 1) {
            auto164E59AA_var = UnitGroupUnitFromEnd(auto164E59AA_g, auto164E59AA_u);
            if (auto164E59AA_var == null) { break; }
            if ((UnitGroupHasUnit(lib22142002_gv_tint_ColorAppliedUnit, auto164E59AA_var) == false)) {
                libNtve_gf_SendActorMessageToUnit(auto164E59AA_var, libNtve_gf_SetTintColor(lib22142002_gv_cCS_PlayerTintColor[lp_recoloredPlayer], lib22142002_gv_cCS_PlayerTintColorHDR[0], 0.0));
                UnitGroupAdd(lib22142002_gv_tint_ColorAppliedPlayer, auto164E59AA_var);
            }

        }
    }

}

bool lib22142002_gf_DP_DialogisDPDialog (int lp_pDialog) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Automatic Variable Declarations
    const int auto919F9FAB_ae = 24;
    const int auto919F9FAB_ai = 1;

    // Variable Initialization

    // Implementation
    lv_intA = 0;
    for ( ; ( (auto919F9FAB_ai >= 0 && lv_intA <= auto919F9FAB_ae) || (auto919F9FAB_ai < 0 && lv_intA >= auto919F9FAB_ae) ) ; lv_intA += auto919F9FAB_ai ) {
        if ((lp_pDialog == lib22142002_gv_dP_ButtonRace[lv_intA])) {
            return true;
        }

    }
    if ((lib22142002_gf_US_DialogisUpgradeDialog(lib22142002_gv_dP_TriggeringDialogItem) == true)) {
        return true;
    }
    else {
        if ((lib22142002_gf_TTUS_DialogisTechTreeUnitDialog(lib22142002_gv_dP_TriggeringDialogItem) == true)) {
            return true;
        }
        else {
            if ((lib22142002_gf_TTSS_DialogisTechTreeStructureDialog(lib22142002_gv_dP_TriggeringDialogItem) == true)) {
                return true;
            }

        }
    }
    return false;
}

void lib22142002_gf_DP_HideAllDialogs () {
    // Automatic Variable Declarations
    // Implementation
    TriggerExecute(lib22142002_gt_US_HideUpgradeDialogs, true, false);
    TriggerExecute(lib22142002_gt_TTUS_HideTechTreeUnitDialogs, true, false);
    TriggerExecute(lib22142002_gt_TTSS_HideTechTreeStructureDialogs, true, false);
    DialogSetVisible(lib22142002_gv_dP_DialogRace, PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), false);
}

bool lib22142002_gf_DP_DialogUsedActions () {
    // Automatic Variable Declarations
    const int auto330637BD_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int auto330637BD_ai = 1;
    int auto5E57037F_ae;
    const int auto5E57037F_ai = 1;
    int auto176BC17C_ae;
    const int auto176BC17C_ai = 1;
    int autoFFAC15EB_ae;
    const int autoFFAC15EB_ai = 1;

    // Implementation
    lib22142002_gv_dP_IntRace = 1;
    for ( ; ( (auto330637BD_ai >= 0 && lib22142002_gv_dP_IntRace <= auto330637BD_ae) || (auto330637BD_ai < 0 && lib22142002_gv_dP_IntRace >= auto330637BD_ae) ) ; lib22142002_gv_dP_IntRace += auto330637BD_ai ) {
        if ((lib22142002_gv_dP_TriggeringDialogItem == lib22142002_gv_dP_ButtonRace[lib22142002_gv_dP_IntRace])) {
            lib22142002_gf_DP_ButtonAction_Races();
            return true;
        }

    }
    auto5E57037F_ae = lib22142002_gv_uS_IntArrayValueDummy;
    lib22142002_gv_uS_IntUpp = 0;
    for ( ; ( (auto5E57037F_ai >= 0 && lib22142002_gv_uS_IntUpp <= auto5E57037F_ae) || (auto5E57037F_ai < 0 && lib22142002_gv_uS_IntUpp >= auto5E57037F_ae) ) ; lib22142002_gv_uS_IntUpp += auto5E57037F_ai ) {
        if ((lib22142002_gv_dP_TriggeringDialogItem == lib22142002_gv_uS_ButtonUpgrade[lib22142002_gv_uS_IntUpp])) {
            lib22142002_gf_US_ButtonAction_Upgrade();
            return true;
        }

    }
    auto176BC17C_ae = lib22142002_gv_tTUS_IntArrayValueDummy;
    lib22142002_gv_tTUS_IntTechTreeU = 0;
    for ( ; ( (auto176BC17C_ai >= 0 && lib22142002_gv_tTUS_IntTechTreeU <= auto176BC17C_ae) || (auto176BC17C_ai < 0 && lib22142002_gv_tTUS_IntTechTreeU >= auto176BC17C_ae) ) ; lib22142002_gv_tTUS_IntTechTreeU += auto176BC17C_ai ) {
        if ((lib22142002_gv_dP_TriggeringDialogItem == lib22142002_gv_tTUS_ButtonTechTreeUnits[lib22142002_gv_tTUS_IntTechTreeU])) {
            lib22142002_gf_TTUS_ButtonAction_TechTreeUnit();
            return true;
        }

    }
    autoFFAC15EB_ae = lib22142002_gv_tTSS_IntArrayValueDummy;
    lib22142002_gv_tTSS_IntTechTreeS = 0;
    for ( ; ( (autoFFAC15EB_ai >= 0 && lib22142002_gv_tTSS_IntTechTreeS <= autoFFAC15EB_ae) || (autoFFAC15EB_ai < 0 && lib22142002_gv_tTSS_IntTechTreeS >= autoFFAC15EB_ae) ) ; lib22142002_gv_tTSS_IntTechTreeS += autoFFAC15EB_ai ) {
        if ((lib22142002_gv_dP_TriggeringDialogItem == lib22142002_gv_tTSS_ButtonTechTreeStructures[lib22142002_gv_tTSS_IntTechTreeS])) {
            lib22142002_gf_TTSS_ButtonAction_TechTreeStructure();
            return true;
        }

    }
    return false;
}

void lib22142002_gf_DP_Auto_RacesOwnerChange (int lp_triggeringPlayerPar) {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_dP_IntDEITY = lp_triggeringPlayerPar;
    lib22142002_gv_dP_IntTPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(lib22142002_gv_dP_IntDEITY, 6), 1));
    lib22142002_gv_dP_IntRace = lib22142002_gv_dP_CurrentRace[lp_triggeringPlayerPar];
    lib22142002_gf_DP_ButtonAction_Races();
}

void lib22142002_gf_DP_ButtonAction_Races () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib22142002_gv_dP_CurrentRace[lib22142002_gv_dP_IntDEITY] == lib22142002_gv_dP_IntRace)) {
    }
    else {
        lib22142002_gv_dP_CurrentRace[lib22142002_gv_dP_IntDEITY] = lib22142002_gv_dP_IntRace;
    }
    lib22142002_gf_DP_HidePanelDialogs();
    lib22142002_gf_DP_OpenPanelManagerPanel(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_dP_IntDEITY);
}

trigger auto_lib22142002_gf_DP_HidePanelDialogs_Trigger = null;

void lib22142002_gf_DP_HidePanelDialogs () {
    if (auto_lib22142002_gf_DP_HidePanelDialogs_Trigger == null) {
        auto_lib22142002_gf_DP_HidePanelDialogs_Trigger = TriggerCreate("auto_lib22142002_gf_DP_HidePanelDialogs_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_DP_HidePanelDialogs_Trigger, false, false);
}

bool auto_lib22142002_gf_DP_HidePanelDialogs_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    TriggerExecute(lib22142002_gt_US_HideUpgradeDialogs, true, false);
    TriggerExecute(lib22142002_gt_TTUS_HideTechTreeUnitDialogs, true, false);
    TriggerExecute(lib22142002_gt_TTSS_HideTechTreeStructureDialogs, true, false);
    return true;
}

trigger auto_lib22142002_gf_DP_OpenPanelManagerPanel_Trigger = null;
int auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerTarget;
int auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerDEITY;

void lib22142002_gf_DP_OpenPanelManagerPanel (int lp_patam_PlayerTarget, int lp_patam_PlayerDEITY) {
    auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerTarget = lp_patam_PlayerTarget;
    auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerDEITY = lp_patam_PlayerDEITY;

    if (auto_lib22142002_gf_DP_OpenPanelManagerPanel_Trigger == null) {
        auto_lib22142002_gf_DP_OpenPanelManagerPanel_Trigger = TriggerCreate("auto_lib22142002_gf_DP_OpenPanelManagerPanel_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_DP_OpenPanelManagerPanel_Trigger, false, false);
}

bool auto_lib22142002_gf_DP_OpenPanelManagerPanel_TriggerFunc (bool testConds, bool runActions) {
    int lp_patam_PlayerTarget = auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerTarget;
    int lp_patam_PlayerDEITY = auto_lib22142002_gf_DP_OpenPanelManagerPanel_lp_patam_PlayerDEITY;

    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior2(UnitGroupUnit(UnitControlGroup(lp_patam_PlayerDEITY, 6), 1), "UpgradesPanel") == true)) {
        DialogSetVisible(lib22142002_gv_uS_DialogUpps[lib22142002_gv_dP_CurrentRace[lp_patam_PlayerDEITY]], PlayerGroupSingle(lp_patam_PlayerDEITY), true);
        lib22142002_gf_US_Refresh();
    }
    else {
        if ((UnitHasBehavior2(UnitGroupUnit(UnitControlGroup(lp_patam_PlayerDEITY, 6), 1), "UnitTechnologyPanel") == true)) {
            DialogSetVisible(lib22142002_gv_tTUS_DialogTechUnits[lib22142002_gv_dP_CurrentRace[lp_patam_PlayerDEITY]], PlayerGroupSingle(lp_patam_PlayerDEITY), true);
            lib22142002_gf_TTUS_Refresh();
        }
        else {
            if ((UnitHasBehavior2(UnitGroupUnit(UnitControlGroup(lp_patam_PlayerDEITY, 6), 1), "StructureTechnologyPanel") == true)) {
                DialogSetVisible(lib22142002_gv_tTSS_DialogTechStructures[lib22142002_gv_dP_CurrentRace[lp_patam_PlayerDEITY]], PlayerGroupSingle(lp_patam_PlayerDEITY), true);
                lib22142002_gf_TTSS_Refresh();
            }

        }
    }
    return true;
}

void lib22142002_gf_DP_CreateRaceDialogs () {
    // Variable Declarations
    int lv_x;
    int lv_y;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_y = lib22142002_gv_dP_XYOffset;

    // Implementation
    DialogCreate(1340, 178, c_anchorTopLeft, 0, 0, true);
    lib22142002_gv_dP_DialogRace = DialogLastCreated();
    lib22142002_gf_DP_Createbuttonsforraces();
}

void lib22142002_gf_DP_Createbuttonsforraces () {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_labely;
    int lv_buttonIncrease;
    fixed lv_local_WaitTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_local_WaitTime = 0.0001;

    // Implementation
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y = lib22142002_gv_dP_XYOffset;
    lv_labely = 39;
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_70E568C4"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 50, 39, StringExternal("Param/Value/lib_22142002_0711CB97"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_4B96B507"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 225, 39, StringExternal("Param/Value/lib_22142002_3B34EC8D"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_78AB46C7"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 365, 39, StringExternal("Param/Value/lib_22142002_05613800"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);

    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_5C6CB4D6"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 530, 39, StringExternal("Param/Value/lib_22142002_603C6809"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_5B544106"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 700, 39, StringExternal("Param/Value/lib_22142002_AEA4FCFD"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_C8EDEC15"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 840, 39, StringExternal("Param/Value/lib_22142002_8D03E46C"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);

    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_A1F8DD91"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 1015, lv_labely, StringExternal("Param/Value/lib_22142002_A139EC62"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_8628A19A"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 1165, lv_labely, StringExternal("Param/Value/lib_22142002_50779D6E"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y += 38;
    lv_labely += 38;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_73FA7776"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 50, lv_labely, StringExternal("Param/Value/lib_22142002_6A14D21A"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_F79BB46B"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 215, lv_labely, StringExternal("Param/Value/lib_22142002_F0E3D905"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_0F86F388"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 375, lv_labely, StringExternal("Param/Value/lib_22142002_005EA5D2"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_DB6E754E"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 39, c_anchorTopLeft, 530, lv_labely, StringExternal("Param/Value/lib_22142002_D34EDF7C"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_270F5E07"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 695, lv_labely, StringExternal("Param/Value/lib_22142002_4456B8AB"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_A2D9B838"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 845, lv_labely, StringExternal("Param/Value/lib_22142002_83EC4861"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_5DD3058E"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 1015, lv_labely, StringExternal("Param/Value/lib_22142002_8109F574"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_2E1CEB43"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 1185, lv_labely, StringExternal("Param/Value/lib_22142002_B357EFAA"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    lv_buttonIncrease += 1;
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y += 38;
    lv_labely += 38;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_C081BEB8"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 55, lv_labely, StringExternal("Param/Value/lib_22142002_149878D9"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

    Wait(lv_local_WaitTime, c_timeGame);
    lv_buttonIncrease += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, lv_x, lv_y, StringExternal("Param/Value/lib_22142002_806E47E2"), StringToText(""), "");
    lib22142002_gv_dP_ButtonRace[lv_buttonIncrease] = DialogControlLastCreated();
    lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lv_buttonIncrease);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 160, 40, c_anchorTopLeft, 220, lv_labely, StringExternal("Param/Value/lib_22142002_3520BDC5"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lv_x += 160;

}

void lib22142002_gf_DP_ButtonFrameRace (int lp_inputDialogItem, int lp_inputRace) {
    // Automatic Variable Declarations
    int auto14509959_val;

    // Implementation
    auto14509959_val = lp_inputRace;
    if (auto14509959_val == 1) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 2) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 3) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 4) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 5) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 6) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
    }
    else if (auto14509959_val == 7) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(19.61, 19.61, 19.61), PlayerGroupActive());
    }
    else if (auto14509959_val == 8) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(100.00, 50.20, 100.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 9) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(13.73, 68.24, 94.51), PlayerGroupActive());
    }
    else if (auto14509959_val == 10) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(100.00, 50.20, 0.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 11) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(77.25, 54.12, 100.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 12) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(25.10, 0.00, 25.10), PlayerGroupActive());
    }
    else if (auto14509959_val == 13) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(60.78, 80.39, 100.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 14) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(0.00, 50.20, 0.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 15) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(53.33, 0.00, 0.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 16) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(13.73, 68.24, 94.51), PlayerGroupActive());
    }
    else if (auto14509959_val == 17) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(100.00, 50.20, 100.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 18) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(100.00, 50.20, 25.10), PlayerGroupActive());
    }
    else if (auto14509959_val == 19) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_zerg.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(50.20, 100.00, 100.00), PlayerGroupActive());
    }
    else if (auto14509959_val == 20) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(100.00, 100.00, 50.20), PlayerGroupActive());
    }
    else if (auto14509959_val == 21) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(78.43, 70.98, 53.33), PlayerGroupActive());
    }
    else if (auto14509959_val == 22) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_protoss.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(0.00, 65.10, 50.59), PlayerGroupActive());
    }
    else if (auto14509959_val == 23) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(75.29, 75.29, 75.29), PlayerGroupActive());
    }
    else if (auto14509959_val == 24) {
        libNtve_gf_SetDialogItemImage(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normalpressed_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemImage2(lp_inputDialogItem, "Assets\\Textures\\ui_button_generic_normaloverpressedover_terran.dds", PlayerGroupActive());
        libNtve_gf_SetDialogItemColor(lp_inputDialogItem, Color(73.73, 47.06, 47.06), PlayerGroupActive());
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_22142002_6D07EE93") + IntToText(lp_inputRace)));
    }
}

void lib22142002_gf_US_ButtonAction_Upgrade () {
    // Automatic Variable Declarations
    // Implementation
    TriggerEnable(lib22142002_gt_US_AutoUpdating, false);
    if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == true)) {
        lib22142002_gf_US_UpgradesOff();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_5A6AAD4E") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == false)) {
        lib22142002_gf_US_UpgradesOn();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_A0F2942D") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 1)) {
        lib22142002_gf_US_UpgradeLvlShowNext();
        lib22142002_gf_US_UpgradesOn();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_8C3E5247") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 2)) {
        lib22142002_gf_US_UpgradeLvlShowNext();
        lib22142002_gf_US_UpgradesOn();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_9010B62F") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == false)) {
        lib22142002_gf_US_UpgradesOn();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_14FC4F13") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == true)) {
        lib22142002_gf_US_UpgradeLvlShowNext();
        lib22142002_gf_US_UpgradeLvlReset();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_7E1049C6") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    Wait(0.1, c_timeGame);
    TriggerEnable(lib22142002_gt_US_AutoUpdating, true);
}

void lib22142002_gf_US_Refresh () {
    // Variable Declarations
    int lv_intA;
    bool lv_valid;
    int lv_targetPlayer;

    // Automatic Variable Declarations
    playergroup auto06402E6F_g;
    int auto06402E6F_var;
    int auto248B1543_ae;
    const int auto248B1543_ai = 1;

    // Variable Initialization

    // Implementation
    auto06402E6F_g = PlayerGroupActive();
    auto06402E6F_var = -1;
    while (true) {
        auto06402E6F_var = PlayerGroupNextPlayer(auto06402E6F_g, auto06402E6F_var);
        if (auto06402E6F_var < 0) { break; }
        lv_targetPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(auto06402E6F_var, 6), 1));
        auto248B1543_ae = lib22142002_gv_uS_IntArrayValueDummy;
        lv_intA = 0;
        for ( ; ( (auto248B1543_ai >= 0 && lv_intA <= auto248B1543_ae) || (auto248B1543_ai < 0 && lv_intA >= auto248B1543_ae) ) ; lv_intA += auto248B1543_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lv_intA] == 0)) {
                if ((lib22142002_gv_uS_UpgradeFlag[lv_intA][lv_targetPlayer] == true)) {
                    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                }
                else {
                    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), true);
                }
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lv_intA] == 1)) {
                DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), true);
                DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), true);
                DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), true);
                if ((lib22142002_gv_uS_UpgradeFlag[lv_intA][lv_targetPlayer] == false) && (lib22142002_gv_uS_UpgradeFlag[(lv_intA + 1)][lv_targetPlayer] == false) && (lib22142002_gv_uS_UpgradeFlag[(lv_intA + 2)][lv_targetPlayer] == false)) {
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lv_intA], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), false);
                }

                if ((lib22142002_gv_uS_UpgradeFlag[lv_intA][lv_targetPlayer] == true)) {
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), false);
                }

                if ((lib22142002_gv_uS_UpgradeFlag[(lv_intA + 1)][lv_targetPlayer] == true)) {
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), true);
                }

                if ((lib22142002_gv_uS_UpgradeFlag[(lv_intA + 2)][lv_targetPlayer] == true)) {
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lv_intA], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 1)], PlayerGroupSingle(auto06402E6F_var), false);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), true);
                    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[(lv_intA + 2)], PlayerGroupSingle(auto06402E6F_var), false);
                }

            }
        }
    }
}

bool lib22142002_gf_US_DialogisUpgradeDialog (int lp_pDialog) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Automatic Variable Declarations
    int autoBA917027_ae;
    const int autoBA917027_ai = 1;

    // Variable Initialization

    // Implementation
    autoBA917027_ae = lib22142002_gv_uS_IntArrayValueDummy;
    lv_intA = 0;
    for ( ; ( (autoBA917027_ai >= 0 && lv_intA <= autoBA917027_ae) || (autoBA917027_ai < 0 && lv_intA >= autoBA917027_ae) ) ; lv_intA += autoBA917027_ai ) {
        if ((lp_pDialog == lib22142002_gv_uS_ButtonUpgrade[lv_intA])) {
            return true;
        }

    }
    return false;
}

trigger auto_lib22142002_gf_US_Database_Trigger = null;

void lib22142002_gf_US_Database () {
    if (auto_lib22142002_gf_US_Database_Trigger == null) {
        auto_lib22142002_gf_US_Database_Trigger = TriggerCreate("auto_lib22142002_gf_US_Database_TriggerFunc");
    }

    TriggerExecute(auto_lib22142002_gf_US_Database_Trigger, false, false);
}

bool auto_lib22142002_gf_US_Database_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_local_WaitTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_local_WaitTime = 0.0001;

    // Implementation
    lib22142002_gv_uS_IntUpp = 0;
    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gf_US_GetDataManual("TerranInfantryWeaponsLevel1", "Assets\\Textures\\btn-upgrade-terran-infantryweaponslevel1.dds", "TerranInfantryWeaponsLevel1", 1, "EngineeringBayResearch", "2", StringExternal("Param/Value/lib_22142002_DF01DEFD"));
    lib22142002_gf_US_GetDataManual("TerranInfantryWeaponsLevel2", "Assets\\Textures\\btn-upgrade-terran-infantryweaponslevel2.dds", "TerranInfantryWeaponsLevel2", 2, "EngineeringBayResearch", "3", StringExternal("Param/Value/lib_22142002_9557271B"));
    lib22142002_gf_US_GetDataManual("TerranInfantryWeaponsLevel3", "Assets\\Textures\\btn-upgrade-terran-infantryweaponslevel3.dds", "TerranInfantryWeaponsLevel3", 3, "EngineeringBayResearch", "4", StringExternal("Param/Value/lib_22142002_8C7B7077"));
    lib22142002_gf_US_GetDataManual("TerranInfantryArmorsLevel1", "Assets\\Textures\\btn-upgrade-terran-infantryarmorlevel1.dds", "TerranInfantryArmorLevel1", 1, "EngineeringBayResearch", "6", StringExternal("Param/Value/lib_22142002_FEC386F7"));
    lib22142002_gf_US_GetDataManual("TerranInfantryArmorsLevel2", "Assets\\Textures\\btn-upgrade-terran-infantryarmorlevel2.dds", "TerranInfantryArmorLevel2", 2, "EngineeringBayResearch", "7", StringExternal("Param/Value/lib_22142002_65278F9F"));
    lib22142002_gf_US_GetDataManual("TerranInfantryArmorsLevel3", "Assets\\Textures\\btn-upgrade-terran-infantryarmorlevel3.dds", "TerranInfantryArmorLevel3", 3, "EngineeringBayResearch", "8", StringExternal("Param/Value/lib_22142002_8D28D2AF"));
    lib22142002_gf_US_GetDataManual("TerranVehicleWeaponsLevel1", "Assets\\Textures\\btn-upgrade-terran-vehicleweaponslevel1.dds", "TerranVehicleWeaponsLevel1", 1, "ArmoryResearch", "5", StringExternal("Param/Value/lib_22142002_D810F751"));
    lib22142002_gf_US_GetDataManual("TerranVehicleWeaponsLevel2", "Assets\\Textures\\btn-upgrade-terran-vehicleweaponslevel2.dds", "TerranVehicleWeaponsLevel2", 2, "ArmoryResearch", "6", StringExternal("Param/Value/lib_22142002_FEB0F826"));
    lib22142002_gf_US_GetDataManual("TerranVehicleWeaponsLevel3", "Assets\\Textures\\btn-upgrade-terran-vehicleweaponslevel3.dds", "TerranVehicleWeaponsLevel3", 3, "ArmoryResearch", "7", StringExternal("Param/Value/lib_22142002_1EBC85F3"));
    lib22142002_gf_US_GetDataManual("TerranShipWeaponsLevel1", "Assets\\Textures\\btn-upgrade-terran-shipweaponslevel1.dds", "TerranShipWeaponsLevel1", 1, "ArmoryResearch", "11", StringExternal("Param/Value/lib_22142002_FEF249E8"));
    lib22142002_gf_US_GetDataManual("TerranShipWeaponsLevel2", "Assets\\Textures\\btn-upgrade-terran-shipweaponslevel2.dds", "TerranShipWeaponsLevel2", 2, "ArmoryResearch", "12", StringExternal("Param/Value/lib_22142002_4691EE13"));
    lib22142002_gf_US_GetDataManual("TerranShipWeaponsLevel3", "Assets\\Textures\\btn-upgrade-terran-shipweaponslevel3.dds", "TerranShipWeaponsLevel3", 3, "ArmoryResearch", "13", StringExternal("Param/Value/lib_22142002_FC7D392B"));
    lib22142002_gf_US_GetDataManual("TerranVehicleAndShipArmorsLevel1", "Assets\\Textures\\btn-upgrade-terran-vehicleplatinglevel1.dds", "TerranVehicleAndShipPlatingLevel1", 1, "ArmoryResearchSwarm", "3", StringExternal("Param/Value/lib_22142002_11F9ED55"));
    lib22142002_gf_US_GetDataManual("TerranVehicleAndShipArmorsLevel2", "Assets\\Textures\\btn-upgrade-terran-vehicleplatinglevel2.dds", "TerranVehicleAndShipPlatingLevel2", 2, "ArmoryResearchSwarm", "4", StringExternal("Param/Value/lib_22142002_D0E418DA"));
    lib22142002_gf_US_GetDataManual("TerranVehicleAndShipArmorsLevel3", "Assets\\Textures\\btn-upgrade-terran-vehicleplatinglevel3.dds", "TerranVehicleAndShipPlatingLevel3", 3, "ArmoryResearchSwarm", "5", StringExternal("Param/Value/lib_22142002_0D6FC34F"));
    lib22142002_gf_US_GetDataManual("ShieldWall", "Assets\\Textures\\btn-techupgrade-terran-combatshield-color.dds", "ResearchShieldWall", 0, "BarracksTechLabResearch", "1", StringExternal("Param/Value/lib_22142002_3F949DD4"));
    lib22142002_gf_US_GetDataManual("Stimpack", "Assets\\Textures\\btn-ability-terran-stimpack-color.dds", "Stimpack", 0, "BarracksTechLabResearch", "0", StringExternal("Param/Value/lib_22142002_E56DC9EB"));
    lib22142002_gf_US_GetDataManual("PunisherGrenades", "Assets\\Textures\\btn-ability-terran-punishergrenade-color.dds", "ResearchPunisherGrenades", 0, "BarracksTechLabResearch", "2", StringExternal("Param/Value/lib_22142002_F70DD775"));
    lib22142002_gf_US_GetDataManual("HiSecAutoTracking", "Assets\\Textures\\btn-upgrade-terran-hisecautotracking.dds", "ResearchHiSecAutoTracking", 0, "EngineeringBayResearch", "0", StringExternal("Param/Value/lib_22142002_2D0625DA"));
    lib22142002_gf_US_GetDataManual("TerranBuildingArmor", "Assets\\Textures\\btn-upgrade-terran-buildingarmor.dds", "UpgradeBuildingArmorLevel1", 0, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_EB55D24E"));
    lib22142002_gf_US_GetDataManual("PersonalCloaking", "Assets\\Textures\\btn-ability-terran-cloaksuit-color.dds", "ResearchPersonalCloaking", 0, "GhostAcademyResearch", "0", StringExternal("Param/Value/lib_22142002_93E79C01"));
    lib22142002_gf_US_GetDataManual("HighCapacityBarrels", "Assets\\Textures\\btn-upgrade-terran-infernalpreigniter.dds", "ResearchHighCapacityBarrels", 0, "FactoryTechLabResearch", "1", StringExternal("Param/Value/lib_22142002_86D308D7"));
    lib22142002_gf_US_GetDataManual("CycloneLockOnDamageUpgrade", "Assets\\Textures\\btn-upgrade-terran-magfieldaccelerator.dds", "CycloneResearchLockOnDamageUpgrade", 0, "FactoryTechLabResearch", "9", StringExternal("Param/Value/lib_22142002_7610381C"));
    lib22142002_gf_US_GetDataManual("DrillClaws", "Assets\\Textures\\btn-upgrade-terran-researchdrillingclaws.dds", "ResearchDrillClaws", 0, "FactoryTechLabResearch", "4", StringExternal("Param/Value/lib_22142002_DB7A4A59"));
    lib22142002_gf_US_GetDataManual("SmartServos", "Assets\\Textures\\btn-upgrade-terran-transformationservos.dds", "ResearchSmartServos", 0, "FactoryTechLabResearch", "6", StringExternal("Param/Value/lib_22142002_0771D18D"));
    lib22142002_gf_US_GetDataManual("RavenCorvidReactor", "Assets\\Textures\\btn-upgrade-terran-corvidreactor.dds", "ResearchRavenEnergyUpgrade", 0, "StarportTechLabResearch", "3", StringExternal("Param/Value/lib_22142002_0E8B2517"));
    lib22142002_gf_US_GetDataManual("BansheeCloak", "Assets\\Textures\\btn-ability-terran-cloak-color.dds", "ResearchBansheeCloak", 0, "StarportTechLabResearch", "0", StringExternal("Param/Value/lib_22142002_28851685"));
    lib22142002_gf_US_GetDataManual("BansheeSpeed", "Assets\\Textures\\btn-upgrade-terran-hyperflightrotors.dds", "BansheeSpeed", 0, "StarportTechLabResearch", "9", StringExternal("Param/Value/lib_22142002_B7CC2F32"));
    lib22142002_gf_US_GetDataManual("BattlecruiserEnableSpecializations", "Assets\\Textures\\btn-ability-terran-yamatogun-color.dds", "ResearchBattlecruiserSpecializations", 0, "FusionCoreResearch", "0", StringExternal("Param/Value/lib_22142002_A4B1BF30"));
    lib22142002_gf_US_GetDataManual("MedivacIncreaseSpeedBoost", "Assets\\Textures\\btn-upgrade-terran-highcapacityfueltanks.dds", "ResearchHighCapacityFuelTanks", 0, "FusionCoreResearch", "2", StringExternal("Param/Value/lib_22142002_7DCE903B"));
    lib22142002_gf_US_GetDataManual("LiberatorAGRangeUpgrade", "Assets\\Textures\\btn-upgrade-terran-advanceballistics.dds", "ResearchBallisticRange", 0, "FusionCoreResearch", "1", StringExternal("Param/Value/lib_22142002_58D5E3BE"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("ZergMeleeWeaponsLevel1", "Assets\\Textures\\btn-upgrade-zerg-meleeattacks-level1.dds", "zergmeleeweapons1", 1, "evolutionchamberresearch", "0", StringExternal("Param/Value/lib_22142002_09CAC499"));
    lib22142002_gf_US_GetDataManual("ZergMeleeWeaponsLevel2", "Assets\\Textures\\btn-upgrade-zerg-meleeattacks-level2.dds", "zergmeleeweapons2", 2, "evolutionchamberresearch", "1", StringExternal("Param/Value/lib_22142002_A0D8FB75"));
    lib22142002_gf_US_GetDataManual("ZergMeleeWeaponsLevel3", "Assets\\Textures\\btn-upgrade-zerg-meleeattacks-level3.dds", "zergmeleeweapons3", 3, "evolutionchamberresearch", "2", StringExternal("Param/Value/lib_22142002_BF6BA1D5"));
    lib22142002_gf_US_GetDataManual("ZergMissileWeaponsLevel1", "Assets\\Textures\\btn-upgrade-zerg-missileattacks-level1.dds", "zergmissileweapons1", 1, "evolutionchamberresearch", "6", StringExternal("Param/Value/lib_22142002_C1A11FB8"));
    lib22142002_gf_US_GetDataManual("ZergMissileWeaponsLevel2", "Assets\\Textures\\btn-upgrade-zerg-missileattacks-level2.dds", "zergmissileweapons2", 2, "evolutionchamberresearch", "7", StringExternal("Param/Value/lib_22142002_E7CED8AE"));
    lib22142002_gf_US_GetDataManual("ZergMissileWeaponsLevel3", "Assets\\Textures\\btn-upgrade-zerg-missileattacks-level3.dds", "zergmissileweapons3", 3, "evolutionchamberresearch", "8", StringExternal("Param/Value/lib_22142002_990E3C41"));
    lib22142002_gf_US_GetDataManual("ZergGroundArmorsLevel1", "Assets\\Textures\\btn-upgrade-zerg-groundcarapace-level1.dds", "zerggroundarmor1", 1, "evolutionchamberresearch", "3", StringExternal("Param/Value/lib_22142002_19097533"));
    lib22142002_gf_US_GetDataManual("ZergGroundArmorsLevel2", "Assets\\Textures\\btn-upgrade-zerg-groundcarapace-level2.dds", "zerggroundarmor2", 2, "evolutionchamberresearch", "4", StringExternal("Param/Value/lib_22142002_742495FF"));
    lib22142002_gf_US_GetDataManual("ZergGroundArmorsLevel3", "Assets\\Textures\\btn-upgrade-zerg-groundcarapace-level3.dds", "zerggroundarmor3", 3, "evolutionchamberresearch", "5", StringExternal("Param/Value/lib_22142002_BA20364F"));
    lib22142002_gf_US_GetDataManual("ZergFlyerWeaponsLevel1", "Assets\\Textures\\btn-upgrade-zerg-airattacks-level1.dds", "zergflyerattack1", 1, "SpireResearch", "0", StringExternal("Param/Value/lib_22142002_97087FC9"));
    lib22142002_gf_US_GetDataManual("ZergFlyerWeaponsLevel2", "Assets\\Textures\\btn-upgrade-zerg-airattacks-level2.dds", "zergflyerattack2", 2, "SpireResearch", "1", StringExternal("Param/Value/lib_22142002_333521A1"));
    lib22142002_gf_US_GetDataManual("ZergFlyerWeaponsLevel3", "Assets\\Textures\\btn-upgrade-zerg-airattacks-level3.dds", "zergflyerattack3", 3, "SpireResearch", "2", StringExternal("Param/Value/lib_22142002_D7CD486D"));
    lib22142002_gf_US_GetDataManual("ZergFlyerArmorsLevel1", "Assets\\Textures\\btn-upgrade-zerg-flyercarapace-level1.dds", "zergflyerarmor1", 1, "SpireResearch", "3", StringExternal("Param/Value/lib_22142002_24362155"));
    lib22142002_gf_US_GetDataManual("ZergFlyerArmorsLevel2", "Assets\\Textures\\btn-upgrade-zerg-flyercarapace-level2.dds", "zergflyerarmor2", 2, "SpireResearch", "4", StringExternal("Param/Value/lib_22142002_C2876FC6"));
    lib22142002_gf_US_GetDataManual("ZergFlyerArmorsLevel3", "Assets\\Textures\\btn-upgrade-zerg-flyercarapace-level3.dds", "zergflyerarmor3", 3, "SpireResearch", "5", StringExternal("Param/Value/lib_22142002_2A840259"));
    lib22142002_gf_US_GetDataManual("Burrow", "Assets\\Textures\\btn-ability-zerg-burrow-color.dds", "ResearchBurrow", 0, "LairResearch", "3", StringExternal("Param/Value/lib_22142002_2EBD45FE"));
    lib22142002_gf_US_GetDataManual("overlordspeed", "Assets\\Textures\\btn-upgrade-zerg-pneumatizedcarapace.dds", "overlordspeed", 0, "LairResearch", "1", StringExternal("Param/Value/lib_22142002_DD228163"));
    lib22142002_gf_US_GetDataManual("zerglingmovementspeed", "Assets\\Textures\\btn-upgrade-zerg-metabolicboost.dds", "zerglingmovementspeed", 0, "SpawningPoolResearch", "0", StringExternal("Param/Value/lib_22142002_40993330"));
    lib22142002_gf_US_GetDataManual("zerglingattackspeed", "Assets\\Textures\\btn-upgrade-zerg-adrenalglands.dds", "zerglingattackspeed", 0, "SpawningPoolResearch", "1", StringExternal("Param/Value/lib_22142002_07CAD005"));
    lib22142002_gf_US_GetDataManual("CentrificalHooks", "Assets\\Textures\\btn-upgrade-zerg-centrifugalhooks.dds", "EvolveCentrificalHooks", 0, "BanelingNestResearch", "0", StringExternal("Param/Value/lib_22142002_A22E6338"));
    lib22142002_gf_US_GetDataManual("GlialReconstitution", "Assets\\Textures\\btn-upgrade-zerg-glialreconstitution.dds", "EvolveGlialRegeneration", 0, "RoachWarrenResearch", "1", StringExternal("Param/Value/lib_22142002_6B1C931A"));
    lib22142002_gf_US_GetDataManual("TunnelingClaws", "Assets\\Textures\\btn-upgrade-zerg-tunnelingclaws.dds", "EvolveTunnelingClaws", 0, "RoachWarrenResearch", "2", StringExternal("Param/Value/lib_22142002_50079506"));
    lib22142002_gf_US_GetDataManual("EvolveGroovedSpines", "Assets\\Textures\\btn-upgrade-zerg-hotsgroovedspines.dds", "EvolveGroovedSpines", 0, "HydraliskDenResearch", "0", StringExternal("Param/Value/lib_22142002_A5A3D863"));
    lib22142002_gf_US_GetDataManual("EvolveMuscularAugments", "Assets\\Textures\\btn-upgrade-zerg-evolvemuscularaugments.dds", "EvolveMuscularAugments", 0, "HydraliskDenResearch", "1", StringExternal("Param/Value/lib_22142002_DA118DA8"));
    lib22142002_gf_US_GetDataManual("InfestorEnergyUpgrade", "Assets\\Textures\\btn-upgrade-zerg-pathogenglands.dds", "EvolveInfestorEnergyUpgrade", 0, "InfestationPitResearch", "2", StringExternal("Param/Value/lib_22142002_FBF731BE"));
    lib22142002_gf_US_GetDataManual("NeuralParasite", "Assets\\Textures\\btn-ability-zerg-neuralparasite-color.dds", "ResearchNeuralParasite", 0, "InfestationPitResearch", "3", StringExternal("Param/Value/lib_22142002_8F0A5E58"));
    lib22142002_gf_US_GetDataManual("DiggingClaws", "Assets\\Textures\\btn-upgrade-zerg-adaptivetalons.dds", "EvolveDiggingClaws", 0, "LurkerDenResearch", "0", StringExternal("Param/Value/lib_22142002_1A382C25"));
    lib22142002_gf_US_GetDataManual("LurkerRange", "Assets\\Textures\\btn-upgrade-kerrigan-seismicspines.dds", "ResearchLurkerRange", 0, "LurkerDenResearch", "1", StringExternal("Param/Value/lib_22142002_039E97C3"));
    lib22142002_gf_US_GetDataManual("ChitinousPlating", "Assets\\Textures\\btn-upgrade-zerg-chitinousplating.dds", "EvolveChitinousPlating", 0, "UltraliskCavernResearch", "2", StringExternal("Param/Value/lib_22142002_EE1258BF"));
    lib22142002_gf_US_GetDataManual("AnabolicSynthesis", "Assets\\Textures\\btn-upgrade-zerg-anabolicsynthesis.dds", "EvolveAnabolicSynthesis2", 0, "UltraliskCavernResearch", "0", StringExternal("Param/Value/lib_22142002_B99F8943"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("ProtossGroundWeaponsLevel1", "Assets\\Textures\\btn-upgrade-protoss-groundweaponslevel1.dds", "ProtossGroundWeaponsLevel1", 1, "ForgeResearch", "0", StringExternal("Param/Value/lib_22142002_D11215FB"));
    lib22142002_gf_US_GetDataManual("ProtossGroundWeaponsLevel2", "Assets\\Textures\\btn-upgrade-protoss-groundweaponslevel2.dds", "ProtossGroundWeaponsLevel2", 2, "ForgeResearch", "1", StringExternal("Param/Value/lib_22142002_94BBA631"));
    lib22142002_gf_US_GetDataManual("ProtossGroundWeaponsLevel3", "Assets\\Textures\\btn-upgrade-protoss-groundweaponslevel3.dds", "ProtossGroundWeaponsLevel3", 3, "ForgeResearch", "2", StringExternal("Param/Value/lib_22142002_9FAE5775"));
    lib22142002_gf_US_GetDataManual("ProtossGroundArmorsLevel1", "Assets\\Textures\\btn-upgrade-protoss-groundarmorlevel1.dds", "ProtossGroundArmorLevel1", 1, "ForgeResearch", "3", StringExternal("Param/Value/lib_22142002_1BF7E33D"));
    lib22142002_gf_US_GetDataManual("ProtossGroundArmorsLevel2", "Assets\\Textures\\btn-upgrade-protoss-groundarmorlevel2.dds", "ProtossGroundArmorLevel2", 2, "ForgeResearch", "4", StringExternal("Param/Value/lib_22142002_8CC61C96"));
    lib22142002_gf_US_GetDataManual("ProtossGroundArmorsLevel3", "Assets\\Textures\\btn-upgrade-protoss-groundarmorlevel3.dds", "ProtossGroundArmorLevel3", 3, "ForgeResearch", "5", StringExternal("Param/Value/lib_22142002_5C9315AD"));
    lib22142002_gf_US_GetDataManual("ProtossShieldsLevel1", "Assets\\Textures\\btn-upgrade-protoss-shieldslevel1.dds", "ProtossShieldsLevel1", 1, "ForgeResearch", "6", StringExternal("Param/Value/lib_22142002_58859A31"));
    lib22142002_gf_US_GetDataManual("ProtossShieldsLevel2", "Assets\\Textures\\btn-upgrade-protoss-shieldslevel2.dds", "ProtossShieldsLevel2", 2, "ForgeResearch", "7", StringExternal("Param/Value/lib_22142002_98463EBB"));
    lib22142002_gf_US_GetDataManual("ProtossShieldsLevel3", "Assets\\Textures\\btn-upgrade-protoss-shieldslevel3.dds", "ProtossShieldsLevel3", 3, "ForgeResearch", "8", StringExternal("Param/Value/lib_22142002_651932B4"));
    lib22142002_gf_US_GetDataManual("ProtossAirWeaponsLevel1", "Assets\\Textures\\btn-upgrade-protoss-airweaponslevel1.dds", "ProtossAirArmorLevel1", 1, "CyberneticsCoreResearch", "0", StringExternal("Param/Value/lib_22142002_EAD58454"));
    lib22142002_gf_US_GetDataManual("ProtossAirWeaponsLevel2", "Assets\\Textures\\btn-upgrade-protoss-airweaponslevel2.dds", "ProtossAirArmorLevel2", 2, "CyberneticsCoreResearch", "1", StringExternal("Param/Value/lib_22142002_87E6B02F"));
    lib22142002_gf_US_GetDataManual("ProtossAirWeaponsLevel3", "Assets\\Textures\\btn-upgrade-protoss-airweaponslevel3.dds", "ProtossAirArmorLevel3", 3, "CyberneticsCoreResearch", "2", StringExternal("Param/Value/lib_22142002_959E14E9"));
    lib22142002_gf_US_GetDataManual("ProtossAirArmorsLevel1", "Assets\\Textures\\btn-upgrade-protoss-airarmorlevel1.dds", "ProtossAirArmorLevel1", 1, "CyberneticsCoreResearch", "3", StringExternal("Param/Value/lib_22142002_CB150FD6"));
    lib22142002_gf_US_GetDataManual("ProtossAirArmorsLevel2", "Assets\\Textures\\btn-upgrade-protoss-airarmorlevel2.dds", "ProtossAirArmorLevel2", 2, "CyberneticsCoreResearch", "4", StringExternal("Param/Value/lib_22142002_E95C72A2"));
    lib22142002_gf_US_GetDataManual("ProtossAirArmorsLevel3", "Assets\\Textures\\btn-upgrade-protoss-airarmorlevel3.dds", "ProtossAirArmorLevel3", 3, "CyberneticsCoreResearch", "5", StringExternal("Param/Value/lib_22142002_5C856D63"));
    lib22142002_gf_US_GetDataManual("WarpGateResearch", "Assets\\Textures\\btn-building-protoss-warpgate.dds", "ResearchWarpGate", 0, "CyberneticsCoreResearch", "6", StringExternal("Param/Value/lib_22142002_955F0332"));
    lib22142002_gf_US_GetDataManual("Charge", "Assets\\Textures\\btn-ability-protoss-charge-color.dds", "ResearchCharge", 0, "TwilightCouncilResearch", "0", StringExternal("Param/Value/lib_22142002_EF09DCAA"));
    lib22142002_gf_US_GetDataManual("BlinkTech", "Assets\\Textures\\btn-ability-protoss-blink-color.dds", "ResearchStalkerTeleport", 0, "TwilightCouncilResearch", "1", StringExternal("Param/Value/lib_22142002_FD823C80"));
    lib22142002_gf_US_GetDataManual("AdeptPiercingAttack", "Assets\\Textures\\btn-upgrade-protoss-resonatingglaives-orange.dds", "AdeptResearchPiercingUpgrade", 0, "TwilightCouncilResearch", "3", StringExternal("Param/Value/lib_22142002_D7F76312"));
    lib22142002_gf_US_GetDataManual("PsiStormTech", "Assets\\Textures\\btn-ability-protoss-psistorm-color.dds", "ResearchPsiStorm", 0, "TemplarArchivesResearch", "4", StringExternal("Param/Value/lib_22142002_BE4EE20B"));
    lib22142002_gf_US_GetDataManual("DarkTemplarBlinkUpgrade", "Assets\\Textures\\btn-ability-protoss-shadowdash.dds", "ResearchDarkTemplarBlink", 0, "DarkShrineResearch", "0", StringExternal("Param/Value/lib_22142002_27D3BA60"));
    lib22142002_gf_US_GetDataManual("ObserverGraviticBooster", "Assets\\Textures\\btn-upgrade-protoss-graviticbooster.dds", "ResearchGraviticBooster", 0, "RoboticsBayResearch", "1", StringExternal("Param/Value/lib_22142002_80217A6E"));
    lib22142002_gf_US_GetDataManual("GraviticDrive", "Assets\\Textures\\btn-upgrade-protoss-graviticdrive.dds", "ResearchGraviticDrive", 0, "RoboticsBayResearch", "2", StringExternal("Param/Value/lib_22142002_71D11FD3"));
    lib22142002_gf_US_GetDataManual("ExtendedThermalLance", "Assets\\Textures\\btn-upgrade-protoss-extendedthermallance.dds", "ResearchExtendedThermalLance", 0, "RoboticsBayResearch", "5", StringExternal("Param/Value/lib_22142002_FE7B3C21"));
    lib22142002_gf_US_GetDataManual("PhoenixRangeUpgrade", "Assets\\Textures\\btn-upgrade-protoss-phoenixrange.dds", "AnionPulseCrystals", 0, "FleetBeaconResearch", "2", StringExternal("Param/Value/lib_22142002_9C573F3F"));
    lib22142002_gf_US_GetDataManual("VoidRaySpeedUpgrade", "Assets\\Textures\\btn-upgrade-protoss-fluxvanes.dds", "ResearchVoidRaySpeedUpgrade", 0, "FleetBeaconResearch", "4", StringExternal("Param/Value/lib_22142002_7C785C3A"));
    lib22142002_gf_US_GetDataManual("TempestGroundAttackUpgrade", "Assets\\Textures\\btn-ability-protoss-disruptionblast.dds", "TempestResearchGroundAttackUpgrade", 0, "FleetBeaconResearch", "5", StringExternal("Param/Value/lib_22142002_ADF12ABC"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("AdvancedMedicTraining", "Assets\\Textures\\btn-techupgrade-terran-nano-botinjectors.dds", "CommanderRaynorInfantryUpgradePack", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_67E5B908"));
    lib22142002_gf_US_GetDataManual("MarauderLifeBoost", "Assets\\Textures\\btn-techupgrade-terran-kineticfoam.dds", "CommanderRaynorRavenAttackSpeedTalent", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_713A02EF"));
    lib22142002_gf_US_GetDataManual("ReaperU238Rounds", "Assets\\Textures\\btn-techupgrade-terran-u238rounds.dds", "CommanderRaynorUpgradedBansheesTalent", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_5C882393"));
    lib22142002_gf_US_GetDataManual("ClusterBomb", "Assets\\Textures\\btn-l2d-techupgrade-terran-d-8charges.dds", "ResearchG4Clusterbomb", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_D7656B05"));
    lib22142002_gf_US_GetDataManual("UltrasonicPulse", "Assets\\Textures\\btn-ability-terran-psioniclash-spectre.dds", "CommanderRaynorHyperionYomatoCannonTalent", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_BC17E588"));
    lib22142002_gf_US_GetDataManual("PermanentCloakSpectre", "Assets\\Textures\\btn-techupgrade-terran-nyxcloakingclassmodule.dds", "NyxClassCloakingModule", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_04D24E26"));
    lib22142002_gf_US_GetDataManual("OcularImplants", "Assets\\Textures\\btn-techupgrade-terran-ocularimplants.dds", "ResearchOcularImplants", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_89E07873"));
    lib22142002_gf_US_GetDataManual("PermanentCloakGhost", "Assets\\Textures\\btn-techupgrade-terran-criussuit.dds", "CommanderRaynorStimUpgradeTalentSimple", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_58D94B9A"));
    lib22142002_gf_US_GetDataManual("EnhancedShockwaves", "Assets\\Textures\\btn-ability-terran-electricfield.dds", "ResearchEnhancedShockwaves", 0, "GhostAcademyResearch", "2", StringExternal("Param/Value/lib_22142002_BAA424B1"));
    lib22142002_gf_US_GetDataManual("TwinLinkedFlameThrowers", "Assets\\Textures\\btn-techupgrade-terran-twin-linkedflamethrower.dds", "MasteryZagaraCocoonTimer", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_775C4395"));
    lib22142002_gf_US_GetDataManual("TriLithiumPowerCells", "Assets\\Textures\\btn-techupgrade-terran-trilithiumpowercell.dds", "MasterySwannConcentratedBeam", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_C95D5D54"));
    lib22142002_gf_US_GetDataManual("ShapedHull", "Assets\\Textures\\btn-techupgrade-terran-shapedhull.dds", "CommanderRaynorMercMedicsTalentSimple", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_8D4A3F3D"));
    lib22142002_gf_US_GetDataManual("SiegeTankShapedBlast", "Assets\\Textures\\btn-techupgrade-terran-shapedblast.dds", "ResearchShapedBlast", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_4533C864"));
    lib22142002_gf_US_GetDataManual("MedivacRapidDeployment", "Assets\\Textures\\btn-techupgrade-terran-rapiddeployment.dds", "ResearchRapidDeployment", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_C2AC28BC"));
    lib22142002_gf_US_GetDataManual("AdvancedHealingAI", "Assets\\Textures\\btn-ability-terran-advancedhealingai.dds", "CommanderRaynorMercMedicsTalent", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_EFC44684"));
    lib22142002_gf_US_GetDataManual("DynamicPowerRouting", "Assets\\Textures\\btn-techupgrade-terran-tomahawkpowercell.dds", "SingularityAnchor", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_8B6AB826"));
    lib22142002_gf_US_GetDataManual("CrossSpectrumDampeners", "Assets\\Textures\\btn-techupgrade-terran-crossspectrumdampeners.dds", "CommanderFenixSuitUpgrades", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_A9305688"));
    lib22142002_gf_US_GetDataManual("HurricaneMissiles", "Assets\\Textures\\btn-ability-stetmann-corruptormissilebarrage.dds", "CommanderMengskLevel06", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_E591CFCA"));
    lib22142002_gf_US_GetDataManual("DefensiveMatrix", "Assets\\Textures\\btn-upgrade-swann-defensivematrix.dds", "CommanderRaynorUpgradedBansheesTalentSimple", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_C5FC2512"));
    lib22142002_gf_US_GetDataManual("ProjectileAccelerators", "Assets\\Textures\\btn-techupgrade-terran-projectileaccelerator.dds", "ProjectileAccelerators", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_877A872E"));
    lib22142002_gf_US_GetDataManual("NeosteelFrame", "Assets\\Textures\\btn-techupgrade-terran-neosteelbunker.dds", "NeoSteelFrame", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_F308C70A"));
    lib22142002_gf_US_GetDataManual("ReinforcedSuperstructure", "Assets\\Textures\\btn-techupgrade-terran-titaniumhousing.dds", "ProtoTitanInterceptorSwarm", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_5AF811F1"));
    lib22142002_gf_US_GetDataManual("HailstormMissilePods", "Assets\\Textures\\btn-techupgrade-terran-hellstormbatteries.dds", "CommanderRaynorAutomatedRefineriesTalentSimple", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_D5095566"));
    lib22142002_gf_US_GetDataManual("MicrofusionReactors", "Assets\\Textures\\ui_tipicon_campaign_space01-repair.dds", "SwarmHostCreeperPassive", 0, "FusionCoreResearch", "9", StringExternal("Param/Value/lib_22142002_D5A22412"));
    lib22142002_gf_US_GetDataManual("UltraCapacitors", "Assets\\Textures\\btn-research-terran-ultracapacitors.dds", "TerranInfantryWeaponsUltraCapacitorsLevel1", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_1F8A420B"));
    lib22142002_gf_US_GetDataManual("VanadiumPlating", "Assets\\Textures\\btn-research-terran-vanadiumplating.dds", "TerranVehicleWeaponsUltraCapacitorsLevel1", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_800F977E"));
    lib22142002_gf_US_GetDataManual("FortifiedBunkerCarapace", "Assets\\Textures\\btn-research-zerg-fortifiedbunker.dds", "CommanderRaynorFortifiedBunkersTalent", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_D9CE8D74"));
    lib22142002_gf_US_GetDataManual("MicroFiltering", "Assets\\Textures\\btn-research-terran-microfiltering.dds", "CommanderRaynorRefineryMicroFilteringTalent", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_FAE7B795"));
    lib22142002_gf_US_GetDataManual("CellularReactors", "Assets\\Textures\\btn-research-zerg-cellularreactor.dds", "CommanderRaynorCellularReactorsTalentSimple", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_EFF3426B"));
    lib22142002_gf_US_GetDataManual("OrbitalStrike", "Assets\\Textures\\talent-raynor-level08-orbitaldroppods.dds", "CommanderRaynorOrbitalDepotsTalentSimple", 0, "FusionCoreResearch", "3", StringExternal("Param/Value/lib_22142002_5338D9F4"));
    lib22142002_gf_US_GetDataManual("FreeSpiderMines", "Assets\\Textures\\btn-ability-terran-spidermine.dds", "FreeSpiderMines", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_0C10F741"));
    lib22142002_gf_US_GetDataManual("CommandCenterReactor", "Assets\\Textures\\btn-research-terran-commandcenterreactor.dds", "CommanderRaynorCommandCenterReactorTalent", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_6D8E858A"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("HotSMonarchBlades", "Assets\\Textures\\btn-upgrade-zerg-monarchblades.dds", "MasteryAbathurSymbioteCDR", 0, "UltraliskCavernResearch", "3", StringExternal("Param/Value/lib_22142002_BFA2A641"));
    lib22142002_gf_US_GetDataManual("HydraliskExplosiveSpines", "Assets\\Textures\\btn-ability-zerg-stabburst.dds", "BanelingHunterPassive", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_33EB9502"));
    lib22142002_gf_US_GetDataManual("HotSParalyticSpines", "Assets\\Textures\\btn-ability-zerg-stab.dds", "CarrierPassive", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_E14A9B91"));
    lib22142002_gf_US_GetDataManual("HotSBanelingHeal", "Assets\\Textures\\btn-upgrade-zerg-regenerativebile.dds", "BanelingHealSmall", 0, "BanelingNestResearch", "2", StringExternal("Param/Value/lib_22142002_BCE76195"));
    lib22142002_gf_US_GetDataManual("LocustLifetimeIncrease", "Assets\\Textures\\btn-upgrade-zerg-evolveincreasedlocustlifetime.dds", "ResearchLocustLifetimeIncrease", 0, "InfestationPitResearch", "4", StringExternal("Param/Value/lib_22142002_BB344202"));
    lib22142002_gf_US_GetDataManual("HotSHaveDefiler", "Assets\\Textures\\btn-ability-zerg-defilerplague.dds", "MasteryZagaraHealthAndEnergyRegen", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_ABEBB751"));
    lib22142002_gf_US_GetDataManual("DefilerMetasynapticNode", "Assets\\Textures\\btn-upgrade-zerg-defilerenergy-color.dds", "CommanderAlarakTwilightCouncilUpgradesPack", 0, "SJHyperionResearchBanshees", "29", StringExternal("Param/Value/lib_22142002_B5BA6181"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("TempestRangeUpgrade", "Assets\\Textures\\btn-upgrade-protoss-researchgravitysling.dds", "TempestRangeUpgrade", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_EADD6783"));
    lib22142002_gf_US_GetDataManual("FreeInterceptors", "Assets\\Textures\\btn-unit-protoss-interceptor.dds", "FreeInterceptors", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_2ABBB234"));
    lib22142002_gf_US_GetDataManual("FreeScarabs", "Assets\\Textures\\btn-ability-protoss-scarabshot.dds", "FreeScarabs", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_802B2872"));
    lib22142002_gf_US_GetDataManual("SOAMatrixOverload", "Assets\\Textures\\btn-ability-spearofadun-matrixoverload.dds", "CommanderArtanisSpearofAdunMatrixOverload", 0, "FusionCoreResearch", "29", StringExternal("Param/Value/lib_22142002_6D0A8B76"));
    lib22142002_gf_US_GetDataManual("HotSHaveSwarmling", "Assets\\Textures\\btn-ability-protoss-shadowcannon.dds", "WarpInActiveDarkTemplarChampion", 0, "RoboticsBayResearch", "13", StringExternal("Param/Value/lib_22142002_0AA70EE3"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("StabilizerMedPacks", "Assets\\Textures\\btn-upgrade-raynor-stabilizermedpacks.dds", "CommanderRaynorStimUpgradeTalent", 0, "BarracksTechLabResearch", "3", StringExternal("Param/Value/lib_22142002_4C98AD25"));
    lib22142002_gf_US_GetDataManual("BearclawNozzles", "Assets\\Textures\\btn-upgrade-raynor-incineratorgauntlets.dds", "CommanderRaynorHyperionDurationTalentSimple", 0, "BarracksTechLabResearch", "4", StringExternal("Param/Value/lib_22142002_F5455C66"));
    lib22142002_gf_US_GetDataManual("FirebatJuggernautPlating", "Assets\\Textures\\btn-upgrade-raynor-juggernautplating.dds", "CommanderRaynorFactoryUpgradePack", 0, "BarracksTechLabResearch", "5", StringExternal("Param/Value/lib_22142002_E2B4E824"));
    lib22142002_gf_US_GetDataManual("NanobotInjectors", "Assets\\Textures\\btn-ability-stetmann-garystetelliteovercharge-health.dds", "LocustSpeed", 0, "BarracksTechLabResearch", "6", StringExternal("Param/Value/lib_22142002_75A6DAD2"));
    lib22142002_gf_US_GetDataManual("SupplyDepotDrop", "Assets\\Textures\\talent-raynor-level12-orbitaldepots.dds", "CommanderRaynorOrbitalDepots", 0, "FusionCoreResearch", "4", StringExternal("Param/Value/lib_22142002_27E5631B"));
    lib22142002_gf_US_GetDataManual("ShrikeTurret", "Assets\\Textures\\btn-research-zerg-shriketurret.dds", "CommanderRaynorFortifiedBunkersTalentSimple", 0, "EngineeringBayResearch", "17", StringExternal("Param/Value/lib_22142002_3D6597F4"));
    lib22142002_gf_US_GetDataManual("NanoConstructor", "Assets\\Textures\\btn-upgrade-raynor-replenishablemagazine.dds", "CommanderRaynorHyperionDurationTalent", 0, "FactoryTechLabResearch", "0", StringExternal("Param/Value/lib_22142002_CAC5C771"));
    lib22142002_gf_US_GetDataManual("CerberusMines", "Assets\\Textures\\btn-upgrade-raynor-cerberusmines.dds", "CommanderRaynorMercVulturesTalent", 0, "FactoryTechLabResearch", "2", StringExternal("Param/Value/lib_22142002_5C33C8A6"));
    lib22142002_gf_US_GetDataManual("NotPossibleSiegeMode", "Assets\\Textures\\btn-upgrade-raynor-improvedsiegemode.dds", "MorphZerglingToRaptor", 0, "FactoryTechLabResearch", "10", StringExternal("Param/Value/lib_22142002_D02EA52E"));
    lib22142002_gf_US_GetDataManual("TransformationServos", "Assets\\Textures\\btn-upgrade-terran-transformationservos-blue.dds", "TransformationServos", 0, "FactoryTechLabResearch", "16", StringExternal("Param/Value/lib_22142002_578D9074"));
    lib22142002_gf_US_GetDataManual("YamatoCannon", "Assets\\Textures\\btn-upgrade-terran-jotunboosters.dds", "MorphBanelingToSplitterling", 0, "ArmoryResearch", "1", StringExternal("Param/Value/lib_22142002_3A4F1B0F"));
    lib22142002_gf_US_GetDataManual("ClusterWarheads", "Assets\\Textures\\btn-upgrade-raynor-shockwavemissilebattery.dds", "CommanderRaynorUnlockBattlecruiser", 0, "StarportTechLabResearch", "1", StringExternal("Param/Value/lib_22142002_A9407978"));
    lib22142002_gf_US_GetDataManual("AresClassWeaponsSystemViking", "Assets\\Textures\\btn-upgrade-raynor-phobosclassweaponssystem.dds", "MasteryRaynorResearchSpeed", 0, "StarportTechLabResearch", "4", StringExternal("Param/Value/lib_22142002_8E35ACAC"));
    lib22142002_gf_US_GetDataManual("HALORockets", "Assets\\Textures\\btn-upgrade-raynor-ripwavemissiles.dds", "CommanderRaynorStarportUpgradePack", 0, "StarportTechLabResearch", "5", StringExternal("Param/Value/lib_22142002_8FDEA012"));
    lib22142002_gf_US_GetDataManual("HotSBurrowCharge", "Assets\\Textures\\talent-raynor-level03-firebatmedicrange.dds", "CommanderRaynorFirebatandMedicRange", 0, "StarportTechLabResearch", "5", StringExternal("Param/Value/lib_22142002_BE0C797E"));
    lib22142002_gf_US_GetDataManual("MercenaryMunitions", "Assets\\Textures\\talent-raynor-level14-infantryattackspeed.dds", "CommanderRaynorCellularReactorsTalent", 0, "FusionCoreResearch", "5", StringExternal("Param/Value/lib_22142002_8CD508BE"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("HotSZerglingHealth", "Assets\\Textures\\btn-upgrade-zerg-hardenedcarapace.dds", "CommanderStetmannLevel04", 0, "SpawningPoolResearch", "2", StringExternal("Param/Value/lib_22142002_E7CB192F"));
    lib22142002_gf_US_GetDataManual("ObverseIncubation", "Assets\\Textures\\btn-upgrade-zergling-armorshredding.dds", "CommanderZagaraBanelingNestUpgradesPack", 0, "SpawningPoolResearch", "3", StringExternal("Param/Value/lib_22142002_06E4B554"));
    lib22142002_gf_US_GetDataManual("HotSCreepGeneration", "Assets\\Textures\\btn-ability-zerg-carapace.dds", "CommanderKerriganMalignantCreep", 0, "evolutionchamberresearch", "19", StringExternal("Param/Value/lib_22142002_A33BF67C"));
    lib22142002_gf_US_GetDataManual("K5CreepBonuses", "Assets\\Textures\\btn-ability-kerrigan-malignantcreep.dds", "ZagaraVoidCoopCreepBonuses", 0, "evolutionchamberresearch", "18", StringExternal("Param/Value/lib_22142002_3556F667"));
    lib22142002_gf_US_GetDataManual("K5ImprovedOverlords", "Assets\\Textures\\btn-ability-kerrigan-improvedoverlords.dds", "K5ImprovedOverlords", 0, "evolutionchamberresearch", "20", StringExternal("Param/Value/lib_22142002_05FA63D3"));
    lib22142002_gf_US_GetDataManual("HotSHydraliskHealth", "Assets\\Textures\\btn-upgrade-zerg-ancillaryarmor.dds", "KerriganEnhance", 0, "HydraliskDenResearch", "2", StringExternal("Param/Value/lib_22142002_1B768941"));
    lib22142002_gf_US_GetDataManual("HotSHydraliskFrenzy", "Assets\\Textures\\btn-upgrade-zerg-frenzy.dds", "MasteryZagaraMassFrenzySpeedBoost", 0, "HydraliskDenResearch", "3", StringExternal("Param/Value/lib_22142002_0F0C7F5C"));
    lib22142002_gf_US_GetDataManual("HotSViciousGlaive", "Assets\\Textures\\btn-upgrade-zerg-viciousglaive.dds", "CommanderKerriganUltraliskUpgradesPack", 0, "SpireResearch", "8", StringExternal("Param/Value/lib_22142002_21437615"));
    lib22142002_gf_US_GetDataManual("HotSMetabolicBoost", "Assets\\Textures\\btn-upgrade-zerg-severingglaive.dds", "VolitileEjection", 0, "SpireResearch", "8", StringExternal("Param/Value/lib_22142002_0BECE882"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopSpawnBroodlings", "Assets\\Textures\\btn-upgrade-kerrigan-broodlordspeed.dds", "CommanderKerriganSpireUpgradesPack", 0, "SpireResearch", "11", StringExternal("Param/Value/lib_22142002_170311BC"));
    lib22142002_gf_US_GetDataManual("HotSUltraliskBurrowCharge", "Assets\\Textures\\btn-upgrade-zerg-burrowcharge.dds", "EvolveBurrowCharge", 0, "UltraliskCavernResearch", "1", StringExternal("Param/Value/lib_22142002_F9374F0B"));
    lib22142002_gf_US_GetDataManual("HotSTissueAssimilation", "Assets\\Textures\\btn-upgrade-zerg-tissueassimilation.dds", "CommanderKerriganImprovedLeapingStrike", 0, "UltraliskCavernResearch", "4", StringExternal("Param/Value/lib_22142002_F105B039"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("ChampionUpgradeArtanisLifeArmorLevel", "Assets\\Textures\\talent-artanis-level14-startingmaxsupply.dds", "MasteryKerriganAutoAttackDamage", 0, "ForgeResearch", "14", StringExternal("Param/Value/lib_22142002_6D69DE74"));
    lib22142002_gf_US_GetDataManual("SuperiorWarpGates", "Assets\\Textures\\talent-artanis-level03-warpgatecharges.dds", "CommanderArtanisWarpgateCharges", 0, "ForgeResearch", "15", StringExternal("Param/Value/lib_22142002_4BACB775"));
    lib22142002_gf_US_GetDataManual("WarpHarmonization", "Assets\\Textures\\btn-ability-spearofadun-warpharmonization.dds", "ResearchWarpHarmonization", 0, "CyberneticsCoreResearch", "12", StringExternal("Param/Value/lib_22142002_03858BA2"));
    lib22142002_gf_US_GetDataManual("SingularityCharge", "Assets\\Textures\\btn-upgrade-artanis-singularitycharge.dds", "ResearchSingularityCharge", 0, "TwilightCouncilResearch", "6", StringExternal("Param/Value/lib_22142002_11739FA6"));
    lib22142002_gf_US_GetDataManual("VoidZealotWhirlwind", "Assets\\Textures\\btn-ability-protoss-whirlwind.dds", "CommanderArtanisRoboticsBayUpgradesPack", 0, "TwilightCouncilResearch", "2", StringExternal("Param/Value/lib_22142002_3774C923"));
    lib22142002_gf_US_GetDataManual("HaveFenixChampion", "Assets\\Textures\\btn-ability-protoss-dragoonchassis.dds", "FenixChampionPowerShield", 0, "TwilightCouncilResearch", "7", StringExternal("Param/Value/lib_22142002_E8532F29"));
    lib22142002_gf_US_GetDataManual("VoidHighTemplarArchonAdvanced", "Assets\\Textures\\btn-upgrade-artanis-healingpsionicstorm.dds", "ResearchPlasmaSurge", 0, "TemplarArchivesResearch", "1", StringExternal("Param/Value/lib_22142002_2F4B69D1"));
    lib22142002_gf_US_GetDataManual("HighTemplarKhaydarinAmulet", "Assets\\Textures\\btn-upgrade-protoss-khaydarinamulet.dds", "ResearchHighTemplarEnergyUpgrade", 0, "TemplarArchivesResearch", "0", StringExternal("Param/Value/lib_22142002_F8870FA4"));
    lib22142002_gf_US_GetDataManual("VoidImmortalBarrier", "Assets\\Textures\\btn-ability-protoss-barrier-upgraded.dds", "ResearchBarrier", 0, "RoboticsBayResearch", "0", StringExternal("Param/Value/lib_22142002_94915538"));
    lib22142002_gf_US_GetDataManual("ReaverScarabHousing", "Assets\\Textures\\btn-upgrade-protoss-reavercapacity.dds", "ReaverChampionScarabs", 0, "RoboticsBayResearch", "4", StringExternal("Param/Value/lib_22142002_D5C19488"));
    lib22142002_gf_US_GetDataManual("ReaverSolaritePayload", "Assets\\Textures\\btn-upgrade-artanis-scarabsplashradius.dds", "VoidReaverSplashSize", 0, "RoboticsBayResearch", "3", StringExternal("Param/Value/lib_22142002_74F7C442"));
    lib22142002_gf_US_GetDataManual("VoidPhoenixDoubleGraviton", "Assets\\Textures\\btn-ability-protoss-dualgravitonbeam.dds", "VoidPhoenixDoubleGraviton", 0, "FleetBeaconResearch", "6", StringExternal("Param/Value/lib_22142002_07924CF6"));
    lib22142002_gf_US_GetDataManual("VoidTempestRange", "Assets\\Textures\\btn-ability-protoss-astralwind.dds", "VoidTempestVision", 0, "FleetBeaconResearch", "7", StringExternal("Param/Value/lib_22142002_3C4132DE"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("AdvancedConstruction", "Assets\\Textures\\talent-swann-level08-improvedscvs.dds", "CommanderSwannVehicleSpecialist", 0, "FusionCoreResearch", "7", StringExternal("Param/Value/lib_22142002_CBA3EEAF"));
    lib22142002_gf_US_GetDataManual("DualFusionWelders", "Assets\\Textures\\btn-upgrade-swann-scvdoublerepair.dds", "MasterySwannImmortalityProtocol", 0, "FusionCoreResearch", "8", StringExternal("Param/Value/lib_22142002_5B701D1A"));
    lib22142002_gf_US_GetDataManual("FireSuppressionSystems", "Assets\\Textures\\btn-upgrade-swann-firesuppressionsystem.dds", "CommanderRaynorFireSuppressionTalentSimple", 0, "EngineeringBayResearch", "19", StringExternal("Param/Value/lib_22142002_D52728FA"));
    lib22142002_gf_US_GetDataManual("HellionCampaignInfernalPreIgniter", "Assets\\Textures\\btn-upgrade-swann-hellarmor.dds", "CommanderSwannTechReactors", 0, "FactoryTechLabResearch", "14", StringExternal("Param/Value/lib_22142002_4BFE09C8"));
    lib22142002_gf_US_GetDataManual("AresClassWeaponsSystem", "Assets\\Textures\\btn-upgrade-swann-aresclasstargetingsystem.dds", "BurrowChargeCampaign", 0, "FactoryTechLabResearch", "11", StringExternal("Param/Value/lib_22142002_B0C782C6"));
    lib22142002_gf_US_GetDataManual("MultilockTargetingSystems", "Assets\\Textures\\btn-upgrade-swann-multilockweaponsystem.dds", "BurrowCharge", 0, "FactoryTechLabResearch", "12", StringExternal("Param/Value/lib_22142002_B59C5E7B"));
    lib22142002_gf_US_GetDataManual("MaelstromRounds", "Assets\\Textures\\btn-upgrade-raynor-maelstromrounds.dds", "VoidDarkArchonImprovedMaelstrom", 0, "FactoryTechLabResearch", "13", StringExternal("Param/Value/lib_22142002_6AAFECE7"));
    lib22142002_gf_US_GetDataManual("CycloneLockOnRangeUpgrade", "Assets\\Textures\\btn-upgrade-swann-targetingoptics.dds", "ResearchLockOnRangeUpgrade", 0, "FactoryTechLabResearch", "5", StringExternal("Param/Value/lib_22142002_322CF44B"));
    lib22142002_gf_US_GetDataManual("330mmBarrageCannons", "Assets\\Textures\\btn-ability-terran-bombardmentstrike-color.dds", "MasterySwannLaserDrillBuildTime", 0, "FactoryTechLabResearch", "15", StringExternal("Param/Value/lib_22142002_2B0159DD"));
    lib22142002_gf_US_GetDataManual("DarkTemplarTactics", "Assets\\Textures\\btn-upgrade-swann-vehiclerangeincrease.dds", "SOAPhotonCannon", 0, "ArmoryResearch", "0", StringExternal("Param/Value/lib_22142002_421400C8"));
    lib22142002_gf_US_GetDataManual("RegenerativeBioSteel", "Assets\\Textures\\btn-upgrade-swann-regenerativebiosteel.dds", "CommanderRaynorRavenAttackSpeedTalentSimple", 0, "ArmoryResearch", "17", StringExternal("Param/Value/lib_22142002_F874D63C"));
    lib22142002_gf_US_GetDataManual("WraithCloak", "Assets\\Textures\\btn-upgrade-swann-improvedburstlaser.dds", "MasterySwannStartingResources", 0, "StarportTechLabResearch", "15", StringExternal("Param/Value/lib_22142002_EDB5437F"));
    lib22142002_gf_US_GetDataManual("CloakDistortionField", "Assets\\Textures\\btn-upgrade-swann-displacementfield.dds", "CommanderSwannImmortalityProtocol", 0, "StarportTechLabResearch", "14", StringExternal("Param/Value/lib_22142002_F7D2A21F"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopFury", "Assets\\Textures\\btn-upgrade-swann-improvednanorepair.dds", "MorphZerglingToSwarmling", 0, "StarportTechLabResearch", "11", StringExternal("Param/Value/lib_22142002_B1193556"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopDevouringMaw", "Assets\\Textures\\btn-upgrade-swann-defensivematrix.dds", "DefensiveMatrixSpecialization", 0, "StarportTechLabResearch", "8", StringExternal("Param/Value/lib_22142002_E268B5E4"));
    lib22142002_gf_US_GetDataManual("SurvivalPods", "Assets\\Textures\\btn-ability-terran-hercules-tacticaljump.dds", "ResearchWarpJump", 0, "FusionCoreResearch", "11", StringExternal("Param/Value/lib_22142002_09387D52"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("ChampionUpgradeArtanisLifeMax", "Assets\\Textures\\btn-upgrade-zerg-zagara-zerglingdodge.dds", "MasteryZagaraZerglingDodgeChance", 0, "SpawningPoolResearch", "6", StringExternal("Param/Value/lib_22142002_8756E2DC"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopInfestBroodlings", "Assets\\Textures\\btn-upgrade-zerg-demolition.dds", "CommanderZagaraScourgeUpgradesPack", 0, "SpawningPoolResearch", "5", StringExternal("Param/Value/lib_22142002_56A33721"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopNydusWorm", "Assets\\Textures\\btn-upgrade-zagara-increasebilelauncherrange.dds", "CommanderZagaraZerglingEvolutionSwarmling", 0, "SpawningPoolResearch", "4", StringExternal("Param/Value/lib_22142002_1A10BE9A"));
    lib22142002_gf_US_GetDataManual("HotSBanelingCorrosiveBile", "Assets\\Textures\\btn-upgrade-zerg-corrosiveacid.dds", "BanelingBurrowMove", 0, "BanelingNestResearch", "1", StringExternal("Param/Value/lib_22142002_32BF6708"));
    lib22142002_gf_US_GetDataManual("HotsViscousDischarge", "Assets\\Textures\\btn-upgrade-zerg-rupture.dds", "RuptureUpgrade", 0, "BanelingNestResearch", "3", StringExternal("Param/Value/lib_22142002_8E718D44"));
    lib22142002_gf_US_GetDataManual("VoidSentryAiur", "Assets\\Textures\\talent-zagara-level03-improvedinjectlarva.dds", "EvolveImprovedLarvaeInject", 0, "evolutionchamberresearch", "21", StringExternal("Param/Value/lib_22142002_2AE1BDC7"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopBanelingSpawner", "Assets\\Textures\\btn-unit-zerg-baneling.dds", "EvolveIncubateBanelings", 0, "evolutionchamberresearch", "14", StringExternal("Param/Value/lib_22142002_F62F4BE5"));
    lib22142002_gf_US_GetDataManual("VoidSentryStandard", "Assets\\Textures\\talent-zagara-level07-volatilebanelingnest.dds", "BirthingChamber", 0, "evolutionchamberresearch", "22", StringExternal("Param/Value/lib_22142002_4117EBF8"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopInfestedPods", "Assets\\Textures\\btn-upgrade-zagara-aberrationarmorcover.dds", "CommanderZagaraIncubateBroodlings", 0, "evolutionchamberresearch", "17", StringExternal("Param/Value/lib_22142002_E355D376"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopDeepTunnel", "Assets\\Textures\\btn-upgrade-zagara-scourgesplashdamage.dds", "HotSZerglingSunder", 0, "SpireResearch", "6", StringExternal("Param/Value/lib_22142002_47C4F4C7"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopGasBonuses", "Assets\\Textures\\btn-upgrade-zagara-scourgegasreduction.dds", "CommanderZagaraUnlockBileLauncher", 0, "SpireResearch", "7", StringExternal("Param/Value/lib_22142002_8863544D"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("VoidZealotShadowCharge", "Assets\\Textures\\btn-ability-protoss-shadowcharge.dds", "KerriganRulerUproot", 0, "TwilightCouncilResearch", "9", StringExternal("Param/Value/lib_22142002_815BA127"));
    lib22142002_gf_US_GetDataManual("HaveZealotBase", "Assets\\Textures\\btn-upgrade-vorazun-shadowstun.dds", "RegenerationAura", 0, "TwilightCouncilResearch", "8", StringExternal("Param/Value/lib_22142002_08AF2CDB"));
    lib22142002_gf_US_GetDataManual("VoidStalkerBlinkShieldRestore", "Assets\\Textures\\btn-ability-protoss-blinkshieldrestore.dds", "CommanderVorazunDarkArchonUpgradesPack", 0, "TwilightCouncilResearch", "10", StringExternal("Param/Value/lib_22142002_B48440CB"));
    lib22142002_gf_US_GetDataManual("VoidDarkTemplarShadowFury", "Assets\\Textures\\btn-ability-protoss-shadowfury.dds", "RoyalGuard", 0, "DarkShrineResearch", "1", StringExternal("Param/Value/lib_22142002_3AD1B1C3"));
    lib22142002_gf_US_GetDataManual("HotsCannibalize", "Assets\\Textures\\btn-ability-protoss-invulnerabilityshield.dds", "SwarmHostCarrionPassive", 0, "DarkShrineResearch", "2", StringExternal("Param/Value/lib_22142002_891F7704"));
    lib22142002_gf_US_GetDataManual("VoidDarkArchonDarkAmulet", "Assets\\Textures\\btn-upgrade-protoss-argustalisman-new.dds", "HotSSecondaryGooDucts", 0, "DarkShrineResearch", "4", StringExternal("Param/Value/lib_22142002_924E7AF6"));
    lib22142002_gf_US_GetDataManual("VoidDarkTemplarDarkArchon", "Assets\\Textures\\btn-ability-protoss-mindcontrol.dds", "ResearchMindControl", 0, "DarkShrineResearch", "3", StringExternal("Param/Value/lib_22142002_57676BC0"));
    lib22142002_gf_US_GetDataManual("HaveVoidCorsair", "Assets\\Textures\\btn-ability-protoss-disruptionweb.dds", "CommanderTraitVorazunSOASummonDarkPylon", 0, "FleetBeaconResearch", "1", StringExternal("Param/Value/lib_22142002_CC999CFC"));
    lib22142002_gf_US_GetDataManual("VoidHighTemplarCloak", "Assets\\Textures\\btn-upgrade-vorazun-corsairpermanentlycloaked.dds", "CommanderVorazunFleetBeaconUpgradesPack", 0, "FleetBeaconResearch", "8", StringExternal("Param/Value/lib_22142002_D56C98AB"));
    lib22142002_gf_US_GetDataManual("VoidVoidRayShakuras", "Assets\\Textures\\btn-ability-protoss-prismaticrange.dds", "ReviveToKerriganNotFlyer", 0, "FleetBeaconResearch", "9", StringExternal("Param/Value/lib_22142002_9334EEF7"));
    lib22142002_gf_US_GetDataManual("HaveCarrier", "Assets\\Textures\\btn-ability-protoss-oracle-stasiscalibration.dds", "ReviveToKerriganSpecOps", 0, "FleetBeaconResearch", "10", StringExternal("Param/Value/lib_22142002_E83DF7CD"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("VoidZealotSuperShields", "Assets\\Textures\\btn-ability-protoss-reconstruction.dds", "CommanderKaraxSolarForgeUpgradesPack1", 0, "TwilightCouncilResearch", "16", StringExternal("Param/Value/lib_22142002_145E0869"));
    lib22142002_gf_US_GetDataManual("VoidSentryEnergy", "Assets\\Textures\\btn-upgrade-karax-energyregen200.dds", "CommanderKaraxUnlockKhaydarinMonolith", 0, "TwilightCouncilResearch", "17", StringExternal("Param/Value/lib_22142002_6544BA84"));
    lib22142002_gf_US_GetDataManual("VoidSentryNoEnergy", "Assets\\Textures\\btn-ability-protoss-reclamation.dds", "CommanderKaraxRoboticsBayUpgradesPack", 0, "TwilightCouncilResearch", "18", StringExternal("Param/Value/lib_22142002_B7BCA89F"));
    lib22142002_gf_US_GetDataManual("KaraxPAlpha01", "Assets\\Textures\\btn-upgrade-karax-turretrange.dds", "KaraxUrgency", 0, "ForgeResearch", "11", StringExternal("Param/Value/lib_22142002_50285FA4"));
    lib22142002_gf_US_GetDataManual("SOAPhotonCannon", "Assets\\Textures\\btn-upgrade-karax-turretattackspeed.dds", "KaraxSpawnReplicants", 0, "ForgeResearch", "12", StringExternal("Param/Value/lib_22142002_E87B8F42"));
    lib22142002_gf_US_GetDataManual("KaraxSpawnReplicants", "Assets\\Textures\\btn-upgrade-karax-fortificationbarrier.dds", "ArtanisHeroicShieldBuff", 0, "ForgeResearch", "13", StringExternal("Param/Value/lib_22142002_EABCFA80"));
    lib22142002_gf_US_GetDataManual("VoidColossusFireBeam", "Assets\\Textures\\btn-ability-protoss-firebeam.dds", "MasteryKaraxUnitVital", 0, "RoboticsBayResearch", "11", StringExternal("Param/Value/lib_22142002_083E862E"));
    lib22142002_gf_US_GetDataManual("IncreasedRange", "Assets\\Textures\\btn-ability-protoss-shadowcannon.dds", "DragoonPassive", 0, "RoboticsBayResearch", "12", StringExternal("Param/Value/lib_22142002_9E0AB690"));
    lib22142002_gf_US_GetDataManual("VoidPhoenixPhasingArmor", "Assets\\Textures\\btn-ability-protoss-phasingarmor.dds", "TerranInfantryArmorVanadiumPlatingLevel2", 0, "FleetBeaconResearch", "11", StringExternal("Param/Value/lib_22142002_137922C2"));
    lib22142002_gf_US_GetDataManual("KaraxRepairDrone", "Assets\\Textures\\btn-ability-protoss-carrierrepairdrones.dds", "VoidPhoenixGravitonCooldown", 0, "FleetBeaconResearch", "12", StringExternal("Param/Value/lib_22142002_30FACED9"));
    lib22142002_gf_US_GetDataManual("CarrierLaunchSpeedUpgrade", "Assets\\Textures\\btn-upgrade-protoss-gravitoncatapult.dds", "ResearchInterceptorLaunchSpeedUpgrade", 0, "FleetBeaconResearch", "0", StringExternal("Param/Value/lib_22142002_79C08E4E"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("HotSRoachDamage", "Assets\\Textures\\btn-upgrade-zerg-hydriaticacid.dds", "HotSToxicBile", 0, "RoachWarrenResearch", "0", StringExternal("Param/Value/lib_22142002_F23A7D51"));
    lib22142002_gf_US_GetDataManual("HotSRoachShield", "Assets\\Textures\\btn-upgrade-zerg-adaptivecarapace.dds", "RoachSpeed", 0, "RoachWarrenResearch", "3", StringExternal("Param/Value/lib_22142002_5AA40115"));
    lib22142002_gf_US_GetDataManual("RavagerRange", "Assets\\Textures\\btn-ability-zerg-abathur-corrosivebilelarge.dds", "CommanderAbathurRoachEvolutionVile", 0, "RoachWarrenResearch", "6", StringExternal("Param/Value/lib_22142002_31DB04FA"));
    lib22142002_gf_US_GetDataManual("RoachSupply", "Assets\\Textures\\potentbile_coop.dds", "ResearchRavagerRange", 0, "RoachWarrenResearch", "7", StringExternal("Param/Value/lib_22142002_C4811EAA"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopAttackUpgrade", "Assets\\Textures\\btn-upgrade-zerg-abathur-biomechanicaltransfusion.dds", "CommanderAbathurUnlockInfestationPitUpgrades", 0, "LairResearch", "0", StringExternal("Param/Value/lib_22142002_7D8D202D"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopBanelingBarrage", "Assets\\Textures\\btn-upgrade-zerg-abathur-incubationchamber.dds", "CommanderAbathurUnlockViper", 0, "LairResearch", "4", StringExternal("Param/Value/lib_22142002_49B6FD66"));
    lib22142002_gf_US_GetDataManual("HotSPressurizedGlands", "Assets\\Textures\\btn-upgrade-zerg-pressurizedglands.dds", "CommanderAbathurImprovedMend", 0, "InfestationPitResearch", "0", StringExternal("Param/Value/lib_22142002_CFD46DB3"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopCreepMaster", "Assets\\Textures\\btn-upgrade-zerg-abathur-castrange.dds", "MasteryAbathurMendHeal", 0, "InfestationPitResearch", "1", StringExternal("Param/Value/lib_22142002_74443114"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopImprovedOverlords", "Assets\\Textures\\btn-ability-zerg-deeptunnel.dds", "KerriganCorruption", 0, "InfestationPitResearch", "6", StringExternal("Param/Value/lib_22142002_C8EE7C84"));
    lib22142002_gf_US_GetDataManual("ZagaraVoidCoopCreepBonuses", "Assets\\Textures\\btn-upgrade-zerg-abathur-abduct.dds", "MasteryAbathurToxicNestDamageAndRespawn", 0, "InfestationPitResearch", "7", StringExternal("Param/Value/lib_22142002_088363EB"));
    lib22142002_gf_US_GetDataManual("HotSExplosiveGlaive", "Assets\\Textures\\btn-upgrade-zerg-explosiveglaive.dds", "KerriganEnhanceOff", 0, "SpireResearch", "10", StringExternal("Param/Value/lib_22142002_C1C40F60"));
    lib22142002_gf_US_GetDataManual("ReaperJump", "Assets\\Textures\\btn-upgrade-zerg-abathur-prolongeddispersion.dds", "MasteryDehakaLevelUpLife", 0, "SpireResearch", "12", StringExternal("Param/Value/lib_22142002_549A37BD"));
    lib22142002_gf_US_GetDataManual("ImpalerRounds", "Assets\\Textures\\btn-upgrade-zerg-abathur-devourer-corrosivespray.dds", "MasteryKerriganCocoonTimer", 0, "SpireResearch", "13", StringExternal("Param/Value/lib_22142002_52D2C5DD"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("AlarakTerrazineInsanity", "Assets\\Textures\\btn-upgrade-protoss-alarak-permanentcloak.dds", "MorphToKerriganCorruption", 0, "CyberneticsCoreResearch", "10", StringExternal("Param/Value/lib_22142002_27BA75AE"));
    lib22142002_gf_US_GetDataManual("AlarakEnergyForm", "Assets\\Textures\\btn-upgrade-protoss-alarak-rangeincrease.dds", "CreepingDoom", 0, "CyberneticsCoreResearch", "8", StringExternal("Param/Value/lib_22142002_0CD446BA"));
    lib22142002_gf_US_GetDataManual("AlarakMindControl", "Assets\\Textures\\btn-upgrade-protoss-alarak-havoctargetlockbuffed.dds", "CreepGeneration", 0, "CyberneticsCoreResearch", "7", StringExternal("Param/Value/lib_22142002_8EC02D78"));
    lib22142002_gf_US_GetDataManual("AlarakSupplicantShieldArmor", "Assets\\Textures\\btn-upgrade-protoss-alarak-supplicantarmor.dds", "DeafeningRoar", 0, "TwilightCouncilResearch", "12", StringExternal("Param/Value/lib_22142002_289E67D2"));
    lib22142002_gf_US_GetDataManual("AbdominalFortitude", "Assets\\Textures\\btn-ability-protoss-blink-taldarimphase.dds", "HydraliskImpalerPassive", 0, "TwilightCouncilResearch", "14", StringExternal("Param/Value/lib_22142002_DF7CC6F9"));
    lib22142002_gf_US_GetDataManual("AlarakSupplicantMaxShields", "Assets\\Textures\\btn-upgrade-protoss-alarak-supplicantextrashields.dds", "MorphIsKerriganSpecOps", 0, "TwilightCouncilResearch", "13", StringExternal("Param/Value/lib_22142002_CE261C67"));
    lib22142002_gf_US_GetDataManual("BanelingBurrowMove", "Assets\\Textures\\btn-upgrade-protoss-alarak-stalkerphasingarmor.dds", "HydraliskDenImpalerPassive", 0, "TwilightCouncilResearch", "15", StringExternal("Param/Value/lib_22142002_678C08BD"));
    lib22142002_gf_US_GetDataManual("TaldarimMindBlast", "Assets\\Textures\\btn-ability-protoss-mindblast.dds", "TaldarimMindBlast", 0, "TemplarArchivesResearch", "5", StringExternal("Param/Value/lib_22142002_0C3EC68A"));
    lib22142002_gf_US_GetDataManual("AlarakMindBlast", "Assets\\Textures\\btn-upgrade-protoss-alarak-ascendant'spsiorbtravelsfurther.dds", "AlarakPsiOrbUpgrade", 0, "TemplarArchivesResearch", "7", StringExternal("Param/Value/lib_22142002_A1CFD03E"));
    lib22142002_gf_US_GetDataManual("AnionPulseCrystals", "Assets\\Textures\\btn-upgrade-protoss-alarak-ascendantspermanentlybetter.dds", "MasteryAlarakChronoBoostSpeed", 0, "TemplarArchivesResearch", "6", StringExternal("Param/Value/lib_22142002_3839ECC6"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeMohandarDamage", "Assets\\Textures\\btn-upgrade-protoss-vanguard-increasedarmordamage.dds", "TerranInfantryWeaponsUltraCapacitorsLevel3", 0, "RoboticsBayResearch", "9", StringExternal("Param/Value/lib_22142002_9E1564F8"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeArtanisDamage", "Assets\\Textures\\btn-upgrade-protoss-vanguard-aoeradiusincreased.dds", "ColossusPassive", 0, "RoboticsBayResearch", "10", StringExternal("Param/Value/lib_22142002_C6C44ACC"));
    lib22142002_gf_US_GetDataManual("AerialTracking", "Assets\\Textures\\btn-upgrade-protoss-wrathwalker-cantargetairunits.dds", "CommanderAlarakRoboticsBayUpgradesPack", 0, "RoboticsBayResearch", "6", StringExternal("Param/Value/lib_22142002_F502695A"));
    lib22142002_gf_US_GetDataManual("WrathwalkerRapidPowerCycling", "Assets\\Textures\\btn-upgrade-protoss-wrathwalker-chargetimeimproved.dds", "WarpInActiveDarkArchonChampion", 0, "RoboticsBayResearch", "8", StringExternal("Param/Value/lib_22142002_0A47EBAF"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("VoidImmortalShakuras", "Assets\\Textures\\btn-upgrade-terran-lazertargetingsystem.dds", "BanelingPassive", 0, "BarracksTechLabResearch", "9", StringExternal("Param/Value/lib_22142002_34D1E7AC"));
    lib22142002_gf_US_GetDataManual("SuperStimpackNova", "Assets\\Textures\\btn-upgrade-nova-equipment-superstimppack.dds", "MothershipPassive", 0, "BarracksTechLabResearch", "10", StringExternal("Param/Value/lib_22142002_0C00BA3E"));
    lib22142002_gf_US_GetDataManual("TerranShipWeaponsUltraCapacitorsLevel2", "Assets\\Textures\\btn-ability-terran-superconcussive.dds", "TerranShipPlatingVanadiumPlatingLevel3", 0, "BarracksTechLabResearch", "11", StringExternal("Param/Value/lib_22142002_27136B42"));
    lib22142002_gf_US_GetDataManual("ProtoTitanUpgrade1B", "Assets\\Textures\\btn-upgrade-terran-magrailmunitions.dds", "TerranInfantryArmorVanadiumPlatingLevel3", 0, "BarracksTechLabResearch", "12", StringExternal("Param/Value/lib_22142002_2F94018E"));
    lib22142002_gf_US_GetDataManual("VoidCarrierTempest", "Assets\\Textures\\btn-ability-terran-emp-color.dds", "RoachPassive", 0, "BarracksTechLabResearch", "13", StringExternal("Param/Value/lib_22142002_BD9CAEA7"));
    lib22142002_gf_US_GetDataManual("Predator", "Assets\\Textures\\btn-upgrade-terran-nova-snipetripletap.dds", "HighTemplarPassive", 0, "BarracksTechLabResearch", "14", StringExternal("Param/Value/lib_22142002_7DEF8B0C"));
    lib22142002_gf_US_GetDataManual("TerranVehicleWeaponsUltraCapacitorsLevel2", "Assets\\Textures\\btn-upgrade-terran-nova-hellbatjumpjets.dds", "CommanderNovaUnlockNukeandHoloDecoy", 0, "FactoryTechLabResearch", "21", StringExternal("Param/Value/lib_22142002_8ECAEA5D"));
    lib22142002_gf_US_GetDataManual("TerranInfantryArmorsVanadiumPlatingLevel1", "Assets\\Textures\\btn-upgrade-terran-nova-hellfiremissiles-lockdown.dds", "TerranShipWeaponsUltraCapacitorsLevel1", 0, "FactoryTechLabResearch", "22", StringExternal("Param/Value/lib_22142002_3EF288C9"));
    lib22142002_gf_US_GetDataManual("ProtoTitanUpgrade2A", "Assets\\Textures\\btn-upgrade-terran-nova-siegetankrange.dds", "MasteryNovaGriffinCooldown", 0, "FactoryTechLabResearch", "24", StringExternal("Param/Value/lib_22142002_82A8274B"));
    lib22142002_gf_US_GetDataManual("EMPTower", "Assets\\Textures\\btn-ability-nova-banshee-permanentcloak.dds", "CommanderNovaBaseTrait", 0, "FactoryTechLabResearch", "22", StringExternal("Param/Value/lib_22142002_F81C7B1A"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeFenixShieldArmorLevel", "Assets\\Textures\\btn-upgrade-terran-nova-bansheemissilestrik.dds", "TerranShipPlatingVanadiumPlatingLevel2", 0, "FactoryTechLabResearch", "23", StringExternal("Param/Value/lib_22142002_AA52C78E"));
    lib22142002_gf_US_GetDataManual("HotSHaveZergling", "Assets\\Textures\\talent-raynor-level06-unlockliberator.dds", "SpineCrawlerPassive", 0, "FactoryTechLabResearch", "25", StringExternal("Param/Value/lib_22142002_8D481301"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeFenixLifeArmorLevel", "Assets\\Textures\\btn-upgrade-terran-nova-terrandefendermodestructureattack.dds", "ArtanisMaelstrom", 0, "FactoryTechLabResearch", "24", StringExternal("Param/Value/lib_22142002_60E443AB"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeVulcanShieldArmorLevel", "Assets\\Textures\\btn-upgrade-terran-nova-repairbeamcloak.dds", "MasterySwannResearchSpeed", 0, "FactoryTechLabResearch", "26", StringExternal("Param/Value/lib_22142002_437D647F"));
    lib22142002_gf_US_GetDataManual("ChampionUpgradeArtanisShieldArmorLevel", "Assets\\Textures\\btn-upgrade-terran-nova-superscience.dds", "MasterySwannBuildingHealth", 0, "FactoryTechLabResearch", "27", StringExternal("Param/Value/lib_22142002_6D89DB01"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("HaveVoidReaver", "Assets\\Textures\\btn-ability-stukov-infestedcivilianstructurelv1.dds", "ArtanisAttackSpec", 1, "EngineeringBayResearch", "2", StringExternal("Param/Value/lib_22142002_CF9D8ED9"));
    lib22142002_gf_US_GetDataManual("HaveVoidRay", "Assets\\Textures\\btn-ability-stukov-infestedcivilianstructurelv2.dds", "CommanderArtanisTwilightCouncilUpgradesPack", 2, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_073F7BA9"));
    lib22142002_gf_US_GetDataManual("HaveTempest", "Assets\\Textures\\btn-ability-stukov-infestedcivilianstructure_lv3.dds", "MasteryRaynorDuskWingCooldown", 3, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_85C462D0"));
    lib22142002_gf_US_GetDataManual("HotSRapidMetamorph", "Assets\\Textures\\btn-ability-zerg-stukov-infeststructureupgrade.dds", "MasteryStukovBroodlingSpawnRate", 0, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_40C32444"));
    lib22142002_gf_US_GetDataManual("ScavengingSystems", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedciviliansleap.dds", "CommanderStukovInfestedCivilianResearch", 0, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_2ED26B8F"));
    lib22142002_gf_US_GetDataManual("HotSExplosiveSpines", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedspawnbroodling.dds", "CommanderStukovInfestedFactoryResearchPack", 0, "EngineeringBayResearch", "1", StringExternal("Param/Value/lib_22142002_1701893D"));
    lib22142002_gf_US_GetDataManual("ArtanisInspire", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedmarinerangeupgrade.dds", "MasteryStukovMechAttackSpeed", 0, "BarracksTechLabResearch", "7", StringExternal("Param/Value/lib_22142002_4BBFAB32"));
    lib22142002_gf_US_GetDataManual("ArtanisInspireShield", "Assets\\Textures\\btn-ability-stukov-plaugedmunitions.dds", "MasteryStukovUnitMoveSpeed", 0, "BarracksTechLabResearch", "8", StringExternal("Param/Value/lib_22142002_EE727D7B"));
    lib22142002_gf_US_GetDataManual("HaveArtanisChampion", "Assets\\Textures\\btn-upgrade-zerg-stukov-bunkerformliferegenupgraded.dds", "ZagaraVoidCoopInfestedPods", 0, "EngineeringBayResearch", "20", StringExternal("Param/Value/lib_22142002_EE074286"));
    lib22142002_gf_US_GetDataManual("ArtanisCasterSpec", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedbunkermorelife.dds", "CommanderStukovImprovedInfestStructure", 0, "EngineeringBayResearch", "21", StringExternal("Param/Value/lib_22142002_F0F1A33A"));
    lib22142002_gf_US_GetDataManual("TechReactorAI", "Assets\\Textures\\btn-ability-zerg-stukov-ensnarecdr.dds", "MasteryArtanisWarpChargeCooldown", 0, "FactoryTechLabResearch", "20", StringExternal("Param/Value/lib_22142002_B2A63763"));
    lib22142002_gf_US_GetDataManual("HaveColossus", "Assets\\Textures\\btn-upgrade-zerg-stukov-diamondbacksnailtrail.dds", "MasteryArtanisSolarBombardment", 0, "FactoryTechLabResearch", "19", StringExternal("Param/Value/lib_22142002_E3336E29"));
    lib22142002_gf_US_GetDataManual("SOAWarpTech", "Assets\\Textures\\btn-upgrade-zerg-stukov-siegetankammoregen.dds", "MasteryArtanisStartingAndMaxSoAEnergy", 0, "FactoryTechLabResearch", "17", StringExternal("Param/Value/lib_22142002_4D30F037"));
    lib22142002_gf_US_GetDataManual("ArtanisRangeIncrease", "Assets\\Textures\\btn-upgrade-zerg-stukov-siegetankbonusdamage.dds", "MasteryArtanisShieldRegen", 0, "FactoryTechLabResearch", "18", StringExternal("Param/Value/lib_22142002_1CF0C764"));
    lib22142002_gf_US_GetDataManual("HaveVoidScout", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedliberatoraoe.dds", "KerriganSwarmMistressFrenzy", 0, "StarportTechLabResearch", "20", StringExternal("Param/Value/lib_22142002_9E1441AA"));
    lib22142002_gf_US_GetDataManual("HaveVoidTempest", "Assets\\Textures\\btn-upgrade-zerg-stukov-infestedliberatorswarmcloud.dds", "KerriganRevivePlacement", 0, "StarportTechLabResearch", "19", StringExternal("Param/Value/lib_22142002_85A6EEE0"));
    lib22142002_gf_US_GetDataManual("HaveWarpPrism", "Assets\\Textures\\btn-upgrade-zerg-stukov-bansheeburrowregeneration.dds", "MasteryAbathurDoubleBiomass", 0, "StarportTechLabResearch", "18", StringExternal("Param/Value/lib_22142002_C5B43BC2"));
    lib22142002_gf_US_GetDataManual("HaveZealot", "Assets\\Textures\\btn-upgrade-zerg-stukov-bansheemorelife.dds", "MasteryKerriganMutatingCarapaceLifeDegradation", 0, "StarportTechLabResearch", "17", StringExternal("Param/Value/lib_22142002_9D115E9D"));
    lib22142002_gf_US_GetDataManual("HotSBurrowSwarmHost", "Assets\\Textures\\btn-ability-zerg-rapidregeneration-color.dds", "QueenPassive", 0, "StarportTechLabResearch", "21", StringExternal("Param/Value/lib_22142002_4A968E3D"));
    lib22142002_gf_US_GetDataManual("HotsBarbedTalons", "Assets\\Textures\\btn-upgrade-zerg-stukov-researchqueenfungalgrowth.dds", "CloakOnPredator", 0, "StarportTechLabResearch", "21", StringExternal("Param/Value/lib_22142002_E20F45FB"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;
    lib22142002_gf_US_GetDataManual("FenixSentryGuardianZoneUpgrade", "Assets\\Textures\\btn-upgrade-protoss-purifier-sentry-optimizedemittersresearch.dds", "MorphToKerriganRuler", 0, "CyberneticsCoreResearch", "11", StringExternal("Param/Value/lib_22142002_FD31F23B"));
    lib22142002_gf_US_GetDataManual("AdeptFenixShadeSpawn", "Assets\\Textures\\btn-upgrade-protoss-fenix-adeptchampionshadespawn.dds", "PsionicPulse", 0, "TwilightCouncilResearch", "19", StringExternal("Param/Value/lib_22142002_AE83984F"));
    lib22142002_gf_US_GetDataManual("FenixKaldalisCleave", "Assets\\Textures\\btn-upgrade-protoss-fenix-zealotcleave.dds", "HotSImprovedSporeTracking", 0, "TwilightCouncilResearch", "20", StringExternal("Param/Value/lib_22142002_FCDD31BD"));
    lib22142002_gf_US_GetDataManual("FenixChampionTalisAdeptBounceShotUpgrade", "Assets\\Textures\\btn-upgrade-protoss-fenix-adept-recochetglaiveupgraded.dds", "RapidGenesis", 0, "TwilightCouncilResearch", "21", StringExternal("Param/Value/lib_22142002_F8973396"));
    lib22142002_gf_US_GetDataManual("DisruptorCloakingProtocol", "Assets\\Textures\\btn-upgrade-protoss-fenix-disruptorpermanentcloak.dds", "ResearchCloakingProtocol", 0, "RoboticsBayResearch", "14", StringExternal("Param/Value/lib_22142002_92FEFAEC"));
    lib22142002_gf_US_GetDataManual("DisruptorPurificationEcho", "Assets\\Textures\\btn-upgrade-protoss-fenix-disruptorpurificationecho.dds", "ResearchPurificationEcho", 0, "RoboticsBayResearch", "15", StringExternal("Param/Value/lib_22142002_B011BD9F"));
    lib22142002_gf_US_GetDataManual("TaldarinGravimetricOverload", "Assets\\Textures\\btn-upgrade-protoss-fenix-immortalchampionchargeexplode.dds", "ResearchGravimetricOverload", 0, "RoboticsBayResearch", "16", StringExternal("Param/Value/lib_22142002_A32E63F7"));
    lib22142002_gf_US_GetDataManual("WarbringerPurificationBlast", "Assets\\Textures\\btn-upgrade-protoss-fenix-purificationblast.dds", "ResearchPurificationBlast", 0, "RoboticsBayResearch", "17", StringExternal("Param/Value/lib_22142002_25442355"));
    lib22142002_gf_US_GetDataManual("ScoutCombatSensorArray", "Assets\\Textures\\btn-upgrade-protoss-fenix-scoutchampionrange.dds", "ResearchCombatSensorArray", 0, "FleetBeaconResearch", "13", StringExternal("Param/Value/lib_22142002_191EBBE3"));
    lib22142002_gf_US_GetDataManual("FenixChampionScoutAOEMissiles", "Assets\\Textures\\btn-upgrade-protoss-fenix-scoutchampionaoemissiles.dds", "MorphIsKerriganRuler", 0, "FleetBeaconResearch", "14", StringExternal("Param/Value/lib_22142002_B9C66404"));
    lib22142002_gf_US_GetDataManual("FenixChampionCarrierBombers", "Assets\\Textures\\btn-upgrade-protoss-fenix-bomberresearch.dds", "ProtectiveBarrier", 0, "FleetBeaconResearch", "15", StringExternal("Param/Value/lib_22142002_9C1CAB22"));

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_uS_IntUpp += 1;

    return true;
}

void lib22142002_gf_US_GetDataManual (string lp_inputResearchLink, string lp_inputImageLink, string lp_inputTextLink, int lp_inputResearchTypeLevel, string lp_ability, string lp_array, text lp_inputResearchType) {
    // Variable Declarations
    text lv_get_NameText;
    text lv_get_TooltipText;
    int lv_get_Minerals;
    int lv_get_Vespene;
    fixed lv_get_Time;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib22142002_gv_uS_UpgradeLink[lib22142002_gv_uS_IntUpp] = lp_inputResearchLink;
    lv_get_NameText = StringExternal(("Button/Name/" + lp_inputTextLink));
    lib22142002_gv_uS_UpgradeName[lib22142002_gv_uS_IntUpp] = lv_get_NameText;
    lv_get_TooltipText = StringExternal(("Button/Tooltip/" + lp_inputTextLink));
    lv_get_Minerals = CatalogFieldValueGetAsInt(c_gameCatalogAbil, lp_ability, ("InfoArray[" + lp_array + "].Resource[0]"), c_playerAny);
    lv_get_Vespene = CatalogFieldValueGetAsInt(c_gameCatalogAbil, lp_ability, ("InfoArray[" + lp_array + "].Resource[1]"), c_playerAny);
    lv_get_Time = FixedToInt((libNtve_gf_CatalogFieldValueGetAsReal(c_gameCatalogAbil, lp_ability, ("InfoArray[" + lp_array + "].Time"), c_playerAny) / 1.4));
    if ((lv_get_Minerals == 0) && (lv_get_Vespene == 0)) {
        lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (StringExternal("Param/Value/lib_22142002_56C07C50") + lv_get_NameText + StringExternal("Param/Value/lib_22142002_DE8C93CD"));
    }
    else {
        if ((lv_get_Minerals != 0) && (lv_get_Vespene == 0)) {
            lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (StringExternal("Param/Value/lib_22142002_DF71FB86") + lv_get_NameText + StringExternal("Param/Value/lib_22142002_A21A7594") + StringExternal("Param/Value/lib_22142002_BD07BB9A") + StringExternal("Param/Value/lib_22142002_07065044") + IntToText(lv_get_Minerals));
        }
        else {
            if ((lv_get_Minerals == 0) && (lv_get_Vespene != 0)) {
                lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (StringExternal("Param/Value/lib_22142002_F9BB5359") + lv_get_NameText + StringExternal("Param/Value/lib_22142002_F945764A") + StringExternal("Param/Value/lib_22142002_56B5DE68") + StringExternal("Param/Value/lib_22142002_14C0FB3E") + IntToText(lv_get_Vespene));
            }
            else {
                if ((lv_get_Minerals != 0) && (lv_get_Vespene != 0)) {
                    lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (StringExternal("Param/Value/lib_22142002_574DC7DC") + lv_get_NameText + StringExternal("Param/Value/lib_22142002_630DE389") + StringExternal("Param/Value/lib_22142002_6BBE704C") + StringExternal("Param/Value/lib_22142002_1453A91F") + IntToText(lv_get_Minerals) + StringExternal("Param/Value/lib_22142002_6496209F") + StringExternal("Param/Value/lib_22142002_9E06A610") + StringExternal("Param/Value/lib_22142002_24D5BE0F") + IntToText(lv_get_Vespene));
                }
                else {
                    lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (StringExternal("Param/Value/lib_22142002_55AD0D37") + lv_get_NameText + StringExternal("Param/Value/lib_22142002_9E6928CC"));
                }
            }
        }
    }
    if ((lv_get_Time == 0)) {
        lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_ECE40165") + lv_get_TooltipText);
    }
    else {
        lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] = (lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp] + StringExternal("Param/Value/lib_22142002_2E4B0C14") + StringExternal("Param/Value/lib_22142002_6EDF197D") + StringExternal("Param/Value/lib_22142002_C3CCD22F") + FixedToText(lv_get_Time, c_fixedPrecisionAny) + StringExternal("Param/Value/lib_22142002_E899365F") + lv_get_TooltipText);
    }
    lib22142002_gv_uS_ButtonUpgradeFile[lib22142002_gv_uS_IntUpp] = lp_inputImageLink;
    lib22142002_gv_uS_ButtonUpgradeType[lib22142002_gv_uS_IntUpp] = lp_ability;
    lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] = lp_inputResearchTypeLevel;
    lib22142002_gv_uS_IntUpp += 1;
}

void lib22142002_gf_US_Createbuttonsforresearch (int lp_param_Race) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_iacross;
    int lv_idown;

    // Automatic Variable Declarations
    int auto0AC57B87_ae;
    const int auto0AC57B87_ai = 1;
    int auto36BA4276_ae;
    const int auto36BA4276_ai = 1;

    // Variable Initialization
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y = lib22142002_gv_dP_XYOffset;

    // Implementation
    auto0AC57B87_ae = lib22142002_gf_US_PageColumnAmount(lp_param_Race);
    lv_idown = 1;
    for ( ; ( (auto0AC57B87_ai >= 0 && lv_idown <= auto0AC57B87_ae) || (auto0AC57B87_ai < 0 && lv_idown >= auto0AC57B87_ae) ) ; lv_idown += auto0AC57B87_ai ) {
        lv_x = lib22142002_gv_dP_XYOffset;
        auto36BA4276_ae = lib22142002_gv_dP_ButtonPerRowFix;
        lv_iacross = 1;
        for ( ; ( (auto36BA4276_ai >= 0 && lv_iacross <= auto36BA4276_ae) || (auto36BA4276_ai < 0 && lv_iacross >= auto36BA4276_ae) ) ; lv_iacross += auto36BA4276_ai ) {
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib22142002_gv_dP_ButtonWidth, lib22142002_gv_dP_ButtonWidth, c_anchorTopLeft, lv_x, lv_y, lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp], StringToText(""), "");
            lib22142002_gv_uS_ButtonUpgrade[lib22142002_gv_uS_IntUpp] = DialogControlLastCreated();
            lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lp_param_Race);
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), lib22142002_gv_dP_ButtonImageWidth, lib22142002_gv_dP_ButtonImageHeight, c_anchorTopLeft, (lv_x + 2), (lv_y + 2), StringToText(""), lib22142002_gv_uS_ButtonUpgradeFile[lib22142002_gv_uS_IntUpp], c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp] = DialogControlLastCreated();
            lib22142002_gv_uS_IntUpp += 1;
            while ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] > 1)) {
                libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib22142002_gv_dP_ButtonWidth, lib22142002_gv_dP_ButtonWidth, c_anchorTopLeft, lv_x, lv_y, lib22142002_gv_uS_ButtonUpgradeTooltip[lib22142002_gv_uS_IntUpp], StringToText(""), "");
                lib22142002_gv_uS_ButtonUpgrade[lib22142002_gv_uS_IntUpp] = DialogControlLastCreated();
                lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lp_param_Race);
                DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupActive(), false);
                libNtve_gf_CreateDialogItemImage(DialogLastCreated(), lib22142002_gv_dP_ButtonImageWidth, lib22142002_gv_dP_ButtonImageHeight, c_anchorTopLeft, (lv_x + 2), (lv_y + 2), StringToText(""), lib22142002_gv_uS_ButtonUpgradeFile[lib22142002_gv_uS_IntUpp], c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
                DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupActive(), false);
                lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp] = DialogControlLastCreated();
                lib22142002_gv_uS_IntUpp += 1;
            }
            if ((lib22142002_gv_uS_UpgradeLink[lib22142002_gv_uS_IntUpp] == null)) {
                lib22142002_gv_uS_IntUpp += 1;
                return ;
            }

            lv_x += lib22142002_gv_dP_ButtonWidth;
        }
        lv_y += lib22142002_gv_dP_ButtonHeight;
    }
}

int lib22142002_gf_US_PageColumnAmount (int lp_inputIntRace) {
    // Automatic Variable Declarations
    int autoC22982C8_val;

    // Implementation
    autoC22982C8_val = lp_inputIntRace;
    if (autoC22982C8_val == 1) {
        return 2;
    }
    else if (autoC22982C8_val == 2) {
        return 2;
    }
    else if (autoC22982C8_val == 3) {
        return 2;
    }
    else if (autoC22982C8_val == 4) {
        return 3;
    }
    else if (autoC22982C8_val == 5) {
        return 1;
    }
    else if (autoC22982C8_val == 6) {
        return 1;
    }
    else if (autoC22982C8_val == 7) {
        return 2;
    }
    else if (autoC22982C8_val == 8) {
        return 2;
    }
    else if (autoC22982C8_val == 9) {
        return 2;
    }
    else if (autoC22982C8_val == 10) {
        return 2;
    }
    else if (autoC22982C8_val == 11) {
        return 1;
    }
    else if (autoC22982C8_val == 12) {
        return 1;
    }
    else if (autoC22982C8_val == 13) {
        return 1;
    }
    else if (autoC22982C8_val == 14) {
        return 2;
    }
    else if (autoC22982C8_val == 15) {
        return 2;
    }
    else if (autoC22982C8_val == 16) {
        return 2;
    }
    else if (autoC22982C8_val == 17) {
        return 2;
    }
    else if (autoC22982C8_val == 18) {
        return 1;
    }
    else if (autoC22982C8_val == 19) {
        return 2;
    }
    else if (autoC22982C8_val == 20) {
        return 2;
    }
    else if (autoC22982C8_val == 21) {
        return 2;
    }
    else if (autoC22982C8_val == 22) {
        return 2;
    }
    else if (autoC22982C8_val == 23) {
        return 2;
    }
    else if (autoC22982C8_val == 24) {
        return 2;
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_22142002_91053B53") + IntToText(lp_inputIntRace)));
        return 0;
    }
}

void lib22142002_gf_US_UpgradesOn () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] = true;
    libNtve_gf_SetUpgradeLevelForPlayer(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_uS_UpgradeLink[lib22142002_gv_uS_IntUpp], 1);
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
    lib22142002_gf_US_Refresh();
}

void lib22142002_gf_US_UpgradesOff () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] = false;
    libNtve_gf_SetUpgradeLevelForPlayer(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_uS_UpgradeLink[lib22142002_gv_uS_IntUpp], 0);
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), true);
    lib22142002_gf_US_Refresh();
}

void lib22142002_gf_US_UpgradeLvl () {
    // Automatic Variable Declarations
    const int auto2A86D07A_ae = 15;
    const int auto2A86D07A_ai = 1;
    const int autoD0548AC0_ae = 576;
    const int autoD0548AC0_ai = 1;

    // Implementation
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (auto2A86D07A_ai >= 0 && lib22142002_gv_dP_IntPlayer <= auto2A86D07A_ae) || (auto2A86D07A_ai < 0 && lib22142002_gv_dP_IntPlayer >= auto2A86D07A_ae) ) ; lib22142002_gv_dP_IntPlayer += auto2A86D07A_ai ) {
        lib22142002_gv_uS_IntUpp = 0;
        for ( ; ( (autoD0548AC0_ai >= 0 && lib22142002_gv_uS_IntUpp <= autoD0548AC0_ae) || (autoD0548AC0_ai < 0 && lib22142002_gv_uS_IntUpp >= autoD0548AC0_ae) ) ; lib22142002_gv_uS_IntUpp += autoD0548AC0_ai ) {
            if ((lib22142002_gv_uS_AllUpgrades >= 1) && (lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 1)) {
                lib22142002_gf_US_UpgradesOn();
                lib22142002_gf_US_UpgradeLvlShowNext();
            }

            if ((lib22142002_gv_uS_AllUpgrades >= 2) && (lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 2)) {
                lib22142002_gf_US_UpgradesOn();
                lib22142002_gf_US_UpgradeLvlShowNext();
            }

            if ((lib22142002_gv_uS_AllUpgrades >= 3) && (lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3)) {
                lib22142002_gf_US_UpgradesOn();
            }

        }
    }
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_22142002_4392809E") + IntToText(lib22142002_gv_uS_AllUpgrades) + StringExternal("Param/Value/lib_22142002_C1F1493C")));
}

void lib22142002_gf_US_UpgradeLvlShowNext () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3)) {
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lib22142002_gv_uS_IntUpp - 2)], PlayerGroupActive(), true);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lib22142002_gv_uS_IntUpp - 2)], PlayerGroupActive(), true);
    }
    else {
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgrade[(lib22142002_gv_uS_IntUpp + 1)], PlayerGroupActive(), true);
        DialogControlSetVisible(lib22142002_gv_uS_ButtonUpgradeImage[(lib22142002_gv_uS_IntUpp + 1)], PlayerGroupActive(), true);
    }
}

void lib22142002_gf_US_UpgradeLvlReset () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] = false;
    lib22142002_gv_uS_UpgradeFlag[(lib22142002_gv_uS_IntUpp - 1)][lib22142002_gv_dP_IntTPlayer] = false;
    lib22142002_gv_uS_UpgradeFlag[(lib22142002_gv_uS_IntUpp - 2)][lib22142002_gv_dP_IntTPlayer] = false;
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), true);
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[(lib22142002_gv_uS_IntUpp - 1)], PlayerGroupActive(), true);
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[(lib22142002_gv_uS_IntUpp - 2)], PlayerGroupActive(), true);
    libNtve_gf_SetUpgradeLevelForPlayer(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_uS_UpgradeLink[lib22142002_gv_uS_IntUpp], 0);
    libNtve_gf_SetUpgradeLevelForPlayer(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_uS_UpgradeLink[(lib22142002_gv_uS_IntUpp - 1)], 0);
    libNtve_gf_SetUpgradeLevelForPlayer(lib22142002_gv_dP_IntTPlayer, lib22142002_gv_uS_UpgradeLink[(lib22142002_gv_uS_IntUpp - 2)], 0);
}

void lib22142002_gf_US_AllAbilitiesOn () {
    // Automatic Variable Declarations
    const int autoF3989ABB_ae = 1;
    const int autoF3989ABB_ai = 1;
    const int auto338F4C0A_ae = 99;
    const int auto338F4C0A_ai = 1;

    // Implementation
    lib22142002_gv_uS_AllAbilities = 1;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (autoF3989ABB_ai >= 0 && lib22142002_gv_dP_IntPlayer <= autoF3989ABB_ae) || (autoF3989ABB_ai < 0 && lib22142002_gv_dP_IntPlayer >= autoF3989ABB_ae) ) ; lib22142002_gv_dP_IntPlayer += autoF3989ABB_ai ) {
        lib22142002_gv_uS_IntUpp = 0;
        for ( ; ( (auto338F4C0A_ai >= 0 && lib22142002_gv_uS_IntUpp <= auto338F4C0A_ae) || (auto338F4C0A_ai < 0 && lib22142002_gv_uS_IntUpp >= auto338F4C0A_ae) ) ; lib22142002_gv_uS_IntUpp += auto338F4C0A_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0)) {
                if ((lib22142002_gv_uS_ButtonUpgradeType[lib22142002_gv_uS_IntUpp] == "Ability")) {
                    lib22142002_gf_US_UpgradesOn();
                }

            }

        }
    }
}

void lib22142002_gf_US_AllAbilitiesOff () {
    // Automatic Variable Declarations
    const int auto66FDFE5A_ae = 1;
    const int auto66FDFE5A_ai = 1;
    const int auto3BB83C3F_ae = 99;
    const int auto3BB83C3F_ai = 1;

    // Implementation
    lib22142002_gv_uS_AllAbilities = 0;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (auto66FDFE5A_ai >= 0 && lib22142002_gv_dP_IntPlayer <= auto66FDFE5A_ae) || (auto66FDFE5A_ai < 0 && lib22142002_gv_dP_IntPlayer >= auto66FDFE5A_ae) ) ; lib22142002_gv_dP_IntPlayer += auto66FDFE5A_ai ) {
        lib22142002_gv_uS_IntUpp = 0;
        for ( ; ( (auto3BB83C3F_ai >= 0 && lib22142002_gv_uS_IntUpp <= auto3BB83C3F_ae) || (auto3BB83C3F_ai < 0 && lib22142002_gv_uS_IntUpp >= auto3BB83C3F_ae) ) ; lib22142002_gv_uS_IntUpp += auto3BB83C3F_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0)) {
                lib22142002_gf_US_UpgradesOff();
            }

        }
    }
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_8DD173BE"));
}

void lib22142002_gf_US_Auto_UpgradesOn () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] = true;
    DialogControlSetEnabled(lib22142002_gv_uS_ButtonUpgradeImage[lib22142002_gv_uS_IntUpp], PlayerGroupActive(), false);
}

void lib22142002_gf_TTUS_ButtonAction_TechTreeUnit () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib22142002_gv_tTUS_TechTreeUnitsFlag[lib22142002_gv_tTUS_IntTechTreeU][lib22142002_gv_dP_IntTPlayer] == true)) {
        lib22142002_gf_TTUS_TechTreeUnitOffDisallow();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_36F303E3") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_tTUS_TechTreeUnitsFlag[lib22142002_gv_tTUS_IntTechTreeU][lib22142002_gv_dP_IntTPlayer] == false)) {
        lib22142002_gf_TTUS_TechTreeUnitOnAllow();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_FEEBE379") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
}

void lib22142002_gf_TTUS_Refresh () {
    // Variable Declarations
    int lv_intA;
    bool lv_valid;
    int lv_targetPlayer;

    // Automatic Variable Declarations
    playergroup auto58D028CB_g;
    int auto58D028CB_var;
    int autoABE35CB7_ae;
    const int autoABE35CB7_ai = 1;

    // Variable Initialization

    // Implementation
    auto58D028CB_g = PlayerGroupActive();
    auto58D028CB_var = -1;
    while (true) {
        auto58D028CB_var = PlayerGroupNextPlayer(auto58D028CB_g, auto58D028CB_var);
        if (auto58D028CB_var < 0) { break; }
        lv_targetPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(auto58D028CB_var, 6), 1));
        autoABE35CB7_ae = lib22142002_gv_tTUS_IntArrayValueDummy;
        lv_intA = 0;
        for ( ; ( (autoABE35CB7_ai >= 0 && lv_intA <= autoABE35CB7_ae) || (autoABE35CB7_ai < 0 && lv_intA >= autoABE35CB7_ae) ) ; lv_intA += autoABE35CB7_ai ) {
            if ((lib22142002_gv_tTUS_TechTreeUnitsFlag[lv_intA][lv_targetPlayer] == true)) {
                DialogControlSetEnabled(lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lv_intA], PlayerGroupSingle(auto58D028CB_var), true);
            }
            else {
                DialogControlSetEnabled(lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lv_intA], PlayerGroupSingle(auto58D028CB_var), false);
            }
        }
    }
}

bool lib22142002_gf_TTUS_DialogisTechTreeUnitDialog (int lp_pDialog) {
    // Variable Declarations
    int lv_intA;

    // Automatic Variable Declarations
    int auto24287295_ae;
    const int auto24287295_ai = 1;

    // Variable Initialization

    // Implementation
    auto24287295_ae = lib22142002_gv_tTUS_IntArrayValueDummy;
    lv_intA = 0;
    for ( ; ( (auto24287295_ai >= 0 && lv_intA <= auto24287295_ae) || (auto24287295_ai < 0 && lv_intA >= auto24287295_ae) ) ; lv_intA += auto24287295_ai ) {
        if ((lp_pDialog == lib22142002_gv_tTUS_ButtonTechTreeUnits[lv_intA])) {
            return true;
        }

    }
    return false;
}

void lib22142002_gf_TTUS_Database () {
    // Variable Declarations
    fixed lv_local_WaitTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_local_WaitTime = 0.0001;

    // Implementation
    lib22142002_gv_tTUS_IntTechTreeU = 0;
    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gf_TTUS_GetDataManual("CommandCenterTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-scv.dds", "SCV", "SCV", "", true);
    lib22142002_gf_TTUS_GetDataManual("CalldownMULE", 0, null, 0, "Assets\\Textures\\btn-unit-terran-mule.dds", "MULE", "MULE", "", true);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-marine.dds", "Marine", "Marine", "", true);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-reaper.dds", "Reaper", "Reaper", "", true);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-marauder.dds", "Marauder", "Marauder", "", true);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-ghost.dds", "Ghost", "Ghost", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 5, null, 0, "Assets\\Textures\\btn-unit-terran-hellion.dds", "Hellion", "Hellion", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 24, null, 0, "Assets\\Textures\\btn-unit-terran-widowmine.dds", "WidowMine", "WidowMine", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-cyclone.dds", "Cyclone", "Cyclone", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-siegetank.dds", "SiegeTank", "SiegeTank", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-hellionbattlemode.dds", "HellionTank", "HellionTank", "", true);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "Thor", "Thor", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-vikingfighter.dds", "VikingFighter", "VikingFighter", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-medivac.dds", "Medivac", "Medivac", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 5, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-aamode.dds", "Liberator", "Liberator", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-raven.dds", "Raven", "Raven", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-banshee.dds", "Banshee", "Banshee", "", true);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-battlecruiser.dds", "Battlecruiser", "Battlecruiser", "", true);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-drone.dds", "Drone", "Drone", "", true);
    lib22142002_gf_TTUS_GetDataManual("TrainQueen", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-queen.dds", "Queen", "Queen", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-overlord.dds", "Overlord", "Overlord", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphToTransportOverlord", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-overlordtransport.dds", "OverlordTransport", "OverlordTransport", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphToOverseer", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-overseer.dds", "Overseer", "Overseer", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 1, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling.dds", "Zergling", "Zergling", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphZerglingToBaneling", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-baneling.dds", "Baneling", "Baneling", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 9, null, 0, "Assets\\Textures\\btn-unit-zerg-roach.dds", "Roach", "Roach", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphToRavager", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-ravager.dds", "Ravager", "Ravager", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk.dds", "Hydralisk", "Hydralisk", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphToLurker", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-lurker.dds", "LurkerMP", "LurkerMP", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk.dds", "Mutalisk", "Mutalisk", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 11, null, 0, "Assets\\Textures\\btn-unit-zerg-corruptor.dds", "Corruptor", "Corruptor", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphToBroodLord", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-broodlord.dds", "BroodLord", "BroodLord", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 10, null, 0, "Assets\\Textures\\btn-unit-zerg-infestor.dds", "Infestor", "Infestor", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost.dds", "SwarmHostMP", "SwarmHostMP", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 8, null, 0, "Assets\\Textures\\btn-unit-zerg-viper.dds", "Viper", "Viper", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", "Ultralisk", "Ultralisk", "", true);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-probe.dds", "Probe", "Probe", "", true);
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothership", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-mothership.dds", "Mothership", "Mothership", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 0, "WarpGateTrain", 0, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "Zealot", "Zealot", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 5, "WarpGateTrain", 5, "Assets\\Textures\\btn-unit-protoss-sentry.dds", "Sentry", "Sentry", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 1, "WarpGateTrain", 1, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "Stalker", "Stalker", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 6, "WarpGateTrain", 6, "Assets\\Textures\\btn-unit-protoss-adept.dds", "Adept", "Adept", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 3, "WarpGateTrain", 3, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighTemplar", "HighTemplar", "", true);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 4, "WarpGateTrain", 4, "Assets\\Textures\\btn-unit-protoss-darktemplar.dds", "DarkTemplar", "DarkTemplar", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArchonWarp", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-archon.dds", "Archon", "Archon", "", true);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 1, "RoboticsFacilityWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-observer.dds", "Observer", "Observer", "", true);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 0, "RoboticsFacilityWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-warpprism.dds", "WarpPrism", "WarpPrism", "", true);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 3, "RoboticsFacilityWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "Immortal", "Immortal", "", true);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 2, "RoboticsFacilityWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-colossus.dds", "Colossus", "Colossus", "", true);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 7, "RoboticsFacilityWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-disruptor.dds", "Disruptor", "Disruptor", "", true);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 0, "StargateWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "Phoenix", "Phoenix", "", true);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 8, "StargateWarpTrain", 8, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "Oracle", "Oracle", "", true);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 4, "StargateWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-warpray.dds", "VoidRay", "VoidRay", "", true);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 9, "StargateWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "Tempest", "Tempest", "", true);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 2, "StargateWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-carrier.dds", "Carrier", "Carrier", "", true);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 19, null, 0, "Assets\\Textures\\btn-unit-terran-marineblackops.dds", "EliteMarine", "EliteMarine", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 10, null, 0, "Assets\\Textures\\btn-unit-collection-marine-junker.dds", "EliteMarineACGluescreenDummy", "EliteMarineACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 11, null, 0, "Assets\\Textures\\btn-unit-collection-reaper-junker.dds", "HHReaperACGluescreenDummy", "HHReaperACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 20, null, 0, "Assets\\Textures\\btn-unit-terran-marauderblackops.dds", "MarauderCommandoACGluescreenDummy", "MarauderCommandoACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 18, null, 0, "Assets\\Textures\\btn-unit-collection-marauder-junker.dds", "MarauderACGluescreenDummy", "MarauderACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-marauderkillsquad.dds", "DominionKillTeam", "DominionKillTeam", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 14, null, 0, "Assets\\Textures\\btn-unit-terran-blackops-ghost.dds", "GhostLaserLines", "DOMGhost", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 21, null, 0, "Assets\\Textures\\btn-unit-terran-blackops-femaleghost.dds", "GhostMengskACGluescreenDummy", "SpecOpsGhostACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 13, null, 0, "Assets\\Textures\\btn-unit-terran-dom-grunt.dds", "TrooperMengskACGluescreenDummy", "TrooperMengskACGluescreenDummy", "Separatist", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 15, null, 0, "Assets\\Textures\\btn-unit-terran-medbat.dds", "Tauren", "Tauren", "Medbat", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 16, null, 0, "Assets\\Textures\\btn-unit-terran-marauderswann.dds", "MarauderMengskACGluescreenDummy", "MarauderMengskACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 5, null, 0, "Assets\\Textures\\btn-unit-terran-medic.dds", "Medic", "Medic", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-medickillsquad.dds", "InfestedMedic", "InfestedMedic", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 17, null, 0, "Assets\\Textures\\btn-unit-terran-medic.dds", "MedicACGluescreenDummy", "MedicACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-firebat.dds", "Firebat", "Firebat", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-spectre.dds", "Spectre", "Spectre", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 22, null, 0, "Assets\\Textures\\btn-unit-terran-spectre-shadowguard.dds", "ShadowGuard", "ShadowGuard", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-herc.dds", "HERC", "HERC", "", false);
    lib22142002_gf_TTUS_GetDataManual("BarracksTrain", 8, null, 0, "Assets\\Textures\\btn-unit-terran-blackops-ghost.dds", "Phantom", "Phantom", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 22, null, 0, "Assets\\Textures\\btn-unit-terran-hellionblackops.dds", "HellionBlackOps", "HellionBlackOps", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 19, null, 0, "Assets\\Textures\\btn-unit-collection-hellion-junker.dds", "HHHellion", "HHHellion", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 20, null, 0, "Assets\\Textures\\btn-unit-collection-widowmine-junker.dds", "HHWidowMineACGluescreenDummy", "HHWidowMineACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 15, null, 0, "Assets\\Textures\\btn-unit-collection-cyclone-covertops.dds", "CycloneBot", "CycloneBot", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 25, null, 0, "Assets\\Textures\\btn-unit-terran-siegetankblackops-tank.dds", "HeavySiegeTankACGluescreenDummy", "HeavySiegeTankACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 21, null, 0, "Assets\\Textures\\btn-unit-collection-tank-junker.dds", "HHSiegeTank", "HHSiegeTank", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 14, null, 0, "Assets\\Textures\\btn-unit-terran-warhound.dds", "WarHound", "WarHound", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 17, null, 0, "Assets\\Textures\\btn-unit-terran-odin.dds", "Odin", "Odin", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 27, null, 0, "Assets\\Textures\\btn-unit-terran-vikingmercenary-assault.dds", "TitanMechAssault", "TitanMechAssault", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 23, null, 0, "Assets\\Textures\\btn-unit-terran-hellbatblackops.dds", "HellbatRangerACGluescreenDummy", "HellbatRangerACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 8, null, 0, "Assets\\Textures\\btn-unit-collection-hellbat-junker.dds", "HHHellionTankACGluescreenDummy", "HHHellionTankACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-vulture.dds", "Vulture", "Vulture", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 16, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-agmode.dds", "Hyena", "Hyena", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "ThorACGluescreenDummy", "ThorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-diamondback.dds", "Diamondback", "Diamondback", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-artillarytank.dds", "Haast", "Haast", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 26, null, 0, "Assets\\Textures\\btn-unit-terran-goliathblackops.dds", "StrikeGoliathACGluescreenDummy", "StrikeGoliathACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-goliath.dds", "Goliath", "Goliath", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 10, null, 0, "Assets\\Textures\\btn-unit-terran-predator.dds", "Predator", "Predator", "", false);
    lib22142002_gf_TTUS_GetDataManual("FactoryTrain", 11, null, 0, "Assets\\Textures\\btn-unit-terran-ares.dds", "UmojanLabMicrobot", "UmojanLabMicrobot", "UmojanLabMicrobot", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 18, null, 0, "Assets\\Textures\\btn-unit-collection-vikingfighter-junker.dds", "VikingACGluescreenDummy", "VikingACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 19, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "BWValkyrie", "BWValkyrie", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-liberatorblackops.dds", "RaidLiberatorACGluescreenDummy", "RaidLiberatorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 11, null, 0, "Assets\\Textures\\btn-unit-terran-ravenblackops.dds", "RavenTypeIIACGluescreenDummy", "RavenTypeIIACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 10, null, 0, "Assets\\Textures\\btn-unit-terran-bansheeblackops.dds", "CovertBansheeACGluescreenDummy", "CovertBansheeACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 16, null, 0, "Assets\\Textures\\btn-unit-collection-banshee-junker.dds", "BansheeACGluescreenDummy", "BansheeACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 17, null, 0, "Assets\\Textures\\btn-unit-collection-battlecruiser-junker.dds", "HHBattlecruiser", "HHBattlecruiser", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 14, null, 0, "Assets\\Textures\\btn-unit-collection-wraith-junker.dds", "WraithACGluescreenDummy", "WraithACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-wraith.dds", "Wraith", "Wraith", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 8, null, 0, "Assets\\Textures\\btn-unit-terran-sciencevessel.dds", "ScienceVessel", "ScienceVessel", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "Hercules", "Hercules", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 15, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "HerculesACGluescreenDummy", "HerculesACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 13, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "Kite", "Kite", "SJValkyrie", false);
    lib22142002_gf_TTUS_GetDataManual("StarportTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-griffon.dds", "Griffon", "Griffon", "SJGriffon", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 24, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-raptor.dds", "HotSRaptor", "HotSRaptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 25, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-swarmling.dds", "HotSSwarmling", "HotSSwarmling", "", false);
    lib22142002_gf_TTUS_GetDataManual("MorphZerglingToBaneling", 1, null, 0, "Assets\\Textures\\btn-unit-zerg-baneling-hunter.dds", "HotSHunter", "HotSHunter", "", false);
    lib22142002_gf_TTUS_GetDataManual("MorphZerglingToBaneling", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-baneling.dds", "HotSSplitterlingBig", "HotSSplitterlingBig", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 29, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-vile.dds", "RoachVile", "RoachVile", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 28, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-corpser.dds", "RoachCorpser", "RoachCorpser", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 12, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "InfestedAbomination", "InfestedAbomination", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "AberrationACGluescreenDummy", "AberrationACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 26, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-impaler.dds", "HydraliskImpaler", "HydraliskImpaler", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 27, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-lurker.dds", "HydraliskLurker", "HydraliskLurker", "", false);
    lib22142002_gf_TTUS_GetDataManual("MorphHydraliskToLurker", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-lurker.dds", "Lurker", "Lurker", "", true);
    lib22142002_gf_TTUS_GetDataManual("MorphRoachToImpaler", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-impaler.dds", "Impaler", "Impaler", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 22, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-viper.dds", "MutaliskViper", "MutaliskViper", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 23, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-broodlord.dds", "MutaliskBroodlord", "MutaliskBroodlord", "", false);
    lib22142002_gf_TTUS_GetDataManual("MutaliskMorphToViper", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-viper.dds", "Viper", "Viper", "", true);
    lib22142002_gf_TTUS_GetDataManual("MutaliskMorphToBroodLord", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-broodlord.dds", "BroodLord", "BroodLord", "", true);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 1, null, 0, "Assets\\Textures\\btn-unit-collection-webby-corruptor.dds", "CorruptorACGluescreenDummy", "CorruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-carrion.dds", "SwarmHostSplitA", "SwarmHostSplitA", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 15, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-creeper.dds", "SwarmHostSplitB", "SwarmHostSplitB", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 13, null, 0, "Assets\\Textures\\btn-unit-zerg-defilerex3.dds", "DefilerMP", "DefilerMP", "Defiler", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 14, null, 0, "Assets\\Textures\\btn-unit-zerg-scourge.dds", "Scourge", "Scourge", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 19, null, 0, "Assets\\Textures\\btn-unit-zerg-classicqueen.dds", "StukovBroodQueenACGluescreenDummy", "StukovBroodQueenACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-queenclassic.dds", "QueenClassic", "QueenClassic", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 20, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-torrasque.dds", "HotSTorrasque", "HotSTorrasque", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 21, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-noxious.dds", "HotSNoxious", "HotSNoxious", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 17, null, 0, "Assets\\Textures\\btn-unit-zerg-hunterling.dds", "Hunterling", "Hunterling", "Hunterling", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 16, null, 0, "Assets\\Textures\\btn-unit-zerg-kaboomer.dds", "Kaboomer", "Kaboomer", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrain", 18, null, 0, "Assets\\Textures\\btn-unit-zerg-choker.dds", "Choker", "Choker", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-spotter.dds", "Spotter", "Spotter", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-omegalisk.dds", "Omegalisk", "Omegalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-stank.dds", "Stank", "Stank", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-brutalisk.dds", "Brutalisk", "Brutalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("LarvaTrainSwarmling", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-leviathan.dds", "HotSLeviathan", "HotSLeviathan", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothershipCore", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-mothershipcore.dds", "MothershipCore", "MothershipCore", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 17, "WarpGateTrain", 17, "Assets\\Textures\\btn-unit-protoss-zealot-aiur.dds", "ZealotAiur", "ZealotAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 2, "WarpGateTrain", 2, "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds", "ZealotShakuras", "ZealotShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 12, "WarpGateTrain", 12, "Assets\\Textures\\btn-unit-protoss-zealot-purifier.dds", "ZealotPurifier", "ZealotPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 11, "WarpGateTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-zealot.dds", "ZealotShakurasACGluescreenDummy", "ZealotShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 7, "WarpGateTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-supplicant.dds", "SupplicantACGluescreenDummy", "SupplicantACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 23, "WarpGateTrain002", 3, "Assets\\Textures\\btn-unit-protoss-SentryNullifier-Nerazim.dds", "SentryAiur", "SentryAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 16, "WarpGateTrain", 16, "Assets\\Textures\\btn-unit-protoss-sentry-purifier.dds", "SentryPurifier", "SentryPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 9, "WarpGateTrain", 9, "Assets\\Textures\\btn-unit-protoss-sentry-taldarim.dds", "Monitor", "Monitor", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 18, "WarpGateTrain", 18, "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds", "Dragoon", "Dragoon", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 20, "WarpGateTrain002", 0, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "StalkerShakuras", "StalkerShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 21, "WarpGateTrain002", 1, "Assets\\Textures\\btn-unit-protoss-stalker-purifier.dds", "StalkerPurifier", "StalkerPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 8, "WarpGateTrain", 8, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-stalker.dds", "StalkerTaldarimACGluescreenDummy", "StalkerTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 22, "WarpGateTrain002", 2, "Assets\\Textures\\btn-unit-collection-purifier-adept.dds", "BroodLordACGluescreenDummy", "BroodLordACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 29, "WarpGateTrain002", 9, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "PurifierAdept", "PurifierAdept", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 25, "WarpGateTrain002", 5, "Assets\\Textures\\btn-unit-protoss-vindicator.dds", "VindicatorZealot", "VindicatorZealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 19, "WarpGateTrain", 19, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighArchonTemplar", "HighTemplar", "HighTemplarAiur", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 10, "WarpGateTrain", 10, "Assets\\Textures\\btn-unit-protoss-hightemplar-taldarim.dds", "HighTemplarTaldarim", "HighTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 26, "WarpGateTrain002", 6, "Assets\\Textures\\btn-unit-protoss-darktemplar-aiur.dds", "DarkTemplarAiur", "DarkTemplarAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 13, "WarpGateTrain", 13, "Assets\\Textures\\btn-unit-protoss-darktemplar-nerazim.dds", "DarkTemplarShakuras", "DarkTemplarShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 24, "WarpGateTrain002", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-darktemplar.dds", "DarkTemplarTaldarim", "DarkTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("GatewayTrain", 27, "WarpGateTrain002", 7, "Assets\\Textures\\btn-unit-protoss-preserver01.dds", "PreserverA", "PreserverBase", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 12, "RoboticsFacilityWarpTrain", 12, "Assets\\Textures\\btn-unit-collection-purifier-observer.dds", "ObserverFenixACGluescreenDummy", "ObserverFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 18, "RoboticsFacilityWarpTrain", 18, "Assets\\Textures\\btn-unit-collection-taldarim-observer.dds", "ObserverACGluescreenDummy", "ObserverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 4, "RoboticsFacilityWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismTaldarimACGluescreenDummy", "WarpPrismTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 17, "RoboticsFacilityWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismGiant", "WarpPrismGiant", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 8, "RoboticsFacilityWarpTrain", 8, "Assets\\Textures\\btn-unit-collection-adun-immortal.dds", "ImmortalAiur", "ImmortalAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 14, "RoboticsFacilityWarpTrain", 14, "Assets\\Textures\\btn-unit-protoss-immortal-nerazim.dds", "ImmortalShakuras", "ImmortalShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 22, "RoboticsFacilityWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "ImmortalACGluescreenDummy", "ImmortalACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 13, "RoboticsFacilityWarpTrain", 13, "Assets\\Textures\\btn-unit-collection-purifier-immortal.dds", "GuardianACGluescreenDummy", "GuardianACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 16, "RoboticsFacilityWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "StandardImmortalTaldarim", "StandardImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 5, "RoboticsFacilityWarpTrain", 5, "Assets\\Textures\\btn-unit-protoss-immortal-taldarim.dds", "ImmortalTaldarim", "ImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 10, "RoboticsFacilityWarpTrain", 10, "Assets\\Textures\\btn-unit-collection-colossus-collectoredition.dds", "ColossusPurifier", "ColossusPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 21, "RoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-collection-purifier-colossus.dds", "ColossusPurifierACGluescreenDummy", "ColossusPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 6, "RoboticsFacilityWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-colossus-taldarimex3.dds", "ColossusTaldarim", "ColossusTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 15, "RoboticsFacilityWarpTrain", 15, "Assets\\Textures\\btn-unit-collection-colossus-taldarim.dds", "ColossusFenixACGluescreenDummy", "ColossusFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 11, "RoboticsFacilityWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-disruptorfenix-purifier.dds", "HydraliskLurkerACGluescreenDummy", "HydraliskLurkerACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 20, "RoboticsFacilityWarpTrain002", 0, "Assets\\Textures\\btn-unit-collection-taldarim-disruptor.dds", "DisruptorACGluescreenDummy", "DisruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 9, "RoboticsFacilityWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "Reaver", "Reaver", "", false);
    lib22142002_gf_TTUS_GetDataManual("RoboticsFacilityTrain", 19, "RoboticsFacilityWarpTrain", 19, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "ReaverACGluescreenDummy", "ReaverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 1, "StargateWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "PhoenixAiur", "PhoenixAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 16, "StargateWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-phoenix-purifier.dds", "PhoenixPurifier", "PhoenixPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 24, "StargateWarpTrain002", 4, "Assets\\Textures\\btn-unit-collection-purifier-phoenix.dds", "PhoenixPurifierACGluescreenDummy", "PhoenixPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 27, "StargateWarpTrain002", 7, "Assets\\Textures\\btn-unit-protoss-corsair.dds", "CorsairMP", "CorsairMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 5, "StargateWarpTrain", 5, "Assets\\Textures\\btn-unit-collection-taldarim-phoenix.dds", "TaldarimPhoenix", "TaldarimPhoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 26, "StargateWarpTrain002", 6, "Assets\\Textures\\btn-unit-protoss-scout.dds", "Scout", "Scout", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 29, "StargateWarpTrain002", 9, "Assets\\Textures\\btn-unit-protoss-scout.dds", "SwarmlingACGluescreenDummy", "SwarmlingACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 13, "StargateWarpTrain", 13, "Assets\\Textures\\btn-unit-protoss-scout-purifier.dds", "ScoutACGluescreenDummy", "ScoutACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 22, "StargateWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-scout.dds", "ScoutMP", "ScoutMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 12, "StargateWarpTrain", 12, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "OracleACGluescreenDummy", "OracleACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 6, "StargateWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-oracle-taldarim.dds", "TaldarimOracle", "TaldarimOracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 28, "StargateWarpTrain002", 8, "Assets\\Textures\\btn-unit-protoss-voidray-nerazim.dds", "VoidRayShakuras", "VoidRayShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 25, "StargateWarpTrain002", 5, "Assets\\Textures\\btn-unit-collection-purifier-voidray.dds", "VoidRayShakurasACGluescreenDummy", "VoidRayShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 7, "StargateWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-voidray.dds", "VoidRayTaldarim", "VoidRayTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 15, "StargateWarpTrain", 15, "Assets\\Textures\\btn-unit-protoss-carrierhero.dds", "CarrierAiur", "CarrierAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 14, "StargateWarpTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-carrier.dds", "CarrierACGluescreenDummy", "CarrierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 11, "StargateWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-carrier-collection.dds", "CarrierTaldarim", "CarrierTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 3, "StargateWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "TempestACGluescreenDummy", "TempestACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 23, "StargateWarpTrain002", 3, "Assets\\Textures\\btn-unit-collection-purifier-tempest.dds", "PurifierTempest", "PurifierTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 10, "StargateWarpTrain", 10, "Assets\\Textures\\btn-unit-protoss-tempest-ihanrii.dds", "TaldarimTempest", "TaldarimTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 18, "StargateWarpTrain", 18, "Assets\\Textures\\btn-unit-protoss-arbiter.dds", "ArbiterMP", "ArbiterMP", "Arbiter", false);
    lib22142002_gf_TTUS_GetDataManual("StargateTrain", 17, "StargateWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-tempest-purifier.dds", "TempestPurifier", "TempestPurifier", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("CommandCenterTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-scv.dds", "SCV", "SCV", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-marine.dds", "Marine", "Marine", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-marauder.dds", "Marauder", "Marauder", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-firebat.dds", "Firebat", "Firebat", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 5, null, 0, "Assets\\Textures\\btn-unit-terran-medic.dds", "Medic", "Medic", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-vulture.dds", "Vulture", "Vulture", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-siegetank.dds", "SiegeTank", "SiegeTank", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-vikingfighter.dds", "VikingFighter", "VikingFighter", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-banshee.dds", "Banshee", "Banshee", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-battlecruiser.dds", "Battlecruiser", "Battlecruiser", "", true);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-reaper.dds", "Reaper", "Reaper", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-marauderkillsquad.dds", "DominionKillTeam", "DominionKillTeam", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 14, null, 0, "Assets\\Textures\\btn-unit-terran-blackops-ghost.dds", "GhostLaserLines", "DOMGhost", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-ghost.dds", "Ghost", "Ghost", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 13, null, 0, "Assets\\Textures\\btn-unit-terran-dom-grunt.dds", "TrooperMengskACGluescreenDummy", "TrooperMengskACGluescreenDummy", "Separatist", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 15, null, 0, "Assets\\Textures\\btn-unit-terran-medbat.dds", "Tauren", "Tauren", "Medbat", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 16, null, 0, "Assets\\Textures\\btn-unit-terran-marauderswann.dds", "MarauderMengskACGluescreenDummy", "MarauderMengskACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-medickillsquad.dds", "InfestedMedic", "InfestedMedic", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 17, null, 0, "Assets\\Textures\\btn-unit-terran-medic.dds", "MedicACGluescreenDummy", "MedicACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-spectre.dds", "Spectre", "Spectre", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 22, null, 0, "Assets\\Textures\\btn-unit-terran-spectre-shadowguard.dds", "ShadowGuard", "ShadowGuard", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-herc.dds", "HERC", "HERC", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorBarracksTrain", 8, null, 0, "Assets\\Textures\\btn-unit-terran-blackops-ghost.dds", "Phantom", "Phantom", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 5, null, 0, "Assets\\Textures\\btn-unit-terran-hellion.dds", "Hellion", "Hellion", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 24, null, 0, "Assets\\Textures\\btn-unit-terran-widowmine.dds", "WidowMine", "WidowMine", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 15, null, 0, "Assets\\Textures\\btn-unit-collection-cyclone-covertops.dds", "CycloneBot", "CycloneBot", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-cyclone.dds", "Cyclone", "Cyclone", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 14, null, 0, "Assets\\Textures\\btn-unit-terran-warhound.dds", "WarHound", "WarHound", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 17, null, 0, "Assets\\Textures\\btn-unit-terran-odin.dds", "Odin", "Odin", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 27, null, 0, "Assets\\Textures\\btn-unit-terran-vikingmercenary-assault.dds", "TitanMechAssault", "TitanMechAssault", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-hellionbattlemode.dds", "HellionTank", "HellionTank", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 16, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-agmode.dds", "Hyena", "Hyena", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "ThorACGluescreenDummy", "ThorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "Thor", "Thor", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-diamondback.dds", "Diamondback", "Diamondback", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-artillarytank.dds", "Haast", "Haast", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-goliath.dds", "Goliath", "Goliath", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 10, null, 0, "Assets\\Textures\\btn-unit-terran-predator.dds", "Predator", "Predator", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorFactoryTrain", 11, null, 0, "Assets\\Textures\\btn-unit-terran-ares.dds", "UmojanLabMicrobot", "UmojanLabMicrobot", "UmojanLabMicrobot", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-medivac.dds", "Medivac", "Medivac", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 19, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "BWValkyrie", "BWValkyrie", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 5, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-aamode.dds", "Liberator", "Liberator", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-raven.dds", "Raven", "Raven", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-wraith.dds", "Wraith", "Wraith", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 8, null, 0, "Assets\\Textures\\btn-unit-terran-sciencevessel.dds", "ScienceVessel", "ScienceVessel", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "Hercules", "Hercules", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 15, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "HerculesACGluescreenDummy", "HerculesACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 13, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "Kite", "Kite", "SJValkyrie", false);
    lib22142002_gf_TTUS_GetDataManual("RaynorStarportTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-griffon.dds", "Griffon", "Griffon", "SJGriffon", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-drone.dds", "Drone", "Drone", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-overlord.dds", "Overlord", "Overlord", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 24, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-raptor.dds", "HotSRaptor", "HotSRaptor", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 27, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-lurker.dds", "HydraliskLurker", "HydraliskLurker", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 23, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-broodlord.dds", "MutaliskBroodlord", "MutaliskBroodlord", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 20, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-torrasque.dds", "HotSTorrasque", "HotSTorrasque", "", true);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 1, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling.dds", "Zergling", "Zergling", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 25, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-swarmling.dds", "HotSSwarmling", "HotSSwarmling", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 9, null, 0, "Assets\\Textures\\btn-unit-zerg-roach.dds", "Roach", "Roach", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 29, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-vile.dds", "RoachVile", "RoachVile", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 28, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-corpser.dds", "RoachCorpser", "RoachCorpser", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 12, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "InfestedAbomination", "InfestedAbomination", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "AberrationACGluescreenDummy", "AberrationACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk.dds", "Hydralisk", "Hydralisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 26, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-impaler.dds", "HydraliskImpaler", "HydraliskImpaler", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk.dds", "Mutalisk", "Mutalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 22, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-viper.dds", "MutaliskViper", "MutaliskViper", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 11, null, 0, "Assets\\Textures\\btn-unit-zerg-corruptor.dds", "Corruptor", "Corruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 1, null, 0, "Assets\\Textures\\btn-unit-collection-webby-corruptor.dds", "CorruptorACGluescreenDummy", "CorruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 10, null, 0, "Assets\\Textures\\btn-unit-zerg-infestor.dds", "Infestor", "Infestor", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost.dds", "SwarmHostMP", "SwarmHostMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-carrion.dds", "SwarmHostSplitA", "SwarmHostSplitA", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 15, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-creeper.dds", "SwarmHostSplitB", "SwarmHostSplitB", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 8, null, 0, "Assets\\Textures\\btn-unit-zerg-viper.dds", "Viper", "Viper", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", "Ultralisk", "Ultralisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 21, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-noxious.dds", "HotSNoxious", "HotSNoxious", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 13, null, 0, "Assets\\Textures\\btn-unit-zerg-defilerex3.dds", "DefilerMP", "DefilerMP", "Defiler", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 14, null, 0, "Assets\\Textures\\btn-unit-zerg-scourge.dds", "Scourge", "Scourge", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 19, null, 0, "Assets\\Textures\\btn-unit-zerg-classicqueen.dds", "StukovBroodQueenACGluescreenDummy", "StukovBroodQueenACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-queenclassic.dds", "QueenClassic", "QueenClassic", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 17, null, 0, "Assets\\Textures\\btn-unit-zerg-hunterling.dds", "Hunterling", "Hunterling", "Hunterling", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 16, null, 0, "Assets\\Textures\\btn-unit-zerg-kaboomer.dds", "Kaboomer", "Kaboomer", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain", 18, null, 0, "Assets\\Textures\\btn-unit-zerg-choker.dds", "Choker", "Choker", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-spotter.dds", "Spotter", "Spotter", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-omegalisk.dds", "Omegalisk", "Omegalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-stank.dds", "Stank", "Stank", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-brutalisk.dds", "Brutalisk", "Brutalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("KerriganLarvaTrain2", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-leviathan.dds", "HotSLeviathan", "HotSLeviathan", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 5, null, 0, "Assets\\Textures\\btn-unit-protoss-probe.dds", "Probe", "Probe", "", true);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 17, "ArtanisWarpGateTrain", 17, "Assets\\Textures\\btn-unit-protoss-zealot-aiur.dds", "ZealotAiur", "ZealotAiur", "", true);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 18, "ArtanisWarpGateTrain", 18, "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds", "Dragoon", "Dragoon", "", true);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 19, "ArtanisWarpGateTrain", 19, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighArchonTemplar", "HighTemplar", "HighTemplarAiur", true);
    lib22142002_gf_TTUS_GetDataManual("ArchonAdvancedMerge", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-archon-upgraded.dds", "ArchonACGluescreenDummy", "ArchonACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 1, "ArtanisRoboticsFacilityWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-observer.dds", "Observer", "Observer", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 8, "ArtanisRoboticsFacilityWarpTrain", 8, "Assets\\Textures\\btn-unit-collection-adun-immortal.dds", "ImmortalAiur", "ImmortalAiur", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 9, "ArtanisRoboticsFacilityWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "Reaver", "Reaver", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 1, "ArtanisStargateWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "PhoenixAiur", "PhoenixAiur", "", true);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 3, "ArtanisStargateWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "TempestACGluescreenDummy", "TempestACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothershipCore", 1, null, 0, "Assets\\Textures\\btn-unit-protoss-mothershipcore.dds", "MothershipCore", "MothershipCore", "", false);
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothership", 1, null, 0, "Assets\\Textures\\btn-unit-protoss-mothership.dds", "Mothership", "Mothership", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 0, "ArtanisWarpGateTrain", 0, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "Zealot", "Zealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 2, "ArtanisWarpGateTrain", 2, "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds", "ZealotShakuras", "ZealotShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 12, "ArtanisWarpGateTrain", 12, "Assets\\Textures\\btn-unit-protoss-zealot-purifier.dds", "ZealotPurifier", "ZealotPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 11, "ArtanisWarpGateTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-zealot.dds", "ZealotShakurasACGluescreenDummy", "ZealotShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 7, "ArtanisWarpGateTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-supplicant.dds", "SupplicantACGluescreenDummy", "SupplicantACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 1, "ArtanisWarpGateTrain", 1, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "Stalker", "Stalker", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 20, "ArtanisWarpGateTrain002", 0, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "StalkerShakuras", "StalkerShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 21, "ArtanisWarpGateTrain002", 1, "Assets\\Textures\\btn-unit-protoss-stalker-purifier.dds", "StalkerPurifier", "StalkerPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 8, "ArtanisWarpGateTrain", 8, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-stalker.dds", "StalkerTaldarimACGluescreenDummy", "StalkerTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 5, "ArtanisWarpGateTrain", 5, "Assets\\Textures\\btn-unit-protoss-sentry.dds", "Sentry", "Sentry", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 23, "ArtanisWarpGateTrain002", 3, "Assets\\Textures\\btn-unit-protoss-SentryNullifier-Nerazim.dds", "SentryAiur", "SentryAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 16, "ArtanisWarpGateTrain", 16, "Assets\\Textures\\btn-unit-protoss-sentry-purifier.dds", "SentryPurifier", "SentryPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 9, "ArtanisWarpGateTrain", 9, "Assets\\Textures\\btn-unit-protoss-sentry-taldarim.dds", "Monitor", "Monitor", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 6, "ArtanisWarpGateTrain", 6, "Assets\\Textures\\btn-unit-protoss-adept.dds", "Adept", "Adept", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 29, "ArtanisWarpGateTrain002", 9, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "PurifierAdept", "PurifierAdept", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 3, "ArtanisWarpGateTrain", 3, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighTemplar", "HighTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 10, "ArtanisWarpGateTrain", 10, "Assets\\Textures\\btn-unit-protoss-hightemplar-taldarim.dds", "HighTemplarTaldarim", "HighTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 4, "ArtanisWarpGateTrain", 4, "Assets\\Textures\\btn-unit-protoss-darktemplar.dds", "DarkTemplar", "DarkTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 26, "ArtanisWarpGateTrain002", 6, "Assets\\Textures\\btn-unit-protoss-darktemplar-aiur.dds", "DarkTemplarAiur", "DarkTemplarAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 13, "ArtanisWarpGateTrain", 13, "Assets\\Textures\\btn-unit-protoss-darktemplar-nerazim.dds", "DarkTemplarShakuras", "DarkTemplarShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 24, "ArtanisWarpGateTrain002", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-darktemplar.dds", "DarkTemplarTaldarim", "DarkTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 25, "ArtanisWarpGateTrain002", 5, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "VindicatorZealot", "VindicatorZealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("KhalaiGatewayTrain", 27, "ArtanisWarpGateTrain002", 7, "Assets\\Textures\\btn-unit-protoss-preserver01.dds", "PreserverA", "PreserverBase", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 12, "ArtanisRoboticsFacilityWarpTrain", 12, "Assets\\Textures\\btn-unit-collection-purifier-observer.dds", "ObserverFenixACGluescreenDummy", "ObserverFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 18, "ArtanisRoboticsFacilityWarpTrain", 18, "Assets\\Textures\\btn-unit-collection-taldarim-observer.dds", "ObserverACGluescreenDummy", "ObserverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 3, "ArtanisRoboticsFacilityWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "Immortal", "Immortal", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 22, "ArtanisRoboticsFacilityWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "ImmortalACGluescreenDummy", "ImmortalACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 14, "ArtanisRoboticsFacilityWarpTrain", 14, "Assets\\Textures\\btn-unit-protoss-immortal-nerazim.dds", "ImmortalShakuras", "ImmortalShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 13, "ArtanisRoboticsFacilityWarpTrain", 13, "Assets\\Textures\\btn-unit-collection-purifier-immortal.dds", "GuardianACGluescreenDummy", "GuardianACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 16, "ArtanisRoboticsFacilityWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "StandardImmortalTaldarim", "StandardImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 5, "ArtanisRoboticsFacilityWarpTrain", 5, "Assets\\Textures\\btn-unit-protoss-immortal-taldarim.dds", "ImmortalTaldarim", "ImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 19, "ArtanisRoboticsFacilityWarpTrain", 19, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "ReaverACGluescreenDummy", "ReaverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 0, "ArtanisRoboticsFacilityWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-warpprism.dds", "WarpPrism", "WarpPrism", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 4, "ArtanisRoboticsFacilityWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismTaldarimACGluescreenDummy", "WarpPrismTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 7, "ArtanisRoboticsFacilityWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-disruptor.dds", "Disruptor", "Disruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 11, "ArtanisRoboticsFacilityWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-disruptorfenix-purifier.dds", "HydraliskLurkerACGluescreenDummy", "HydraliskLurkerACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 20, "ArtanisRoboticsFacilityWarpTrain002", 0, "Assets\\Textures\\btn-unit-collection-taldarim-disruptor.dds", "DisruptorACGluescreenDummy", "DisruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 2, "ArtanisRoboticsFacilityWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-colossus.dds", "Colossus", "Colossus", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 10, "ArtanisRoboticsFacilityWarpTrain", 10, "Assets\\Textures\\btn-unit-collection-colossus-collectoredition.dds", "ColossusPurifier", "ColossusPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 21, "ArtanisRoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-collection-purifier-colossus.dds", "ColossusPurifierACGluescreenDummy", "ColossusPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 15, "ArtanisRoboticsFacilityWarpTrain", 15, "Assets\\Textures\\btn-unit-collection-colossus-taldarim.dds", "ColossusFenixACGluescreenDummy", "ColossusFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 6, "ArtanisRoboticsFacilityWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-colossus-taldarimex3.dds", "ColossusTaldarim", "ColossusTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisRoboticsFacilityTrain", 17, "ArtanisRoboticsFacilityWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismGiant", "WarpPrismGiant", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 0, "ArtanisStargateWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "Phoenix", "Phoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 24, "ArtanisStargateWarpTrain002", 4, "Assets\\Textures\\btn-unit-collection-purifier-phoenix.dds", "PhoenixPurifierACGluescreenDummy", "PhoenixPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 5, "ArtanisStargateWarpTrain", 5, "Assets\\Textures\\btn-unit-collection-taldarim-phoenix.dds", "TaldarimPhoenix", "TaldarimPhoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 9, "ArtanisStargateWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "Tempest", "Tempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 23, "ArtanisStargateWarpTrain002", 3, "Assets\\Textures\\btn-unit-collection-purifier-tempest.dds", "PurifierTempest", "PurifierTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 10, "ArtanisStargateWarpTrain", 10, "Assets\\Textures\\btn-unit-protoss-tempest-ihanrii.dds", "TaldarimTempest", "TaldarimTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 4, "ArtanisStargateWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-warpray.dds", "VoidRay", "VoidRay", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 28, "ArtanisStargateWarpTrain002", 8, "Assets\\Textures\\btn-unit-protoss-voidray-nerazim.dds", "VoidRayShakuras", "VoidRayShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 25, "ArtanisStargateWarpTrain002", 5, "Assets\\Textures\\btn-unit-collection-purifier-voidray.dds", "VoidRayShakurasACGluescreenDummy", "VoidRayShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 7, "ArtanisStargateWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-voidray.dds", "VoidRayTaldarim", "VoidRayTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 8, "ArtanisStargateWarpTrain", 8, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "Oracle", "Oracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 12, "ArtanisStargateWarpTrain", 12, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "OracleACGluescreenDummy", "OracleACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 6, "ArtanisStargateWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-oracle-taldarim.dds", "TaldarimOracle", "TaldarimOracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 2, "ArtanisStargateWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-carrier.dds", "Carrier", "Carrier", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 15, "ArtanisStargateWarpTrain", 15, "Assets\\Textures\\btn-unit-protoss-carrierhero.dds", "CarrierAiur", "CarrierAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 14, "ArtanisStargateWarpTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-carrier.dds", "CarrierACGluescreenDummy", "CarrierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 11, "ArtanisStargateWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-carrier-collection.dds", "CarrierTaldarim", "CarrierTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 26, "ArtanisStargateWarpTrain002", 6, "Assets\\Textures\\btn-unit-protoss-scout.dds", "Scout", "Scout", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 29, "ArtanisStargateWarpTrain002", 9, "Assets\\Textures\\btn-unit-protoss-scout.dds", "SwarmlingACGluescreenDummy", "SwarmlingACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 13, "ArtanisStargateWarpTrain", 13, "Assets\\Textures\\btn-unit-protoss-scout-purifier.dds", "ScoutACGluescreenDummy", "ScoutACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 22, "ArtanisStargateWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-scout.dds", "ScoutMP", "ScoutMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 27, "ArtanisStargateWarpTrain002", 7, "Assets\\Textures\\btn-unit-protoss-corsair.dds", "CorsairMP", "CorsairMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 16, "ArtanisStargateWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-phoenix-purifier.dds", "PhoenixPurifier", "PhoenixPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 18, "ArtanisStargateWarpTrain", 18, "Assets\\Textures\\btn-unit-protoss-arbiter.dds", "ArbiterMP", "ArbiterMP", "Arbiter", false);
    lib22142002_gf_TTUS_GetDataManual("ArtanisStargateTrain", 17, "ArtanisStargateWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-tempest-purifier.dds", "TempestPurifier", "TempestPurifier", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("CommandCenterTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-scv.dds", "SCV", "SCV", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-hellionbattlemode.dds", "HellionTank", "HellionTank", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 5, null, 0, "Assets\\Textures\\btn-unit-terran-hellion.dds", "Hellion", "Hellion", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-siegetank.dds", "SiegeTank", "SiegeTank", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-goliath.dds", "Goliath", "Goliath", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-cyclone.dds", "Cyclone", "Cyclone", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "ThorACGluescreenDummy", "ThorACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 6, null, 0, "Assets\\Textures\\btn-unit-terran-wraith.dds", "Wraith", "Wraith", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 8, null, 0, "Assets\\Textures\\btn-unit-terran-sciencevessel.dds", "ScienceVessel", "ScienceVessel", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 7, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "Hercules", "Hercules", "", true);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 23, null, 0, "Assets\\Textures\\btn-unit-terran-hellbatblackops.dds", "HellbatRangerACGluescreenDummy", "HellbatRangerACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 8, null, 0, "Assets\\Textures\\btn-unit-collection-hellbat-junker.dds", "HHHellionTankACGluescreenDummy", "HHHellionTankACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 9, null, 0, "Assets\\Textures\\btn-unit-terran-vulture.dds", "Vulture", "Vulture", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 26, null, 0, "Assets\\Textures\\btn-unit-terran-goliathblackops.dds", "StrikeGoliathACGluescreenDummy", "StrikeGoliathACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 15, null, 0, "Assets\\Textures\\btn-unit-collection-cyclone-covertops.dds", "CycloneBot", "CycloneBot", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 25, null, 0, "Assets\\Textures\\btn-unit-terran-siegetankblackops-tank.dds", "HeavySiegeTankACGluescreenDummy", "HeavySiegeTankACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 21, null, 0, "Assets\\Textures\\btn-unit-collection-tank-junker.dds", "HHSiegeTank", "HHSiegeTank", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-thor.dds", "Thor", "Thor", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 16, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-agmode.dds", "Hyena", "Hyena", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 22, null, 0, "Assets\\Textures\\btn-unit-terran-hellionblackops.dds", "HellionBlackOps", "HellionBlackOps", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 19, null, 0, "Assets\\Textures\\btn-unit-collection-hellion-junker.dds", "HHHellion", "HHHellion", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 24, null, 0, "Assets\\Textures\\btn-unit-terran-widowmine.dds", "WidowMine", "WidowMine", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 20, null, 0, "Assets\\Textures\\btn-unit-collection-widowmine-junker.dds", "HHWidowMineACGluescreenDummy", "HHWidowMineACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-diamondback.dds", "Diamondback", "Diamondback", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-artillarytank.dds", "Haast", "Haast", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 14, null, 0, "Assets\\Textures\\btn-unit-terran-warhound.dds", "WarHound", "WarHound", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 17, null, 0, "Assets\\Textures\\btn-unit-terran-odin.dds", "Odin", "Odin", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 27, null, 0, "Assets\\Textures\\btn-unit-terran-vikingmercenary-assault.dds", "TitanMechAssault", "TitanMechAssault", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 10, null, 0, "Assets\\Textures\\btn-unit-terran-predator.dds", "Predator", "Predator", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannFactoryTrain", 11, null, 0, "Assets\\Textures\\btn-unit-terran-ares.dds", "UmojanLabMicrobot", "UmojanLabMicrobot", "UmojanLabMicrobot", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 15, null, 0, "Assets\\Textures\\btn-unit-terran-hercules.dds", "HerculesACGluescreenDummy", "HerculesACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 13, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "Kite", "Kite", "SJValkyrie", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 2, null, 0, "Assets\\Textures\\btn-unit-terran-raven.dds", "Raven", "Raven", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 19, null, 0, "Assets\\Textures\\btn-unit-terran-valkyrie.dds", "BWValkyrie", "BWValkyrie", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 5, null, 0, "Assets\\Textures\\btn-ability-terran-liberator-aamode.dds", "Liberator", "Liberator", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 0, null, 0, "Assets\\Textures\\btn-unit-terran-medivac.dds", "Medivac", "Medivac", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 4, null, 0, "Assets\\Textures\\btn-unit-terran-vikingfighter.dds", "VikingFighter", "VikingFighter", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 1, null, 0, "Assets\\Textures\\btn-unit-terran-banshee.dds", "Banshee", "Banshee", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 3, null, 0, "Assets\\Textures\\btn-unit-terran-battlecruiser.dds", "Battlecruiser", "Battlecruiser", "", false);
    lib22142002_gf_TTUS_GetDataManual("SwannStarportTrain", 12, null, 0, "Assets\\Textures\\btn-unit-terran-griffon.dds", "Griffon", "Griffon", "SJGriffon", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 0, null, 0, "Assets\\Textures\\btn-unit-collection-webby-drone.dds", "Drone", "Drone", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 2, null, 0, "Assets\\Textures\\btn-unit-collection-webby-overlord.dds", "Overlord", "Overlord", "", true);
    lib22142002_gf_TTUS_GetDataManual("TrainQueen", 2, null, 0, "Assets\\Textures\\btn-unit-collection-webby-queen.dds", "ZagaraQueen", "ZagaraQueen", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 10, null, 0, "Assets\\Textures\\btn-unit-collection-webby-zergling.dds", "ZerglingZagaraACGluescreenDummy", "ZerglingZagaraACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "AberrationACGluescreenDummy", "AberrationACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 14, null, 0, "Assets\\Textures\\btn-unit-zerg-scourge.dds", "ScourgeACGluescreenDummy", "ScourgeACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 1, null, 0, "Assets\\Textures\\btn-unit-collection-webby-corruptor.dds", "CorruptorACGluescreenDummy", "CorruptorACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 1, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling.dds", "Zergling", "Zergling", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 25, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-swarmling.dds", "HotSSwarmling", "HotSSwarmling", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 24, null, 0, "Assets\\Textures\\btn-unit-zerg-zergling-raptor.dds", "HotSRaptor", "HotSRaptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 9, null, 0, "Assets\\Textures\\btn-unit-zerg-roach.dds", "Roach", "Roach", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 29, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-vile.dds", "RoachVile", "RoachVile", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 28, null, 0, "Assets\\Textures\\btn-unit-zerg-roach-corpser.dds", "RoachCorpser", "RoachCorpser", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 12, null, 0, "Assets\\Textures\\btn-unit-zerg-aberration.dds", "InfestedAbomination", "InfestedAbomination", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 27, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-lurker.dds", "HydraliskLurker", "HydraliskLurker", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 23, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-broodlord.dds", "MutaliskBroodlord", "MutaliskBroodlord", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 20, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-torrasque.dds", "HotSTorrasque", "HotSTorrasque", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk.dds", "Hydralisk", "Hydralisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 26, null, 0, "Assets\\Textures\\btn-unit-zerg-hydralisk-impaler.dds", "HydraliskImpaler", "HydraliskImpaler", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 4, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk.dds", "Mutalisk", "Mutalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 22, null, 0, "Assets\\Textures\\btn-unit-zerg-mutalisk-viper.dds", "MutaliskViper", "MutaliskViper", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 11, null, 0, "Assets\\Textures\\btn-unit-zerg-corruptor.dds", "Corruptor", "Corruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 10, null, 0, "Assets\\Textures\\btn-unit-zerg-infestor.dds", "Infestor", "Infestor", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost.dds", "SwarmHostMP", "SwarmHostMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-carrion.dds", "SwarmHostSplitA", "SwarmHostSplitA", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 15, null, 0, "Assets\\Textures\\btn-unit-zerg-swarmhost-creeper.dds", "SwarmHostSplitB", "SwarmHostSplitB", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 8, null, 0, "Assets\\Textures\\btn-unit-zerg-viper.dds", "Viper", "Viper", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", "Ultralisk", "Ultralisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 21, null, 0, "Assets\\Textures\\btn-unit-zerg-ultralisk-noxious.dds", "HotSNoxious", "HotSNoxious", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 13, null, 0, "Assets\\Textures\\btn-unit-zerg-defilerex3.dds", "DefilerMP", "DefilerMP", "Defiler", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 19, null, 0, "Assets\\Textures\\btn-unit-zerg-classicqueen.dds", "StukovBroodQueenACGluescreenDummy", "StukovBroodQueenACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 7, null, 0, "Assets\\Textures\\btn-unit-zerg-queenclassic.dds", "QueenClassic", "QueenClassic", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 17, null, 0, "Assets\\Textures\\btn-unit-zerg-hunterling.dds", "Hunterling", "Hunterling", "Hunterling", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 16, null, 0, "Assets\\Textures\\btn-unit-zerg-kaboomer.dds", "Kaboomer", "Kaboomer", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrain", 18, null, 0, "Assets\\Textures\\btn-unit-zerg-choker.dds", "Choker", "Choker", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-spotter.dds", "Spotter", "Spotter", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 2, null, 0, "Assets\\Textures\\btn-unit-zerg-omegalisk.dds", "Omegalisk", "Omegalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 3, null, 0, "Assets\\Textures\\btn-unit-zerg-stank.dds", "Stank", "Stank", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 5, null, 0, "Assets\\Textures\\btn-unit-zerg-brutalisk.dds", "Brutalisk", "Brutalisk", "", false);
    lib22142002_gf_TTUS_GetDataManual("ZagaraLarvaTrainSwarmling", 6, null, 0, "Assets\\Textures\\btn-unit-zerg-leviathan.dds", "HotSLeviathan", "HotSLeviathan", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 3, null, 0, "Assets\\Textures\\btn-unit-collection-taldarim-probe.dds", "ViperACGluescreenDummy", "ViperACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 2, "VorazunWarpGateTrain", 2, "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds", "ZealotShakuras", "ZealotShakuras", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 20, "VorazunWarpGateTrain002", 0, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "StalkerShakuras", "StalkerShakuras", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 13, "VorazunWarpGateTrain", 13, "Assets\\Textures\\btn-unit-protoss-darktemplar-nerazim.dds", "DarkTemplarShakuras", "DarkTemplarShakuras", "", true);
    lib22142002_gf_TTUS_GetDataManual("DarkArchonMerge", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-darkarchon.dds", "DarkArchon", "DarkArchon", "HighTemplarShakuras", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 27, "VorazunStargateWarpTrain002", 7, "Assets\\Textures\\btn-unit-protoss-corsair.dds", "CorsairMP", "CorsairMP", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 12, "VorazunStargateWarpTrain", 12, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "OracleACGluescreenDummy", "OracleACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 28, "VorazunStargateWarpTrain002", 8, "Assets\\Textures\\btn-unit-protoss-voidray-nerazim.dds", "VoidRayShakuras", "VoidRayShakuras", "", true);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 0, "VorazunWarpGateTrain", 0, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "Zealot", "Zealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 17, "VorazunWarpGateTrain", 17, "Assets\\Textures\\btn-unit-protoss-zealot-aiur.dds", "ZealotAiur", "ZealotAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 12, "VorazunWarpGateTrain", 12, "Assets\\Textures\\btn-unit-protoss-zealot-purifier.dds", "ZealotPurifier", "ZealotPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 11, "VorazunWarpGateTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-zealot.dds", "ZealotShakurasACGluescreenDummy", "ZealotShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 1, "VorazunWarpGateTrain", 1, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "Stalker", "Stalker", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 18, "VorazunWarpGateTrain", 18, "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds", "Dragoon", "Dragoon", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 21, "VorazunWarpGateTrain002", 1, "Assets\\Textures\\btn-unit-protoss-stalker-purifier.dds", "StalkerPurifier", "StalkerPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 8, "VorazunWarpGateTrain", 8, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-stalker.dds", "StalkerTaldarimACGluescreenDummy", "StalkerTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 5, "VorazunWarpGateTrain", 5, "Assets\\Textures\\btn-unit-protoss-sentry.dds", "Sentry", "Sentry", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 23, "VorazunWarpGateTrain002", 3, "Assets\\Textures\\btn-unit-protoss-SentryNullifier-Nerazim.dds", "SentryAiur", "SentryAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 16, "VorazunWarpGateTrain", 16, "Assets\\Textures\\btn-unit-protoss-sentry-purifier.dds", "SentryPurifier", "SentryPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 9, "VorazunWarpGateTrain", 9, "Assets\\Textures\\btn-unit-protoss-sentry-taldarim.dds", "Monitor", "Monitor", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 6, "VorazunWarpGateTrain", 6, "Assets\\Textures\\btn-unit-protoss-adept.dds", "Adept", "Adept", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 22, "VorazunWarpGateTrain002", 2, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "BroodLordACGluescreenDummy", "BroodLordACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 29, "VorazunWarpGateTrain002", 9, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "PurifierAdept", "PurifierAdept", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 27, "VorazunWarpGateTrain002", 7, "Assets\\Textures\\btn-unit-protoss-preserver01.dds", "PreserverA", "PreserverBase", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 3, "VorazunWarpGateTrain", 3, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighTemplar", "HighTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 19, "VorazunWarpGateTrain", 19, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighArchonTemplar", "HighTemplar", "HighTemplarAiur", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 10, "VorazunWarpGateTrain", 10, "Assets\\Textures\\btn-unit-protoss-hightemplar-taldarim.dds", "HighTemplarTaldarim", "HighTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 4, "VorazunWarpGateTrain", 4, "Assets\\Textures\\btn-unit-protoss-darktemplar.dds", "DarkTemplar", "DarkTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 26, "VorazunWarpGateTrain002", 6, "Assets\\Textures\\btn-unit-protoss-darktemplar-aiur.dds", "DarkTemplarAiur", "DarkTemplarAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 24, "VorazunWarpGateTrain002", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-darktemplar.dds", "DarkTemplarTaldarim", "DarkTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 7, "VorazunWarpGateTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-supplicant.dds", "SupplicantACGluescreenDummy", "SupplicantACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunGatewayTrain", 25, "VorazunWarpGateTrain002", 5, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "VindicatorZealot", "VindicatorZealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 14, "VorazunRoboticsFacilityWarpTrain", 14, "Assets\\Textures\\btn-unit-protoss-immortal-nerazim.dds", "ImmortalShakuras", "ImmortalShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 3, "VorazunRoboticsFacilityWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "Immortal", "Immortal", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 8, "VorazunRoboticsFacilityWarpTrain", 8, "Assets\\Textures\\btn-unit-collection-adun-immortal.dds", "ImmortalAiur", "ImmortalAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 22, "VorazunRoboticsFacilityWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "ImmortalACGluescreenDummy", "ImmortalACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 13, "VorazunRoboticsFacilityWarpTrain", 13, "Assets\\Textures\\btn-unit-collection-purifier-immortal.dds", "GuardianACGluescreenDummy", "GuardianACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 16, "VorazunRoboticsFacilityWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "StandardImmortalTaldarim", "StandardImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 5, "VorazunRoboticsFacilityWarpTrain", 5, "Assets\\Textures\\btn-unit-protoss-immortal-taldarim.dds", "ImmortalTaldarim", "ImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 0, "VorazunRoboticsFacilityWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-warpprism.dds", "WarpPrism", "WarpPrism", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 4, "VorazunRoboticsFacilityWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismTaldarimACGluescreenDummy", "WarpPrismTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 1, "VorazunRoboticsFacilityWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-observer.dds", "Observer", "Observer", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 12, "VorazunRoboticsFacilityWarpTrain", 12, "Assets\\Textures\\btn-unit-collection-purifier-observer.dds", "ObserverFenixACGluescreenDummy", "ObserverFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 18, "VorazunRoboticsFacilityWarpTrain", 18, "Assets\\Textures\\btn-unit-collection-taldarim-observer.dds", "ObserverACGluescreenDummy", "ObserverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 2, "VorazunRoboticsFacilityWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-colossus.dds", "Colossus", "Colossus", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 10, "VorazunRoboticsFacilityWarpTrain", 10, "Assets\\Textures\\btn-unit-collection-colossus-collectoredition.dds", "ColossusPurifier", "ColossusPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 21, "VorazunRoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-collection-purifier-colossus.dds", "ColossusPurifierACGluescreenDummy", "ColossusPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 15, "VorazunRoboticsFacilityWarpTrain", 15, "Assets\\Textures\\btn-unit-collection-colossus-taldarim.dds", "ColossusFenixACGluescreenDummy", "ColossusFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 7, "VorazunRoboticsFacilityWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-disruptor.dds", "Disruptor", "Disruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 11, "VorazunRoboticsFacilityWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-disruptorfenix-purifier.dds", "HydraliskLurkerACGluescreenDummy", "HydraliskLurkerACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 20, "VorazunRoboticsFacilityWarpTrain002", 0, "Assets\\Textures\\btn-unit-collection-taldarim-disruptor.dds", "DisruptorACGluescreenDummy", "DisruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 19, "VorazunRoboticsFacilityWarpTrain", 19, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "ReaverACGluescreenDummy", "ReaverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 9, "VorazunRoboticsFacilityWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "Reaver", "Reaver", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 6, "VorazunRoboticsFacilityWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-colossus-taldarimex3.dds", "ColossusTaldarim", "ColossusTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunRoboticsFacilityTrain", 17, "VorazunRoboticsFacilityWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismGiant", "WarpPrismGiant", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 16, "VorazunStargateWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-phoenix-purifier.dds", "PhoenixPurifier", "PhoenixPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 8, "VorazunStargateWarpTrain", 8, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "Oracle", "Oracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 6, "VorazunStargateWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-oracle-taldarim.dds", "TaldarimOracle", "TaldarimOracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 4, "VorazunStargateWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-warpray.dds", "VoidRay", "VoidRay", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 25, "VorazunStargateWarpTrain002", 5, "Assets\\Textures\\btn-unit-collection-purifier-voidray.dds", "VoidRayShakurasACGluescreenDummy", "VoidRayShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 7, "VorazunStargateWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-voidray.dds", "VoidRayTaldarim", "VoidRayTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 9, "VorazunStargateWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "Tempest", "Tempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 3, "VorazunStargateWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "TempestACGluescreenDummy", "TempestACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 23, "VorazunStargateWarpTrain002", 3, "Assets\\Textures\\btn-unit-collection-purifier-tempest.dds", "PurifierTempest", "PurifierTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 10, "VorazunStargateWarpTrain", 10, "Assets\\Textures\\btn-unit-protoss-tempest-ihanrii.dds", "TaldarimTempest", "TaldarimTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 2, "VorazunStargateWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-carrier.dds", "Carrier", "Carrier", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 15, "VorazunStargateWarpTrain", 15, "Assets\\Textures\\btn-unit-protoss-carrierhero.dds", "CarrierAiur", "CarrierAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 14, "VorazunStargateWarpTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-carrier.dds", "CarrierACGluescreenDummy", "CarrierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 11, "VorazunStargateWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-carrier-collection.dds", "CarrierTaldarim", "CarrierTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 29, "VorazunStargateWarpTrain002", 9, "Assets\\Textures\\btn-unit-protoss-scout.dds", "SwarmlingACGluescreenDummy", "SwarmlingACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 26, "VorazunStargateWarpTrain002", 6, "Assets\\Textures\\btn-unit-protoss-scout.dds", "Scout", "Scout", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 13, "VorazunStargateWarpTrain", 13, "Assets\\Textures\\btn-unit-protoss-scout-purifier.dds", "ScoutACGluescreenDummy", "ScoutACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 22, "VorazunStargateWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-scout.dds", "ScoutMP", "ScoutMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 1, "VorazunStargateWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "PhoenixAiur", "PhoenixAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 0, "VorazunStargateWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "Phoenix", "Phoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 24, "VorazunStargateWarpTrain002", 4, "Assets\\Textures\\btn-unit-collection-purifier-phoenix.dds", "PhoenixPurifierACGluescreenDummy", "PhoenixPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 5, "VorazunStargateWarpTrain", 5, "Assets\\Textures\\btn-unit-collection-taldarim-phoenix.dds", "TaldarimPhoenix", "TaldarimPhoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 18, "VorazunStargateWarpTrain", 18, "Assets\\Textures\\btn-unit-protoss-arbiter.dds", "ArbiterMP", "ArbiterMP", "Arbiter", false);
    lib22142002_gf_TTUS_GetDataManual("VorazunStargateTrain", 17, "VorazunStargateWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-tempest-purifier.dds", "TempestPurifier", "TempestPurifier", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 6, null, 0, "Assets\\Textures\\btn-unit-protoss-probe.dds", "KaraxProbe", "KaraxProbe", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 12, "KaraxWarpGateTrain", 12, "Assets\\Textures\\btn-unit-protoss-zealot-purifier.dds", "ZealotPurifier", "ZealotPurifier", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 16, "KaraxWarpGateTrain", 16, "Assets\\Textures\\btn-unit-protoss-sentry-purifier.dds", "SentryPurifier", "SentryPurifier", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 1, "KaraxRoboticsFacilityWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-observer.dds", "Observer", "Observer", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 22, "KaraxRoboticsFacilityWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "ImmortalACGluescreenDummy", "ImmortalACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 10, "KaraxRoboticsFacilityWarpTrain", 10, "Assets\\Textures\\btn-unit-collection-colossus-collectoredition.dds", "ColossusPurifier", "ColossusPurifier", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 16, "KaraxStargateWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-phoenix-purifier.dds", "PhoenixPurifier", "PhoenixPurifier", "", true);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 15, "KaraxStargateWarpTrain", 15, "Assets\\Textures\\btn-unit-protoss-carrierhero.dds", "CarrierAiur", "CarrierAiur", "", true);
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothershipCore", 2, null, 0, "Assets\\Textures\\btn-unit-protoss-mothershipcore.dds", "MothershipCore", "MothershipCore", "", false);
    lib22142002_gf_TTUS_GetDataManual("NexusTrainMothership", 2, null, 0, "Assets\\Textures\\btn-unit-protoss-mothership.dds", "Mothership", "Mothership", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 0, "KaraxWarpGateTrain", 0, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "Zealot", "Zealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 17, "KaraxWarpGateTrain", 17, "Assets\\Textures\\btn-unit-protoss-zealot-aiur.dds", "ZealotAiur", "ZealotAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 2, "KaraxWarpGateTrain", 2, "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds", "ZealotShakuras", "ZealotShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 11, "KaraxWarpGateTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-zealot.dds", "ZealotShakurasACGluescreenDummy", "ZealotShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 1, "KaraxWarpGateTrain", 1, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "Stalker", "Stalker", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 18, "KaraxWarpGateTrain", 18, "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds", "Dragoon", "Dragoon", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 20, "KaraxWarpGateTrain002", 0, "Assets\\Textures\\btn-unit-protoss-stalker.dds", "StalkerShakuras", "StalkerShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 21, "KaraxWarpGateTrain002", 1, "Assets\\Textures\\btn-unit-protoss-stalker-purifier.dds", "StalkerPurifier", "StalkerPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 8, "KaraxWarpGateTrain", 8, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-stalker.dds", "StalkerTaldarimACGluescreenDummy", "StalkerTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 5, "KaraxWarpGateTrain", 5, "Assets\\Textures\\btn-unit-protoss-sentry.dds", "Sentry", "Sentry", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 23, "KaraxWarpGateTrain002", 3, "Assets\\Textures\\btn-unit-protoss-SentryNullifier-Nerazim.dds", "SentryAiur", "SentryAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 9, "KaraxWarpGateTrain", 9, "Assets\\Textures\\btn-unit-protoss-sentry-taldarim.dds", "Monitor", "Monitor", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 6, "KaraxWarpGateTrain", 6, "Assets\\Textures\\btn-unit-protoss-adept.dds", "Adept", "Adept", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 22, "KaraxWarpGateTrain002", 2, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "BroodLordACGluescreenDummy", "BroodLordACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 29, "KaraxWarpGateTrain002", 9, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "PurifierAdept", "PurifierAdept", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 27, "KaraxWarpGateTrain002", 7, "Assets\\Textures\\btn-unit-protoss-preserver01.dds", "PreserverA", "PreserverBase", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 3, "KaraxWarpGateTrain", 3, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighTemplar", "HighTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 19, "KaraxWarpGateTrain", 19, "Assets\\Textures\\btn-unit-protoss-hightemplar.dds", "HighArchonTemplar", "HighTemplar", "HighTemplarAiur", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 10, "KaraxWarpGateTrain", 10, "Assets\\Textures\\btn-unit-protoss-hightemplar-taldarim.dds", "HighTemplarTaldarim", "HighTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 4, "KaraxWarpGateTrain", 4, "Assets\\Textures\\btn-unit-protoss-darktemplar.dds", "DarkTemplar", "DarkTemplar", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 26, "KaraxWarpGateTrain002", 6, "Assets\\Textures\\btn-unit-protoss-darktemplar-aiur.dds", "DarkTemplarAiur", "DarkTemplarAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 13, "KaraxWarpGateTrain", 13, "Assets\\Textures\\btn-unit-protoss-darktemplar-nerazim.dds", "DarkTemplarShakuras", "DarkTemplarShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 24, "KaraxWarpGateTrain002", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-darktemplar.dds", "DarkTemplarTaldarim", "DarkTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 7, "KaraxWarpGateTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-supplicant.dds", "SupplicantACGluescreenDummy", "SupplicantACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxGatewayTrain", 25, "KaraxWarpGateTrain002", 5, "Assets\\Textures\\btn-unit-protoss-zealot.dds", "VindicatorZealot", "VindicatorZealot", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 12, "KaraxRoboticsFacilityWarpTrain", 12, "Assets\\Textures\\btn-unit-collection-purifier-observer.dds", "ObserverFenixACGluescreenDummy", "ObserverFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 18, "KaraxRoboticsFacilityWarpTrain", 18, "Assets\\Textures\\btn-unit-collection-taldarim-observer.dds", "ObserverACGluescreenDummy", "ObserverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 3, "KaraxRoboticsFacilityWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "Immortal", "Immortal", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 8, "KaraxRoboticsFacilityWarpTrain", 8, "Assets\\Textures\\btn-unit-collection-adun-immortal.dds", "ImmortalAiur", "ImmortalAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 14, "KaraxRoboticsFacilityWarpTrain", 14, "Assets\\Textures\\btn-unit-protoss-immortal-nerazim.dds", "ImmortalShakuras", "ImmortalShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 13, "KaraxRoboticsFacilityWarpTrain", 13, "Assets\\Textures\\btn-unit-collection-purifier-immortal.dds", "GuardianACGluescreenDummy", "GuardianACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 16, "KaraxRoboticsFacilityWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "StandardImmortalTaldarim", "StandardImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 5, "KaraxRoboticsFacilityWarpTrain", 5, "Assets\\Textures\\btn-unit-protoss-immortal-taldarim.dds", "ImmortalTaldarim", "ImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 2, "KaraxRoboticsFacilityWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-colossus.dds", "Colossus", "Colossus", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 21, "KaraxRoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-collection-purifier-colossus.dds", "ColossusPurifierACGluescreenDummy", "ColossusPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 15, "KaraxRoboticsFacilityWarpTrain", 15, "Assets\\Textures\\btn-unit-collection-colossus-taldarim.dds", "ColossusFenixACGluescreenDummy", "ColossusFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 0, "KaraxRoboticsFacilityWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-warpprism.dds", "WarpPrism", "WarpPrism", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 4, "KaraxRoboticsFacilityWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismTaldarimACGluescreenDummy", "WarpPrismTaldarimACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 7, "KaraxRoboticsFacilityWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-disruptor.dds", "Disruptor", "Disruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 11, "KaraxRoboticsFacilityWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-disruptorfenix-purifier.dds", "HydraliskLurkerACGluescreenDummy", "HydraliskLurkerACGluescreenDumm", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 20, "KaraxRoboticsFacilityWarpTrain002", 0, "Assets\\Textures\\btn-unit-collection-taldarim-disruptor.dds", "DisruptorACGluescreenDummy", "DisruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 19, "KaraxRoboticsFacilityWarpTrain", 19, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "ReaverACGluescreenDummy", "ReaverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 9, "KaraxRoboticsFacilityWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-reaver.dds", "Reaver", "Reaver", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 6, "KaraxRoboticsFacilityWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-colossus-taldarimex3.dds", "ColossusTaldarim", "ColossusTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxRoboticsFacilityTrain", 17, "KaraxRoboticsFacilityWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismGiant", "WarpPrismGiant", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 27, "KaraxStargateWarpTrain002", 7, "Assets\\Textures\\btn-unit-protoss-corsair.dds", "CorsairMP", "CorsairMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 2, "KaraxStargateWarpTrain", 2, "Assets\\Textures\\btn-unit-protoss-carrier.dds", "Carrier", "Carrier", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 14, "KaraxStargateWarpTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-carrier.dds", "CarrierACGluescreenDummy", "CarrierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 11, "KaraxStargateWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-carrier-collection.dds", "CarrierTaldarim", "CarrierTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 4, "KaraxStargateWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-warpray.dds", "VoidRay", "VoidRay", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 28, "KaraxStargateWarpTrain002", 8, "Assets\\Textures\\btn-unit-protoss-voidray-nerazim.dds", "VoidRayShakuras", "VoidRayShakuras", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 25, "KaraxStargateWarpTrain002", 5, "Assets\\Textures\\btn-unit-collection-purifier-voidray.dds", "VoidRayShakurasACGluescreenDummy", "VoidRayShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 7, "KaraxStargateWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-voidray.dds", "VoidRayTaldarim", "VoidRayTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 9, "KaraxStargateWarpTrain", 9, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "Tempest", "Tempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 3, "KaraxStargateWarpTrain", 3, "Assets\\Textures\\btn-unit-protoss-tempest.dds", "TempestACGluescreenDummy", "TempestACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 23, "KaraxStargateWarpTrain002", 3, "Assets\\Textures\\btn-unit-collection-purifier-tempest.dds", "PurifierTempest", "PurifierTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 10, "KaraxStargateWarpTrain", 10, "Assets\\Textures\\btn-unit-protoss-tempest-ihanrii.dds", "TaldarimTempest", "TaldarimTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 8, "KaraxStargateWarpTrain", 8, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "Oracle", "Oracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 12, "KaraxStargateWarpTrain", 12, "Assets\\Textures\\btn-unit-protoss-oracle.dds", "OracleACGluescreenDummy", "OracleACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 6, "KaraxStargateWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-oracle-taldarim.dds", "TaldarimOracle", "TaldarimOracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 29, "KaraxStargateWarpTrain002", 9, "Assets\\Textures\\btn-unit-protoss-scout.dds", "SwarmlingACGluescreenDummy", "SwarmlingACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 26, "KaraxStargateWarpTrain002", 6, "Assets\\Textures\\btn-unit-protoss-scout.dds", "Scout", "Scout", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 13, "KaraxStargateWarpTrain", 13, "Assets\\Textures\\btn-unit-protoss-scout-purifier.dds", "ScoutACGluescreenDummy", "ScoutACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 22, "KaraxStargateWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-scout.dds", "ScoutMP", "ScoutMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 1, "KaraxStargateWarpTrain", 1, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "PhoenixAiur", "PhoenixAiur", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 0, "KaraxStargateWarpTrain", 0, "Assets\\Textures\\btn-unit-protoss-phoenix.dds", "Phoenix", "Phoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 24, "KaraxStargateWarpTrain002", 4, "Assets\\Textures\\btn-unit-collection-purifier-phoenix.dds", "PhoenixPurifierACGluescreenDummy", "PhoenixPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 5, "KaraxStargateWarpTrain", 5, "Assets\\Textures\\btn-unit-collection-taldarim-phoenix.dds", "TaldarimPhoenix", "TaldarimPhoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 18, "KaraxStargateWarpTrain", 18, "Assets\\Textures\\btn-unit-protoss-arbiter.dds", "ArbiterMP", "ArbiterMP", "Arbiter", false);
    lib22142002_gf_TTUS_GetDataManual("KaraxStargateTrain", 17, "KaraxStargateWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-tempest-purifier.dds", "TempestPurifier", "TempestPurifier", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("AbathurLarvaTrain", 0, null, 0, "Assets\\Textures\\btn-unit-zerg-drone.dds", "Drone", "Drone", "", true);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 1, null, 0, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-probe.dds", "TaldarimProbe", "TaldarimProbe", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 7, "AlarakWarpGateTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-supplicant.dds", "SupplicantACGluescreenDummy", "SupplicantACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 9, "AlarakWarpGateTrain", 9, "Assets\\Textures\\btn-unit-protoss-sentry-taldarim.dds", "Monitor", "Monitor", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 8, "AlarakWarpGateTrain", 8, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-stalker.dds", "StalkerTaldarimACGluescreenDummy", "StalkerTaldarimACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 10, "AlarakWarpGateTrain", 10, "Assets\\Textures\\btn-unit-protoss-hightemplar-taldarim.dds", "HighTemplarTaldarim", "HighTemplarTaldarim", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 4, "AlarakRoboticsFacilityWarpTrain", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismTaldarimACGluescreenDummy", "WarpPrismTaldarimACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 5, "AlarakRoboticsFacilityWarpTrain", 5, "Assets\\Textures\\btn-unit-protoss-immortal-taldarim.dds", "ImmortalTaldarim", "ImmortalTaldarim", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 6, "AlarakRoboticsFacilityWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-colossus-taldarimex3.dds", "ColossusTaldarim", "ColossusTaldarim", "", true);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 11, "AlarakWarpGateTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-zealot.dds", "ZealotShakurasACGluescreenDummy", "ZealotShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 18, "AlarakWarpGateTrain", 18, "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds", "TaldarimDragoon", "TaldarimDragoon", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakGatewayTrain", 24, "AlarakWarpGateTrain002", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-darktemplar.dds", "DarkTemplarTaldarim", "DarkTemplarTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("BloodArchonMerge", 0, null, 0, "Assets\\Textures\\btn-unit-protoss-darkarchon.dds", "TaldarimArchon", "TaldarimArchon", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 18, "AlarakRoboticsFacilityWarpTrain", 18, "Assets\\Textures\\btn-unit-collection-taldarim-observer.dds", "ObserverACGluescreenDummy", "ObserverACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 17, "AlarakRoboticsFacilityWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-warpprism.dds", "WarpPrismGiant", "WarpPrismGiant", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 16, "AlarakRoboticsFacilityWarpTrain", 16, "Assets\\Textures\\btn-unit-protoss-immortal.dds", "StandardImmortalTaldarim", "StandardImmortalTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 15, "AlarakRoboticsFacilityWarpTrain", 15, "Assets\\Textures\\btn-unit-collection-colossus-taldarim.dds", "ColossusFenixACGluescreenDummy", "ColossusFenixACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakRoboticsFacilityTrain", 20, "AlarakRoboticsFacilityWarpTrain002", 0, "Assets\\Textures\\btn-unit-collection-taldarim-disruptor.dds", "DisruptorACGluescreenDummy", "DisruptorACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 5, "AlarakStargateWarpTrain", 5, "Assets\\Textures\\btn-unit-collection-taldarim-phoenix.dds", "TaldarimPhoenix", "TaldarimPhoenix", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 22, "AlarakStargateWarpTrain002", 2, "Assets\\Textures\\btn-unit-protoss-scout.dds", "ScoutMP", "ScoutMP", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 6, "AlarakStargateWarpTrain", 6, "Assets\\Textures\\btn-unit-protoss-oracle-taldarim.dds", "TaldarimOracle", "TaldarimOracle", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 7, "AlarakStargateWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-voidray.dds", "VoidRayTaldarim", "VoidRayTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 11, "AlarakStargateWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-carrier-collection.dds", "CarrierTaldarim", "CarrierTaldarim", "", false);
    lib22142002_gf_TTUS_GetDataManual("AlarakStargateTrain", 10, "AlarakStargateWarpTrain", 10, "Assets\\Textures\\btn-unit-protoss-tempest-ihanrii.dds", "TaldarimTempest", "TaldarimTempest", "", false);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTUS_IntTechTreeU += 1;
    lib22142002_gf_TTUS_GetDataManual("NexusTrain", 2, null, 0, "Assets\\Textures\\btn-unit-collection-purifier-probe.dds", "PurifierProbe", "PurifierProbe", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 15, "FenixWarpGateTrain", 15, "Assets\\Textures\\btn-unit-collection-purifier-zealot.dds", "ZealotFenixACGluescreenDummy", "ZealotFenixACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 14, "FenixWarpGateTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-sentry.dds", "SentryFenixACGluescreenDummy", "SentryFenixACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 22, "FenixWarpGateTrain002", 2, "Assets\\Textures\\btn-unit-protoss-adeptfenix-purifier.dds", "BroodLordACGluescreenDummy", "BroodLordACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 12, "FenixRoboticsFacilityWarpTrain", 12, "Assets\\Textures\\btn-unit-collection-purifier-observer.dds", "ObserverFenixACGluescreenDummy", "ObserverFenixACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 13, "FenixRoboticsFacilityWarpTrain", 13, "Assets\\Textures\\btn-unit-collection-purifier-immortal.dds", "GuardianACGluescreenDummy", "GuardianACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 21, "FenixRoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-collection-purifier-colossus.dds", "ColossusPurifierACGluescreenDummy", "ColossusPurifierACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 11, "FenixRoboticsFacilityWarpTrain", 11, "Assets\\Textures\\btn-unit-protoss-disruptorfenix-purifier.dds", "HydraliskLurkerACGluescreenDummy", "HydraliskLurkerACGluescreenDumm", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 13, "FenixStargateWarpTrain", 13, "Assets\\Textures\\btn-unit-protoss-scout-purifier.dds", "ScoutACGluescreenDummy", "ScoutACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 14, "FenixStargateWarpTrain", 14, "Assets\\Textures\\btn-unit-collection-purifier-carrier.dds", "CarrierACGluescreenDummy", "CarrierACGluescreenDummy", "", true);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 12, "FenixWarpGateTrain", 1, "Assets\\Textures\\btn-unit-protoss-zealot-purifier.dds", "ZealotPurifier", "ZealotPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 16, "FenixWarpGateTrain", 1, "Assets\\Textures\\btn-ability-protoss-energizermobilemode.dds", "SentryPurifier", "SentryPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 29, "FenixWarpGateTrain002", 9, "Assets\\Textures\\btn-unit-protoss-adept-purifier.dds", "PurifierAdept", "PurifierAdept", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixGatewayTrain", 21, "FenixWarpGateTrain002", 1, "Assets\\Textures\\btn-unit-protoss-stalker-purifier.dds", "StalkerPurifier", "StalkerPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 10, "FenixRoboticsFacilityWarpTrain002", 1, "Assets\\Textures\\btn-unit-protoss-colossus-purifier.dds", "ColossusPurifier", "ColossusPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixRoboticsFacilityTrain", 7, "FenixRoboticsFacilityWarpTrain", 7, "Assets\\Textures\\btn-unit-protoss-disruptor.dds", "Disruptor", "Disruptor", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 16, "FenixStargateWarpTrain", 14, "Assets\\Textures\\btn-unit-protoss-phoenix-purifier.dds", "PhoenixPurifier", "PhoenixPurifier", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 24, "FenixStargateWarpTrain002", 4, "Assets\\Textures\\btn-unit-collection-purifier-phoenix.dds", "PhoenixPurifierACGluescreenDummy", "PhoenixPurifierACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 25, "FenixStargateWarpTrain002", 5, "Assets\\Textures\\btn-unit-collection-purifier-voidray.dds", "VoidRayShakurasACGluescreenDummy", "VoidRayShakurasACGluescreenDummy", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 23, "FenixStargateWarpTrain002", 3, "Assets\\Textures\\btn-unit-collection-purifier-tempest.dds", "PurifierTempest", "PurifierTempest", "", false);
    lib22142002_gf_TTUS_GetDataManual("FenixStargateTrain", 17, "FenixStargateWarpTrain", 17, "Assets\\Textures\\btn-unit-protoss-tempest-purifier.dds", "TempestPurifier", "TempestPurifier", "", false);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

}

void lib22142002_gf_TTUS_GetDataManual (string lp_inputTTUSLink, int lp_array, string lp_inputTTUSLinkSecondary, int lp_arraySecondary, string lp_inputImageLink, string lp_inputUnitType, string lp_inputTextLinkName, string lp_inputTextLinkTooltip, bool lp_inputInitialStateAllow) {
    // Variable Declarations
    text lv_get_TooltipText;
    int lv_get_Minerals;
    int lv_get_Vespene;
    fixed lv_get_Time;

    // Automatic Variable Declarations
    const int autoD131FF5E_ae = 15;
    int autoD131FF5E_var;

    // Variable Initialization

    // Implementation
    lib22142002_gv_tTUS_ProduceLink[lib22142002_gv_tTUS_IntTechTreeU] = lp_inputTTUSLink;
    lib22142002_gv_tTUS_ProduceLinkArray[lib22142002_gv_tTUS_IntTechTreeU] = lp_array;
    lib22142002_gv_tTUS_ProduceLinkSecondary[lib22142002_gv_tTUS_IntTechTreeU] = lp_inputTTUSLinkSecondary;
    lib22142002_gv_tTUS_ProduceLinkArraySecondary[lib22142002_gv_tTUS_IntTechTreeU] = lp_arraySecondary;
    lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] = StringExternal(("Unit/Name/" + lp_inputTextLinkName));
    lib22142002_gv_tTUS_UnitType[lib22142002_gv_tTUS_IntTechTreeU] = lp_inputUnitType;
    if ((lp_inputUnitType != null)) {
        lv_get_Minerals = UnitTypeGetCost(lp_inputUnitType, c_unitCostMinerals);
        lv_get_Vespene = UnitTypeGetCost(lp_inputUnitType, c_unitCostVespene);
    }

    if ((AbilityClass(lp_inputTTUSLink) == c_classIdCAbilTrain)) {
        lv_get_Time = FixedToInt((CatalogFieldValueGetAsInt(c_gameCatalogAbil, lp_inputTTUSLink, ("InfoArray[" + IntToString(lp_array) + "].Time"), c_playerAny) / 1.4));
    }
    else {
        lv_get_Time = 0.0;
    }
    if ((lp_inputTextLinkTooltip == "")) {
        lv_get_TooltipText = StringExternal(("Button/Tooltip/" + lp_inputTextLinkName));
    }
    else {
        lv_get_TooltipText = StringExternal(("Button/Tooltip/" + lp_inputTextLinkTooltip));
    }
    if ((lv_get_Minerals != 0) && (lv_get_Vespene == 0)) {
        lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (StringExternal("Param/Value/lib_22142002_7DD1EF53") + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_E2EB1CE8") + StringExternal("Param/Value/lib_22142002_38E78227") + StringExternal("Param/Value/lib_22142002_6FB68298") + IntToText(lv_get_Minerals));
    }
    else {
        if ((lv_get_Minerals == 0) && (lv_get_Vespene != 0)) {
            lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (StringExternal("Param/Value/lib_22142002_2EDE95D1") + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_FC0C00BB") + StringExternal("Param/Value/lib_22142002_51FCD28D") + StringExternal("Param/Value/lib_22142002_A97A59B0") + IntToText(lv_get_Vespene));
        }
        else {
            if ((lv_get_Minerals != 0) && (lv_get_Vespene != 0)) {
                lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (StringExternal("Param/Value/lib_22142002_B66CA664") + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_8FDD0FBE") + StringExternal("Param/Value/lib_22142002_48C652A9") + StringExternal("Param/Value/lib_22142002_C7908F49") + IntToText(lv_get_Minerals) + StringExternal("Param/Value/lib_22142002_CFC6636F") + StringExternal("Param/Value/lib_22142002_032DD437") + StringExternal("Param/Value/lib_22142002_DBE7080D") + IntToText(lv_get_Vespene));
            }
            else {
                lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (StringExternal("Param/Value/lib_22142002_6682E455") + lib22142002_gv_tTUS_TechTreeUnitsName[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_B4FAEC45"));
            }
        }
    }
    if ((lv_get_Time == 0.0)) {
        lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_5D667A75") + lv_get_TooltipText);
    }
    else {
        lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] = (lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU] + StringExternal("Param/Value/lib_22142002_01E0267D") + StringExternal("Param/Value/lib_22142002_0FAFD1EE") + StringExternal("Param/Value/lib_22142002_423B7820") + FixedToText(lv_get_Time, c_fixedPrecisionAny) + StringExternal("Param/Value/lib_22142002_731E1870") + lv_get_TooltipText);
    }
    lib22142002_gv_tTUS_ButtonTechTreeUnitFile[lib22142002_gv_tTUS_IntTechTreeU] = lp_inputImageLink;
    lib22142002_gv_tTUS_TechTreeUnitsInitialAllowed[lib22142002_gv_tTUS_IntTechTreeU] = lp_inputInitialStateAllow;
    autoD131FF5E_var = 0;
    for ( ; autoD131FF5E_var <= autoD131FF5E_ae; autoD131FF5E_var += 1 ) {
        lib22142002_gv_tTUS_TechTreeUnitsFlag[lib22142002_gv_tTUS_IntTechTreeU][autoD131FF5E_var] = lp_inputInitialStateAllow;
    }
    lib22142002_gv_tTUS_IntTechTreeU += 1;
}

void lib22142002_gf_TTUS_Createbuttonsfortechtree (int lp_param_Race) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_iacross;
    int lv_idown;

    // Automatic Variable Declarations
    int autoD3BAD489_ae;
    const int autoD3BAD489_ai = 1;
    int auto31689013_ae;
    const int auto31689013_ai = 1;
    playergroup auto5D10DFA2_g;
    int auto5D10DFA2_var;

    // Variable Initialization
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y = lib22142002_gv_dP_XYOffset;

    // Implementation
    autoD3BAD489_ae = lib22142002_gf_TTUS_PageColumnAmount(lp_param_Race);
    lv_idown = 1;
    for ( ; ( (autoD3BAD489_ai >= 0 && lv_idown <= autoD3BAD489_ae) || (autoD3BAD489_ai < 0 && lv_idown >= autoD3BAD489_ae) ) ; lv_idown += autoD3BAD489_ai ) {
        lv_x = lib22142002_gv_dP_XYOffset;
        auto31689013_ae = lib22142002_gv_dP_ButtonPerRowFix;
        lv_iacross = 1;
        for ( ; ( (auto31689013_ai >= 0 && lv_iacross <= auto31689013_ae) || (auto31689013_ai < 0 && lv_iacross >= auto31689013_ae) ) ; lv_iacross += auto31689013_ai ) {
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib22142002_gv_dP_ButtonWidth, lib22142002_gv_dP_ButtonWidth, c_anchorTopLeft, lv_x, lv_y, lib22142002_gv_tTUS_ButtonTechTreeUnitsTooltip[lib22142002_gv_tTUS_IntTechTreeU], StringToText(""), "");
            lib22142002_gv_tTUS_ButtonTechTreeUnits[lib22142002_gv_tTUS_IntTechTreeU] = DialogControlLastCreated();
            lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lp_param_Race);
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), lib22142002_gv_dP_ButtonImageWidth, lib22142002_gv_dP_ButtonImageHeight, c_anchorTopLeft, (lv_x + 2), (lv_y + 2), StringToText(""), lib22142002_gv_tTUS_ButtonTechTreeUnitFile[lib22142002_gv_tTUS_IntTechTreeU], c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lib22142002_gv_tTUS_IntTechTreeU] = DialogControlLastCreated();
            if ((lib22142002_gv_tTUS_TechTreeUnitsInitialAllowed[lib22142002_gv_tTUS_IntTechTreeU] == false)) {
                DialogControlSetEnabled(lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lib22142002_gv_tTUS_IntTechTreeU], PlayerGroupActive(), false);
                auto5D10DFA2_g = PlayerGroupAll();
                auto5D10DFA2_var = -1;
                while (true) {
                    auto5D10DFA2_var = PlayerGroupNextPlayer(auto5D10DFA2_g, auto5D10DFA2_var);
                    if (auto5D10DFA2_var < 0) { break; }
                    TechTreeAbilityAllow(auto5D10DFA2_var, AbilityCommand(lib22142002_gv_tTUS_ProduceLink[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArray[lib22142002_gv_tTUS_IntTechTreeU]), false);
                    TechTreeAbilityAllow(auto5D10DFA2_var, AbilityCommand(lib22142002_gv_tTUS_ProduceLinkSecondary[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArraySecondary[lib22142002_gv_tTUS_IntTechTreeU]), false);
                }
            }

            lib22142002_gv_tTUS_IntTechTreeU += 1;
            if ((lib22142002_gv_tTUS_ProduceLink[lib22142002_gv_tTUS_IntTechTreeU] == null)) {
                lib22142002_gv_tTUS_IntTechTreeU += 1;
                return ;
            }

            lv_x += lib22142002_gv_dP_ButtonWidth;
        }
        Wait(0.0001, c_timeGame);
        lv_y += lib22142002_gv_dP_ButtonHeight;
    }
}

int lib22142002_gf_TTUS_PageColumnAmount (int lp_inputIntRace) {
    // Automatic Variable Declarations
    int auto70AFA44F_val;

    // Implementation
    auto70AFA44F_val = lp_inputIntRace;
    if (auto70AFA44F_val == 1) {
        return 2;
    }
    else if (auto70AFA44F_val == 2) {
        return 2;
    }
    else if (auto70AFA44F_val == 3) {
        return 2;
    }
    else if (auto70AFA44F_val == 4) {
        return 5;
    }
    else if (auto70AFA44F_val == 5) {
        return 3;
    }
    else if (auto70AFA44F_val == 6) {
        return 6;
    }
    else if (auto70AFA44F_val == 7) {
        return 5;
    }
    else if (auto70AFA44F_val == 8) {
        return 4;
    }
    else if (auto70AFA44F_val == 9) {
        return 8;
    }
    else if (auto70AFA44F_val == 10) {
        return 4;
    }
    else if (auto70AFA44F_val == 11) {
        return 4;
    }
    else if (auto70AFA44F_val == 12) {
        return 8;
    }
    else if (auto70AFA44F_val == 13) {
        return 8;
    }
    else if (auto70AFA44F_val == 14) {
        return 2;
    }
    else if (auto70AFA44F_val == 15) {
        return 3;
    }
    else if (auto70AFA44F_val == 16) {
        return 2;
    }
    else if (auto70AFA44F_val == 17) {
        return 2;
    }
    else if (auto70AFA44F_val == 18) {
        return 2;
    }
    else if (auto70AFA44F_val == 19) {
        return 2;
    }
    else if (auto70AFA44F_val == 20) {
        return 2;
    }
    else if (auto70AFA44F_val == 21) {
        return 2;
    }
    else if (auto70AFA44F_val == 22) {
        return 2;
    }
    else if (auto70AFA44F_val == 23) {
        return 2;
    }
    else if (auto70AFA44F_val == 24) {
        return 2;
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_8D84511E"));
        return 0;
    }
}

void lib22142002_gf_TTUS_TechTreeUnitOnAllow () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_tTUS_TechTreeUnitsFlag[lib22142002_gv_tTUS_IntTechTreeU][lib22142002_gv_dP_IntTPlayer] = true;
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTUS_ProduceLink[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArray[lib22142002_gv_tTUS_IntTechTreeU]), true);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTUS_ProduceLinkSecondary[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArraySecondary[lib22142002_gv_tTUS_IntTechTreeU]), true);
    DialogControlSetEnabled(lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lib22142002_gv_tTUS_IntTechTreeU], PlayerGroupActive(), true);
    lib22142002_gf_TTUS_Refresh();
}

void lib22142002_gf_TTUS_TechTreeUnitOffDisallow () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_tTUS_TechTreeUnitsFlag[lib22142002_gv_tTUS_IntTechTreeU][lib22142002_gv_dP_IntTPlayer] = false;
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTUS_ProduceLink[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArray[lib22142002_gv_tTUS_IntTechTreeU]), false);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTUS_ProduceLinkSecondary[lib22142002_gv_tTUS_IntTechTreeU], lib22142002_gv_tTUS_ProduceLinkArraySecondary[lib22142002_gv_tTUS_IntTechTreeU]), false);
    DialogControlSetEnabled(lib22142002_gv_tTUS_ButtonTechTreeUnitsImage[lib22142002_gv_tTUS_IntTechTreeU], PlayerGroupActive(), false);
    lib22142002_gf_TTUS_Refresh();
}

void lib22142002_gf_US_AllAbilitiesOn2 () {
    // Automatic Variable Declarations
    const int auto7FD012D4_ae = 1;
    const int auto7FD012D4_ai = 1;
    const int auto811AF786_ae = 99;
    const int auto811AF786_ai = 1;

    // Implementation
    lib22142002_gv_tTUS_TechTreeUnitsMelee = 1;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (auto7FD012D4_ai >= 0 && lib22142002_gv_dP_IntPlayer <= auto7FD012D4_ae) || (auto7FD012D4_ai < 0 && lib22142002_gv_dP_IntPlayer >= auto7FD012D4_ae) ) ; lib22142002_gv_dP_IntPlayer += auto7FD012D4_ai ) {
        lib22142002_gv_tTUS_IntTechTreeU = 0;
        for ( ; ( (auto811AF786_ai >= 0 && lib22142002_gv_tTUS_IntTechTreeU <= auto811AF786_ae) || (auto811AF786_ai < 0 && lib22142002_gv_tTUS_IntTechTreeU >= auto811AF786_ae) ) ; lib22142002_gv_tTUS_IntTechTreeU += auto811AF786_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_tTUS_IntTechTreeU] == 0)) {
                if ((lib22142002_gv_uS_ButtonUpgradeType[lib22142002_gv_tTUS_IntTechTreeU] == "Ability")) {
                    lib22142002_gf_TTUS_TechTreeUnitOnAllow();
                }

            }

        }
    }
}

void lib22142002_gf_US_AllAbilitiesOff2 () {
    // Automatic Variable Declarations
    const int auto83F7541D_ae = 1;
    const int auto83F7541D_ai = 1;
    const int auto1557E1AA_ae = 99;
    const int auto1557E1AA_ai = 1;

    // Implementation
    lib22142002_gv_tTUS_TechTreeUnitsMelee = 0;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (auto83F7541D_ai >= 0 && lib22142002_gv_dP_IntPlayer <= auto83F7541D_ae) || (auto83F7541D_ai < 0 && lib22142002_gv_dP_IntPlayer >= auto83F7541D_ae) ) ; lib22142002_gv_dP_IntPlayer += auto83F7541D_ai ) {
        lib22142002_gv_tTUS_IntTechTreeU = 0;
        for ( ; ( (auto1557E1AA_ai >= 0 && lib22142002_gv_tTUS_IntTechTreeU <= auto1557E1AA_ae) || (auto1557E1AA_ai < 0 && lib22142002_gv_tTUS_IntTechTreeU >= auto1557E1AA_ae) ) ; lib22142002_gv_tTUS_IntTechTreeU += auto1557E1AA_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_tTUS_IntTechTreeU] == 0)) {
                lib22142002_gf_TTUS_TechTreeUnitOffDisallow();
            }

        }
    }
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_D6F1F377"));
}

void lib22142002_gf_TTSS_ButtonAction_TechTreeStructure () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib22142002_gv_tTSS_TechTreeStructuresFlag[lib22142002_gv_tTSS_IntTechTreeS][lib22142002_gv_dP_IntTPlayer] == true)) {
        lib22142002_gf_TTSS_TechTreeStructureOffDisallow();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_8BDF8C60") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
    else if ((lib22142002_gv_tTSS_TechTreeStructuresFlag[lib22142002_gv_tTSS_IntTechTreeS][lib22142002_gv_dP_IntTPlayer] == false)) {
        lib22142002_gf_TTSS_TechTreeStructureOnAllow();
        UIDisplayMessage(PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_343B8BC9") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_dP_IntTPlayer), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_dP_IntTPlayer, false)))));
    }
}

void lib22142002_gf_TTSS_Refresh () {
    // Variable Declarations
    int lv_intA;
    bool lv_valid;
    int lv_targetPlayer;

    // Automatic Variable Declarations
    playergroup auto5BF35791_g;
    int auto5BF35791_var;
    int auto4157129E_ae;
    const int auto4157129E_ai = 1;

    // Variable Initialization

    // Implementation
    auto5BF35791_g = PlayerGroupActive();
    auto5BF35791_var = -1;
    while (true) {
        auto5BF35791_var = PlayerGroupNextPlayer(auto5BF35791_g, auto5BF35791_var);
        if (auto5BF35791_var < 0) { break; }
        lv_targetPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(auto5BF35791_var, 6), 1));
        auto4157129E_ae = lib22142002_gv_tTSS_IntArrayValueDummy;
        lv_intA = 0;
        for ( ; ( (auto4157129E_ai >= 0 && lv_intA <= auto4157129E_ae) || (auto4157129E_ai < 0 && lv_intA >= auto4157129E_ae) ) ; lv_intA += auto4157129E_ai ) {
            if ((lib22142002_gv_tTSS_TechTreeStructuresFlag[lv_intA][lv_targetPlayer] == true)) {
                DialogControlSetEnabled(lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lv_intA], PlayerGroupSingle(auto5BF35791_var), true);
            }
            else {
                DialogControlSetEnabled(lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lv_intA], PlayerGroupSingle(auto5BF35791_var), false);
            }
        }
    }
}

bool lib22142002_gf_TTSS_DialogisTechTreeStructureDialog (int lp_pDialog) {
    // Variable Declarations
    int lv_intA;
    int lv_intB;

    // Automatic Variable Declarations
    int auto8E14F0D0_ae;
    const int auto8E14F0D0_ai = 1;

    // Variable Initialization

    // Implementation
    auto8E14F0D0_ae = lib22142002_gv_tTSS_IntArrayValueDummy;
    lv_intA = 0;
    for ( ; ( (auto8E14F0D0_ai >= 0 && lv_intA <= auto8E14F0D0_ae) || (auto8E14F0D0_ai < 0 && lv_intA >= auto8E14F0D0_ae) ) ; lv_intA += auto8E14F0D0_ai ) {
        if ((lp_pDialog == lib22142002_gv_tTSS_ButtonTechTreeStructures[lv_intA])) {
            return true;
        }

    }
    return false;
}

void lib22142002_gf_TTSS_Database () {
    // Variable Declarations
    fixed lv_local_WaitTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_local_WaitTime = 0.0001;

    // Implementation
    lib22142002_gv_tTSS_IntTechTreeS = 0;
    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 0, "Assets\\Textures\\btn-building-terran-commandcenter.dds", "CommandCenter", "CommandCenter", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToPlanetaryFortress", 0, "Assets\\Textures\\btn-building-terran-planetaryfortress.dds", "PlanetaryFortress", "PlanetaryFortress", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToOrbital", 0, "Assets\\Textures\\btn-building-terran-surveillancestation.dds", "OrbitalCommand", "OrbitalCommand", "OrbitalCommandUnit", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 1, "Assets\\Textures\\btn-building-terran-supplydepot.dds", "SupplyDepot", "SupplyDepot", "", true, "TerranBuild", 22, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 2, "Assets\\Textures\\btn-building-terran-refinery.dds", "Refinery", "Refinery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 3, "Assets\\Textures\\btn-building-terran-barracks.dds", "Barracks", "Barracks", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 4, "Assets\\Textures\\btn-building-terran-engineeringbay.dds", "EngineeringBay", "EngineeringBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 5, "Assets\\Textures\\btn-building-terran-missileturret.dds", "MissileTurret", "MissileTurret", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 6, "Assets\\Textures\\btn-building-terran-bunker.dds", "Bunker", "Bunker", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 8, "Assets\\Textures\\btn-building-terran-sensordome.dds", "SensorTower", "SensorTower", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 9, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "GhostAcademy", "GhostAcademy", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 10, "Assets\\Textures\\btn-building-terran-factory.dds", "Factory", "Factory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 11, "Assets\\Textures\\btn-building-terran-starport.dds", "Starport", "Starport", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 13, "Assets\\Textures\\btn-building-terran-armory.dds", "Armory", "Armory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 15, "Assets\\Textures\\btn-building-terran-fusioncore.dds", "FusionCore", "FusionCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("BarracksAddOns", 0, "Assets\\Textures\\btn-building-terran-techlab.dds", "TechLab", "TechLab", "", true, "FactoryAddOns", 0, "StarportAddOns", 0);
    lib22142002_gf_TTSS_GetDataManual("BarracksAddOns", 1, "Assets\\Textures\\btn-building-terran-reactor.dds", "Reactor", "Reactor", "", true, "FactoryAddOns", 1, "StarportAddOns", 1);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 0, "Assets\\Textures\\btn-building-zerg-hatchery.dds", "Hatchery", "Hatchery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToLair", 0, "Assets\\Textures\\btn-building-zerg-lair.dds", "Lair", "Lair", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToHive", 0, "Assets\\Textures\\btn-building-zerg-hive.dds", "Hive", "Hive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("CreepTumorBuild", 0, "Assets\\Textures\\btn-building-zerg-creeptumor.dds", "CreepTumor", "CreepTumor", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 2, "Assets\\Textures\\btn-building-zerg-extractor.dds", "Extractor", "Extractor", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 3, "Assets\\Textures\\btn-building-zerg-spawningpool.dds", "SpawningPool", "SpawningPool", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 4, "Assets\\Textures\\btn-building-zerg-evolutionchamber.dds", "EvolutionChamber", "EvolutionChamber", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 13, "Assets\\Textures\\btn-building-zerg-roachwarren.dds", "RoachWarren", "RoachWarren", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 10, "Assets\\Textures\\btn-building-zerg-banelingnest.dds", "BanelingNest", "BanelingNest", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 14, "Assets\\Textures\\btn-building-zerg-spinecrawler.dds", "SpineCrawler", "SpineCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 15, "Assets\\Textures\\btn-building-zerg-sporecrawler.dds", "SporeCrawler", "SporeCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 5, "Assets\\Textures\\btn-building-zerg-hydraliskden.dds", "HydraliskDen", "HydraliskDen", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 8, "Assets\\Textures\\btn-building-zerg-infestationpit.dds", "InfestationPit", "InfestationPit", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 11, "Assets\\Textures\\btn-building-zerg-lurkerden.dds", "LurkerDenMP", "LurkerDen", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 6, "Assets\\Textures\\btn-building-zerg-spire.dds", "Spire", "Spire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToGreaterSpire", 0, "Assets\\Textures\\btn-building-zerg-greaterspire.dds", "GreaterSpire", "GreaterSpire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 9, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "NydusNetwork", "NydusNetwork", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("BuildNydusCanal", 0, "Assets\\Textures\\btn-building-zerg-nydusworm.dds", "NydusCanal", "NydusCanal", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 7, "Assets\\Textures\\btn-building-zerg-ultraliskcavern.dds", "UltraliskCavern", "UltraliskCavern", "", true, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 0, "Assets\\Textures\\btn-building-protoss-nexus.dds", "Nexus", "Nexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 1, "Assets\\Textures\\btn-building-protoss-pylon.dds", "Pylon", "Pylon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 2, "Assets\\Textures\\btn-building-protoss-assimilator.dds", "Assimilator", "Assimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 3, "Assets\\Textures\\btn-building-protoss-gateway.dds", "Gateway", "Gateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 4, "Assets\\Textures\\btn-building-protoss-forge.dds", "Forge", "Forge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 7, "Assets\\Textures\\btn-building-protoss-photoncannon.dds", "PhotonCannon", "PhotonCannon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 14, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", "CyberneticsCore", "CyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 15, "Assets\\Textures\\btn-building-protoss-shieldbattery.dds", "ShieldBattery", "ShieldBattery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 6, "Assets\\Textures\\btn-building-protoss-twilightcouncil.dds", "TwilightCouncil", "TwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 10, "Assets\\Textures\\btn-building-protoss-templararchives.dds", "TemplarArchive", "TemplarArchive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 11, "Assets\\Textures\\btn-building-protoss-darkshrine.dds", "DarkShrine", "DarkShrine", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 13, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", "RoboticsFacility", "RoboticsFacility", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 12, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", "RoboticsBay", "RoboticsBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 9, "Assets\\Textures\\btn-building-protoss-stargate.dds", "Stargate", "Stargate", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 5, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", "FleetBeacon", "FleetBeacon", "", true, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 12, "Assets\\Textures\\btn-building-terran-merccompound.dds", "MercCompound", "MercCompound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 14, "Assets\\Textures\\btn-building-terran-sigmaprojector.dds", "PsiDisruptor", "PsiDisruptor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 16, "Assets\\Textures\\btn-building-terran-hivemindemulator.dds", "HiveMindEmulator", "HiveMindEmulator", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 17, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "ShadowOps", "ShadowOps", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 18, "Assets\\Textures\\btn-ability-terran-microfiltering.dds", "FusionReactor", "FusionReactor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 19, "Assets\\Textures\\btn-ability-spearofadun-temporalfield.dds", "ShadowScrambler", "ShadowScrambler", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 20, "Assets\\Textures\\btn-building-terran-sensordome.dds", "ShadowShieldGeneratorSmall", "ShadowShieldGeneratorSmall", "ShadowShieldGenerator", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 21, "Assets\\Textures\\btn-unit-terran-popupturret.dds", "SentryGun", "SentryGun", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 23, "Assets\\Textures\\btn-unit-terran-perditionturret.dds", "PerditionTurret", "PerditionTurret", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 24, "Assets\\Textures\\btn-building-terran-autoturret.dds", "AutoTurret", "AutoTurret", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 25, "Assets\\Textures\\btn-tips-flamingbetty.dds", "FlamingBettyACGluescreenDummy", "FlamingBettyACGluescreenDummy", "PerditionTurretACGluescreenDummy", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 26, "Assets\\Textures\\btn-tips-flamingbetty.dds", "DevastationTurretACGluescreenDummy", "DevastationTurretACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 27, "Assets\\Textures\\btn-unit-terran-autoturretblackops.dds", "RailgunTurretACGluescreenDummy", "RailgunTurretACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 28, "Assets\\Textures\\btn-ability-protoss-arguslink.dds", "PsiDisintegratorPowerLink", "PsiDisintegratorPowerLink", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("TerranBuild", 29, "Assets\\Textures\\btn-building-protoss-pylon.dds", "PylonContainmentUnit", "PylonContainmentUnit", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("BarracksAddOns", 2, "Assets\\Textures\\btn-building-terran-techreactor.dds", "TechReactor", "TechReactor", "", false, "FactoryAddOns", 2, "StarportAddOns", 2);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 12, "Assets\\Textures\\btn-doodad-scourgenests.dds", "ScourgeNest", "ScourgeNest", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 16, "Assets\\Textures\\btn-building-zerg-impalercolony.dds", "SunkenColony", "SunkenColony", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 17, "Assets\\Textures\\btn-building-zerg-virophage.dds", "Virophage", "Virophage", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 18, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "SporeCannon", "SporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 19, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "BileLauncherACGluescreenDummy", "BileLauncherACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 20, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "KorhalSporeCannon", "KorhalSporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 21, "Assets\\Textures\\btn-building-zerg-defilermound.dds", "BWDefilerMound", "BWDefilerMound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZergBuild", 25, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "OmegaNetworkACGluescreenDummy", "OmegaNetworkACGluescreenDummy", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 16, "Assets\\Textures\\btn-building-protoss-obelisk.dds", "Obelisk", "Obelisk", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 20, "Assets\\Textures\\btn-upgrade-vorazun-summondarkpylon.dds", "DarkPylonACGluescreenDummy", "DarkPylonACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 24, "Assets\\Textures\\btn-building-protoss-khaydarinmonolithaiur.dds", "KhaydarinMonolith", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 25, "Assets\\Textures\\btn-unit-protoss-khaydarinmonolith.dds", "KhaydarinMonolithACGluescreenDummy", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ProtossBuild", 8, "Assets\\Textures\\btn-unit-collection-hightemplar-golden.dds", "ProtossRadioTower", "ProtossRadioTower", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 0, "Assets\\Textures\\btn-building-terran-commandcenter.dds", "CommandCenter", "CommandCenter", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorUpgradeToOrbital", 0, "Assets\\Textures\\btn-building-terran-surveillancestation.dds", "OrbitalCommandACGluescreenDummy", "OrbitalCommandACGluescreenDummy", "OrbitalCommandACGluescreenDummy", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 1, "Assets\\Textures\\btn-building-terran-supplydepot.dds", "SupplyDepot", "SupplyDepot", "", true, "RaynorBuildSCV", 22, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 2, "Assets\\Textures\\btn-building-terran-refinery.dds", "Refinery", "Refinery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 3, "Assets\\Textures\\btn-building-terran-barracks.dds", "Barracks", "Barracks", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 4, "Assets\\Textures\\btn-building-terran-engineeringbay.dds", "EngineeringBay", "EngineeringBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 5, "Assets\\Textures\\btn-building-terran-missileturret.dds", "MissileTurret", "MissileTurret", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 6, "Assets\\Textures\\btn-building-terran-bunker.dds", "Bunker", "Bunker", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 10, "Assets\\Textures\\btn-building-terran-factory.dds", "Factory", "Factory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 11, "Assets\\Textures\\btn-building-terran-starport.dds", "Starport", "Starport", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 13, "Assets\\Textures\\btn-building-terran-armory.dds", "Armory", "Armory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 15, "Assets\\Textures\\btn-building-terran-fusioncore.dds", "FusionCore", "FusionCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 8, "Assets\\Textures\\btn-building-terran-sensordome.dds", "SensorTower", "SensorTower", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 12, "Assets\\Textures\\btn-building-terran-merccompound.dds", "MercCompound", "MercCompound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 14, "Assets\\Textures\\btn-building-terran-sigmaprojector.dds", "PsiDisruptor", "PsiDisruptor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 16, "Assets\\Textures\\btn-building-terran-hivemindemulator.dds", "HiveMindEmulator", "HiveMindEmulator", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 17, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "ShadowOps", "ShadowOps", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 9, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "GhostAcademy", "GhostAcademy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 18, "Assets\\Textures\\btn-ability-terran-microfiltering.dds", "FusionReactor", "FusionReactor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 19, "Assets\\Textures\\btn-ability-spearofadun-temporalfield.dds", "ShadowScrambler", "ShadowScrambler", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 20, "Assets\\Textures\\btn-building-terran-sensordome.dds", "ShadowShieldGeneratorSmall", "ShadowShieldGeneratorSmall", "ShadowShieldGenerator", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 21, "Assets\\Textures\\btn-unit-terran-popupturret.dds", "SentryGun", "SentryGun", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 23, "Assets\\Textures\\btn-unit-terran-perditionturret.dds", "PerditionTurret", "PerditionTurret", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 24, "Assets\\Textures\\btn-building-terran-autoturret.dds", "AutoTurret", "AutoTurret", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 25, "Assets\\Textures\\btn-tips-flamingbetty.dds", "FlamingBettyACGluescreenDummy", "FlamingBettyACGluescreenDummy", "PerditionTurretACGluescreenDummy", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 26, "Assets\\Textures\\btn-tips-flamingbetty.dds", "DevastationTurretACGluescreenDummy", "DevastationTurretACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 27, "Assets\\Textures\\btn-unit-terran-autoturretblackops.dds", "RailgunTurretACGluescreenDummy", "RailgunTurretACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 28, "Assets\\Textures\\btn-ability-protoss-arguslink.dds", "PsiDisintegratorPowerLink", "PsiDisintegratorPowerLink", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("RaynorBuildSCV", 29, "Assets\\Textures\\btn-building-protoss-pylon.dds", "PylonContainmentUnit", "PylonContainmentUnit", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 0, "Assets\\Textures\\btn-building-zerg-hatchery.dds", "Hatchery", "Hatchery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganUpgradeToLair", 0, "Assets\\Textures\\btn-building-zerg-lair.dds", "Lair", "Lair", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganUpgradeToHive", 0, "Assets\\Textures\\btn-building-zerg-hive.dds", "KerriganHive", "KerriganHive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 2, "Assets\\Textures\\btn-building-zerg-extractor.dds", "Extractor", "Extractor", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 3, "Assets\\Textures\\btn-building-zerg-spawningpool.dds", "SpawningPool", "SpawningPool", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 4, "Assets\\Textures\\btn-building-zerg-evolutionchamber.dds", "KerriganEvolutionChamber", "KerriganEvolutionChamber", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 14, "Assets\\Textures\\btn-building-zerg-spinecrawler.dds", "SpineCrawler", "SpineCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 15, "Assets\\Textures\\btn-building-zerg-sporecrawler.dds", "SporeCrawler", "SporeCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 5, "Assets\\Textures\\btn-building-zerg-hydraliskden.dds", "KerriganHydraliskDen", "KerriganHydraliskDen", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToLurkerDen", 0, "Assets\\Textures\\btn-building-zerg-lurkerden.dds", "LurkerDen", "LurkerDen", "KerriganLurkerDen", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 25, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "OmegaNetworkACGluescreenDummy", "OmegaNetworkACGluescreenDummy", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 6, "Assets\\Textures\\btn-building-zerg-spire.dds", "Spire", "KerriganSpire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("UpgradeToGreaterSpireBroodlord", 0, "Assets\\Textures\\btn-building-zerg-greaterspire.dds", "KerriganGreaterSpire", "KerriganGreaterSpire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 7, "Assets\\Textures\\btn-building-zerg-ultraliskcavern.dds", "UltraliskCavern", "UltraliskCavern", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 13, "Assets\\Textures\\btn-building-zerg-roachwarren.dds", "RoachWarren", "RoachWarren", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 10, "Assets\\Textures\\btn-building-zerg-banelingnest.dds", "BanelingNest", "BanelingNest", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 8, "Assets\\Textures\\btn-building-zerg-infestationpit.dds", "InfestationPit", "InfestationPit", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 9, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "NydusNetwork", "NydusNetwork", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 12, "Assets\\Textures\\btn-doodad-scourgenests.dds", "ScourgeNest", "ScourgeNest", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 16, "Assets\\Textures\\btn-building-zerg-impalercolony.dds", "SunkenColony", "SunkenColony", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 17, "Assets\\Textures\\btn-building-zerg-virophage.dds", "Virophage", "Virophage", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 18, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "SporeCannon", "SporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 19, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "BileLauncherACGluescreenDummy", "BileLauncherACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 20, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "KorhalSporeCannon", "KorhalSporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KerriganZergBuild", 21, "Assets\\Textures\\btn-building-zerg-defilermound.dds", "BWDefilerMound", "BWDefilerMound", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 0, "Assets\\Textures\\btn-building-protoss-nexus.dds", "Nexus", "Nexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 1, "Assets\\Textures\\btn-building-protoss-pylon.dds", "Pylon", "Pylon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 2, "Assets\\Textures\\btn-building-protoss-assimilator.dds", "Assimilator", "Assimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 3, "Assets\\Textures\\btn-building-protoss-gateway.dds", "Gateway", "Gateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 4, "Assets\\Textures\\btn-building-protoss-forge.dds", "Forge", "Forge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 7, "Assets\\Textures\\btn-building-protoss-photoncannon.dds", "PhotonCannon", "PhotonCannon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 14, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", "CyberneticsCore", "CyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 6, "Assets\\Textures\\btn-building-protoss-twilightcouncil.dds", "TwilightCouncil", "TwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 10, "Assets\\Textures\\btn-building-protoss-templararchives.dds", "TemplarArchive", "TemplarArchive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 13, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", "RoboticsFacility", "RoboticsFacility", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 12, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", "RoboticsBay", "RoboticsBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 9, "Assets\\Textures\\btn-building-protoss-stargate.dds", "Stargate", "Stargate", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 5, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", "FleetBeacon", "FleetBeacon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 15, "Assets\\Textures\\btn-building-protoss-shieldbattery.dds", "ShieldBattery", "ShieldBattery", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 11, "Assets\\Textures\\btn-building-protoss-darkshrine.dds", "KhalaiDarkShrine", "KhalaiDarkShrine", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 16, "Assets\\Textures\\btn-building-protoss-obelisk.dds", "Obelisk", "Obelisk", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 20, "Assets\\Textures\\btn-upgrade-vorazun-summondarkpylon.dds", "DarkPylonACGluescreenDummy", "DarkPylonACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 24, "Assets\\Textures\\btn-building-protoss-khaydarinmonolithaiur.dds", "KhaydarinMonolith", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 25, "Assets\\Textures\\btn-unit-protoss-khaydarinmonolith.dds", "KhaydarinMonolithACGluescreenDummy", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KhalaiProtossBuild", 8, "Assets\\Textures\\btn-unit-collection-hightemplar-golden.dds", "ProtossRadioTower", "ProtossRadioTower", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 0, "Assets\\Textures\\btn-building-terran-commandcenter.dds", "CommandCenter", "CommandCenter", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 1, "Assets\\Textures\\btn-building-terran-supplydepot.dds", "SupplyDepot", "SupplyDepot", "", true, "SwannBuildSCV", 22, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 2, "Assets\\Textures\\btn-building-terran-refinery.dds", "Refinery", "Refinery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 4, "Assets\\Textures\\btn-building-terran-engineeringbay.dds", "EngineeringBay", "EngineeringBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 5, "Assets\\Textures\\btn-building-terran-missileturret.dds", "MissileTurret", "MissileTurret", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 23, "Assets\\Textures\\btn-unit-terran-perditionturret.dds", "PerditionTurret", "PerditionTurret", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 26, "Assets\\Textures\\btn-tips-flamingbetty.dds", "DevastationTurretACGluescreenDummy", "DevastationTurretACGluescreenDummy", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 10, "Assets\\Textures\\btn-building-terran-factory.dds", "Factory", "Factory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 11, "Assets\\Textures\\btn-building-terran-starport.dds", "Starport", "Starport", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 13, "Assets\\Textures\\btn-building-terran-armory.dds", "Armory", "Armory", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 15, "Assets\\Textures\\btn-building-terran-fusioncore.dds", "FusionCore", "FusionCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FactoryAddOns", 3, "Assets\\Textures\\btn-building-terran-techreactor.dds", "TechReactor", "TechReactor", "", true, "StarportAddOns", 3, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannUpgradeToOrbital", 0, "Assets\\Textures\\btn-building-terran-surveillancestation.dds", "SwannOrbitalCommand", "OrbitalCommand", "OrbitalCommandUnit", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 8, "Assets\\Textures\\btn-building-terran-sensordome.dds", "SensorTower", "SensorTower", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 6, "Assets\\Textures\\btn-building-terran-bunker.dds", "Bunker", "Bunker", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 12, "Assets\\Textures\\btn-building-terran-merccompound.dds", "MercCompound", "MercCompound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 14, "Assets\\Textures\\btn-building-terran-sigmaprojector.dds", "PsiDisruptor", "PsiDisruptor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 16, "Assets\\Textures\\btn-building-terran-hivemindemulator.dds", "HiveMindEmulator", "HiveMindEmulator", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 17, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "ShadowOps", "ShadowOps", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 9, "Assets\\Textures\\btn-building-terran-ghostacademy.dds", "GhostAcademy", "GhostAcademy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 18, "Assets\\Textures\\btn-ability-terran-microfiltering.dds", "FusionReactor", "FusionReactor", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 19, "Assets\\Textures\\btn-ability-spearofadun-temporalfield.dds", "ShadowScrambler", "ShadowScrambler", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 20, "Assets\\Textures\\btn-building-terran-sensordome.dds", "ShadowShieldGeneratorSmall", "ShadowShieldGeneratorSmall", "ShadowShieldGenerator", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 21, "Assets\\Textures\\btn-unit-terran-popupturret.dds", "SentryGun", "SentryGun", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 24, "Assets\\Textures\\btn-building-terran-autoturret.dds", "AutoTurret", "AutoTurret", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 25, "Assets\\Textures\\btn-tips-flamingbetty.dds", "FlamingBettyACGluescreenDummy", "FlamingBettyACGluescreenDummy", "PerditionTurretACGluescreenDummy", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 27, "Assets\\Textures\\btn-unit-terran-autoturretblackops.dds", "RailgunTurretACGluescreenDummy", "RailgunTurretACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 28, "Assets\\Textures\\btn-ability-protoss-arguslink.dds", "PsiDisintegratorPowerLink", "PsiDisintegratorPowerLink", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("SwannBuildSCV", 29, "Assets\\Textures\\btn-building-protoss-pylon.dds", "PylonContainmentUnit", "PylonContainmentUnit", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FactoryAddOns", 6, "Assets\\Textures\\btn-building-terran-reactor.dds", "Reactor", "Reactor", "", false, "StarportAddOns", 6, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FactoryAddOns", 7, "Assets\\Textures\\btn-building-terran-techlab.dds", "TechLab", "TechLab", "", false, "StarportAddOns", 7, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 0, "Assets\\Textures\\btn-building-zerg-hatchery.dds", "Hatchery", "ZagaraHatchery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraUpgradeToLair", 0, "Assets\\Textures\\btn-building-zerg-lair.dds", "ZagaraLair", "ZagaraLair", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraUpgradeToHive", 0, "Assets\\Textures\\btn-building-zerg-hive.dds", "ZagaraHive", "ZagaraHive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 2, "Assets\\Textures\\btn-building-zerg-extractor.dds", "Extractor", "Extractor", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 3, "Assets\\Textures\\btn-building-zerg-spawningpool.dds", "ZagaraSpawningPool", "ZagaraSpawningPool", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 4, "Assets\\Textures\\btn-building-zerg-evolutionchamber.dds", "ZagaraEvolutionChamber", "ZagaraEvolutionChamber", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 10, "Assets\\Textures\\btn-building-zerg-banelingnest.dds", "ZagaraBanelingNest", "ZagaraBanelingNest", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 14, "Assets\\Textures\\btn-building-zerg-spinecrawler.dds", "SpineCrawler", "SpineCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 15, "Assets\\Textures\\btn-building-zerg-sporecrawler.dds", "SporeCrawler", "SporeCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 19, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "BileLauncherACGluescreenDummy", "BileLauncherACGluescreenDummy", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 12, "Assets\\Textures\\btn-doodad-scourgenests.dds", "ScourgeNest", "ScourgeNest", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 13, "Assets\\Textures\\btn-building-zerg-roachwarren.dds", "RoachWarren", "RoachWarren", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 5, "Assets\\Textures\\btn-building-zerg-hydraliskden.dds", "HydraliskDen", "HydraliskDen", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 8, "Assets\\Textures\\btn-building-zerg-infestationpit.dds", "InfestationPit", "InfestationPit", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 11, "Assets\\Textures\\btn-building-zerg-lurkerden.dds", "LurkerDenMP", "LurkerDen", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 6, "Assets\\Textures\\btn-building-zerg-spire.dds", "Spire", "Spire", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 9, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "NydusNetwork", "NydusNetwork", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 7, "Assets\\Textures\\btn-building-zerg-ultraliskcavern.dds", "UltraliskCavern", "UltraliskCavern", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 16, "Assets\\Textures\\btn-building-zerg-impalercolony.dds", "SunkenColony", "SunkenColony", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 17, "Assets\\Textures\\btn-building-zerg-virophage.dds", "Virophage", "Virophage", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 18, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "SporeCannon", "SporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 20, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "KorhalSporeCannon", "KorhalSporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 21, "Assets\\Textures\\btn-building-zerg-defilermound.dds", "BWDefilerMound", "BWDefilerMound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("ZagaraZergBuild", 25, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "OmegaNetworkACGluescreenDummy", "OmegaNetworkACGluescreenDummy", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 0, "Assets\\Textures\\btn-building-protoss-nexus.dds", "Nexus", "Nexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 1, "Assets\\Textures\\btn-building-protoss-pylon.dds", "Pylon", "Pylon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 2, "Assets\\Textures\\btn-building-protoss-assimilator.dds", "Assimilator", "Assimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 3, "Assets\\Textures\\btn-building-protoss-gateway.dds", "Gateway", "Gateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 4, "Assets\\Textures\\btn-building-protoss-forge.dds", "Forge", "Forge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 7, "Assets\\Textures\\btn-building-protoss-photoncannon.dds", "PhotonCannon", "PhotonCannon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 14, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", "CyberneticsCore", "CyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 6, "Assets\\Textures\\btn-building-protoss-twilightcouncil.dds", "TwilightCouncil", "TwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 11, "Assets\\Textures\\btn-building-protoss-darkshrine.dds", "DarkShrine", "DarkShrine", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 9, "Assets\\Textures\\btn-building-protoss-stargate.dds", "Stargate", "Stargate", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 5, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", "FleetBeacon", "FleetBeacon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 15, "Assets\\Textures\\btn-building-protoss-shieldbattery.dds", "ShieldBattery", "ShieldBattery", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 10, "Assets\\Textures\\btn-building-protoss-templararchives.dds", "TemplarArchive", "TemplarArchive", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 13, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", "RoboticsFacility", "RoboticsFacility", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 12, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", "RoboticsBay", "RoboticsBay", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 16, "Assets\\Textures\\btn-building-protoss-obelisk.dds", "Obelisk", "Obelisk", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 20, "Assets\\Textures\\btn-upgrade-vorazun-summondarkpylon.dds", "DarkPylonACGluescreenDummy", "DarkPylonACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 25, "Assets\\Textures\\btn-unit-protoss-khaydarinmonolith.dds", "KhaydarinMonolithACGluescreenDummy", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("NerazimProtossBuild", 8, "Assets\\Textures\\btn-unit-collection-hightemplar-golden.dds", "ProtossRadioTower", "ProtossRadioTower", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 0, "Assets\\Textures\\btn-building-protoss-nexus.dds", "Nexus", "Nexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 1, "Assets\\Textures\\btn-building-protoss-pylon.dds", "Pylon", "Pylon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 2, "Assets\\Textures\\btn-building-protoss-assimilator.dds", "Assimilator", "Assimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 3, "Assets\\Textures\\btn-building-protoss-gateway.dds", "Gateway", "Gateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 4, "Assets\\Textures\\btn-building-protoss-forge.dds", "Forge", "Forge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 7, "Assets\\Textures\\btn-building-protoss-photoncannon.dds", "PhotonCannon", "PhotonCannon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 14, "Assets\\Textures\\btn-building-protoss-cyberneticscore.dds", "CyberneticsCore", "CyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 15, "Assets\\Textures\\btn-building-protoss-shieldbattery.dds", "ShieldBattery", "ShieldBattery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 24, "Assets\\Textures\\btn-building-protoss-khaydarinmonolithaiur.dds", "KhaydarinMonolith", "KhaydarinMonolith", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 6, "Assets\\Textures\\btn-building-protoss-twilightcouncil.dds", "TwilightCouncil", "TwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 13, "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds", "RoboticsFacility", "RoboticsFacility", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 12, "Assets\\Textures\\btn-building-protoss-roboticssupportbay.dds", "RoboticsBay", "RoboticsBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 9, "Assets\\Textures\\btn-building-protoss-stargate.dds", "Stargate", "Stargate", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 5, "Assets\\Textures\\btn-building-protoss-fleetbeacon.dds", "FleetBeacon", "FleetBeacon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 10, "Assets\\Textures\\btn-building-protoss-templararchives.dds", "TemplarArchive", "TemplarArchive", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 11, "Assets\\Textures\\btn-building-protoss-darkshrine.dds", "DarkShrine", "DarkShrine", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 16, "Assets\\Textures\\btn-building-protoss-obelisk.dds", "Obelisk", "Obelisk", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 20, "Assets\\Textures\\btn-upgrade-vorazun-summondarkpylon.dds", "DarkPylonACGluescreenDummy", "DarkPylonACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 25, "Assets\\Textures\\btn-unit-protoss-khaydarinmonolith.dds", "KhaydarinMonolithACGluescreenDummy", "KhaydarinMonolith", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("KaraxProtossBuild", 8, "Assets\\Textures\\btn-unit-collection-hightemplar-golden.dds", "ProtossRadioTower", "ProtossRadioTower", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 0, "Assets\\Textures\\btn-building-zerg-hatchery.dds", "Hatchery", "Hatchery", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurUpgradeToLair", 0, "Assets\\Textures\\btn-building-zerg-lair.dds", "AbathurLair", "AbathurLair", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurUpgradeToHive", 0, "Assets\\Textures\\btn-building-zerg-hive.dds", "AbathurHive", "KerriganHive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 2, "Assets\\Textures\\btn-building-zerg-extractor.dds", "Extractor", "Extractor", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 4, "Assets\\Textures\\btn-building-zerg-evolutionchamber.dds", "AbathurEvolutionChamber", "AbathurEvolutionChamber", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 13, "Assets\\Textures\\btn-building-zerg-roachwarren.dds", "RoachWarren", "RoachWarren", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 14, "Assets\\Textures\\btn-building-zerg-spinecrawler.dds", "SpineCrawler", "SpineCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 15, "Assets\\Textures\\btn-building-zerg-sporecrawler.dds", "SporeCrawler", "SporeCrawler", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 8, "Assets\\Textures\\btn-building-zerg-infestationpit.dds", "InfestationPit", "InfestationPit", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 6, "Assets\\Textures\\btn-building-zerg-spire.dds", "Spire", "AbathurSpire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurUpgradeToGreaterSpire", 0, "Assets\\Textures\\btn-building-zerg-greaterspire.dds", "AbathurGreaterSpire", "AbathurGreaterSpire", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 9, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "NydusNetwork", "NydusNetwork", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 3, "Assets\\Textures\\btn-building-zerg-spawningpool.dds", "SpawningPool", "SpawningPool", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 10, "Assets\\Textures\\btn-building-zerg-banelingnest.dds", "BanelingNest", "BanelingNest", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 5, "Assets\\Textures\\btn-building-zerg-hydraliskden.dds", "HydraliskDen", "HydraliskDen", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 11, "Assets\\Textures\\btn-building-zerg-lurkerden.dds", "LurkerDenMP", "LurkerDen", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 7, "Assets\\Textures\\btn-building-zerg-ultraliskcavern.dds", "UltraliskCavern", "UltraliskCavern", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 12, "Assets\\Textures\\btn-doodad-scourgenests.dds", "ScourgeNest", "ScourgeNest", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 16, "Assets\\Textures\\btn-building-zerg-impalercolony.dds", "SunkenColony", "SunkenColony", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 17, "Assets\\Textures\\btn-building-zerg-virophage.dds", "Virophage", "Virophage", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 18, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "SporeCannon", "SporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 19, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "BileLauncherACGluescreenDummy", "BileLauncherACGluescreenDummy", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 20, "Assets\\Textures\\btn-building-zerg-sporecannon.dds", "KorhalSporeCannon", "KorhalSporeCannon", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 21, "Assets\\Textures\\btn-building-zerg-defilermound.dds", "BWDefilerMound", "BWDefilerMound", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AbathurZergBuild", 25, "Assets\\Textures\\btn-building-zerg-nydusnetwork.dds", "OmegaNetworkACGluescreenDummy", "OmegaNetworkACGluescreenDummy", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 0, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-nexus.dds", "Nexus", "Nexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 1, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-pylon.dds", "Pylon", "Pylon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 2, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-assimilator.dds", "Assimilator", "Assimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 3, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-gateway.dds", "Gateway", "Gateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 4, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-forge.dds", "Forge", "Forge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 7, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-photoncannon.dds", "PhotonCannon", "PhotonCannon", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 14, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-cyberneticscore.dds", "CyberneticsCore", "CyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 6, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-twilightcouncil.dds", "TwilightCouncil", "TwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 10, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-templararchives.dds", "TemplarArchive", "TemplarArchive", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 13, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-roboticsfacility.dds", "RoboticsFacility", "RoboticsFacility", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 12, "Assets\\Textures\\btn-unit-protoss-alarak-taldarim-roboticssupportbay.dds", "RoboticsBay", "RoboticsBay", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 15, "Assets\\Textures\\btn-building-protoss-shieldbattery-forged.dds", "ShieldBattery", "ShieldBattery", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 8, "Assets\\Textures\\btn-building-protoss-darkshrine-forged.dds", "TaldarimDarkShrine", "TaldarimDarkShrine", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 9, "Assets\\Textures\\btn-building-protoss-stargate-forged.dds", "Stargate", "Stargate", "", false, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("AlarakProtossBuild", 5, "Assets\\Textures\\btn-building-protoss-fleetbeacon-forged.dds", "FleetBeacon", "FleetBeacon", "", false, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);
    lib22142002_gv_tTSS_IntTechTreeS += 1;
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 0, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-nexus.dds", "PurifierNexus", "PurifierNexus", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 1, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-pylon.dds", "PurifierPylon", "PurifierPylon", "", true, null, 1, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 2, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-assimilator.dds", "PurifierAssimilator", "PurifierAssimilator", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 3, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-gateway.dds", "PurifierGateway", "PurifierGateway", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 4, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-forge.dds", "PurifierForge", "PurifierForge", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 7, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-photoncannon.dds", "PhotonCannonFenixACGluescreenDummy", "PhotonCannonFenixACGluescreenDummy", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 14, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-cyberneticscore.dds", "PurifierCyberneticsCore", "PurifierCyberneticsCore", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 6, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-twilightcouncil.dds", "PurifierTwilightCouncil", "PurifierTwilightCouncil", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 9, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-stargate.dds", "PurifierStargate", "PurifierStargate", "", true, null, 0, null, 0);
    lib22142002_gf_TTSS_GetDataManual("FenixProtossBuild", 5, "Assets\\Textures\\btn-unit-protoss-fenix-purifier-fleetbeacon.dds", "PurifierFleetBeacon", "PurifierFleetBeacon", "", true, null, 0, null, 0);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

    Wait(lv_local_WaitTime, c_timeGame);

}

void lib22142002_gf_TTSS_GetDataManual (string lp_inputTTSSLink, int lp_array, string lp_inputImageLink, string lp_inputUnitType, string lp_inputTextLinkName, string lp_inputTextLinkTooltip, bool lp_inputInitialStateAllow, string lp_link2, int lp_array2, string lp_link3, int lp_array3) {
    // Variable Declarations
    text lv_get_TooltipText;
    int lv_get_Minerals;
    int lv_get_Vespene;
    fixed lv_get_Time;

    // Automatic Variable Declarations
    const int auto95629E3D_ae = 15;
    int auto95629E3D_var;

    // Variable Initialization

    // Implementation
    lib22142002_gv_tTSS_ProduceLink[lib22142002_gv_tTSS_IntTechTreeS] = lp_inputTTSSLink;
    lib22142002_gv_tTSS_ProduceLinkArray[lib22142002_gv_tTSS_IntTechTreeS] = lp_array;
    lib22142002_gv_tTSS_ProduceLink2[lib22142002_gv_tTSS_IntTechTreeS] = lp_link2;
    lib22142002_gv_tTSS_ProduceLinkArray2[lib22142002_gv_tTSS_IntTechTreeS] = lp_array2;
    lib22142002_gv_tTSS_ProduceLink3[lib22142002_gv_tTSS_IntTechTreeS] = lp_link3;
    lib22142002_gv_tTSS_ProduceLinkArray3[lib22142002_gv_tTSS_IntTechTreeS] = lp_array3;
    lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] = StringExternal(("Unit/Name/" + lp_inputTextLinkName));
    lib22142002_gv_tTSS_StructureType[lib22142002_gv_tTSS_IntTechTreeS] = lp_inputUnitType;
    if ((lp_inputUnitType != null)) {
        lv_get_Minerals = UnitTypeGetCost(lp_inputUnitType, c_unitCostMinerals);
        lv_get_Vespene = UnitTypeGetCost(lp_inputUnitType, c_unitCostVespene);
    }

    if ((AbilityClass(lp_inputTTSSLink) == c_classIdCAbilBuild)) {
        lv_get_Time = FixedToInt((CatalogFieldValueGetAsInt(c_gameCatalogAbil, lp_inputTTSSLink, ("InfoArray[" + IntToString(lp_array) + "].Time"), c_playerAny) / 1.4));
    }

    if ((lp_inputTextLinkTooltip == "")) {
        lv_get_TooltipText = StringExternal(("Button/Tooltip/" + lp_inputTextLinkName));
    }
    else {
        lv_get_TooltipText = StringExternal(("Button/Tooltip/" + lp_inputTextLinkTooltip));
    }
    if ((lv_get_Minerals != 0) && (lv_get_Vespene == 0)) {
        lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (StringExternal("Param/Value/lib_22142002_BF16B1D4") + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_ED2D533B") + StringExternal("Param/Value/lib_22142002_928BFE1C") + StringExternal("Param/Value/lib_22142002_58B6062A") + IntToText(lv_get_Minerals));
    }
    else {
        if ((lv_get_Minerals == 0) && (lv_get_Vespene != 0)) {
            lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (StringExternal("Param/Value/lib_22142002_F3C25A12") + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_E374EDB1") + StringExternal("Param/Value/lib_22142002_9417F110") + StringExternal("Param/Value/lib_22142002_5EDD2824") + IntToText(lv_get_Vespene));
        }
        else {
            if ((lv_get_Minerals != 0) && (lv_get_Vespene != 0)) {
                lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (StringExternal("Param/Value/lib_22142002_F8C0275A") + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_5485AFD8") + StringExternal("Param/Value/lib_22142002_CEED3210") + StringExternal("Param/Value/lib_22142002_2013FDFC") + IntToText(lv_get_Minerals) + StringExternal("Param/Value/lib_22142002_25B9D6B7") + StringExternal("Param/Value/lib_22142002_68CD791A") + StringExternal("Param/Value/lib_22142002_B832C987") + IntToText(lv_get_Vespene));
            }
            else {
                lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (StringExternal("Param/Value/lib_22142002_34BC160D") + lib22142002_gv_tTSS_TechTreeStructureName[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_CD8EE770"));
            }
        }
    }
    if ((lv_get_Time == 0)) {
        lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_591FD7CD") + lv_get_TooltipText);
    }
    else {
        lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] = (lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS] + StringExternal("Param/Value/lib_22142002_1AD1212F") + StringExternal("Param/Value/lib_22142002_7CF6B2F6") + StringExternal("Param/Value/lib_22142002_8E18E9F0") + FixedToText(lv_get_Time, c_fixedPrecisionAny) + StringExternal("Param/Value/lib_22142002_4D7DD446") + lv_get_TooltipText);
    }
    lib22142002_gv_tTSS_ButtonTechTreeStructureFile[lib22142002_gv_tTSS_IntTechTreeS] = lp_inputImageLink;
    lib22142002_gv_tTSS_TechTreeStructureInitialAllowed[lib22142002_gv_tTSS_IntTechTreeS] = lp_inputInitialStateAllow;
    auto95629E3D_var = 0;
    for ( ; auto95629E3D_var <= auto95629E3D_ae; auto95629E3D_var += 1 ) {
        lib22142002_gv_tTSS_TechTreeStructuresFlag[lib22142002_gv_tTSS_IntTechTreeS][auto95629E3D_var] = lp_inputInitialStateAllow;
    }
    lib22142002_gv_tTSS_IntTechTreeS += 1;
}

void lib22142002_gf_TTSS_CreatebuttonsfortechtreeS (int lp_param_Race) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_iacross;
    int lv_idown;

    // Automatic Variable Declarations
    int autoFF759B82_ae;
    const int autoFF759B82_ai = 1;
    int autoEF9A7CFE_ae;
    const int autoEF9A7CFE_ai = 1;
    const int autoC3BB9EF5_ae = 15;
    int autoC3BB9EF5_var;

    // Variable Initialization
    lv_x = lib22142002_gv_dP_XYOffset;
    lv_y = lib22142002_gv_dP_XYOffset;

    // Implementation
    autoFF759B82_ae = lib22142002_gf_TTSS_PageColumnAmount(lp_param_Race);
    lv_idown = 1;
    for ( ; ( (autoFF759B82_ai >= 0 && lv_idown <= autoFF759B82_ae) || (autoFF759B82_ai < 0 && lv_idown >= autoFF759B82_ae) ) ; lv_idown += autoFF759B82_ai ) {
        lv_x = lib22142002_gv_dP_XYOffset;
        autoEF9A7CFE_ae = lib22142002_gv_dP_ButtonPerRowFix;
        lv_iacross = 1;
        for ( ; ( (autoEF9A7CFE_ai >= 0 && lv_iacross <= autoEF9A7CFE_ae) || (autoEF9A7CFE_ai < 0 && lv_iacross >= autoEF9A7CFE_ae) ) ; lv_iacross += autoEF9A7CFE_ai ) {
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib22142002_gv_dP_ButtonWidth, lib22142002_gv_dP_ButtonWidth, c_anchorTopLeft, lv_x, lv_y, lib22142002_gv_tTSS_ButtonTechTreeStructureTooltip[lib22142002_gv_tTSS_IntTechTreeS], StringToText(""), "");
            lib22142002_gv_tTSS_ButtonTechTreeStructures[lib22142002_gv_tTSS_IntTechTreeS] = DialogControlLastCreated();
            lib22142002_gf_DP_ButtonFrameRace(DialogControlLastCreated(), lp_param_Race);
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), lib22142002_gv_dP_ButtonImageWidth, lib22142002_gv_dP_ButtonImageHeight, c_anchorTopLeft, (lv_x + 2), (lv_y + 2), StringToText(""), lib22142002_gv_tTSS_ButtonTechTreeStructureFile[lib22142002_gv_tTSS_IntTechTreeS], c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lib22142002_gv_tTSS_IntTechTreeS] = DialogControlLastCreated();
            if ((lib22142002_gv_tTSS_TechTreeStructureInitialAllowed[lib22142002_gv_tTSS_IntTechTreeS] == false)) {
                DialogControlSetEnabled(lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lib22142002_gv_tTSS_IntTechTreeS], PlayerGroupActive(), false);
                autoC3BB9EF5_var = 0;
                for ( ; autoC3BB9EF5_var <= autoC3BB9EF5_ae; autoC3BB9EF5_var += 1 ) {
                    TechTreeAbilityAllow(autoC3BB9EF5_var, AbilityCommand(lib22142002_gv_tTSS_ProduceLink[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray[lib22142002_gv_tTSS_IntTechTreeS]), false);
                    TechTreeAbilityAllow(autoC3BB9EF5_var, AbilityCommand(lib22142002_gv_tTSS_ProduceLink2[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray2[lib22142002_gv_tTSS_IntTechTreeS]), false);
                    TechTreeAbilityAllow(autoC3BB9EF5_var, AbilityCommand(lib22142002_gv_tTSS_ProduceLink3[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray3[lib22142002_gv_tTSS_IntTechTreeS]), false);
                }
            }

            lib22142002_gv_tTSS_IntTechTreeS += 1;
            if ((lib22142002_gv_tTSS_ProduceLink[lib22142002_gv_tTSS_IntTechTreeS] == null)) {
                lib22142002_gv_tTSS_IntTechTreeS += 1;
                return ;
            }

            lv_x += lib22142002_gv_dP_ButtonWidth;
        }
        Wait(0.0001, c_timeGame);
        lv_y += lib22142002_gv_dP_ButtonHeight;
    }
}

int lib22142002_gf_TTSS_PageColumnAmount (int lp_inputIntRace) {
    // Automatic Variable Declarations
    int autoF7493AD8_val;

    // Implementation
    autoF7493AD8_val = lp_inputIntRace;
    if (autoF7493AD8_val == 1) {
        return 2;
    }
    else if (autoF7493AD8_val == 2) {
        return 2;
    }
    else if (autoF7493AD8_val == 3) {
        return 2;
    }
    else if (autoF7493AD8_val == 4) {
        return 2;
    }
    else if (autoF7493AD8_val == 5) {
        return 1;
    }
    else if (autoF7493AD8_val == 6) {
        return 1;
    }
    else if (autoF7493AD8_val == 7) {
        return 3;
    }
    else if (autoF7493AD8_val == 8) {
        return 3;
    }
    else if (autoF7493AD8_val == 9) {
        return 2;
    }
    else if (autoF7493AD8_val == 10) {
        return 3;
    }
    else if (autoF7493AD8_val == 11) {
        return 3;
    }
    else if (autoF7493AD8_val == 12) {
        return 2;
    }
    else if (autoF7493AD8_val == 13) {
        return 2;
    }
    else if (autoF7493AD8_val == 14) {
        return 3;
    }
    else if (autoF7493AD8_val == 15) {
        return 2;
    }
    else if (autoF7493AD8_val == 16) {
        return 2;
    }
    else if (autoF7493AD8_val == 17) {
        return 2;
    }
    else if (autoF7493AD8_val == 18) {
        return 2;
    }
    else if (autoF7493AD8_val == 19) {
        return 2;
    }
    else if (autoF7493AD8_val == 20) {
        return 2;
    }
    else if (autoF7493AD8_val == 21) {
        return 2;
    }
    else if (autoF7493AD8_val == 22) {
        return 2;
    }
    else if (autoF7493AD8_val == 23) {
        return 2;
    }
    else if (autoF7493AD8_val == 24) {
        return 2;
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_22142002_A5F17386") + IntToText(lp_inputIntRace)));
        return 0;
    }
}

void lib22142002_gf_TTSS_TechTreeStructureOnAllow () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_tTSS_TechTreeStructuresFlag[lib22142002_gv_tTSS_IntTechTreeS][lib22142002_gv_dP_IntTPlayer] = true;
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray[lib22142002_gv_tTSS_IntTechTreeS]), true);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink2[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray2[lib22142002_gv_tTSS_IntTechTreeS]), true);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink3[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray3[lib22142002_gv_tTSS_IntTechTreeS]), true);
    DialogControlSetEnabled(lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lib22142002_gv_tTSS_IntTechTreeS], PlayerGroupActive(), true);
    lib22142002_gf_TTSS_Refresh();
}

void lib22142002_gf_TTSS_TechTreeStructureOffDisallow () {
    // Automatic Variable Declarations
    // Implementation
    lib22142002_gv_tTSS_TechTreeStructuresFlag[lib22142002_gv_tTSS_IntTechTreeS][lib22142002_gv_dP_IntTPlayer] = false;
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray[lib22142002_gv_tTSS_IntTechTreeS]), false);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink2[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray2[lib22142002_gv_tTSS_IntTechTreeS]), false);
    TechTreeAbilityAllow(lib22142002_gv_dP_IntTPlayer, AbilityCommand(lib22142002_gv_tTSS_ProduceLink3[lib22142002_gv_tTSS_IntTechTreeS], lib22142002_gv_tTSS_ProduceLinkArray3[lib22142002_gv_tTSS_IntTechTreeS]), false);
    DialogControlSetEnabled(lib22142002_gv_tTSS_ButtonTechTreeStructuresImage[lib22142002_gv_tTSS_IntTechTreeS], PlayerGroupActive(), false);
    lib22142002_gf_TTSS_Refresh();
}

void lib22142002_gf_US_AllAbilitiesOn3 () {
    // Automatic Variable Declarations
    const int autoE30967C0_ae = 1;
    const int autoE30967C0_ai = 1;
    const int autoF1022FAE_ae = 99;
    const int autoF1022FAE_ai = 1;

    // Implementation
    lib22142002_gv_tTSS_TechTreeStructuresMelee = 1;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (autoE30967C0_ai >= 0 && lib22142002_gv_dP_IntPlayer <= autoE30967C0_ae) || (autoE30967C0_ai < 0 && lib22142002_gv_dP_IntPlayer >= autoE30967C0_ae) ) ; lib22142002_gv_dP_IntPlayer += autoE30967C0_ai ) {
        lib22142002_gv_tTSS_IntTechTreeS = 0;
        for ( ; ( (autoF1022FAE_ai >= 0 && lib22142002_gv_tTSS_IntTechTreeS <= autoF1022FAE_ae) || (autoF1022FAE_ai < 0 && lib22142002_gv_tTSS_IntTechTreeS >= autoF1022FAE_ae) ) ; lib22142002_gv_tTSS_IntTechTreeS += autoF1022FAE_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_tTSS_IntTechTreeS] == 0)) {
                if ((lib22142002_gv_uS_ButtonUpgradeType[lib22142002_gv_tTSS_IntTechTreeS] == "Ability")) {
                    lib22142002_gf_TTSS_TechTreeStructureOnAllow();
                }

            }

        }
    }
}

void lib22142002_gf_US_AllAbilitiesOff3 () {
    // Automatic Variable Declarations
    const int autoE9587F98_ae = 1;
    const int autoE9587F98_ai = 1;
    const int auto5B47CDAD_ae = 99;
    const int auto5B47CDAD_ai = 1;

    // Implementation
    lib22142002_gv_tTSS_TechTreeStructuresMelee = 0;
    lib22142002_gv_dP_IntPlayer = 0;
    for ( ; ( (autoE9587F98_ai >= 0 && lib22142002_gv_dP_IntPlayer <= autoE9587F98_ae) || (autoE9587F98_ai < 0 && lib22142002_gv_dP_IntPlayer >= autoE9587F98_ae) ) ; lib22142002_gv_dP_IntPlayer += autoE9587F98_ai ) {
        lib22142002_gv_tTSS_IntTechTreeS = 0;
        for ( ; ( (auto5B47CDAD_ai >= 0 && lib22142002_gv_tTSS_IntTechTreeS <= auto5B47CDAD_ae) || (auto5B47CDAD_ai < 0 && lib22142002_gv_tTSS_IntTechTreeS >= auto5B47CDAD_ae) ) ; lib22142002_gv_tTSS_IntTechTreeS += auto5B47CDAD_ai ) {
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_tTSS_IntTechTreeS] == 0)) {
                lib22142002_gf_TTSS_TechTreeStructureOffDisallow();
            }

        }
    }
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_22142002_70926286"));
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Initialization
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Initialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC946B667_g;
    int autoC946B667_var;
    playergroup auto57DD970B_g;
    int auto57DD970B_var;
    string autoD3E35D08_val;
    unitgroup auto1900EB15_g;
    int auto1900EB15_u;
    unit auto1900EB15_var;
    playergroup auto55DF8446_g;
    int auto55DF8446_var;
    unitgroup autoF60F6D15_g;
    int autoF60F6D15_u;
    unit autoF60F6D15_var;
    unitgroup autoD23C4DDC_g;
    int autoD23C4DDC_u;
    unit autoD23C4DDC_var;
    const int auto20DBF576_ae = 15;
    int auto20DBF576_var;
    playergroup autoA63D569C_g;
    int autoA63D569C_var;
    const int auto025128C4_ae = 10;
    int auto025128C4_var;
    const int auto3C3BD09B_ae = 10;
    int auto3C3BD09B_var;
    playergroup auto427DF925_g;
    int auto427DF925_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC946B667_g = PlayerGroupAll();
    autoC946B667_var = -1;
    while (true) {
        autoC946B667_var = PlayerGroupNextPlayer(autoC946B667_g, autoC946B667_var);
        if (autoC946B667_var < 0) { break; }
        MeleeSetOption(autoC946B667_var, c_meleeOptionDefeat, false);
        UnitCreate(1, "Surviver", 0, autoC946B667_var, Point(0.0, 0.0), 270.0);
        AISetUnitScriptControlled(UnitLastCreated(), false);
    }
    HelpPanelEnableTechGlossaryButton(PlayerGroupAll(), false);
    if ((lib22142002_gv_dEITY_DependencyMode == false)) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_B66C8E7E"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_7D9C6D6B"), StringExternal("Param/Value/lib_22142002_A8F11D91"), "ui_logo_patreon.dds");
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_814C901F"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_44C34BF0"), StringExternal("Param/Value/lib_22142002_99B7C2B2"), "ui_logo_discord.dds");
        if ((GameIsOnline() == false)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_59CAB508"));
        }

        if ((GameAttributeGameValue("[bnet:local/0.0/280012]2") == "0001")) {
            auto57DD970B_g = PlayerGroupActive();
            auto57DD970B_var = -1;
            while (true) {
                auto57DD970B_var = PlayerGroupNextPlayer(auto57DD970B_g, auto57DD970B_var);
                if (auto57DD970B_var < 0) { break; }
                if ((GameAttributePlayerValue("[bnet:local/0.0/280012]3", auto57DD970B_var) != "0005")) {
                    autoD3E35D08_val = GameAttributePlayerValue("[bnet:local/0.0/280012]3", auto57DD970B_var);
                    if (autoD3E35D08_val == "0007") {
                        PlayerSetRace(auto57DD970B_var, lib22142002_gf_RacePlayerAttribute_Random("Any"));
                    }
                    else if (autoD3E35D08_val == "0006") {
                        PlayerSetRace(auto57DD970B_var, lib22142002_gf_RacePlayerAttribute_Random("Co-op"));
                    }
                    else if (autoD3E35D08_val == "0001") {
                        PlayerSetRace(auto57DD970B_var, "Rayn");
                    }
                    else if (autoD3E35D08_val == "0002") {
                        PlayerSetRace(auto57DD970B_var, "Kerr");
                    }
                    else if (autoD3E35D08_val == "0003") {
                        PlayerSetRace(auto57DD970B_var, "Arta");
                    }
                    else if (autoD3E35D08_val == "0004") {
                        PlayerSetRace(auto57DD970B_var, "Swan");
                    }
                    else if (autoD3E35D08_val == "0008") {
                        PlayerSetRace(auto57DD970B_var, "Zaga");
                    }
                    else if (autoD3E35D08_val == "0009") {
                        PlayerSetRace(auto57DD970B_var, "Vora");
                    }
                    else {
                    }
                }

            }
        }

        auto1900EB15_g = UnitGroup(null, 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto1900EB15_u = UnitGroupCount(auto1900EB15_g, c_unitCountAll);
        for (;; auto1900EB15_u -= 1) {
            auto1900EB15_var = UnitGroupUnitFromEnd(auto1900EB15_g, auto1900EB15_u);
            if (auto1900EB15_var == null) { break; }
            UnitSetOwner(auto1900EB15_var, 14, false);
        }
        PlayerModifyPropertyInt(0, c_playerPropSuppliesMade, c_playerPropOperSetTo, 10000);
        PlayerModifyPropertyInt(0, c_playerPropSuppliesLimit, c_playerPropOperSetTo, 10000);
        PlayerModifyPropertyInt(15, c_playerPropSuppliesMade, c_playerPropOperSetTo, 10000);
        PlayerModifyPropertyInt(15, c_playerPropSuppliesLimit, c_playerPropOperSetTo, 10000);
        auto55DF8446_g = PlayerGroupActive();
        auto55DF8446_var = -1;
        while (true) {
            auto55DF8446_var = PlayerGroupNextPlayer(auto55DF8446_g, auto55DF8446_var);
            if (auto55DF8446_var < 0) { break; }
            PlayerOptionOverride(auto55DF8446_var, "simplecommandcard", "0");
            VisRevealerCreate(auto55DF8446_var, RegionEntireMap());
            VisRevealerEnable(VisRevealerLastCreated(), false);
            lib22142002_gv_dEITY_GodSightFull_Revealer[auto55DF8446_var] = VisRevealerLastCreated();
            autoF60F6D15_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterRawResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            autoF60F6D15_u = UnitGroupCount(autoF60F6D15_g, c_unitCountAll);
            for (;; autoF60F6D15_u -= 1) {
                autoF60F6D15_var = UnitGroupUnitFromEnd(autoF60F6D15_g, autoF60F6D15_u);
                if (autoF60F6D15_var == null) { break; }
                VisRevealArea(auto55DF8446_var, RegionCircle(UnitGetPosition(autoF60F6D15_var), 0.75), 0.2, false);
            }
            autoD23C4DDC_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            autoD23C4DDC_u = UnitGroupCount(autoD23C4DDC_g, c_unitCountAll);
            for (;; autoD23C4DDC_u -= 1) {
                autoD23C4DDC_var = UnitGroupUnitFromEnd(autoD23C4DDC_g, autoD23C4DDC_u);
                if (autoD23C4DDC_var == null) { break; }
                VisRevealArea(auto55DF8446_var, RegionCircle(UnitGetPosition(autoD23C4DDC_var), 0.75), 0.2, false);
            }
            lib22142002_gv_dEITY_RelationsControl[auto55DF8446_var][auto55DF8446_var] = true;
            lib22142002_gv_dEITY_RelationsVision[auto55DF8446_var][auto55DF8446_var] = true;
            auto20DBF576_var = 0;
            for ( ; auto20DBF576_var <= auto20DBF576_ae; auto20DBF576_var += 1 ) {
                if ((PlayerGetAlliance(auto55DF8446_var, c_allianceIdVision, auto20DBF576_var) == true)) {
                    lib22142002_gv_dEITY_RelationsVision[auto55DF8446_var][auto20DBF576_var] = true;
                }
                else {
                    lib22142002_gv_dEITY_RelationsVision[auto55DF8446_var][auto20DBF576_var] = false;
                }
                if ((PlayerGetAlliance(auto55DF8446_var, c_allianceIdControl, auto20DBF576_var) == true)) {
                    lib22142002_gv_dEITY_RelationsControl[auto55DF8446_var][auto20DBF576_var] = true;
                }
                else {
                    lib22142002_gv_dEITY_RelationsControl[auto55DF8446_var][auto20DBF576_var] = false;
                }
                if ((PlayerGetAlliance(auto55DF8446_var, c_allianceIdChat, auto20DBF576_var) == true)) {
                    lib22142002_gv_dEITY_RelationsAlliedChat[auto55DF8446_var][auto20DBF576_var] = true;
                }
                else {
                    lib22142002_gv_dEITY_RelationsAlliedChat[auto55DF8446_var][auto20DBF576_var] = false;
                }
            }
        }
        autoA63D569C_g = PlayerGroupAll();
        autoA63D569C_var = -1;
        while (true) {
            autoA63D569C_var = PlayerGroupNextPlayer(autoA63D569C_g, autoA63D569C_var);
            if (autoA63D569C_var < 0) { break; }
            lib22142002_gv_init_OriginalRace[autoA63D569C_var] = PlayerRace(autoA63D569C_var);
            MeleeSetOption(autoA63D569C_var, c_meleeOptionDefeat, true);
        }
        auto025128C4_var = 1;
        for ( ; auto025128C4_var <= auto025128C4_ae; auto025128C4_var += 1 ) {
            ObjectiveCreate((StringExternal("Param/Value/lib_22142002_0A5CBE0D") + IntToText(auto025128C4_var)), StringToText(""), c_objectiveStateHidden, true);
            lib22142002_gv_c_SC_Objectives[0][auto025128C4_var] = ObjectiveLastCreated();
        }
        auto3C3BD09B_var = 1;
        for ( ; auto3C3BD09B_var <= auto3C3BD09B_ae; auto3C3BD09B_var += 1 ) {
            ObjectiveCreate((StringExternal("Param/Value/lib_22142002_51AA828D") + IntToText(auto3C3BD09B_var)), StringToText(""), c_objectiveStateHidden, false);
            lib22142002_gv_c_SC_Objectives[1][auto3C3BD09B_var] = ObjectiveLastCreated();
        }

        TriggerExecute(lib22142002_gt_Init_InitiateDEITY, true, false);
        Wait(60.0, c_timeGame);
        auto427DF925_g = PlayerGroupAll();
        auto427DF925_var = -1;
        while (true) {
            auto427DF925_var = PlayerGroupNextPlayer(auto427DF925_g, auto427DF925_var);
            if (auto427DF925_var < 0) { break; }
            MeleeSetOption(auto427DF925_var, c_meleeOptionStalemate, false);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Initialization_Init () {
    lib22142002_gt_Initialization = TriggerCreate("lib22142002_gt_Initialization_Func");
    TriggerAddEventMapInit(lib22142002_gt_Initialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PlayerN_Init
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_PlayerN_Init_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoE96A4C9E_ae = 15;
    int autoE96A4C9E_var;

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlHookupStandard(c_triggerControlTypeEditBox, "UIContainer/FullscreenUpperContainer/TextBoxContainer/TextBox");
    lib22142002_gv_playerN_EditBox = DialogControlLastCreated();
    autoE96A4C9E_var = 0;
    for ( ; autoE96A4C9E_var <= autoE96A4C9E_ae; autoE96A4C9E_var += 1 ) {
        DialogControlSetAnimationState(lib22142002_gv_playerN_EditBox, PlayerGroupSingle(autoE96A4C9E_var), "ClanCheck", IntToString(autoE96A4C9E_var));
        Wait(0.0001, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_PlayerN_Init_Init () {
    lib22142002_gt_PlayerN_Init = TriggerCreate("lib22142002_gt_PlayerN_Init_Func");
    TriggerAddEventMapInit(lib22142002_gt_PlayerN_Init);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PlayerN_DialogUsed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_PlayerN_DialogUsed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_playersClan;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_playersClan = "";

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib22142002_gv_playerN_EditBox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_playerNameActual[EventPlayer()] = libNtve_gf_DialogItemEditValue(EventDialogControl(), EventPlayer());
    lib22142002_gv_playerNameOneWord[EventPlayer()] = StringReplaceWord(libNtve_gf_DialogItemEditValue(EventDialogControl(), EventPlayer()), " ", "", c_stringReplaceAll, c_stringCase);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_PlayerN_DialogUsed_Init () {
    lib22142002_gt_PlayerN_DialogUsed = TriggerCreate("lib22142002_gt_PlayerN_DialogUsed_Func");
    TriggerAddEventDialogControl(lib22142002_gt_PlayerN_DialogUsed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeTextChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init_Initiate DEITY
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Init_InitiateDEITY_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD208ADA2_g;
    int autoD208ADA2_var;

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_dEITY_DependencyMode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoD208ADA2_g = PlayerGroupActive();
    autoD208ADA2_var = -1;
    while (true) {
        autoD208ADA2_var = PlayerGroupNextPlayer(autoD208ADA2_g, autoD208ADA2_var);
        if (autoD208ADA2_var < 0) { break; }
        if ((PlayerType(autoD208ADA2_var) != c_playerTypeComputer)) {
            UnitCreate(1, "GodsSurviver", 0, 0, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitCreate(1, "TerranCreator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][1], UnitLastCreated());
            UnitCreate(1, "ZergCreator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][2], UnitLastCreated());
            UnitCreate(1, "ProtossCreator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][3], UnitLastCreated());
            UnitCreate(1, "OtherCreator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][4], UnitLastCreated());
            UnitCreate(1, "TerranEffectCreator01", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "TerranEffectCreator02", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "ZergEffectCreator01", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "ZergEffectCreator02", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "ProtossEffectCreator01", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "ProtossEffectCreator02", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][5], UnitLastCreated());
            UnitCreate(1, "DEITYUpgradeCreator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][6], UnitLastCreated());
            UnitCreate(1, "Custom001Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom002Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom003Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom004Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom005Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom006Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom007Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
            UnitCreate(1, "Custom008Creator", 0, autoD208ADA2_var, Point(0.0, 0.0), 270.0);
            AISetUnitScriptControlled(UnitLastCreated(), false);
            UnitGroupAdd(lib22142002_gv_init_DEITYEssentials[autoD208ADA2_var], UnitLastCreated());
            UnitGroupAdd(lib22142002_gv_init_DEITYToolsControls[autoD208ADA2_var][7], UnitLastCreated());
        }

    }
    TriggerExecute(lib22142002_gt_Init_ApproveDEITYPlayers, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Init_InitiateDEITY_Init () {
    lib22142002_gt_Init_InitiateDEITY = TriggerCreate("lib22142002_gt_Init_InitiateDEITY_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init_Approve DEITY Players
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Init_ApproveDEITYPlayers_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_dEITYTools;

    // Automatic Variable Declarations
    playergroup autoFC961FE6_g;
    int autoFC961FE6_var;
    playergroup autoA8E131F4_g;
    int autoA8E131F4_var;

    // Variable Initialization
    lv_dEITYTools = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_dEITY_DependencyMode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoFC961FE6_g = PlayerGroupActive();
    autoFC961FE6_var = -1;
    while (true) {
        autoFC961FE6_var = PlayerGroupNextPlayer(autoFC961FE6_g, autoFC961FE6_var);
        if (autoFC961FE6_var < 0) { break; }
        if (((GameAttributePlayerValue("[bnet:local/0.0/280012]1", autoFC961FE6_var) == "0002") || (PlayerGroupCount(PlayerGroupActive()) == 1))) {
            lib22142002_gv_dEITY_GodMode[autoFC961FE6_var] = "DEITY";
            lib22142002_gv_dEITY_GodSight[autoFC961FE6_var] = "Full";
        }

    }
    autoA8E131F4_g = PlayerGroupActive();
    autoA8E131F4_var = -1;
    while (true) {
        autoA8E131F4_var = PlayerGroupNextPlayer(autoA8E131F4_g, autoA8E131F4_var);
        if (autoA8E131F4_var < 0) { break; }
        if (((GameAttributePlayerValue("[bnet:local/0.0/280012]1", autoA8E131F4_var) == "0002") || (PlayerGroupCount(PlayerGroupActive()) == 1))) {
            lib22142002_gf_Init_DeityForce("DEITY", autoA8E131F4_var);
        }

    }
    Wait(3.0, c_timeGame);
    TriggerExecute(lib22142002_gt_DM_ControlGroups, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Init_ApproveDEITYPlayers_Init () {
    lib22142002_gt_Init_ApproveDEITYPlayers = TriggerCreate("lib22142002_gt_Init_ApproveDEITYPlayers_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CMV_Setup
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CMV_Setup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_baseScale;
    fixed lv_baseMapSize;
    fixed lv_mapScale;

    // Automatic Variable Declarations
    const int autoA55B18C6_ae = 14;
    int autoA55B18C6_var;

    // Variable Initialization
    lv_baseScale = 0.35;
    lv_baseMapSize = 108.0;
    lv_mapScale = 0.5;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_mapScale = (lv_baseMapSize / MaxF(libNtve_gf_WidthOfRegion(RegionPlayableMap()), libNtve_gf_HeightOfRegion(RegionPlayableMap())));
    lv_mapScale = (lv_mapScale * lv_baseScale);
    autoA55B18C6_var = 1;
    for ( ; autoA55B18C6_var <= autoA55B18C6_ae; autoA55B18C6_var += 1 ) {
        if ((PlayerStatus(autoA55B18C6_var) == c_playerStatusActive)) {
            libNtve_gf_CreatePingFacingAngle(PlayerGroupSingle(autoA55B18C6_var), "PingViewArea", CameraGetTarget(autoA55B18C6_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoA55B18C6_var, false)), 0.0, 270.0);
            PingSetScale(PingLastCreated(), lv_mapScale);
            PingSetPlayerGroup(PingLastCreated(), lib22142002_gv_dEITYGroup);
            lib22142002_gv_cMV_Ping[autoA55B18C6_var] = PingLastCreated();
        }

    }
    if ((PlayerGroupCount(lib22142002_gv_dEITYGroup) > 0)) {
        TriggerEnable(lib22142002_gt_CMV_Update, true);
        TriggerEnable(lib22142002_gt_CMV_Destroy, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CMV_Setup_Init () {
    lib22142002_gt_CMV_Setup = TriggerCreate("lib22142002_gt_CMV_Setup_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_CMV_Setup, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CMV_Update
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CMV_Update_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((GameGetMissionTime() > 4.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingSetPosition(lib22142002_gv_cMV_Ping[EventPlayer()], CameraGetTarget(EventPlayer()));
    PingSetPlayerGroup(lib22142002_gv_cMV_Ping[EventPlayer()], lib22142002_gv_dEITYGroup);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CMV_Update_Init () {
    lib22142002_gt_CMV_Update = TriggerCreate("lib22142002_gt_CMV_Update_Func");
    TriggerEnable(lib22142002_gt_CMV_Update, false);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 1, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 2, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 3, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 4, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 5, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 6, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 7, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 8, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 9, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 10, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 11, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 12, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 13, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(lib22142002_gt_CMV_Update, 14, c_cameraMoveReasonAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CMV_Destroy
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CMV_Destroy_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_cMV_Player;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_cMV_Player = EventPlayer();

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(5.0, c_timeGame);
    if ((PlayerStatus(lv_cMV_Player) != c_playerStatusActive)) {
        PingSetPlayerGroup(lib22142002_gv_cMV_Ping[lv_cMV_Player], PlayerGroupSingle(lv_cMV_Player));
        PingDestroy(lib22142002_gv_cMV_Ping[lv_cMV_Player]);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CMV_Destroy_Init () {
    lib22142002_gt_CMV_Destroy = TriggerCreate("lib22142002_gt_CMV_Destroy_Func");
    TriggerEnable(lib22142002_gt_CMV_Destroy, false);
    TriggerAddEventPlayerLeft(lib22142002_gt_CMV_Destroy, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Setup
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Setup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2A3970F4_ae = 15;
    int auto2A3970F4_var;
    const int auto65FBF490_ae = 15;
    int auto65FBF490_var;
    const int auto4993CDFB_ae = 15;
    int auto4993CDFB_var;
    const int auto5C0DD9CB_ae = 15;
    int auto5C0DD9CB_var;
    const int auto367CF1F4_ae = 15;
    int auto367CF1F4_var;
    const int autoC4EB945F_ae = 15;
    int autoC4EB945F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(140, 50, c_anchorTopRight, 573, 25, true);
    lib22142002_gv_mRB_D_Minerals = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 50, c_anchorLeft, 0, 20, StringExternal("Param/Value/lib_22142002_67CFFFF5"), ColorWithAlpha(0,0,0,0), false, 2.0);
    auto2A3970F4_var = 0;
    for ( ; auto2A3970F4_var <= auto2A3970F4_ae; auto2A3970F4_var += 1 ) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 90, 50, c_anchorLeft, 40, 27, StringExternal("Param/Value/lib_22142002_248F57ED"), ColorWithAlpha(0,0,0,0), false, 0.0);
        lib22142002_gv_mRB_DI_Minerals[auto2A3970F4_var] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);

    DialogCreate(140, 50, c_anchorTopRight, 437, 25, true);
    lib22142002_gv_mRB_D_Vespene = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 50, c_anchorLeft, 0, 20, StringExternal("Param/Value/lib_22142002_9488CEB7"), ColorWithAlpha(0,0,0,0), false, 2.0);
    auto65FBF490_var = 0;
    for ( ; auto65FBF490_var <= auto65FBF490_ae; auto65FBF490_var += 1 ) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 90, 50, c_anchorLeft, 41, 27, StringExternal("Param/Value/lib_22142002_2D9652A6"), ColorWithAlpha(0,0,0,0), false, 0.0);
        lib22142002_gv_mRB_DI_Vespene[auto65FBF490_var] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);

    DialogCreate(140, 50, c_anchorTopRight, 300, 25, true);
    lib22142002_gv_mRB_D_Biomass = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 50, c_anchorLeft, 0, 20, StringExternal("Param/Value/lib_22142002_EB80E602"), ColorWithAlpha(0,0,0,0), false, 2.0);
    auto4993CDFB_var = 0;
    for ( ; auto4993CDFB_var <= auto4993CDFB_ae; auto4993CDFB_var += 1 ) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 90, 50, c_anchorLeft, 41, 27, StringExternal("Param/Value/lib_22142002_51C98420"), ColorWithAlpha(0,0,0,0), false, 0.0);
        lib22142002_gv_mRB_DI_Biomass[auto4993CDFB_var] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);

    DialogCreate(140, 50, c_anchorTopRight, 162, 25, true);
    lib22142002_gv_mRB_D_Artifacts = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 50, c_anchorLeft, 0, 20, StringExternal("Param/Value/lib_22142002_DEA2E9F7"), ColorWithAlpha(0,0,0,0), false, 2.0);
    auto5C0DD9CB_var = 0;
    for ( ; auto5C0DD9CB_var <= auto5C0DD9CB_ae; auto5C0DD9CB_var += 1 ) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 90, 50, c_anchorLeft, 40, 27, StringExternal("Param/Value/lib_22142002_8353FA47"), ColorWithAlpha(0,0,0,0), false, 0.0);
        lib22142002_gv_mRB_DI_Artifacts[auto5C0DD9CB_var] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);

    DialogCreate(155, 50, c_anchorTopRight, 11, 25, true);
    lib22142002_gv_mRB_D_Supply = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 50, c_anchorLeft, 0, 20, StringExternal("Param/Value/lib_22142002_406B8946"), ColorWithAlpha(0,0,0,0), false, 2.0);
    auto367CF1F4_var = 0;
    for ( ; auto367CF1F4_var <= auto367CF1F4_ae; auto367CF1F4_var += 1 ) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorLeft, 42, 27, StringExternal("Param/Value/lib_22142002_11056C47"), ColorWithAlpha(0,0,0,0), false, 0.0);
        lib22142002_gv_mRB_DI_Supply[auto367CF1F4_var] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);

    Wait(2.25, c_timeGame);
    autoC4EB945F_var = 0;
    for ( ; autoC4EB945F_var <= autoC4EB945F_ae; autoC4EB945F_var += 1 ) {
        libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[autoC4EB945F_var], (StringExternal("Param/Value/lib_22142002_7DBB2793") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropMinerals))), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[autoC4EB945F_var], (StringExternal("Param/Value/lib_22142002_389715D9") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropVespene))), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[autoC4EB945F_var], (StringExternal("Param/Value/lib_22142002_4468D272") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropTerrazine))), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[autoC4EB945F_var], (StringExternal("Param/Value/lib_22142002_24BF6288") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropCustom))), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[autoC4EB945F_var], (StringExternal("Param/Value/lib_22142002_F0FE8115") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_EC8AC6E2") + IntToText(PlayerGetPropertyInt(autoC4EB945F_var, c_playerPropSuppliesMade))), PlayerGroupAll());
    }

    if ((PlayerGroupCount(lib22142002_gv_dEITYGroup) > 0)) {
        TriggerEnable(lib22142002_gt_MRB_Select, true);
        TriggerEnable(lib22142002_gt_MRB_Deselect, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Setup_Init () {
    lib22142002_gt_MRB_Setup = TriggerCreate("lib22142002_gt_MRB_Setup_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Setup, 3.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Select
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Select_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_SelectedU;

    // Automatic Variable Declarations
    const int auto7ED43CEA_ae = 15;
    int auto7ED43CEA_var;

    // Variable Initialization
    lv_local_SelectedU = UnitGetOwner(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1));

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_mRB_Active[EventPlayer()] = lv_local_SelectedU;
    if ((lib22142002_gv_mRB_Active[EventPlayer()] != EventPlayer())) {
        lib22142002_gf_MRB_UpdateStateTurn(lib22142002_gv_mRB_Active[EventPlayer()], true);
        DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

        DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

        DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

        DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

        DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

    }
    else {
        DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

    }
    auto7ED43CEA_var = 0;
    for ( ; auto7ED43CEA_var <= auto7ED43CEA_ae; auto7ED43CEA_var += 1 ) {
        if ((lib22142002_gv_mRB_Active[EventPlayer()] != auto7ED43CEA_var)) {
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[auto7ED43CEA_var], PlayerGroupSingle(EventPlayer()), false);

            DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[auto7ED43CEA_var], PlayerGroupSingle(EventPlayer()), false);

            DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[auto7ED43CEA_var], PlayerGroupSingle(EventPlayer()), false);

            DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[auto7ED43CEA_var], PlayerGroupSingle(EventPlayer()), false);

            DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[auto7ED43CEA_var], PlayerGroupSingle(EventPlayer()), false);

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Select_Init () {
    lib22142002_gt_MRB_Select = TriggerCreate("lib22142002_gt_MRB_Select_Func");
    TriggerEnable(lib22142002_gt_MRB_Select, false);
    TriggerAddEventUnitSelected(lib22142002_gt_MRB_Select, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Deselect
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Deselect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_SelectedU;

    // Automatic Variable Declarations
    const int autoA12DCF9F_ae = 15;
    int autoA12DCF9F_var;

    // Variable Initialization
    lv_local_SelectedU = UnitGetOwner(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1));

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) == 0)) {
        lib22142002_gv_mRB_Active[EventPlayer()] = c_cmdActionNone;
        lib22142002_gf_MRB_UpdateStateTurn(lib22142002_gv_mRB_Active[EventPlayer()], false);
        DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

    }
    else {
        lib22142002_gv_mRB_Active[EventPlayer()] = lv_local_SelectedU;
        if ((lib22142002_gv_mRB_Active[EventPlayer()] != EventPlayer())) {
            lib22142002_gf_MRB_UpdateStateTurn(lib22142002_gv_mRB_Active[EventPlayer()], true);
            DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

            DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), true);

        }
        else {
            DialogSetVisible(lib22142002_gv_mRB_D_Minerals, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Vespene, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Biomass, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Artifacts, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

            DialogSetVisible(lib22142002_gv_mRB_D_Supply, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[lib22142002_gv_mRB_Active[EventPlayer()]], PlayerGroupSingle(EventPlayer()), false);

        }
        autoA12DCF9F_var = 0;
        for ( ; autoA12DCF9F_var <= autoA12DCF9F_ae; autoA12DCF9F_var += 1 ) {
            if ((lib22142002_gv_mRB_Active[EventPlayer()] != autoA12DCF9F_var)) {
                DialogControlSetVisible(lib22142002_gv_mRB_DI_Minerals[autoA12DCF9F_var], PlayerGroupSingle(EventPlayer()), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Vespene[autoA12DCF9F_var], PlayerGroupSingle(EventPlayer()), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Biomass[autoA12DCF9F_var], PlayerGroupSingle(EventPlayer()), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Artifacts[autoA12DCF9F_var], PlayerGroupSingle(EventPlayer()), false);

                DialogControlSetVisible(lib22142002_gv_mRB_DI_Supply[autoA12DCF9F_var], PlayerGroupSingle(EventPlayer()), false);

            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Deselect_Init () {
    lib22142002_gt_MRB_Deselect = TriggerCreate("lib22142002_gt_MRB_Deselect_Func");
    TriggerEnable(lib22142002_gt_MRB_Deselect, false);
    TriggerAddEventUnitSelected(lib22142002_gt_MRB_Deselect, null, c_playerAny, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P0
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P0_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_532464CE") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_A38E8DC4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_DE06F05D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_2034992F") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_483166E2") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_C29480F6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P0_Init () {
    lib22142002_gt_MRB_Update_P0 = TriggerCreate("lib22142002_gt_MRB_Update_P0_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P0, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P0, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P0, 0, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P1
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_D43D18F1") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_C7B5D945") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_6929C3A4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_4B59FC66") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_7F951525") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_A07C999E") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P1_Init () {
    lib22142002_gt_MRB_Update_P1 = TriggerCreate("lib22142002_gt_MRB_Update_P1_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P1, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P1, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P1, 1, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P2
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 2;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_0FC43F92") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_CB1E8B38") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_EDC502EB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_A255AE22") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_8D88B4CF") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_A088D812") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P2_Init () {
    lib22142002_gt_MRB_Update_P2 = TriggerCreate("lib22142002_gt_MRB_Update_P2_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P2, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P2, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P2, 2, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P3
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 3;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_4E4C0C42") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_C8F88BC3") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_34DC7ECC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_91CAF9FD") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B2EFD132") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_FD1000D5") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P3_Init () {
    lib22142002_gt_MRB_Update_P3 = TriggerCreate("lib22142002_gt_MRB_Update_P3_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P3, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P3, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P3, 3, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P4
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 4;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_7A2968AE") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_65984CFB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_25B48716") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_BA2E8003") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_348EB39D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_2B2299B9") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P4_Init () {
    lib22142002_gt_MRB_Update_P4 = TriggerCreate("lib22142002_gt_MRB_Update_P4_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P4, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P4, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P4, 4, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P5
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 5;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_D174EAFB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_1A4FC1B6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_137937EF") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_07D97C4B") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_866D162D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_9DBB57CC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P5_Init () {
    lib22142002_gt_MRB_Update_P5 = TriggerCreate("lib22142002_gt_MRB_Update_P5_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P5, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P5, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P5, 5, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P6
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 6;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_1376B2BC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_41559E24") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_AB287FDC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_8EA0ADF4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_46EABD83") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_7ABDB7B2") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P6_Init () {
    lib22142002_gt_MRB_Update_P6 = TriggerCreate("lib22142002_gt_MRB_Update_P6_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P6, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P6, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P6, 6, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P7
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 7;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_0C11CD64") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_7626D3C5") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B9696F89") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_397AB913") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_7A42CD2C") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_AD995232") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P7_Init () {
    lib22142002_gt_MRB_Update_P7 = TriggerCreate("lib22142002_gt_MRB_Update_P7_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P7, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P7, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P7, 7, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P8
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P8_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 8;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_40489229") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_6849EFBB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B45681BF") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_C5500E89") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_E3B6F905") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_993DCDEC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P8_Init () {
    lib22142002_gt_MRB_Update_P8 = TriggerCreate("lib22142002_gt_MRB_Update_P8_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P8, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P8, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P8, 8, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P9
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P9_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 9;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_DBD54CE6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_969A64E4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_74F3ED45") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_0FFD18A6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_6C0B2451") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_32E20293") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P9_Init () {
    lib22142002_gt_MRB_Update_P9 = TriggerCreate("lib22142002_gt_MRB_Update_P9_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P9, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P9, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P9, 9, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P10
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P10_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 10;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_73AFA72D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B8A41AFC") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_4E0837A5") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_0AB7705E") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_1D5E410B") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_F16A70CB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P10_Init () {
    lib22142002_gt_MRB_Update_P10 = TriggerCreate("lib22142002_gt_MRB_Update_P10_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P10, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P10, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P10, 10, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P11
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P11_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 11;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_DFD70247") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_E9A9F2D9") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_66EEB0A4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_83E8D974") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_D63E7554") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_FC9F1A97") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P11_Init () {
    lib22142002_gt_MRB_Update_P11 = TriggerCreate("lib22142002_gt_MRB_Update_P11_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P11, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P11, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P11, 11, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P12
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P12_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 12;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_8C79A4A7") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_24F43C22") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_281B9154") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B942E0A6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B973C40D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_38F79584") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P12_Init () {
    lib22142002_gt_MRB_Update_P12 = TriggerCreate("lib22142002_gt_MRB_Update_P12_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P12, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P12, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P12, 12, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P13
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P13_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 13;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_9C0F613F") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_6C82CD30") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_162F873A") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_E5EBAC4D") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_171EBED4") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_AE21774F") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P13_Init () {
    lib22142002_gt_MRB_Update_P13 = TriggerCreate("lib22142002_gt_MRB_Update_P13_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P13, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P13, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P13, 13, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P14
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P14_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 14;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_12A28ED3") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_156D3A56") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_6A04AB55") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_DDA7BE19") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_EDEC7BD7") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_FD3B0FB6") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P14_Init () {
    lib22142002_gt_MRB_Update_P14 = TriggerCreate("lib22142002_gt_MRB_Update_P14_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P14, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P14, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P14, 14, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MRB_Update_P15
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_MRB_Update_P15_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_thePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_thePlayer = 15;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Minerals[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_8F2BDB0B") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropMinerals))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Vespene[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_9E9CCBEB") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropVespene))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Biomass[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_72D38B35") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropTerrazine))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Artifacts[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_05DEC979") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropCustom))), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib22142002_gv_mRB_DI_Supply[lv_thePlayer], (StringExternal("Param/Value/lib_22142002_B4A9B7A2") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesUsed)) + StringExternal("Param/Value/lib_22142002_2492F722") + IntToText(PlayerGetPropertyInt(lv_thePlayer, c_playerPropSuppliesMade))), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_MRB_Update_P15_Init () {
    lib22142002_gt_MRB_Update_P15 = TriggerCreate("lib22142002_gt_MRB_Update_P15_Func");
    TriggerEnable(lib22142002_gt_MRB_Update_P15, false);
    TriggerAddEventTimeElapsed(lib22142002_gt_MRB_Update_P15, 2.0, c_timeGame);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropTerrazine);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropSuppliesUsed);
    TriggerAddEventPlayerPropChange(lib22142002_gt_MRB_Update_P15, 15, c_playerPropSuppliesMade);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Commands_Enabler
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Commands_Enabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_dEITY_DependencyMode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_DEITY_CreateTipsCommands, true);
    Wait(0.25, c_timeGame);
    TriggerExecute(lib22142002_gt_DEITY_CreateTipsCommands, true, false);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_NumberChangeOwner, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_FullLifei, true);
    TriggerEnable(lib22142002_gt_C_KC_LifeRegenCtrli, true);
    TriggerEnable(lib22142002_gt_C_KC_LifeRegenShfti, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxLifeAltCtrli, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxLifeAltShfti, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_FullShieldo, true);
    TriggerEnable(lib22142002_gt_C_KC_ShieldRegenCtrlo, true);
    TriggerEnable(lib22142002_gt_C_KC_ShieldRegenShfto, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxShieldAltCtrlo, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxShieldAltShfto, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_FullEnergyp, true);
    TriggerEnable(lib22142002_gt_C_KC_EnergyRegenCtrlp, true);
    TriggerEnable(lib22142002_gt_C_KC_EnergyRegenShftp, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxEnergyAltCtrlp, true);
    TriggerEnable(lib22142002_gt_C_KC_MaxEnergyAltShftp, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_OffCooldownu, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk, true);
    TriggerEnable(lib22142002_gt_C_KC_SupplyUseONShftk, true);
    TriggerEnable(lib22142002_gt_C_KC_ActorSizeCtrlj, true);
    TriggerEnable(lib22142002_gt_C_KC_ActorSizeShftj, true);
    TriggerEnable(lib22142002_gt_C_KC_Cloak, true);
    TriggerEnable(lib22142002_gt_C_KC_DeCloakCtrl, true);
    TriggerEnable(lib22142002_gt_C_KC_DetectionON, true);
    TriggerEnable(lib22142002_gt_C_KC_DetectionOFFCtrl, true);
    TriggerEnable(lib22142002_gt_C_KC_DuplicateGametime, true);
    TriggerEnable(lib22142002_gt_C_KC_ChronoboostCtrl, true);
    TriggerEnable(lib22142002_gt_C_KC_SuperChronoboostCtrlShft, true);
    TriggerEnable(lib22142002_gt_C_KC_TerrazineShadowAltCtrl, true);
    TriggerEnable(lib22142002_gt_C_KC_FreezeGametime, true);
    TriggerEnable(lib22142002_gt_C_KC_UnfreezeCtrl, true);
    TriggerEnable(lib22142002_gt_C_KC_ShareVisionHome, true);
    TriggerEnable(lib22142002_gt_C_KC_UnshareVisionEnd, true);
    TriggerEnable(lib22142002_gt_C_KC_DeleteDel, true);
    TriggerEnable(lib22142002_gt_C_KC_DeleteHalfAltDel, true);
    TriggerEnable(lib22142002_gt_C_KC_InstaTeleportCtrlt, true);
    TriggerEnable(lib22142002_gt_C_KC_InstaTeleportCtrlt, true);
    TriggerEnable(lib22142002_gt_C_KC_Ally0ShftPageDown, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll, true);
    TriggerEnable(lib22142002_gt_C_SC_TimeWIP, true);
    TriggerEnable(lib22142002_gt_C_SCW_AutomaticDays, true);
    TriggerEnable(lib22142002_gt_C_SCW_Daytime, true);
    TriggerEnable(lib22142002_gt_C_SCW_Nighttime, true);
    TriggerEnable(lib22142002_gt_C_SC_WeatherWIP, true);
    TriggerEnable(lib22142002_gt_C_SCW_SunburnONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_HyperSunburnONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_ColdnightONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_HypercoldnightONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_HazardoussunONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_DarknightONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_DarkwindONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_DarkfogONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_CorruptedDayONOFF, true);
    TriggerEnable(lib22142002_gt_C_SCW_CorruptedNightONOFF, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_WIP, true);
    TriggerEnable(lib22142002_gt_RCZ, true);
    TriggerEnable(lib22142002_gt_UntitledTrigger001, true);
    Wait(0.25, c_timeGame);
    TriggerEnable(lib22142002_gt_DEITYMaintance, true);
    TriggerEnable(lib22142002_gt_DM_ControlGroups, true);
    TriggerEnable(lib22142002_gt_DM_StatusApply, true);
    TriggerEnable(lib22142002_gt_DM_VisionApply, true);
    Wait(0.5, c_timeGame);
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    TriggerEnable(lib22142002_gt_CPTT_Created, true);
    TriggerEnable(lib22142002_gt_CPTT_OwnerChanged, true);
    TriggerEnable(lib22142002_gt_CPTT_Revived, true);
    TriggerEnable(lib22142002_gt_CPTT_Trained, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Commands_Enabler_Init () {
    lib22142002_gt_Commands_Enabler = TriggerCreate("lib22142002_gt_Commands_Enabler_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_Commands_Enabler, 2.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEITY_CreateTips(Commands)
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DEITY_CreateTipsCommands_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto859367A7_g;
    int auto859367A7_var;

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_dEITY_DependencyMode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto859367A7_g = PlayerGroupActive();
    auto859367A7_var = -1;
    while (true) {
        auto859367A7_var = PlayerGroupNextPlayer(auto859367A7_g, auto859367A7_var);
        if (auto859367A7_var < 0) { break; }
        if ((PlayerType(auto859367A7_var) == c_playerTypeUser)) {
            if (((lib22142002_gv_playerNameOneWord[auto859367A7_var] == "LocalPlayer") || (PlayerHandle(auto859367A7_var) == "1-S2-1-5869499") || (PlayerHandle(auto859367A7_var) == "2-S2-1-4948558") || (PlayerHandle(auto859367A7_var) == "1-S2-1-11135730") || (PlayerHandle(auto859367A7_var) == "2-S2-1-6271763"))) {
                HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_D6582BAC"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_C9F09F22"), StringExternal("Param/Value/lib_22142002_42711A86"), "Assets\\Textures\\aicommand_claim1.dds");
            }

        }

    }
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_37276A69"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_DBC83AE3"), StringExternal("Param/Value/lib_22142002_1F41F709"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_F8DE7A11"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_6F873E5C"), StringExternal("Param/Value/lib_22142002_91CF9DB2"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_BA8AB13E"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_91AAE552"), StringExternal("Param/Value/lib_22142002_DF957B5F"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_45F9AD6E"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_008EF41B"), StringExternal("Param/Value/lib_22142002_7F3535D0"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_297E9915"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_2607F291"), StringExternal("Param/Value/lib_22142002_C22F1DD4"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_B517A221"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_DED7C6F5"), StringExternal("Param/Value/lib_22142002_82C564E5"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_96357CF7"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_227909EE"), StringExternal("Param/Value/lib_22142002_12B84C1A"), "Assets\\Textures\\aicommand_claim1.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_F84428C7"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_7409E292"), StringExternal("Param/Value/lib_22142002_C51AA4C1"), "Assets\\Textures\\aicommand_claim1.dds");
    TipAlertPanelClear(PlayerGroupAll());
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_22142002_F69DA2DA"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_22142002_3DE1C532"), StringExternal("Param/Value/lib_22142002_FFA0B507"), "Assets\\Textures\\aicommand_claim1.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DEITY_CreateTipsCommands_Init () {
    lib22142002_gt_DEITY_CreateTipsCommands = TriggerCreate("lib22142002_gt_DEITY_CreateTipsCommands_Func");
    TriggerEnable(lib22142002_gt_DEITY_CreateTipsCommands, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CPTT_Created
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CPTT_Created_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_c_SC_PlayerTextBool[UnitGetOwner(EventUnitCreatedUnit())] == true)) {
        UnitSetInfoText2(EventUnitCreatedUnit(), lib22142002_gv_c_SC_PlayerText[UnitGetOwner(EventUnitCreatedUnit())]);
    }

    if ((lib22142002_gv_c_SC_PlayerTipBool[UnitGetOwner(EventUnitCreatedUnit())] == true)) {
        UnitSetInfoTip(EventUnitCreatedUnit(), lib22142002_gv_c_SC_PlayerTip[UnitGetOwner(EventUnitCreatedUnit())]);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CPTT_Created_Init () {
    lib22142002_gt_CPTT_Created = TriggerCreate("lib22142002_gt_CPTT_Created_Func");
    TriggerEnable(lib22142002_gt_CPTT_Created, false);
    TriggerAddEventUnitCreated(lib22142002_gt_CPTT_Created, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CPTT_Trained
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CPTT_Trained_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_c_SC_PlayerTextBool[UnitGetOwner(EventUnitProgressUnit())] == true)) {
        UnitSetInfoText2(EventUnitProgressUnit(), lib22142002_gv_c_SC_PlayerText[UnitGetOwner(EventUnitProgressUnit())]);
    }

    if ((lib22142002_gv_c_SC_PlayerTipBool[UnitGetOwner(EventUnitProgressUnit())] == true)) {
        UnitSetInfoTip(EventUnitProgressUnit(), lib22142002_gv_c_SC_PlayerTip[UnitGetOwner(EventUnitProgressUnit())]);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CPTT_Trained_Init () {
    lib22142002_gt_CPTT_Trained = TriggerCreate("lib22142002_gt_CPTT_Trained_Func");
    TriggerEnable(lib22142002_gt_CPTT_Trained, false);
    TriggerAddEventUnitTrainProgress(lib22142002_gt_CPTT_Trained, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CPTT_Revived
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CPTT_Revived_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_c_SC_PlayerTextBool[UnitGetOwner(EventUnit())] == true)) {
        UnitSetInfoText2(EventUnit(), lib22142002_gv_c_SC_PlayerText[UnitGetOwner(EventUnit())]);
    }

    if ((lib22142002_gv_c_SC_PlayerTipBool[UnitGetOwner(EventUnit())] == true)) {
        UnitSetInfoTip(EventUnit(), lib22142002_gv_c_SC_PlayerTip[UnitGetOwner(EventUnit())]);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CPTT_Revived_Init () {
    lib22142002_gt_CPTT_Revived = TriggerCreate("lib22142002_gt_CPTT_Revived_Func");
    TriggerEnable(lib22142002_gt_CPTT_Revived, false);
    TriggerAddEventUnitRevive(lib22142002_gt_CPTT_Revived, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CPTT_Owner Changed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CPTT_OwnerChanged_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.01, c_timeGame);
    if ((lib22142002_gv_c_SC_PlayerTextBool[EventUnitOwnerNew()] == true)) {
        UnitSetInfoText2(EventUnit(), lib22142002_gv_c_SC_PlayerText[EventUnitOwnerNew()]);
    }
    else {
        UnitSetInfoText2(EventUnit(), StringToText(""));
        UnitClearInfoText(EventUnit());
    }
    if ((lib22142002_gv_c_SC_PlayerTipBool[EventUnitOwnerNew()] == true)) {
        UnitSetInfoTip(EventUnit(), lib22142002_gv_c_SC_PlayerTip[EventUnitOwnerNew()]);
    }
    else {
        UnitSetInfoTip(EventUnit(), StringToText(""));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CPTT_OwnerChanged_Init () {
    lib22142002_gt_CPTT_OwnerChanged = TriggerCreate("lib22142002_gt_CPTT_OwnerChanged_Func");
    TriggerEnable(lib22142002_gt_CPTT_OwnerChanged, false);
    TriggerAddEventUnitChangeOwner(lib22142002_gt_CPTT_OwnerChanged, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Number/ChangeOwner
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_NumberChangeOwner_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventKeyAlt() == false)) {
        lib22142002_gf_C_ChangeOwnerCommand(lib22142002_gf_C_KC_OwnerChange_ReturnNumber(EventKeyPressed(), EventPlayer(), EventKeyControl()), EventPlayer(), true);
    }
    else {
        lib22142002_gf_C_ChangeOwnerCommand(lib22142002_gf_C_KC_OwnerChange_ReturnNumber(EventKeyPressed(), EventPlayer(), EventKeyControl()), EventPlayer(), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_NumberChangeOwner_Init () {
    lib22142002_gt_C_KC_NumberChangeOwner = TriggerCreate("lib22142002_gt_C_KC_NumberChangeOwner_Func");
    TriggerEnable(lib22142002_gt_C_KC_NumberChangeOwner, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad0, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad1, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad2, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad3, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad4, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad5, true, c_keyModifierStateExclude, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad6, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad7, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad8, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_NumberChangeOwner, c_playerAny, c_keyNumPad9, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Full Life [i]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_FullLifei_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto99C16B9E_g;
    int auto99C16B9E_u;
    unit auto99C16B9E_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CE8E38EA")));
    auto99C16B9E_g = UnitGroupSelected(EventPlayer());
    auto99C16B9E_u = UnitGroupCount(auto99C16B9E_g, c_unitCountAll);
    for (;; auto99C16B9E_u -= 1) {
        auto99C16B9E_var = UnitGroupUnitFromEnd(auto99C16B9E_g, auto99C16B9E_u);
        if (auto99C16B9E_var == null) { break; }
        if ((UnitHasBehavior2(auto99C16B9E_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto99C16B9E_var, c_unitPropLifePercent, 100.0);
            UnitFlashSelection(auto99C16B9E_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4D93725D")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_FullLifei_Init () {
    lib22142002_gt_C_KC_FullLifei = TriggerCreate("lib22142002_gt_C_KC_FullLifei_Func");
    TriggerEnable(lib22142002_gt_C_KC_FullLifei, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_FullLifei, c_playerAny, c_keyI, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Life Regen+ [Ctrl+i]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_LifeRegenCtrli_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto813741C9_g;
    int auto813741C9_u;
    unit auto813741C9_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto813741C9_g = UnitGroupSelected(EventPlayer());
    auto813741C9_u = UnitGroupCount(auto813741C9_g, c_unitCountAll);
    for (;; auto813741C9_u -= 1) {
        auto813741C9_var = UnitGroupUnitFromEnd(auto813741C9_g, auto813741C9_u);
        if (auto813741C9_var == null) { break; }
        if ((UnitHasBehavior2(auto813741C9_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(auto813741C9_var, c_unitPropLifeRegen, c_unitPropCurrent) >= -0.5) && (UnitGetPropertyFixed(auto813741C9_var, c_unitPropLifeRegen, c_unitPropCurrent) < 0.0)) {
                UnitSetPropertyFixed(auto813741C9_var, c_unitPropLifeRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(auto813741C9_var, c_unitPropLifeRegen, (UnitGetPropertyFixed(auto813741C9_var, c_unitPropLifeRegen, c_unitPropCurrent) + 0.5));
            }
            UnitFlashSelection(auto813741C9_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = auto813741C9_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_32F41AA2")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_2A7CF6D9") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropLifeRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_6F83045B"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_LifeRegenCtrli_Init () {
    lib22142002_gt_C_KC_LifeRegenCtrli = TriggerCreate("lib22142002_gt_C_KC_LifeRegenCtrli_Func");
    TriggerEnable(lib22142002_gt_C_KC_LifeRegenCtrli, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_LifeRegenCtrli, c_playerAny, c_keyI, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Life Regen- [Shft+i]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_LifeRegenShfti_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto21B6D654_g;
    int auto21B6D654_u;
    unit auto21B6D654_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto21B6D654_g = UnitGroupSelected(EventPlayer());
    auto21B6D654_u = UnitGroupCount(auto21B6D654_g, c_unitCountAll);
    for (;; auto21B6D654_u -= 1) {
        auto21B6D654_var = UnitGroupUnitFromEnd(auto21B6D654_g, auto21B6D654_u);
        if (auto21B6D654_var == null) { break; }
        if ((UnitHasBehavior2(auto21B6D654_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(auto21B6D654_var, c_unitPropLifeRegen, c_unitPropCurrent) <= 0.5) && (UnitGetPropertyFixed(auto21B6D654_var, c_unitPropLifeRegen, c_unitPropCurrent) > 0.0)) {
                UnitSetPropertyFixed(auto21B6D654_var, c_unitPropLifeRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(auto21B6D654_var, c_unitPropLifeRegen, (UnitGetPropertyFixed(auto21B6D654_var, c_unitPropLifeRegen, c_unitPropCurrent) - 0.5));
            }
            UnitFlashSelection(auto21B6D654_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = auto21B6D654_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2BA2C4A6")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_A4B17986") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropLifeRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_471EAF75"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_LifeRegenShfti_Init () {
    lib22142002_gt_C_KC_LifeRegenShfti = TriggerCreate("lib22142002_gt_C_KC_LifeRegenShfti_Func");
    TriggerEnable(lib22142002_gt_C_KC_LifeRegenShfti, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_LifeRegenShfti, c_playerAny, c_keyI, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Life+ [Alt+Ctrl+i]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxLifeAltCtrli_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto07F8D50D_g;
    int auto07F8D50D_u;
    unit auto07F8D50D_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CE672162")));
    auto07F8D50D_g = UnitGroupSelected(EventPlayer());
    auto07F8D50D_u = UnitGroupCount(auto07F8D50D_g, c_unitCountAll);
    for (;; auto07F8D50D_u -= 1) {
        auto07F8D50D_var = UnitGroupUnitFromEnd(auto07F8D50D_g, auto07F8D50D_u);
        if (auto07F8D50D_var == null) { break; }
        if ((UnitHasBehavior2(auto07F8D50D_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto07F8D50D_var, c_unitPropLifeMax, (UnitGetPropertyFixed(auto07F8D50D_var, c_unitPropLifeMax, c_unitPropCurrent) + 10.0));
            UnitFlashSelection(auto07F8D50D_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E7A9B14F")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxLifeAltCtrli_Init () {
    lib22142002_gt_C_KC_MaxLifeAltCtrli = TriggerCreate("lib22142002_gt_C_KC_MaxLifeAltCtrli_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxLifeAltCtrli, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxLifeAltCtrli, c_playerAny, c_keyI, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Life- [Alt+Shft+i]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxLifeAltShfti_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDF7F1E6A_g;
    int autoDF7F1E6A_u;
    unit autoDF7F1E6A_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_00011028")));
    autoDF7F1E6A_g = UnitGroupSelected(EventPlayer());
    autoDF7F1E6A_u = UnitGroupCount(autoDF7F1E6A_g, c_unitCountAll);
    for (;; autoDF7F1E6A_u -= 1) {
        autoDF7F1E6A_var = UnitGroupUnitFromEnd(autoDF7F1E6A_g, autoDF7F1E6A_u);
        if (autoDF7F1E6A_var == null) { break; }
        if ((UnitHasBehavior2(autoDF7F1E6A_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(autoDF7F1E6A_var, c_unitPropLifeMax, (UnitGetPropertyFixed(autoDF7F1E6A_var, c_unitPropLifeMax, c_unitPropCurrent) - 10.0));
            UnitFlashSelection(autoDF7F1E6A_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_B3856C42")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxLifeAltShfti_Init () {
    lib22142002_gt_C_KC_MaxLifeAltShfti = TriggerCreate("lib22142002_gt_C_KC_MaxLifeAltShfti_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxLifeAltShfti, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxLifeAltShfti, c_playerAny, c_keyI, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Full Shield [o]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_FullShieldo_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoD322A8F9_g;
    int autoD322A8F9_u;
    unit autoD322A8F9_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_110DBCBE")));
    autoD322A8F9_g = UnitGroupSelected(EventPlayer());
    autoD322A8F9_u = UnitGroupCount(autoD322A8F9_g, c_unitCountAll);
    for (;; autoD322A8F9_u -= 1) {
        autoD322A8F9_var = UnitGroupUnitFromEnd(autoD322A8F9_g, autoD322A8F9_u);
        if (autoD322A8F9_var == null) { break; }
        if ((UnitHasBehavior2(autoD322A8F9_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(autoD322A8F9_var, c_unitPropShieldsPercent, 100.0);
            UnitFlashSelection(autoD322A8F9_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_EBF48470")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_FullShieldo_Init () {
    lib22142002_gt_C_KC_FullShieldo = TriggerCreate("lib22142002_gt_C_KC_FullShieldo_Func");
    TriggerEnable(lib22142002_gt_C_KC_FullShieldo, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_FullShieldo, c_playerAny, c_keyO, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Shield Regen+ [Ctrl+o]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ShieldRegenCtrlo_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup autoF4DD65F9_g;
    int autoF4DD65F9_u;
    unit autoF4DD65F9_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoF4DD65F9_g = UnitGroupSelected(EventPlayer());
    autoF4DD65F9_u = UnitGroupCount(autoF4DD65F9_g, c_unitCountAll);
    for (;; autoF4DD65F9_u -= 1) {
        autoF4DD65F9_var = UnitGroupUnitFromEnd(autoF4DD65F9_g, autoF4DD65F9_u);
        if (autoF4DD65F9_var == null) { break; }
        if ((UnitHasBehavior2(autoF4DD65F9_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(autoF4DD65F9_var, c_unitPropShieldsRegen, c_unitPropCurrent) >= -0.5) && (UnitGetPropertyFixed(autoF4DD65F9_var, c_unitPropShieldsRegen, c_unitPropCurrent) < 0.0)) {
                UnitSetPropertyFixed(autoF4DD65F9_var, c_unitPropShieldsRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(autoF4DD65F9_var, c_unitPropShieldsRegen, (UnitGetPropertyFixed(autoF4DD65F9_var, c_unitPropShieldsRegen, c_unitPropCurrent) + 0.5));
            }
            UnitFlashSelection(autoF4DD65F9_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = autoF4DD65F9_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2A0373AB")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_209FFAF5") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropShieldsRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_27AD7393"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ShieldRegenCtrlo_Init () {
    lib22142002_gt_C_KC_ShieldRegenCtrlo = TriggerCreate("lib22142002_gt_C_KC_ShieldRegenCtrlo_Func");
    TriggerEnable(lib22142002_gt_C_KC_ShieldRegenCtrlo, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ShieldRegenCtrlo, c_playerAny, c_keyO, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Shield Regen- [Shft+o]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ShieldRegenShfto_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup autoABC21130_g;
    int autoABC21130_u;
    unit autoABC21130_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoABC21130_g = UnitGroupSelected(EventPlayer());
    autoABC21130_u = UnitGroupCount(autoABC21130_g, c_unitCountAll);
    for (;; autoABC21130_u -= 1) {
        autoABC21130_var = UnitGroupUnitFromEnd(autoABC21130_g, autoABC21130_u);
        if (autoABC21130_var == null) { break; }
        if ((UnitHasBehavior2(autoABC21130_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(autoABC21130_var, c_unitPropShieldsRegen, c_unitPropCurrent) <= 0.5) && (UnitGetPropertyFixed(autoABC21130_var, c_unitPropShieldsRegen, c_unitPropCurrent) > 0.0)) {
                UnitSetPropertyFixed(autoABC21130_var, c_unitPropShieldsRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(autoABC21130_var, c_unitPropShieldsRegen, (UnitGetPropertyFixed(autoABC21130_var, c_unitPropShieldsRegen, c_unitPropCurrent) - 0.5));
            }
            UnitFlashSelection(autoABC21130_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = autoABC21130_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_08C76FF4")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_00023300") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropShieldsRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_841450D9"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ShieldRegenShfto_Init () {
    lib22142002_gt_C_KC_ShieldRegenShfto = TriggerCreate("lib22142002_gt_C_KC_ShieldRegenShfto_Func");
    TriggerEnable(lib22142002_gt_C_KC_ShieldRegenShfto, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ShieldRegenShfto, c_playerAny, c_keyO, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Shield+ [Alt+Ctrl+o]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxShieldAltCtrlo_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0FB5F9B4_g;
    int auto0FB5F9B4_u;
    unit auto0FB5F9B4_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_621C9531")));
    auto0FB5F9B4_g = UnitGroupSelected(EventPlayer());
    auto0FB5F9B4_u = UnitGroupCount(auto0FB5F9B4_g, c_unitCountAll);
    for (;; auto0FB5F9B4_u -= 1) {
        auto0FB5F9B4_var = UnitGroupUnitFromEnd(auto0FB5F9B4_g, auto0FB5F9B4_u);
        if (auto0FB5F9B4_var == null) { break; }
        if ((UnitHasBehavior2(auto0FB5F9B4_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto0FB5F9B4_var, c_unitPropShieldsMax, (UnitGetPropertyFixed(auto0FB5F9B4_var, c_unitPropShieldsMax, c_unitPropCurrent) + 10.0));
            UnitFlashSelection(auto0FB5F9B4_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_4B5235D8")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxShieldAltCtrlo_Init () {
    lib22142002_gt_C_KC_MaxShieldAltCtrlo = TriggerCreate("lib22142002_gt_C_KC_MaxShieldAltCtrlo_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxShieldAltCtrlo, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxShieldAltCtrlo, c_playerAny, c_keyO, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Shield- [Alt+Shft+o]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxShieldAltShfto_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto496A52A0_g;
    int auto496A52A0_u;
    unit auto496A52A0_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_91F54198")));
    auto496A52A0_g = UnitGroupSelected(EventPlayer());
    auto496A52A0_u = UnitGroupCount(auto496A52A0_g, c_unitCountAll);
    for (;; auto496A52A0_u -= 1) {
        auto496A52A0_var = UnitGroupUnitFromEnd(auto496A52A0_g, auto496A52A0_u);
        if (auto496A52A0_var == null) { break; }
        if ((UnitHasBehavior2(auto496A52A0_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto496A52A0_var, c_unitPropShieldsMax, (UnitGetPropertyFixed(auto496A52A0_var, c_unitPropShieldsMax, c_unitPropCurrent) - 10.0));
            UnitFlashSelection(auto496A52A0_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E410A8C8")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxShieldAltShfto_Init () {
    lib22142002_gt_C_KC_MaxShieldAltShfto = TriggerCreate("lib22142002_gt_C_KC_MaxShieldAltShfto_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxShieldAltShfto, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxShieldAltShfto, c_playerAny, c_keyO, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Full Energy [p]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_FullEnergyp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto167A7499_g;
    int auto167A7499_u;
    unit auto167A7499_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E524B22E")));
    auto167A7499_g = UnitGroupSelected(EventPlayer());
    auto167A7499_u = UnitGroupCount(auto167A7499_g, c_unitCountAll);
    for (;; auto167A7499_u -= 1) {
        auto167A7499_var = UnitGroupUnitFromEnd(auto167A7499_g, auto167A7499_u);
        if (auto167A7499_var == null) { break; }
        if ((UnitHasBehavior2(auto167A7499_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto167A7499_var, c_unitPropEnergyPercent, 100.0);
            UnitFlashSelection(auto167A7499_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_D9571981")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_FullEnergyp_Init () {
    lib22142002_gt_C_KC_FullEnergyp = TriggerCreate("lib22142002_gt_C_KC_FullEnergyp_Func");
    TriggerEnable(lib22142002_gt_C_KC_FullEnergyp, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_FullEnergyp, c_playerAny, c_keyP, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Energy Regen+ [Ctrl+p]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_EnergyRegenCtrlp_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto0F7675E3_g;
    int auto0F7675E3_u;
    unit auto0F7675E3_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0F7675E3_g = UnitGroupSelected(EventPlayer());
    auto0F7675E3_u = UnitGroupCount(auto0F7675E3_g, c_unitCountAll);
    for (;; auto0F7675E3_u -= 1) {
        auto0F7675E3_var = UnitGroupUnitFromEnd(auto0F7675E3_g, auto0F7675E3_u);
        if (auto0F7675E3_var == null) { break; }
        if ((UnitHasBehavior2(auto0F7675E3_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(auto0F7675E3_var, c_unitPropEnergyRegen, c_unitPropCurrent) >= -0.5) && (UnitGetPropertyFixed(auto0F7675E3_var, c_unitPropEnergyRegen, c_unitPropCurrent) < 0.0)) {
                UnitSetPropertyFixed(auto0F7675E3_var, c_unitPropEnergyRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(auto0F7675E3_var, c_unitPropEnergyRegen, (UnitGetPropertyFixed(auto0F7675E3_var, c_unitPropEnergyRegen, c_unitPropCurrent) + 0.5));
            }
            UnitFlashSelection(auto0F7675E3_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = auto0F7675E3_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_48A0B6CF")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_72309A2E") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropEnergyRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_6A8D738F"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_EnergyRegenCtrlp_Init () {
    lib22142002_gt_C_KC_EnergyRegenCtrlp = TriggerCreate("lib22142002_gt_C_KC_EnergyRegenCtrlp_Func");
    TriggerEnable(lib22142002_gt_C_KC_EnergyRegenCtrlp, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_EnergyRegenCtrlp, c_playerAny, c_keyP, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Energy Regen- [Shft+p]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_EnergyRegenShftp_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto70B28C2B_g;
    int auto70B28C2B_u;
    unit auto70B28C2B_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto70B28C2B_g = UnitGroupSelected(EventPlayer());
    auto70B28C2B_u = UnitGroupCount(auto70B28C2B_g, c_unitCountAll);
    for (;; auto70B28C2B_u -= 1) {
        auto70B28C2B_var = UnitGroupUnitFromEnd(auto70B28C2B_g, auto70B28C2B_u);
        if (auto70B28C2B_var == null) { break; }
        if ((UnitHasBehavior2(auto70B28C2B_var, "DEITYMainTools") == false)) {
            if ((UnitGetPropertyFixed(auto70B28C2B_var, c_unitPropEnergyRegen, c_unitPropCurrent) <= 0.5) && (UnitGetPropertyFixed(auto70B28C2B_var, c_unitPropEnergyRegen, c_unitPropCurrent) > 0.0)) {
                UnitSetPropertyFixed(auto70B28C2B_var, c_unitPropEnergyRegen, 0.0);
            }
            else {
                UnitSetPropertyFixed(auto70B28C2B_var, c_unitPropEnergyRegen, (UnitGetPropertyFixed(auto70B28C2B_var, c_unitPropEnergyRegen, c_unitPropCurrent) - 0.5));
            }
            UnitFlashSelection(auto70B28C2B_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            lv_lastUnit = auto70B28C2B_var;
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_2BC58D43")));
        }
    }
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + (StringExternal("Param/Value/lib_22142002_0BE66518") + FixedToText(UnitGetPropertyFixed(lv_lastUnit, c_unitPropEnergyRegen, c_unitPropCurrent), 3) + StringExternal("Param/Value/lib_22142002_2C27502F"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_EnergyRegenShftp_Init () {
    lib22142002_gt_C_KC_EnergyRegenShftp = TriggerCreate("lib22142002_gt_C_KC_EnergyRegenShftp_Func");
    TriggerEnable(lib22142002_gt_C_KC_EnergyRegenShftp, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_EnergyRegenShftp, c_playerAny, c_keyP, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Energy+ [Alt+Ctrl+p]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxEnergyAltCtrlp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4906CFEE_g;
    int auto4906CFEE_u;
    unit auto4906CFEE_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DDFFEB5A")));
    auto4906CFEE_g = UnitGroupSelected(EventPlayer());
    auto4906CFEE_u = UnitGroupCount(auto4906CFEE_g, c_unitCountAll);
    for (;; auto4906CFEE_u -= 1) {
        auto4906CFEE_var = UnitGroupUnitFromEnd(auto4906CFEE_g, auto4906CFEE_u);
        if (auto4906CFEE_var == null) { break; }
        if ((UnitHasBehavior2(auto4906CFEE_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(auto4906CFEE_var, c_unitPropEnergyMax, (UnitGetPropertyFixed(auto4906CFEE_var, c_unitPropEnergyMax, c_unitPropCurrent) + 10.0));
            UnitFlashSelection(auto4906CFEE_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3F566D7A")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxEnergyAltCtrlp_Init () {
    lib22142002_gt_C_KC_MaxEnergyAltCtrlp = TriggerCreate("lib22142002_gt_C_KC_MaxEnergyAltCtrlp_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxEnergyAltCtrlp, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxEnergyAltCtrlp, c_playerAny, c_keyP, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Max Energy- [Alt+Shft+p]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_MaxEnergyAltShftp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoAFB6FC0B_g;
    int autoAFB6FC0B_u;
    unit autoAFB6FC0B_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_54C995DF")));
    autoAFB6FC0B_g = UnitGroupSelected(EventPlayer());
    autoAFB6FC0B_u = UnitGroupCount(autoAFB6FC0B_g, c_unitCountAll);
    for (;; autoAFB6FC0B_u -= 1) {
        autoAFB6FC0B_var = UnitGroupUnitFromEnd(autoAFB6FC0B_g, autoAFB6FC0B_u);
        if (autoAFB6FC0B_var == null) { break; }
        if ((UnitHasBehavior2(autoAFB6FC0B_var, "DEITYMainTools") == false)) {
            UnitSetPropertyFixed(autoAFB6FC0B_var, c_unitPropEnergyMax, (UnitGetPropertyFixed(autoAFB6FC0B_var, c_unitPropEnergyMax, c_unitPropCurrent) - 10.0));
            UnitFlashSelection(autoAFB6FC0B_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_6F1BFAA0")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_MaxEnergyAltShftp_Init () {
    lib22142002_gt_C_KC_MaxEnergyAltShftp = TriggerCreate("lib22142002_gt_C_KC_MaxEnergyAltShftp_Func");
    TriggerEnable(lib22142002_gt_C_KC_MaxEnergyAltShftp, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_MaxEnergyAltShftp, c_playerAny, c_keyP, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Off Cooldown [u]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_OffCooldownu_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto320B47DA_g;
    int auto320B47DA_u;
    unit auto320B47DA_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_52AED0E6")));
    auto320B47DA_g = UnitGroupSelected(EventPlayer());
    auto320B47DA_u = UnitGroupCount(auto320B47DA_g, c_unitCountAll);
    for (;; auto320B47DA_u -= 1) {
        auto320B47DA_var = UnitGroupUnitFromEnd(auto320B47DA_g, auto320B47DA_u);
        if (auto320B47DA_var == null) { break; }
        if ((UnitHasBehavior2(auto320B47DA_var, "DEITYMainTools") == false)) {
            UnitClearCooldowns(auto320B47DA_var, true);
            UnitFlashSelection(auto320B47DA_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3927EF71")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_OffCooldownu_Init () {
    lib22142002_gt_C_KC_OffCooldownu = TriggerCreate("lib22142002_gt_C_KC_OffCooldownu_Func");
    TriggerEnable(lib22142002_gt_C_KC_OffCooldownu, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_OffCooldownu, c_playerAny, c_keyU, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Supply Use OFF [Ctrl Shft k]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoA923299D_g;
    int autoA923299D_u;
    unit autoA923299D_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7F71AB66")));
    autoA923299D_g = UnitGroupSelected(EventPlayer());
    autoA923299D_u = UnitGroupCount(autoA923299D_g, c_unitCountAll);
    for (;; autoA923299D_u -= 1) {
        autoA923299D_var = UnitGroupUnitFromEnd(autoA923299D_g, autoA923299D_u);
        if (autoA923299D_var == null) { break; }
        if ((UnitHasBehavior2(autoA923299D_var, "DEITYMainTools") == false)) {
            UnitSetState(autoA923299D_var, c_unitStateUsingSupply, false);
            UnitFlashSelection(autoA923299D_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5FCAB560")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk_Init () {
    lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk = TriggerCreate("lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk_Func");
    TriggerEnable(lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk, c_playerAny, c_keyK, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Supply Use ON [Shft k]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_SupplyUseONShftk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5C5C8FC4_g;
    int auto5C5C8FC4_u;
    unit auto5C5C8FC4_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_675654C2")));
    auto5C5C8FC4_g = UnitGroupSelected(EventPlayer());
    auto5C5C8FC4_u = UnitGroupCount(auto5C5C8FC4_g, c_unitCountAll);
    for (;; auto5C5C8FC4_u -= 1) {
        auto5C5C8FC4_var = UnitGroupUnitFromEnd(auto5C5C8FC4_g, auto5C5C8FC4_u);
        if (auto5C5C8FC4_var == null) { break; }
        if ((UnitHasBehavior2(auto5C5C8FC4_var, "DEITYMainTools") == false)) {
            UnitSetState(auto5C5C8FC4_var, c_unitStateUsingSupply, true);
            UnitFlashSelection(auto5C5C8FC4_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_37B52288")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_SupplyUseONShftk_Init () {
    lib22142002_gt_C_KC_SupplyUseONShftk = TriggerCreate("lib22142002_gt_C_KC_SupplyUseONShftk_Func");
    TriggerEnable(lib22142002_gt_C_KC_SupplyUseONShftk, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_SupplyUseONShftk, c_playerAny, c_keyK, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Actor Size+ [Ctrl j]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ActorSizeCtrlj_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto42C0C215_g;
    int auto42C0C215_u;
    unit auto42C0C215_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CBBC264F")));
    auto42C0C215_g = UnitGroupSelected(EventPlayer());
    auto42C0C215_u = UnitGroupCount(auto42C0C215_g, c_unitCountAll);
    for (;; auto42C0C215_u -= 1) {
        auto42C0C215_var = UnitGroupUnitFromEnd(auto42C0C215_g, auto42C0C215_u);
        if (auto42C0C215_var == null) { break; }
        if ((UnitHasBehavior2(auto42C0C215_var, "DEITYMainTools") == false)) {
            if ((UnitHasBehavior2(auto42C0C215_var, "ScaledownDEITYKeyCommand") == false) && (UnitHasBehavior2(auto42C0C215_var, "ScaleupDEITYKeyCommand") == false)) {
                UnitSetScale(auto42C0C215_var, 105.0, 105.0, 105.0);
                UnitBehaviorAdd(auto42C0C215_var, "ScaleupDEITYKeyCommand", auto42C0C215_var, 1);
            }
            else {
                if ((UnitHasBehavior2(auto42C0C215_var, "ScaledownDEITYKeyCommand") == true)) {
                    UnitSetScale(auto42C0C215_var, (105.0 - (UnitBehaviorCount(auto42C0C215_var, "ScaledownDEITYKeyCommand") * 5.0)), (105.0 - (UnitBehaviorCount(auto42C0C215_var, "ScaledownDEITYKeyCommand") * 5.0)), (105.0 - (UnitBehaviorCount(auto42C0C215_var, "ScaledownDEITYKeyCommand") * 5.0)));
                    UnitBehaviorRemove(auto42C0C215_var, "ScaledownDEITYKeyCommand", 1);
                }
                else {
                    UnitSetScale(auto42C0C215_var, (105.0 + (UnitBehaviorCount(auto42C0C215_var, "ScaleupDEITYKeyCommand") * 5.0)), (105.0 + (UnitBehaviorCount(auto42C0C215_var, "ScaleupDEITYKeyCommand") * 5.0)), (105.0 + (UnitBehaviorCount(auto42C0C215_var, "ScaleupDEITYKeyCommand") * 5.0)));
                    UnitBehaviorAdd(auto42C0C215_var, "ScaleupDEITYKeyCommand", auto42C0C215_var, 1);
                }
            }
            UnitFlashSelection(auto42C0C215_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E1F9066E")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ActorSizeCtrlj_Init () {
    lib22142002_gt_C_KC_ActorSizeCtrlj = TriggerCreate("lib22142002_gt_C_KC_ActorSizeCtrlj_Func");
    TriggerEnable(lib22142002_gt_C_KC_ActorSizeCtrlj, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ActorSizeCtrlj, c_playerAny, c_keyJ, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Actor Size- [Shft j]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ActorSizeShftj_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_lastUnit;

    // Automatic Variable Declarations
    unitgroup auto15177D0F_g;
    int auto15177D0F_u;
    unit auto15177D0F_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F917390D")));
    auto15177D0F_g = UnitGroupSelected(EventPlayer());
    auto15177D0F_u = UnitGroupCount(auto15177D0F_g, c_unitCountAll);
    for (;; auto15177D0F_u -= 1) {
        auto15177D0F_var = UnitGroupUnitFromEnd(auto15177D0F_g, auto15177D0F_u);
        if (auto15177D0F_var == null) { break; }
        if ((UnitHasBehavior2(auto15177D0F_var, "DEITYMainTools") == false)) {
            if ((UnitHasBehavior2(auto15177D0F_var, "ScaledownDEITYKeyCommand") == false) && (UnitHasBehavior2(auto15177D0F_var, "ScaleupDEITYKeyCommand") == false)) {
                UnitSetScale(auto15177D0F_var, 95.0, 95.0, 95.0);
                UnitBehaviorAdd(auto15177D0F_var, "ScaledownDEITYKeyCommand", auto15177D0F_var, 1);
            }
            else {
                if ((UnitHasBehavior2(auto15177D0F_var, "ScaledownDEITYKeyCommand") == true)) {
                    if ((UnitBehaviorCount(auto15177D0F_var, "ScaledownDEITYKeyCommand") < 17)) {
                        UnitSetScale(auto15177D0F_var, (95.0 - (UnitBehaviorCount(auto15177D0F_var, "ScaledownDEITYKeyCommand") * 5.0)), (95.0 - (UnitBehaviorCount(auto15177D0F_var, "ScaledownDEITYKeyCommand") * 5.0)), (95.0 - (UnitBehaviorCount(auto15177D0F_var, "ScaledownDEITYKeyCommand") * 5.0)));
                        UnitBehaviorAdd(auto15177D0F_var, "ScaledownDEITYKeyCommand", auto15177D0F_var, 1);
                    }

                }
                else {
                    UnitSetScale(auto15177D0F_var, (95.0 + (UnitBehaviorCount(auto15177D0F_var, "ScaleupDEITYKeyCommand") * 5.0)), (95.0 + (UnitBehaviorCount(auto15177D0F_var, "ScaleupDEITYKeyCommand") * 5.0)), (95.0 + (UnitBehaviorCount(auto15177D0F_var, "ScaleupDEITYKeyCommand") * 5.0)));
                    UnitBehaviorRemove(auto15177D0F_var, "ScaleupDEITYKeyCommand", 1);
                }
            }
            UnitFlashSelection(auto15177D0F_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_421C4CB3")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ActorSizeShftj_Init () {
    lib22142002_gt_C_KC_ActorSizeShftj = TriggerCreate("lib22142002_gt_C_KC_ActorSizeShftj_Func");
    TriggerEnable(lib22142002_gt_C_KC_ActorSizeShftj, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ActorSizeShftj, c_playerAny, c_keyJ, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Cloak [*]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_Cloak_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto6F9E8786_g;
    int auto6F9E8786_u;
    unit auto6F9E8786_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_373A26BE")));
    auto6F9E8786_g = UnitGroupSelected(EventPlayer());
    auto6F9E8786_u = UnitGroupCount(auto6F9E8786_g, c_unitCountAll);
    for (;; auto6F9E8786_u -= 1) {
        auto6F9E8786_var = UnitGroupUnitFromEnd(auto6F9E8786_g, auto6F9E8786_u);
        if (auto6F9E8786_var == null) { break; }
        if ((UnitHasBehavior2(auto6F9E8786_var, "DEITYMainTools") == false)) {
            UnitBehaviorAdd(auto6F9E8786_var, "PermanentlyCloaked", lv_u, 1);
            UnitFlashSelection(auto6F9E8786_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_3BC55D85")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_Cloak_Init () {
    lib22142002_gt_C_KC_Cloak = TriggerCreate("lib22142002_gt_C_KC_Cloak_Func");
    TriggerEnable(lib22142002_gt_C_KC_Cloak, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_Cloak, c_playerAny, c_keyNumPadMultiply, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_DeCloak [Ctrl *]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DeCloakCtrl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto829B7045_g;
    int auto829B7045_u;
    unit auto829B7045_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4DE5532F")));
    auto829B7045_g = UnitGroupSelected(EventPlayer());
    auto829B7045_u = UnitGroupCount(auto829B7045_g, c_unitCountAll);
    for (;; auto829B7045_u -= 1) {
        auto829B7045_var = UnitGroupUnitFromEnd(auto829B7045_g, auto829B7045_u);
        if (auto829B7045_var == null) { break; }
        if ((UnitHasBehavior2(auto829B7045_var, "DEITYMainTools") == false)) {
            UnitBehaviorRemove(auto829B7045_var, "BansheeCloak", 1);
            UnitBehaviorRemove(auto829B7045_var, "WraithCloak", 1);
            UnitBehaviorRemove(auto829B7045_var, "MengskWraithCloak", 1);
            UnitBehaviorRemove(auto829B7045_var, "SpectreCloaking", 1);
            UnitBehaviorRemove(auto829B7045_var, "SpectreCloakingFree", 1);
            UnitBehaviorRemove(auto829B7045_var, "GhostCloak", 1);
            UnitBehaviorRemove(auto829B7045_var, "PersonalCloakingFree", 1);
            UnitBehaviorRemove(auto829B7045_var, "PredatorCloaking", 1);
            UnitBehaviorRemove(auto829B7045_var, "PermanentlyCloaked", 1);
            UnitFlashSelection(auto829B7045_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_64692EC1")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DeCloakCtrl_Init () {
    lib22142002_gt_C_KC_DeCloakCtrl = TriggerCreate("lib22142002_gt_C_KC_DeCloakCtrl_Func");
    TriggerEnable(lib22142002_gt_C_KC_DeCloakCtrl, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DeCloakCtrl, c_playerAny, c_keyNumPadMultiply, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Detection ON [/]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DetectionON_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup autoD44BCD5C_g;
    int autoD44BCD5C_u;
    unit autoD44BCD5C_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F42F90B5")));
    autoD44BCD5C_g = UnitGroupSelected(EventPlayer());
    autoD44BCD5C_u = UnitGroupCount(autoD44BCD5C_g, c_unitCountAll);
    for (;; autoD44BCD5C_u -= 1) {
        autoD44BCD5C_var = UnitGroupUnitFromEnd(autoD44BCD5C_g, autoD44BCD5C_u);
        if (autoD44BCD5C_var == null) { break; }
        if ((UnitHasBehavior2(autoD44BCD5C_var, "DEITYMainTools") == false)) {
            UnitBehaviorAdd(autoD44BCD5C_var, "Detector10", lv_u, 1);
            UnitFlashSelection(autoD44BCD5C_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_1CB499D8")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DetectionON_Init () {
    lib22142002_gt_C_KC_DetectionON = TriggerCreate("lib22142002_gt_C_KC_DetectionON_Func");
    TriggerEnable(lib22142002_gt_C_KC_DetectionON, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DetectionON, c_playerAny, c_keyNumPadDivide, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Detection OFF [Ctrl+/]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DetectionOFFCtrl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto2B96FC3E_g;
    int auto2B96FC3E_u;
    unit auto2B96FC3E_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DF82D5F7")));
    auto2B96FC3E_g = UnitGroupSelected(EventPlayer());
    auto2B96FC3E_u = UnitGroupCount(auto2B96FC3E_g, c_unitCountAll);
    for (;; auto2B96FC3E_u -= 1) {
        auto2B96FC3E_var = UnitGroupUnitFromEnd(auto2B96FC3E_g, auto2B96FC3E_u);
        if (auto2B96FC3E_var == null) { break; }
        if ((UnitHasBehavior2(auto2B96FC3E_var, "DEITYMainTools") == false)) {
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector7", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector8", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector9", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector10", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector11", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector12", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector13p75", 1);
            UnitBehaviorRemove(auto2B96FC3E_var, "Detector20", 1);
            UnitFlashSelection(auto2B96FC3E_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_CF0B720F")));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DetectionOFFCtrl_Init () {
    lib22142002_gt_C_KC_DetectionOFFCtrl = TriggerCreate("lib22142002_gt_C_KC_DetectionOFFCtrl_Func");
    TriggerEnable(lib22142002_gt_C_KC_DetectionOFFCtrl, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DetectionOFFCtrl, c_playerAny, c_keyNumPadDivide, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Duplicate&Gametime [+]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DuplicateGametime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_cargoU;
    fixed lv_periodicWait;
    int lv_periodicWaitTimeCounter;

    // Automatic Variable Declarations
    int auto691ACE0F_val;
    unitgroup auto3C4B5C8E_g;
    int auto3C4B5C8E_u;
    unit auto3C4B5C8E_var;
    unitgroup auto25F0ED87_g;
    int auto25F0ED87_u;
    int auto34E6DDBD_val;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
        if ((UnitHasBehavior2(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1), "DEITYMainTools") == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7F890D05")));
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 40)) {
            }
            else {
                if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 80)) {
                    lv_periodicWait = 0.0001;
                }
                else {
                    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 250)) {
                        lv_periodicWait = 0.0005;
                    }
                    else {
                        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) <= 385)) {
                            lv_periodicWait = 0.01;
                        }
                        else {
                            lv_periodicWait = 0.1;
                        }
                    }
                }
            }
            auto3C4B5C8E_g = UnitGroupSelected(EventPlayer());
            auto3C4B5C8E_u = UnitGroupCount(auto3C4B5C8E_g, c_unitCountAll);
            for (;; auto3C4B5C8E_u -= 1) {
                auto3C4B5C8E_var = UnitGroupUnitFromEnd(auto3C4B5C8E_g, auto3C4B5C8E_u);
                if (auto3C4B5C8E_var == null) { break; }
                if ((UnitHasBehavior2(auto3C4B5C8E_var, "DEITYMainTools") == false)) {
                    UnitCreate(1, UnitGetType(auto3C4B5C8E_var), 0, UnitGetOwner(auto3C4B5C8E_var), UnitGetPosition(auto3C4B5C8E_var), libNtve_gf_RandomAngle());
                    lv_periodicWaitTimeCounter += 1;
                    UnitBehaviorAdd(UnitLastCreated(), lib22142002_gf_UnitCreationSkinCheck(auto3C4B5C8E_var), UnitLastCreated(), 1);
                    UnitFlashSelection(UnitLastCreated(), lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
                    if ((UnitCargoValue(auto3C4B5C8E_var, c_unitCargoUnitCount) > 0)) {
                        auto25F0ED87_g = UnitCargoGroup(auto3C4B5C8E_var);
                        auto25F0ED87_u = UnitGroupCount(auto25F0ED87_g, c_unitCountAll);
                        for (;; auto25F0ED87_u -= 1) {
                            lv_cargoU = UnitGroupUnitFromEnd(auto25F0ED87_g, auto25F0ED87_u);
                            if (lv_cargoU == null) { break; }
                            UnitCargoCreate(UnitLastCreated(), UnitGetType(lv_cargoU), 1);
                            lv_periodicWaitTimeCounter += 1;
                        }
                    }

                    if ((lv_periodicWaitTimeCounter >= 10)) {
                        lv_periodicWaitTimeCounter = 0;
                        Wait(lv_periodicWait, c_timeReal);
                    }

                }
                else {
                    UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaError);
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_81CA5D90")));
                }
            }
        }
        else {
            auto34E6DDBD_val = GameGetSpeedValue();
            if (auto34E6DDBD_val == c_gameSpeedSlower) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D3C4F898")));
                GameSetSpeedValue(c_gameSpeedSlow);
            }
            else if (auto34E6DDBD_val == c_gameSpeedSlow) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_9E5FACEF")));
                GameSetSpeedValue(c_gameSpeedNormal);
            }
            else if (auto34E6DDBD_val == c_gameSpeedNormal) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5242A015")));
                GameSetSpeedValue(c_gameSpeedFast);
            }
            else if (auto34E6DDBD_val == c_gameSpeedFast) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_58091B14")));
                GameSetSpeedValue(c_gameSpeedFaster);
            }
            else {
            }
        }
    }
    else {
        auto691ACE0F_val = GameGetSpeedValue();
        if (auto691ACE0F_val == c_gameSpeedSlower) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_61A2D781")));
            GameSetSpeedValue(c_gameSpeedSlow);
        }
        else if (auto691ACE0F_val == c_gameSpeedSlow) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7F1412B7")));
            GameSetSpeedValue(c_gameSpeedNormal);
        }
        else if (auto691ACE0F_val == c_gameSpeedNormal) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2E8B96E4")));
            GameSetSpeedValue(c_gameSpeedFast);
        }
        else if (auto691ACE0F_val == c_gameSpeedFast) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_359F06C0")));
            GameSetSpeedValue(c_gameSpeedFaster);
        }
        else {
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DuplicateGametime_Init () {
    lib22142002_gt_C_KC_DuplicateGametime = TriggerCreate("lib22142002_gt_C_KC_DuplicateGametime_Func");
    TriggerEnable(lib22142002_gt_C_KC_DuplicateGametime, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DuplicateGametime, c_playerAny, c_keyNumPadPlus, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Chrono boost [Ctrl +]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ChronoboostCtrl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto8631B5FF_g;
    int auto8631B5FF_u;
    unit auto8631B5FF_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8F973AB8")));
    auto8631B5FF_g = UnitGroupSelected(EventPlayer());
    auto8631B5FF_u = UnitGroupCount(auto8631B5FF_g, c_unitCountAll);
    for (;; auto8631B5FF_u -= 1) {
        auto8631B5FF_var = UnitGroupUnitFromEnd(auto8631B5FF_g, auto8631B5FF_u);
        if (auto8631B5FF_var == null) { break; }
        UnitBehaviorAdd(auto8631B5FF_var, "TimeWarpProduction", lv_u, 1);
        UnitFlashSelection(auto8631B5FF_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ChronoboostCtrl_Init () {
    lib22142002_gt_C_KC_ChronoboostCtrl = TriggerCreate("lib22142002_gt_C_KC_ChronoboostCtrl_Func");
    TriggerEnable(lib22142002_gt_C_KC_ChronoboostCtrl, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ChronoboostCtrl, c_playerAny, c_keyNumPadPlus, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Super Chrono boost [Ctrl Shft +]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_SuperChronoboostCtrlShft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup autoAFBFCE15_g;
    int autoAFBFCE15_u;
    unit autoAFBFCE15_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8DF3E2B7")));
    autoAFBFCE15_g = UnitGroupSelected(EventPlayer());
    autoAFBFCE15_u = UnitGroupCount(autoAFBFCE15_g, c_unitCountAll);
    for (;; autoAFBFCE15_u -= 1) {
        autoAFBFCE15_var = UnitGroupUnitFromEnd(autoAFBFCE15_g, autoAFBFCE15_u);
        if (autoAFBFCE15_var == null) { break; }
        UnitBehaviorAdd(autoAFBFCE15_var, "SOASuperChrono", lv_u, 1);
        UnitFlashSelection(autoAFBFCE15_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_SuperChronoboostCtrlShft_Init () {
    lib22142002_gt_C_KC_SuperChronoboostCtrlShft = TriggerCreate("lib22142002_gt_C_KC_SuperChronoboostCtrlShft_Func");
    TriggerEnable(lib22142002_gt_C_KC_SuperChronoboostCtrlShft, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_SuperChronoboostCtrlShft, c_playerAny, c_keyNumPadPlus, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Terrazine Shadow [Alt Ctrl -]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_TerrazineShadowAltCtrl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto0E88A673_g;
    int auto0E88A673_u;
    unit auto0E88A673_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FF5B518C")));
    auto0E88A673_g = UnitGroupSelected(EventPlayer());
    auto0E88A673_u = UnitGroupCount(auto0E88A673_g, c_unitCountAll);
    for (;; auto0E88A673_u -= 1) {
        auto0E88A673_var = UnitGroupUnitFromEnd(auto0E88A673_g, auto0E88A673_u);
        if (auto0E88A673_var == null) { break; }
        if ((UnitHasBehavior2(auto0E88A673_var, "DEITYMainTools") == false)) {
            UnitBehaviorAdd(auto0E88A673_var, "TerrazineShadow", lv_u, 1);
            UnitFlashSelection(auto0E88A673_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E30BD6BD")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_TerrazineShadowAltCtrl_Init () {
    lib22142002_gt_C_KC_TerrazineShadowAltCtrl = TriggerCreate("lib22142002_gt_C_KC_TerrazineShadowAltCtrl_Func");
    TriggerEnable(lib22142002_gt_C_KC_TerrazineShadowAltCtrl, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_TerrazineShadowAltCtrl, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Freeze&Gametime [-]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_FreezeGametime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto1EA27176_g;
    int auto1EA27176_u;
    unit auto1EA27176_var;
    int auto37C6049B_val;
    int autoE80833B0_val;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
        if ((UnitHasBehavior2(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1), "DEITYMainTools") == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F0AD6E40")));
            auto1EA27176_g = UnitGroupSelected(EventPlayer());
            auto1EA27176_u = UnitGroupCount(auto1EA27176_g, c_unitCountAll);
            for (;; auto1EA27176_u -= 1) {
                auto1EA27176_var = UnitGroupUnitFromEnd(auto1EA27176_g, auto1EA27176_u);
                if (auto1EA27176_var == null) { break; }
                UnitBehaviorAdd(auto1EA27176_var, "FlashFreezeLevel3", lv_u, 1);
                UnitFlashSelection(auto1EA27176_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            }
        }
        else {
            auto37C6049B_val = GameGetSpeedValue();
            if (auto37C6049B_val == c_gameSpeedFaster) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3D19DDEF")));
                GameSetSpeedValue(c_gameSpeedFast);
            }
            else if (auto37C6049B_val == c_gameSpeedFast) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F1C4DB72")));
                GameSetSpeedValue(c_gameSpeedNormal);
            }
            else if (auto37C6049B_val == c_gameSpeedNormal) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_907F29C6")));
                GameSetSpeedValue(c_gameSpeedSlow);
            }
            else if (auto37C6049B_val == c_gameSpeedSlow) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1EC1DCB9")));
                GameSetSpeedValue(c_gameSpeedSlower);
            }
            else {
            }
        }
    }
    else {
        autoE80833B0_val = GameGetSpeedValue();
        if (autoE80833B0_val == c_gameSpeedFaster) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1DA4C439")));
            GameSetSpeedValue(c_gameSpeedFast);
        }
        else if (autoE80833B0_val == c_gameSpeedFast) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_052B296F")));
            GameSetSpeedValue(c_gameSpeedNormal);
        }
        else if (autoE80833B0_val == c_gameSpeedNormal) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2D903370")));
            GameSetSpeedValue(c_gameSpeedSlow);
        }
        else if (autoE80833B0_val == c_gameSpeedSlow) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EFF7A0DE")));
            GameSetSpeedValue(c_gameSpeedSlower);
        }
        else {
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_FreezeGametime_Init () {
    lib22142002_gt_C_KC_FreezeGametime = TriggerCreate("lib22142002_gt_C_KC_FreezeGametime_Func");
    TriggerEnable(lib22142002_gt_C_KC_FreezeGametime, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_FreezeGametime, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Unfreeze [Ctrl -]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_UnfreezeCtrl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto72D15854_g;
    int auto72D15854_u;
    unit auto72D15854_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_07FC59CD")));
    auto72D15854_g = UnitGroupSelected(EventPlayer());
    auto72D15854_u = UnitGroupCount(auto72D15854_g, c_unitCountAll);
    for (;; auto72D15854_u -= 1) {
        auto72D15854_var = UnitGroupUnitFromEnd(auto72D15854_g, auto72D15854_u);
        if (auto72D15854_var == null) { break; }
        UnitBehaviorRemove(auto72D15854_var, "FlashFreezeLevel3", 1);
        UnitFlashSelection(auto72D15854_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_UnfreezeCtrl_Init () {
    lib22142002_gt_C_KC_UnfreezeCtrl = TriggerCreate("lib22142002_gt_C_KC_UnfreezeCtrl_Func");
    TriggerEnable(lib22142002_gt_C_KC_UnfreezeCtrl, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_UnfreezeCtrl, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Share Vision [Home]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_ShareVisionHome_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto462887F2_g;
    int auto462887F2_u;
    unit auto462887F2_var;
    playergroup auto9070FD76_g;
    int auto9070FD76_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FC2554E4")));
    auto462887F2_g = UnitGroupSelected(EventPlayer());
    auto462887F2_u = UnitGroupCount(auto462887F2_g, c_unitCountAll);
    for (;; auto462887F2_u -= 1) {
        auto462887F2_var = UnitGroupUnitFromEnd(auto462887F2_g, auto462887F2_u);
        if (auto462887F2_var == null) { break; }
        if ((UnitHasBehavior2(auto462887F2_var, "DEITYMainTools") == false)) {
            auto9070FD76_g = PlayerGroupAll();
            auto9070FD76_var = -1;
            while (true) {
                auto9070FD76_var = PlayerGroupNextPlayer(auto9070FD76_g, auto9070FD76_var);
                if (auto9070FD76_var < 0) { break; }
                libNtve_gf_ShareVisionofUnit(auto462887F2_var, true, auto9070FD76_var);
                UnitFlashSelection(auto462887F2_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_07EDFE90")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_ShareVisionHome_Init () {
    lib22142002_gt_C_KC_ShareVisionHome = TriggerCreate("lib22142002_gt_C_KC_ShareVisionHome_Func");
    TriggerEnable(lib22142002_gt_C_KC_ShareVisionHome, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_ShareVisionHome, c_playerAny, c_keyHome, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Unshare Vision [End]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_UnshareVisionEnd_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF48C202F_g;
    int autoF48C202F_u;
    unit autoF48C202F_var;
    playergroup autoD23FF454_g;
    int autoD23FF454_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B0E15DCE")));
    autoF48C202F_g = UnitGroupSelected(EventPlayer());
    autoF48C202F_u = UnitGroupCount(autoF48C202F_g, c_unitCountAll);
    for (;; autoF48C202F_u -= 1) {
        autoF48C202F_var = UnitGroupUnitFromEnd(autoF48C202F_g, autoF48C202F_u);
        if (autoF48C202F_var == null) { break; }
        if ((UnitHasBehavior2(autoF48C202F_var, "DEITYMainTools") == false)) {
            autoD23FF454_g = PlayerGroupAll();
            autoD23FF454_var = -1;
            while (true) {
                autoD23FF454_var = PlayerGroupNextPlayer(autoD23FF454_g, autoD23FF454_var);
                if (autoD23FF454_var < 0) { break; }
                libNtve_gf_ShareVisionofUnit(autoF48C202F_var, false, autoD23FF454_var);
                UnitFlashSelection(autoF48C202F_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
            }
        }
        else {
            UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaAll);
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_UnshareVisionEnd_Init () {
    lib22142002_gt_C_KC_UnshareVisionEnd = TriggerCreate("lib22142002_gt_C_KC_UnshareVisionEnd_Func");
    TriggerEnable(lib22142002_gt_C_KC_UnshareVisionEnd, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_UnshareVisionEnd, c_playerAny, c_keyEnd, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Delete [Del]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DeleteDel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5A3237C9_g;
    int auto5A3237C9_u;
    unit auto5A3237C9_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_Bounty_Reward, false);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FA2AA798")));
    auto5A3237C9_g = UnitGroupSelected(EventPlayer());
    auto5A3237C9_u = UnitGroupCount(auto5A3237C9_g, c_unitCountAll);
    for (;; auto5A3237C9_u -= 1) {
        auto5A3237C9_var = UnitGroupUnitFromEnd(auto5A3237C9_g, auto5A3237C9_u);
        if (auto5A3237C9_var == null) { break; }
        if ((UnitGroupHasUnit(lib22142002_gv_c_DeleteProtectedGroup, auto5A3237C9_var) == false)) {
            if ((UnitHasBehavior2(auto5A3237C9_var, "DEITYMainTools") == false)) {
                UnitGroupRemove(lib22142002_gv_respawnableUnit, auto5A3237C9_var);
                UnitBehaviorRemove(auto5A3237C9_var, "RespawnHeroA", 1);
                UnitBehaviorRemove(auto5A3237C9_var, "RespawnWaitingA", 1);
                UnitGroupRemove(lib22142002_gv_respawnableUnit, auto5A3237C9_var);
                UnitKill(auto5A3237C9_var);
                TriggerStop(lib22142002_gt_Bounty_Reward);
                UnitBehaviorRemove(auto5A3237C9_var, "RespawnHeroA", 1);
                UnitBehaviorRemove(auto5A3237C9_var, "RespawnWaitingA", 1);
                UnitGroupRemove(lib22142002_gv_respawnableUnit, auto5A3237C9_var);
                UnitKill(auto5A3237C9_var);
                TriggerStop(lib22142002_gt_Bounty_Reward);
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_C8EDF245")));
            }
        }

    }
    Wait(0.001, c_timeGame);
    TriggerEnable(lib22142002_gt_Bounty_Reward, true);
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DeleteDel_Init () {
    lib22142002_gt_C_KC_DeleteDel = TriggerCreate("lib22142002_gt_C_KC_DeleteDel_Func");
    TriggerEnable(lib22142002_gt_C_KC_DeleteDel, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DeleteDel, c_playerAny, c_keyNumPadDecimal, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_DeleteHalf [Alt Del]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_DeleteHalfAltDel_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_skipKill;

    // Automatic Variable Declarations
    unitgroup autoD952D14E_g;
    int autoD952D14E_u;
    unit autoD952D14E_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_Bounty_Reward, false);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_108FE74F")));
    autoD952D14E_g = UnitGroupSelected(EventPlayer());
    autoD952D14E_u = UnitGroupCount(autoD952D14E_g, c_unitCountAll);
    for (;; autoD952D14E_u -= 1) {
        autoD952D14E_var = UnitGroupUnitFromEnd(autoD952D14E_g, autoD952D14E_u);
        if (autoD952D14E_var == null) { break; }
        if ((UnitGroupHasUnit(lib22142002_gv_c_DeleteProtectedGroup, autoD952D14E_var) == false)) {
            if ((UnitHasBehavior2(autoD952D14E_var, "DEITYMainTools") == false)) {
                if ((lv_skipKill == false)) {
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD952D14E_var);
                    UnitBehaviorRemove(autoD952D14E_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(autoD952D14E_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD952D14E_var);
                    UnitKill(autoD952D14E_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                    UnitBehaviorRemove(autoD952D14E_var, "RespawnHeroA", 1);
                    UnitBehaviorRemove(autoD952D14E_var, "RespawnWaitingA", 1);
                    UnitGroupRemove(lib22142002_gv_respawnableUnit, autoD952D14E_var);
                    UnitKill(autoD952D14E_var);
                    TriggerStop(lib22142002_gt_Bounty_Reward);
                    lv_skipKill = true;
                }
                else {
                    lv_skipKill = false;
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_91975A7F")));
            }
        }

    }
    Wait(0.001, c_timeGame);
    TriggerEnable(lib22142002_gt_Bounty_Reward, true);
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_DeleteHalfAltDel_Init () {
    lib22142002_gt_C_KC_DeleteHalfAltDel = TriggerCreate("lib22142002_gt_C_KC_DeleteHalfAltDel_Func");
    TriggerEnable(lib22142002_gt_C_KC_DeleteHalfAltDel, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_DeleteHalfAltDel, c_playerAny, c_keyNumPadDecimal, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateRequire);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Insta Teleport [Ctrl t]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_InstaTeleportCtrlt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC30DC7F7_g;
    int autoC30DC7F7_u;
    unit autoC30DC7F7_var;
    unitgroup auto0C2C5137_g;
    int auto0C2C5137_u;
    unit auto0C2C5137_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoC30DC7F7_g = UnitGroupSelected(EventPlayer());
    autoC30DC7F7_u = UnitGroupCount(autoC30DC7F7_g, c_unitCountAll);
    for (;; autoC30DC7F7_u -= 1) {
        autoC30DC7F7_var = UnitGroupUnitFromEnd(autoC30DC7F7_g, autoC30DC7F7_u);
        if (autoC30DC7F7_var == null) { break; }
        if ((UnitHasBehavior2(autoC30DC7F7_var, "DEITYMainTools") == false)) {
            auto0C2C5137_g = UnitGroupSelected(EventPlayer());
            auto0C2C5137_u = UnitGroupCount(auto0C2C5137_g, c_unitCountAll);
            for (;; auto0C2C5137_u -= 1) {
                auto0C2C5137_var = UnitGroupUnitFromEnd(auto0C2C5137_g, auto0C2C5137_u);
                if (auto0C2C5137_var == null) { break; }
                if ((UnitFilterMatch(auto0C2C5137_var, EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterUser1), 0)) == true)) {
                    if ((UnitGetType(auto0C2C5137_var) != "PerditionTurretUnderground")) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B2A1657E")));
                        UnitSetPosition(auto0C2C5137_var, CameraGetTarget(EventPlayer()), false);
                        UnitFlashSelection(auto0C2C5137_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_538759E3")));
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_95C7973F")));
                }
            }
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_AD3AC601")));
        }
    }
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_InstaTeleportCtrlt_Init () {
    lib22142002_gt_C_KC_InstaTeleportCtrlt = TriggerCreate("lib22142002_gt_C_KC_InstaTeleportCtrlt_Func");
    TriggerEnable(lib22142002_gt_C_KC_InstaTeleportCtrlt, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_InstaTeleportCtrlt, c_playerAny, c_keyT, true, c_keyModifierStateExclude, c_keyModifierStateRequire, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_KC_Ally 0 [Shft PageDown]
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_KC_Ally0ShftPageDown_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E92D09E3")));
    libNtve_gf_SetAllianceOneWay(EventPlayer(), 0, libNtve_ge_AllianceSetting_Ally);
    TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_KC_Ally0ShftPageDown_Init () {
    lib22142002_gt_C_KC_Ally0ShftPageDown = TriggerCreate("lib22142002_gt_C_KC_Ally0ShftPageDown_Func");
    TriggerEnable(lib22142002_gt_C_KC_Ally0ShftPageDown, false);
    TriggerAddEventKeyPressed(lib22142002_gt_C_KC_Ally0ShftPageDown, c_playerAny, c_keyPageDown, true, c_keyModifierStateRequire, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SC_One CommandTrigger to Rule Them All
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_c;

    // Automatic Variable Declarations
    int auto54E11C93_ae;
    int auto54E11C93_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gf_StringCommands(EventChatMessage(false)) != 0)) {
        auto54E11C93_ae = lib22142002_gf_StringCommands(EventChatMessage(false));
        auto54E11C93_var = 1;
        for ( ; auto54E11C93_var <= auto54E11C93_ae; auto54E11C93_var += 1 ) {
            lib22142002_gf_C_SC_CommandSelector(EventChatMessage(false), auto54E11C93_var);
            Wait(0.009, c_timeGame);
        }
        TriggerExecute(lib22142002_gt_DEITYMaintance, true, false);
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_71341DC9")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll_Init () {
    lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll = TriggerCreate("lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll_Func");
    TriggerEnable(lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll, c_playerAny, "-", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SC_Time WIP
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SC_TimeWIP_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto48757AAA_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto48757AAA_val = StringWord(StringCase(EventChatMessage(false), true), 3);
    if (auto48757AAA_val == "ON") {
        if ((lib22142002_gv_dN_AutoDay == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FDDEAFC7")));
            lib22142002_gv_dN_AutoDay = true;
            if ((lib22142002_gv_dN_NightTime == false)) {
                TriggerExecute(lib22142002_gt_C_SCW_Nighttime, true, false);
            }
            else {
                TriggerExecute(lib22142002_gt_C_SCW_Daytime, true, false);
            }
        }

    }
    else if (auto48757AAA_val == "OFF") {
        if ((lib22142002_gv_dN_AutoDay == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5B02E6C1")));
            lib22142002_gv_dN_AutoDay = false;
        }

    }
    else if (auto48757AAA_val == "SET") {
        lib22142002_gv_dN_AutoDayDuration = StringToInt(StringWord(EventChatMessage(false), 4));
        if ((lib22142002_gv_dN_AutoDayDuration < 1)) {
            lib22142002_gv_dN_AutoDayDuration = 240;
        }

        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AFA77F0F") + IntToText(lib22142002_gv_dN_AutoDayDuration) + StringExternal("Param/Value/lib_22142002_D18E51BF")));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SC_TimeWIP_Init () {
    lib22142002_gt_C_SC_TimeWIP = TriggerCreate("lib22142002_gt_C_SC_TimeWIP_Func");
    TriggerEnable(lib22142002_gt_C_SC_TimeWIP, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SC_TimeWIP, c_playerAny, "-Automatic Days", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Automatic Days
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_AutomaticDays_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto5C33F2F4_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto5C33F2F4_val = StringWord(StringCase(EventChatMessage(false), true), 3);
    if (auto5C33F2F4_val == "ON") {
        if ((lib22142002_gv_dN_AutoDay == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D72F3ACF")));
            lib22142002_gv_dN_AutoDay = true;
            if ((lib22142002_gv_dN_NightTime == false)) {
                TriggerExecute(lib22142002_gt_C_SCW_Nighttime, true, false);
            }
            else {
                TriggerExecute(lib22142002_gt_C_SCW_Daytime, true, false);
            }
        }

    }
    else if (auto5C33F2F4_val == "OFF") {
        if ((lib22142002_gv_dN_AutoDay == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E39626E0")));
            lib22142002_gv_dN_AutoDay = false;
        }

    }
    else if (auto5C33F2F4_val == "SET") {
        lib22142002_gv_dN_AutoDayDuration = StringToInt(StringWord(EventChatMessage(false), 4));
        if ((lib22142002_gv_dN_AutoDayDuration < 1)) {
            lib22142002_gv_dN_AutoDayDuration = 240;
        }

        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_271F9343") + IntToText(lib22142002_gv_dN_AutoDayDuration) + StringExternal("Param/Value/lib_22142002_B3ECFD10")));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_AutomaticDays_Init () {
    lib22142002_gt_C_SCW_AutomaticDays = TriggerCreate("lib22142002_gt_C_SCW_AutomaticDays_Func");
    TriggerEnable(lib22142002_gt_C_SCW_AutomaticDays, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_AutomaticDays, c_playerAny, "-Automatic Days", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Day time
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_Daytime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_duration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventChatMessage(false) != null)) {
        TriggerStop(lib22142002_gt_C_SCW_Nighttime);
    }

    if ((StringWord(EventChatMessage(false), 2) != null)) {
        lv_duration = StringToInt(StringCase(StringWord(EventChatMessage(false), 2), true));
    }
    else {
        lv_duration = 60;
    }
    if ((lv_duration != 0)) {
        UIDisplayMessage(lib22142002_gv_dEITYGroup, c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B3CB2FC4") + IntToText(lv_duration) + StringExternal("Param/Value/lib_22142002_B1FFE775")));
        GameSetLighting("AgriaSunset", (IntToFixed(lv_duration) / 6.0));
        Wait((IntToFixed(lv_duration) / 6.0), c_timeGame);
        if ((lib22142002_gv_dN_HyperSunburn == true)) {
            GameSetLighting("TTosh01Eruption", ((IntToFixed(lv_duration) / 6.0) * 5.0));
        }
        else {
            if ((lib22142002_gv_dN_Hazardoussun == true)) {
                GameSetLighting("MarSaraDayTest", ((IntToFixed(lv_duration) / 6.0) * 5.0));
            }
            else {
                GameSetLighting("Agria", ((IntToFixed(lv_duration) / 6.0) * 5.0));
            }
        }
        Wait(((IntToFixed(lv_duration) / 6.0) * 5.0), c_timeGame);
    }

    SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_Morning", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_E75D68AB"));
    if ((lib22142002_gv_dN_HyperSunburn == true)) {
        SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_HyperSunburn", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    }
    else {
        if ((lib22142002_gv_dN_Hazardoussun == true)) {
            SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_HazardousDay", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        }
        else {
            if ((lib22142002_gv_dN_Sunburn == true)) {
                SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_Sunburn", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
            }

        }
    }
    lib22142002_gv_dN_NightTime = false;
    if ((lib22142002_gv_dN_AutoDay == true)) {
        Wait(lib22142002_gv_dN_AutoDayDuration, c_timeGame);
        TriggerExecute(lib22142002_gt_C_SCW_Nighttime, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_Daytime_Init () {
    lib22142002_gt_C_SCW_Daytime = TriggerCreate("lib22142002_gt_C_SCW_Daytime_Func");
    TriggerEnable(lib22142002_gt_C_SCW_Daytime, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_Daytime, c_playerAny, "-Daytime", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Night time
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_Nighttime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_duration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventChatMessage(false) != null)) {
        TriggerStop(lib22142002_gt_C_SCW_Daytime);
    }

    if ((StringWord(EventChatMessage(false), 2) != null)) {
        lv_duration = StringToInt(StringCase(StringWord(EventChatMessage(false), 2), true));
    }
    else {
        lv_duration = 60;
    }
    if ((lv_duration != 0)) {
        UIDisplayMessage(lib22142002_gv_dEITYGroup, c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8006C927") + IntToText(lv_duration) + StringExternal("Param/Value/lib_22142002_1F970EAB")));
        if ((lib22142002_gv_dN_Coldnight == true)) {
            GameSetLighting("IceWorldNight", lv_duration);
        }
        else {
            if ((lib22142002_gv_dN_HyperColdnight == true)) {
                GameSetLighting("HyperColdNight", lv_duration);
            }
            else {
                GameSetLighting("AgriaNight", lv_duration);
            }
        }
        Wait(lv_duration, c_timeGame);
    }

    SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_Night", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_A88308FC"));
    if ((lib22142002_gv_dN_Coldnight == true)) {
        SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_ColdNight", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    }
    else {
        if ((lib22142002_gv_dN_HyperColdnight == true)) {
            SoundPlayForPlayer(SoundLink("DEITY_TimeNotification_HyperColdNight", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        }

    }
    lib22142002_gv_dN_NightTime = true;
    if ((lib22142002_gv_dN_AutoDay == true)) {
        Wait(lib22142002_gv_dN_AutoDayDuration, c_timeGame);
        TriggerExecute(lib22142002_gt_C_SCW_Daytime, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_Nighttime_Init () {
    lib22142002_gt_C_SCW_Nighttime = TriggerCreate("lib22142002_gt_C_SCW_Nighttime_Func");
    TriggerEnable(lib22142002_gt_C_SCW_Nighttime, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_Nighttime, c_playerAny, "-Nighttime", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SC_Weather WIP
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SC_WeatherWIP_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto8A9569AC_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto8A9569AC_val = StringWord(StringCase(EventChatMessage(false), true), 3);
    if (auto8A9569AC_val == "ON") {
        if ((lib22142002_gv_dN_AutoDay == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6CB4DD02")));
            lib22142002_gv_dN_AutoDay = true;
            if ((lib22142002_gv_dN_NightTime == false)) {
                TriggerExecute(lib22142002_gt_C_SCW_Nighttime, true, false);
            }
            else {
                TriggerExecute(lib22142002_gt_C_SCW_Daytime, true, false);
            }
        }

    }
    else if (auto8A9569AC_val == "OFF") {
        if ((lib22142002_gv_dN_AutoDay == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B172316D")));
            lib22142002_gv_dN_AutoDay = false;
        }

    }
    else if (auto8A9569AC_val == "SET") {
        lib22142002_gv_dN_AutoDayDuration = StringToInt(StringWord(EventChatMessage(false), 4));
        if ((lib22142002_gv_dN_AutoDayDuration < 1)) {
            lib22142002_gv_dN_AutoDayDuration = 240;
        }

        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7B105E02") + IntToText(lib22142002_gv_dN_AutoDayDuration) + StringExternal("Param/Value/lib_22142002_1D6B5448")));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SC_WeatherWIP_Init () {
    lib22142002_gt_C_SC_WeatherWIP = TriggerCreate("lib22142002_gt_C_SC_WeatherWIP_Func");
    TriggerEnable(lib22142002_gt_C_SC_WeatherWIP, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SC_WeatherWIP, c_playerAny, "-Automatic Days", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Sunburn ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_SunburnONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto606DF2A0_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto606DF2A0_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto606DF2A0_val == "ON") {
        if ((lib22142002_gv_dN_Sunburn == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F3DD9553")));
            lib22142002_gv_dN_Sunburn = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_11360AED"));
        }

    }
    else if (auto606DF2A0_val == "OFF") {
        if ((lib22142002_gv_dN_Sunburn == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B1CBAD48")));
            lib22142002_gv_dN_Sunburn = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_2C41E122"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_SunburnONOFF_Init () {
    lib22142002_gt_C_SCW_SunburnONOFF = TriggerCreate("lib22142002_gt_C_SCW_SunburnONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_SunburnONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_SunburnONOFF, c_playerAny, "-Sunburn", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_HyperSunburn ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_HyperSunburnONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto76590531_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto76590531_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto76590531_val == "ON") {
        if ((lib22142002_gv_dN_HyperSunburn == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4FB94537")));
            lib22142002_gv_dN_HyperSunburn = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_CFC87C6C"));
        }

    }
    else if (auto76590531_val == "OFF") {
        if ((lib22142002_gv_dN_HyperSunburn == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1B87115F")));
            lib22142002_gv_dN_HyperSunburn = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_251DF53B"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_HyperSunburnONOFF_Init () {
    lib22142002_gt_C_SCW_HyperSunburnONOFF = TriggerCreate("lib22142002_gt_C_SCW_HyperSunburnONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_HyperSunburnONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_HyperSunburnONOFF, c_playerAny, "-Hypersunburn", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Coldnight ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_ColdnightONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto9585DB60_val;
    unitgroup autoBCBB4A5A_g;
    int autoBCBB4A5A_u;
    unit autoBCBB4A5A_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto9585DB60_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto9585DB60_val == "ON") {
        if ((lib22142002_gv_dN_Coldnight == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_79776B54")));
            lib22142002_gv_dN_Coldnight = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_7B98AD79"));
        }

    }
    else if (auto9585DB60_val == "OFF") {
        if ((lib22142002_gv_dN_Coldnight == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C66C6A1D")));
            lib22142002_gv_dN_Coldnight = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_BEA409FF"));
            autoBCBB4A5A_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
            autoBCBB4A5A_u = UnitGroupCount(autoBCBB4A5A_g, c_unitCountAll);
            for (;; autoBCBB4A5A_u -= 1) {
                autoBCBB4A5A_var = UnitGroupUnitFromEnd(autoBCBB4A5A_g, autoBCBB4A5A_u);
                if (autoBCBB4A5A_var == null) { break; }
                UnitBehaviorRemove(autoBCBB4A5A_var, "FlashFreezeLevel3", 1);
            }
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_ColdnightONOFF_Init () {
    lib22142002_gt_C_SCW_ColdnightONOFF = TriggerCreate("lib22142002_gt_C_SCW_ColdnightONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_ColdnightONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_ColdnightONOFF, c_playerAny, "-Coldnight", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Hypercoldnight ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_HypercoldnightONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto048F4B88_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto048F4B88_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto048F4B88_val == "ON") {
        if ((lib22142002_gv_dN_HyperColdnight == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_70374474")));
            lib22142002_gv_dN_HyperColdnight = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_78C4880C"));
        }

    }
    else if (auto048F4B88_val == "OFF") {
        if ((lib22142002_gv_dN_HyperColdnight == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B331949C")));
            lib22142002_gv_dN_HyperColdnight = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_5227C252"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_HypercoldnightONOFF_Init () {
    lib22142002_gt_C_SCW_HypercoldnightONOFF = TriggerCreate("lib22142002_gt_C_SCW_HypercoldnightONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_HypercoldnightONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_HypercoldnightONOFF, c_playerAny, "-Coldnight", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Hazardoussun ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_HazardoussunONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto3EDBC466_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto3EDBC466_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto3EDBC466_val == "ON") {
        if ((lib22142002_gv_dN_Hazardoussun == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AB691760")));
            lib22142002_gv_dN_Hazardoussun = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_7DFFF925"));
        }

    }
    else if (auto3EDBC466_val == "OFF") {
        if ((lib22142002_gv_dN_Hazardoussun == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E7EE4D4E")));
            lib22142002_gv_dN_Hazardoussun = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_229C3009"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_HazardoussunONOFF_Init () {
    lib22142002_gt_C_SCW_HazardoussunONOFF = TriggerCreate("lib22142002_gt_C_SCW_HazardoussunONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_HazardoussunONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_HazardoussunONOFF, c_playerAny, "-Hazardoussun", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Darknight ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_DarknightONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto0C045890_val;
    unitgroup auto52954723_g;
    int auto52954723_u;
    unit auto52954723_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0C045890_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto0C045890_val == "ON") {
        if ((lib22142002_gv_dN_Darknight == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6C0FD8CE")));
            lib22142002_gv_dN_Darknight = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_0D845C64"));
        }

    }
    else if (auto0C045890_val == "OFF") {
        if ((lib22142002_gv_dN_Darknight == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_374FC092")));
            lib22142002_gv_dN_Darknight = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_E93BF325"));
            auto52954723_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            auto52954723_u = UnitGroupCount(auto52954723_g, c_unitCountAll);
            for (;; auto52954723_u -= 1) {
                auto52954723_var = UnitGroupUnitFromEnd(auto52954723_g, auto52954723_u);
                if (auto52954723_var == null) { break; }
                UnitBehaviorRemove(auto52954723_var, "DarkNight", c_unitBehaviorCountAll);
            }
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_DarknightONOFF_Init () {
    lib22142002_gt_C_SCW_DarknightONOFF = TriggerCreate("lib22142002_gt_C_SCW_DarknightONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_DarknightONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_DarknightONOFF, c_playerAny, "-Darknight", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Darkwind ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_DarkwindONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoAFFBD59F_val;
    unitgroup auto97EB5BEB_g;
    int auto97EB5BEB_u;
    unit auto97EB5BEB_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoAFFBD59F_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (autoAFFBD59F_val == "ON") {
        if ((lib22142002_gv_dN_Darkwind == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B55FCFE1")));
            lib22142002_gv_dN_Darkwind = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_2324D128"));
            SoundPlayForPlayer(SoundLink("DEITY_DayNight_DarkWind", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
            lib22142002_gv_dN_DarkwindSound = SoundLastPlayed();
        }

    }
    else if (autoAFFBD59F_val == "OFF") {
        if ((lib22142002_gv_dN_Darkwind == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7AC2B73E")));
            lib22142002_gv_dN_Darkwind = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_4E476571"));
            SoundStop(lib22142002_gv_dN_DarkwindSound, true);
            auto97EB5BEB_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            auto97EB5BEB_u = UnitGroupCount(auto97EB5BEB_g, c_unitCountAll);
            for (;; auto97EB5BEB_u -= 1) {
                auto97EB5BEB_var = UnitGroupUnitFromEnd(auto97EB5BEB_g, auto97EB5BEB_u);
                if (auto97EB5BEB_var == null) { break; }
                UnitBehaviorRemove(auto97EB5BEB_var, "DarkWind", c_unitBehaviorCountAll);
            }
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_DarkwindONOFF_Init () {
    lib22142002_gt_C_SCW_DarkwindONOFF = TriggerCreate("lib22142002_gt_C_SCW_DarkwindONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_DarkwindONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_DarkwindONOFF, c_playerAny, "-Darkwind", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_Darkfog ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_DarkfogONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoBB02CD0B_val;
    unitgroup auto37F84BC6_g;
    int auto37F84BC6_u;
    unit auto37F84BC6_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoBB02CD0B_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (autoBB02CD0B_val == "ON") {
        if ((lib22142002_gv_dN_Darkfog == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_44A0627B")));
            lib22142002_gv_dN_Darkfog = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_C24B6E42"));
            SoundPlayForPlayer(SoundLink("DEITY_DayNight_DarkFog", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
            lib22142002_gv_dN_DarkfogSound = SoundLastPlayed();
        }

    }
    else if (autoBB02CD0B_val == "OFF") {
        if ((lib22142002_gv_dN_Darkfog == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E7C658D5")));
            lib22142002_gv_dN_Darkfog = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_ED21CE21"));
            SoundStop(lib22142002_gv_dN_DarkfogSound, true);
            auto37F84BC6_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            auto37F84BC6_u = UnitGroupCount(auto37F84BC6_g, c_unitCountAll);
            for (;; auto37F84BC6_u -= 1) {
                auto37F84BC6_var = UnitGroupUnitFromEnd(auto37F84BC6_g, auto37F84BC6_u);
                if (auto37F84BC6_var == null) { break; }
                UnitBehaviorRemove(auto37F84BC6_var, "DarkFog", c_unitBehaviorCountAll);
            }
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_DarkfogONOFF_Init () {
    lib22142002_gt_C_SCW_DarkfogONOFF = TriggerCreate("lib22142002_gt_C_SCW_DarkfogONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_DarkfogONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_DarkfogONOFF, c_playerAny, "-Darkfog", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_CorruptedDay ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_CorruptedDayONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto95BD5F71_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto95BD5F71_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto95BD5F71_val == "ON") {
        if ((lib22142002_gv_dN_CorruptedDay == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7BAEC03B")));
            lib22142002_gv_dN_CorruptedDay = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_FC2E4645"));
        }

    }
    else if (auto95BD5F71_val == "OFF") {
        if ((lib22142002_gv_dN_CorruptedDay == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1E705F29")));
            lib22142002_gv_dN_CorruptedDay = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_C4B055DD"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_CorruptedDayONOFF_Init () {
    lib22142002_gt_C_SCW_CorruptedDayONOFF = TriggerCreate("lib22142002_gt_C_SCW_CorruptedDayONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_CorruptedDayONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_CorruptedDayONOFF, c_playerAny, "-CorruptedDay", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: C_SCW_CorruptedNight ON/OFF
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_C_SCW_CorruptedNightONOFF_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto1C00D7D5_val;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto1C00D7D5_val = StringWord(StringCase(EventChatMessage(false), true), 2);
    if (auto1C00D7D5_val == "ON") {
        if ((lib22142002_gv_dN_CorruptedNight == false)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E30570E6")));
            lib22142002_gv_dN_CorruptedNight = true;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_580DF06E"));
        }

    }
    else if (auto1C00D7D5_val == "OFF") {
        if ((lib22142002_gv_dN_CorruptedNight == true)) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_14C4EC26")));
            lib22142002_gv_dN_CorruptedNight = false;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_22142002_F6A50614"));
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_C_SCW_CorruptedNightONOFF_Init () {
    lib22142002_gt_C_SCW_CorruptedNightONOFF = TriggerCreate("lib22142002_gt_C_SCW_CorruptedNightONOFF_Func");
    TriggerEnable(lib22142002_gt_C_SCW_CorruptedNightONOFF, false);
    TriggerAddEventChatMessage(lib22142002_gt_C_SCW_CorruptedNightONOFF, c_playerAny, "-CorruptedNight", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: WIP
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_WIP_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "KaraxGateway", 0, EventPlayer(), CameraGetTarget(EventPlayer()), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_WIP_Init () {
    lib22142002_gt_WIP = TriggerCreate("lib22142002_gt_WIP_Func");
    TriggerEnable(lib22142002_gt_WIP, false);
    TriggerAddEventChatMessage(lib22142002_gt_WIP, c_playerAny, "-WIP", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RCZ
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_RCZ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC9A7221E_g;
    int autoC9A7221E_u;
    unit autoC9A7221E_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoC9A7221E_g = UnitGroupSelected(EventPlayer());
    autoC9A7221E_u = UnitGroupCount(autoC9A7221E_g, c_unitCountAll);
    for (;; autoC9A7221E_u -= 1) {
        autoC9A7221E_var = UnitGroupUnitFromEnd(autoC9A7221E_g, autoC9A7221E_u);
        if (autoC9A7221E_var == null) { break; }
        UnitBehaviorAdd(autoC9A7221E_var, "EnthralledZerg", autoC9A7221E_var, 1);
        UnitBehaviorAdd(autoC9A7221E_var, "UEDSkin", autoC9A7221E_var, 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_RCZ_Init () {
    lib22142002_gt_RCZ = TriggerCreate("lib22142002_gt_RCZ_Func");
    TriggerEnable(lib22142002_gt_RCZ, false);
    TriggerAddEventChatMessage(lib22142002_gt_RCZ, c_playerAny, "-RCZ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UntitledTrigger001_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_sC_SourcePlayer;
    playergroup lv_sC_GroupSourcePlayers;
    string lv_sC_RespondTextSourceGroupName;
    int lv_sC_OtherPlayer;
    playergroup lv_sC_GroupOtherPlayers;
    string lv_sC_RespondTextOtherGroupName;
    int lv_sC_TargetPlayer;
    playergroup lv_sC_GroupTargetPlayers;
    string lv_sC_RespondTextTargetGroupName;
    unit lv_sC_TargetUnit;
    playergroup lv_sC_InterestPlayers;
    string lv_sC_CommandTypeText;
    bool lv_sC_PresetOnOffOption;
    string lv_sC_RespondTextOnOffOption;
    bool lv_sC_AnyUnitSelected;
    unitgroup lv_sC_GroupTargetUnits;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sC_SourcePlayer = -1;
    lv_sC_GroupSourcePlayers = PlayerGroupEmpty();
    lv_sC_RespondTextSourceGroupName = "";
    lv_sC_OtherPlayer = -1;
    lv_sC_GroupOtherPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextOtherGroupName = "";
    lv_sC_TargetPlayer = -1;
    lv_sC_GroupTargetPlayers = PlayerGroupEmpty();
    lv_sC_RespondTextTargetGroupName = "";
    lv_sC_InterestPlayers = PlayerGroupEmpty();
    lv_sC_CommandTypeText = "";
    lv_sC_PresetOnOffOption = true;
    lv_sC_RespondTextOnOffOption = "";
    lv_sC_GroupTargetUnits = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CinematicMode(true, PlayerGroupSingle(lv_sC_TargetPlayer), c_transitionDurationImmediate);
    ConversationCreate(true);
    libNtve_gf_DisplayBossBar(1, "Assets\\Textures\\ui_chatbaricons_terran_individual.dds", StringExternal("Param/Value/lib_22142002_CCC3E8B3"), 100, PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UntitledTrigger001_Init () {
    lib22142002_gt_UntitledTrigger001 = TriggerCreate("lib22142002_gt_UntitledTrigger001_Func");
    TriggerEnable(lib22142002_gt_UntitledTrigger001, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEITY Maintance
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DEITYMaintance_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(lib22142002_gt_DM_StatusApply, true, false);
    TriggerExecute(lib22142002_gt_DM_VisionApply, true, false);
    TriggerExecute(lib22142002_gt_DM_ControlGroups, true, false);
    if ((PlayerGroupCount(lib22142002_gv_dEITYGroup) > 0)) {
        TriggerEnable(lib22142002_gt_CMV_Update, true);
        TriggerEnable(lib22142002_gt_CMV_Destroy, true);
        TriggerEnable(lib22142002_gt_MRB_Select, true);
        TriggerEnable(lib22142002_gt_MRB_Deselect, true);
    }
    else {
        TriggerEnable(lib22142002_gt_CMV_Update, false);
        TriggerEnable(lib22142002_gt_CMV_Destroy, false);
        TriggerEnable(lib22142002_gt_MRB_Select, false);
        TriggerEnable(lib22142002_gt_MRB_Deselect, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DEITYMaintance_Init () {
    lib22142002_gt_DEITYMaintance = TriggerCreate("lib22142002_gt_DEITYMaintance_Func");
    TriggerEnable(lib22142002_gt_DEITYMaintance, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DM_ControlGroups
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DM_ControlGroups_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_needHelp;

    // Automatic Variable Declarations
    playergroup autoA4741C59_g;
    int autoA4741C59_var;
    const int auto823635E6_ae = 6;
    int auto823635E6_var;
    unitgroup auto3CC50F93_g;
    int auto3CC50F93_u;
    unit auto3CC50F93_var;
    unitgroup autoF66A8486_g;
    int autoF66A8486_u;
    unit autoF66A8486_var;
    unitgroup auto135EB218_g;
    int auto135EB218_u;
    unit auto135EB218_var;
    unitgroup auto78CB2B46_g;
    int auto78CB2B46_u;
    unit auto78CB2B46_var;
    unitgroup autoC0080FBA_g;
    int autoC0080FBA_u;
    unit autoC0080FBA_var;
    unitgroup auto1692186E_g;
    int auto1692186E_u;
    unit auto1692186E_var;
    unitgroup auto92ED88FC_g;
    int auto92ED88FC_u;
    unit auto92ED88FC_var;
    unitgroup auto7F55DD91_g;
    int auto7F55DD91_u;
    unit auto7F55DD91_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoA4741C59_g = lib22142002_gv_dEITYGroup;
    autoA4741C59_var = -1;
    while (true) {
        autoA4741C59_var = PlayerGroupNextPlayer(autoA4741C59_g, autoA4741C59_var);
        if (autoA4741C59_var < 0) { break; }
        if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 1), c_unitCountAlive) != 1) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 1), 1)) != "TerranCreator"))) {
            lv_needHelp = true;
        }
        else {
            if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 2), c_unitCountAlive) != 1) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 2), 1)) != "ZergCreator"))) {
                lv_needHelp = true;
            }
            else {
                if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 3), c_unitCountAlive) != 1) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 3), 1)) != "ProtossCreator"))) {
                    lv_needHelp = true;
                }
                else {
                    if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 4), c_unitCountAlive) != 1) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 4), 1)) != "OtherCreator"))) {
                        lv_needHelp = true;
                    }
                    else {
                        if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 5), c_unitCountAlive) != 6) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 1)) != "TerranEffectCreator01") || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 2)) != "TerranEffectCreator02") || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 3)) != "ZergEffectCreator01") || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 4)) != "ZergEffectCreator02") || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 5)) != "ProtossEffectCreator01") || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 5), 6)) != "ProtossEffectCreator02"))) {
                            lv_needHelp = true;
                        }
                        else {
                            if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 6), c_unitCountAlive) != 1) || (UnitGetType(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 6), 1)) != "DEITYUpgradeCreator"))) {
                                lv_needHelp = true;
                            }
                            else {
                                if (((lib22142002_gv_customCreator001 == true) || (lib22142002_gv_customCreator002 == true) || (lib22142002_gv_customCreator003 == true) || (lib22142002_gv_customCreator004 == true) || (lib22142002_gv_customCreator005 == true) || (lib22142002_gv_customCreator006 == true) || (lib22142002_gv_customCreator007 == true) || (lib22142002_gv_customCreator008 == true))) {
                                    if ((libNtve_gf_UnitGroupIsDead(UnitControlGroup(autoA4741C59_var, 7)) == true)) {
                                        lv_needHelp = true;
                                    }
                                    else {
                                        if (((UnitGroupCount(UnitControlGroup(autoA4741C59_var, 7), c_unitCountAlive) == 0) || (UnitGroupCount(UnitControlGroup(autoA4741C59_var, 7), c_unitCountAlive) > 8) || (UnitHasBehavior2(UnitGroupUnit(UnitControlGroup(autoA4741C59_var, 7), 1), "DEITYMainTools") == false))) {
                                            lv_needHelp = true;
                                        }

                                    }
                                }

                            }
                        }
                    }
                }
            }
        }
        if ((lv_needHelp == true)) {
            auto823635E6_var = 1;
            for ( ; auto823635E6_var <= auto823635E6_ae; auto823635E6_var += 1 ) {
                UnitControlGroupClear(autoA4741C59_var, auto823635E6_var);
                UnitControlGroupAddUnits(autoA4741C59_var, auto823635E6_var, lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][auto823635E6_var]);
            }
            if (((lib22142002_gv_customCreator001 == true) || (lib22142002_gv_customCreator002 == true) || (lib22142002_gv_customCreator003 == true) || (lib22142002_gv_customCreator004 == true) || (lib22142002_gv_customCreator005 == true) || (lib22142002_gv_customCreator006 == true) || (lib22142002_gv_customCreator007 == true) || (lib22142002_gv_customCreator008 == true))) {
                UnitControlGroupClear(autoA4741C59_var, 7);
                if ((lib22142002_gv_customCreator002 == true)) {
                    if ((lib22142002_gv_customCreator001 == true)) {
                        auto3CC50F93_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                        auto3CC50F93_u = UnitGroupCount(auto3CC50F93_g, c_unitCountAll);
                        for (;; auto3CC50F93_u -= 1) {
                            auto3CC50F93_var = UnitGroupUnitFromEnd(auto3CC50F93_g, auto3CC50F93_u);
                            if (auto3CC50F93_var == null) { break; }
                            if ((UnitGetType(auto3CC50F93_var) == "Custom001Creator")) {
                                UnitControlGroupAddUnit(autoA4741C59_var, 7, auto3CC50F93_var);
                            }

                        }
                    }

                    autoF66A8486_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    autoF66A8486_u = UnitGroupCount(autoF66A8486_g, c_unitCountAll);
                    for (;; autoF66A8486_u -= 1) {
                        autoF66A8486_var = UnitGroupUnitFromEnd(autoF66A8486_g, autoF66A8486_u);
                        if (autoF66A8486_var == null) { break; }
                        if ((UnitGetType(autoF66A8486_var) == "Custom002Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, autoF66A8486_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator003 == true)) {
                    auto135EB218_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    auto135EB218_u = UnitGroupCount(auto135EB218_g, c_unitCountAll);
                    for (;; auto135EB218_u -= 1) {
                        auto135EB218_var = UnitGroupUnitFromEnd(auto135EB218_g, auto135EB218_u);
                        if (auto135EB218_var == null) { break; }
                        if ((UnitGetType(auto135EB218_var) == "Custom003Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, auto135EB218_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator004 == true)) {
                    auto78CB2B46_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    auto78CB2B46_u = UnitGroupCount(auto78CB2B46_g, c_unitCountAll);
                    for (;; auto78CB2B46_u -= 1) {
                        auto78CB2B46_var = UnitGroupUnitFromEnd(auto78CB2B46_g, auto78CB2B46_u);
                        if (auto78CB2B46_var == null) { break; }
                        if ((UnitGetType(auto78CB2B46_var) == "Custom004Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, auto78CB2B46_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator005 == true)) {
                    autoC0080FBA_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    autoC0080FBA_u = UnitGroupCount(autoC0080FBA_g, c_unitCountAll);
                    for (;; autoC0080FBA_u -= 1) {
                        autoC0080FBA_var = UnitGroupUnitFromEnd(autoC0080FBA_g, autoC0080FBA_u);
                        if (autoC0080FBA_var == null) { break; }
                        if ((UnitGetType(autoC0080FBA_var) == "Custom005Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, autoC0080FBA_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator006 == true)) {
                    auto1692186E_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    auto1692186E_u = UnitGroupCount(auto1692186E_g, c_unitCountAll);
                    for (;; auto1692186E_u -= 1) {
                        auto1692186E_var = UnitGroupUnitFromEnd(auto1692186E_g, auto1692186E_u);
                        if (auto1692186E_var == null) { break; }
                        if ((UnitGetType(auto1692186E_var) == "Custom006Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, auto1692186E_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator007 == true)) {
                    auto92ED88FC_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    auto92ED88FC_u = UnitGroupCount(auto92ED88FC_g, c_unitCountAll);
                    for (;; auto92ED88FC_u -= 1) {
                        auto92ED88FC_var = UnitGroupUnitFromEnd(auto92ED88FC_g, auto92ED88FC_u);
                        if (auto92ED88FC_var == null) { break; }
                        if ((UnitGetType(auto92ED88FC_var) == "Custom007Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, auto92ED88FC_var);
                        }

                    }
                }

                if ((lib22142002_gv_customCreator008 == true)) {
                    auto7F55DD91_g = lib22142002_gv_init_DEITYToolsControls[autoA4741C59_var][7];
                    auto7F55DD91_u = UnitGroupCount(auto7F55DD91_g, c_unitCountAll);
                    for (;; auto7F55DD91_u -= 1) {
                        auto7F55DD91_var = UnitGroupUnitFromEnd(auto7F55DD91_g, auto7F55DD91_u);
                        if (auto7F55DD91_var == null) { break; }
                        if ((UnitGetType(auto7F55DD91_var) == "Custom008Creator")) {
                            UnitControlGroupAddUnit(autoA4741C59_var, 7, auto7F55DD91_var);
                        }

                    }
                }

            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DM_ControlGroups_Init () {
    lib22142002_gt_DM_ControlGroups = TriggerCreate("lib22142002_gt_DM_ControlGroups_Func");
    TriggerEnable(lib22142002_gt_DM_ControlGroups, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DM_VisionApply
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DM_VisionApply_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto02AB9D29_ae = 15;
    int auto02AB9D29_var;
    string autoB33BFB1B_val;
    playergroup autoFCF35070_g;
    int autoFCF35070_var;
    playergroup auto8E23FC4D_g;
    int auto8E23FC4D_var;
    playergroup auto68968021_g;
    int auto68968021_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto02AB9D29_var = 0;
    for ( ; auto02AB9D29_var <= auto02AB9D29_ae; auto02AB9D29_var += 1 ) {
        autoB33BFB1B_val = lib22142002_gv_dEITY_GodSight[auto02AB9D29_var];
        if (autoB33BFB1B_val == "Full") {
            VisRevealerEnable(lib22142002_gv_dEITY_GodSightFull_Revealer[auto02AB9D29_var], true);
            autoFCF35070_g = PlayerGroupAll();
            autoFCF35070_var = -1;
            while (true) {
                autoFCF35070_var = PlayerGroupNextPlayer(autoFCF35070_g, autoFCF35070_var);
                if (autoFCF35070_var < 0) { break; }
                if ((autoFCF35070_var != auto02AB9D29_var) && (PlayerGetAlliance(autoFCF35070_var, c_allianceIdVision, auto02AB9D29_var) == false)) {
                    PlayerSetAlliance(autoFCF35070_var, c_allianceIdVision, auto02AB9D29_var, true);
                }

            }
        }
        else if (autoB33BFB1B_val == "Visible") {
            VisRevealerEnable(lib22142002_gv_dEITY_GodSightFull_Revealer[auto02AB9D29_var], false);
            auto8E23FC4D_g = PlayerGroupAll();
            auto8E23FC4D_var = -1;
            while (true) {
                auto8E23FC4D_var = PlayerGroupNextPlayer(auto8E23FC4D_g, auto8E23FC4D_var);
                if (auto8E23FC4D_var < 0) { break; }
                if ((auto8E23FC4D_var != auto02AB9D29_var)) {
                    if ((auto8E23FC4D_var != 0) && (auto8E23FC4D_var != 15) && (lib22142002_gv_dEITY_GodSight[auto8E23FC4D_var] != "Full")) {
                        if ((PlayerGetAlliance(auto8E23FC4D_var, c_allianceIdVision, auto02AB9D29_var) == false)) {
                            PlayerSetAlliance(auto8E23FC4D_var, c_allianceIdVision, auto02AB9D29_var, true);
                        }

                    }
                    else {
                        if ((PlayerGetAlliance(auto8E23FC4D_var, c_allianceIdVision, auto02AB9D29_var) == true)) {
                            PlayerSetAlliance(auto8E23FC4D_var, c_allianceIdVision, auto02AB9D29_var, false);
                        }

                    }
                }

            }
        }
        else if (autoB33BFB1B_val == "Active") {
            VisRevealerEnable(lib22142002_gv_dEITY_GodSightFull_Revealer[auto02AB9D29_var], false);
            auto68968021_g = PlayerGroupActive();
            auto68968021_var = -1;
            while (true) {
                auto68968021_var = PlayerGroupNextPlayer(auto68968021_g, auto68968021_var);
                if (auto68968021_var < 0) { break; }
                if ((auto68968021_var != auto02AB9D29_var)) {
                    if ((auto68968021_var != 0) && (auto68968021_var != 15) && (lib22142002_gv_dEITY_GodSight[auto68968021_var] != "Full") && (lib22142002_gv_dEITY_GodSight[auto68968021_var] != "Visible")) {
                        if ((PlayerGetAlliance(auto68968021_var, c_allianceIdVision, auto02AB9D29_var) == false)) {
                            PlayerSetAlliance(auto68968021_var, c_allianceIdVision, auto02AB9D29_var, true);
                        }

                    }
                    else {
                        if ((PlayerGetAlliance(auto68968021_var, c_allianceIdVision, auto02AB9D29_var) == true)) {
                            PlayerSetAlliance(auto68968021_var, c_allianceIdVision, auto02AB9D29_var, false);
                        }

                    }
                }

            }
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DM_VisionApply_Init () {
    lib22142002_gt_DM_VisionApply = TriggerCreate("lib22142002_gt_DM_VisionApply_Func");
    TriggerEnable(lib22142002_gt_DM_VisionApply, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DM_StatusApply
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DM_StatusApply_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE6963297_g;
    int autoE6963297_var;
    const int auto5682AC5E_ae = 15;
    int auto5682AC5E_var;
    string auto7D819172_val;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE6963297_g = PlayerGroupAll();
    autoE6963297_var = -1;
    while (true) {
        autoE6963297_var = PlayerGroupNextPlayer(autoE6963297_g, autoE6963297_var);
        if (autoE6963297_var < 0) { break; }
        auto5682AC5E_var = 0;
        for ( ; auto5682AC5E_var <= auto5682AC5E_ae; auto5682AC5E_var += 1 ) {
            if ((autoE6963297_var != auto5682AC5E_var)) {
                auto7D819172_val = lib22142002_gv_dEITY_GodMode[autoE6963297_var];
                if (auto7D819172_val == "DEITY") {
                    if ((PlayerGetAlliance(auto5682AC5E_var, c_allianceIdControl, autoE6963297_var) == false)) {
                        PlayerSetAlliance(auto5682AC5E_var, c_allianceIdControl, autoE6963297_var, true);
                    }

                    if ((PlayerGetAlliance(auto5682AC5E_var, c_allianceIdPower, autoE6963297_var) == false)) {
                        PlayerSetAlliance(auto5682AC5E_var, c_allianceIdPower, autoE6963297_var, true);
                    }

                    if ((PlayerGetAlliance(auto5682AC5E_var, c_allianceIdSpend, autoE6963297_var) == false)) {
                        PlayerSetAlliance(auto5682AC5E_var, c_allianceIdSpend, autoE6963297_var, true);
                    }

                    PlayerModifyPropertyInt(autoE6963297_var, c_playerPropMinerals, c_playerPropOperSetTo, 10000000);
                    PlayerModifyPropertyInt(autoE6963297_var, c_playerPropVespene, c_playerPropOperSetTo, 10000000);
                    PlayerModifyPropertyInt(autoE6963297_var, c_playerPropTerrazine, c_playerPropOperSetTo, 10000000);
                    PlayerModifyPropertyInt(autoE6963297_var, c_playerPropCustom, c_playerPropOperSetTo, 10000000);
                }
                else {
                }
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DM_StatusApply_Init () {
    lib22142002_gt_DM_StatusApply = TriggerCreate("lib22142002_gt_DM_StatusApply_Func");
    TriggerEnable(lib22142002_gt_DM_StatusApply, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GE_Enabler
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_GE_Enabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_DN_Effects, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_RespawnAHeroAB, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(lib22142002_gt_RespawnableUnitDies, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_CommandPostTakeover, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(lib22142002_gt_CommandPostSpawnUnitsSimple, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_CommandPostSpawnUnitsSpecial, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(lib22142002_gt_SE_AddSkill, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_SE_MorphkeepSkillSpot, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(lib22142002_gt_SE_Ability_RemoveAllabilities, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_GE_SacrificeTarget, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackDamage, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackRange, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackSpeed, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeCooldownReduction, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeEnergyMax, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeEnergyRegen, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeArmor, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeMax, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeRegen, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeMovementSpeed, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldArmor, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldMax, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldRegen, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeSightRange, true);
    TriggerEnable(lib22142002_gt_UC_UpgradeSpellDamage, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_GE_CameraFollowUnitDeath, true);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_Bounty_Reward, true);
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Initate, true);
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Update, true);
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Pressed, true);
    TriggerExecute(lib22142002_gt_Bounty_Dialogs_Initate, true, false);
    Wait(0.5, c_timeGame);
    TriggerEnable(lib22142002_gt_CCS_ButtonReactions, true);
    TriggerEnable(lib22142002_gt_CCS_CustomizeDialogCreation, true);
    TriggerEnable(lib22142002_gt_CCS_PlayerColors, true);
    TriggerEnable(lib22142002_gt_CCS_SliderReactions, true);
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated, true);
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained, true);
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived, true);
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged, true);
    TriggerExecute(lib22142002_gt_CCS_PlayerColors, true, false);
    TriggerExecute(lib22142002_gt_CCS_CustomizeDialogCreation, true, false);
    TriggerEnable(lib22142002_gt_CUT_Death, true);
    TriggerEnable(lib22142002_gt_CUT_TheBehavior, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_GE_Enabler_Init () {
    lib22142002_gt_GE_Enabler = TriggerCreate("lib22142002_gt_GE_Enabler_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_GE_Enabler, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Nexus Spawn
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_NexusSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto07872204_g;
    int auto07872204_var;
    unitgroup auto95BD98BD_g;
    int auto95BD98BD_u;
    unit auto95BD98BD_var;
    unitgroup autoE14BB6C3_g;
    int autoE14BB6C3_u;
    unit autoE14BB6C3_var;
    unitgroup auto158E60B6_g;
    int auto158E60B6_u;
    unit auto158E60B6_var;
    unitgroup autoBBA58E87_g;
    int autoBBA58E87_u;
    unit autoBBA58E87_var;
    unitgroup auto2258F852_g;
    int auto2258F852_u;
    unit auto2258F852_var;
    unitgroup auto21D1865A_g;
    int auto21D1865A_u;
    unit auto21D1865A_var;
    unitgroup auto84CEBEE8_g;
    int auto84CEBEE8_u;
    unit auto84CEBEE8_var;
    unitgroup auto983DA19C_g;
    int auto983DA19C_u;
    unit auto983DA19C_var;
    unitgroup auto13982099_g;
    int auto13982099_u;
    unit auto13982099_var;
    unitgroup auto5E1D69AF_g;
    int auto5E1D69AF_u;
    unit auto5E1D69AF_var;
    unitgroup auto4EA22A4C_g;
    int auto4EA22A4C_u;
    unit auto4EA22A4C_var;
    unitgroup auto2DA3ED6B_g;
    int auto2DA3ED6B_u;
    unit auto2DA3ED6B_var;
    unitgroup auto68084DAA_g;
    int auto68084DAA_u;
    unit auto68084DAA_var;
    unitgroup autoA2FFEDED_g;
    int autoA2FFEDED_u;
    unit autoA2FFEDED_var;
    unitgroup auto87C1BBA7_g;
    int auto87C1BBA7_u;
    unit auto87C1BBA7_var;
    unitgroup autoDEF31499_g;
    int autoDEF31499_u;
    unit autoDEF31499_var;
    unitgroup autoD8B4CC42_g;
    int autoD8B4CC42_u;
    unit autoD8B4CC42_var;
    unitgroup autoA465EE5F_g;
    int autoA465EE5F_u;
    unit autoA465EE5F_var;
    unitgroup autoDD4415F3_g;
    int autoDD4415F3_u;
    unit autoDD4415F3_var;
    unitgroup auto26D669C3_g;
    int auto26D669C3_u;
    unit auto26D669C3_var;
    unitgroup auto5E0A6719_g;
    int auto5E0A6719_u;
    unit auto5E0A6719_var;
    unitgroup auto539E47F6_g;
    int auto539E47F6_u;
    unit auto539E47F6_var;
    unitgroup autoF7054F5A_g;
    int autoF7054F5A_u;
    unit autoF7054F5A_var;
    unitgroup auto60FE5122_g;
    int auto60FE5122_u;
    unit auto60FE5122_var;
    unitgroup auto49064200_g;
    int auto49064200_u;
    unit auto49064200_var;
    unitgroup autoDC67A225_g;
    int autoDC67A225_u;
    unit autoDC67A225_var;
    unitgroup autoAE66FD39_g;
    int autoAE66FD39_u;
    unit autoAE66FD39_var;
    unitgroup auto35DE392D_g;
    int auto35DE392D_u;
    unit auto35DE392D_var;
    unitgroup autoB3AA5E3E_g;
    int autoB3AA5E3E_u;
    unit autoB3AA5E3E_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto07872204_g = PlayerGroupAll();
    auto07872204_var = -1;
    while (true) {
        auto07872204_var = PlayerGroupNextPlayer(auto07872204_g, auto07872204_var);
        if (auto07872204_var < 0) { break; }
        if ((lib22142002_gv_mods_NexusSpawn[auto07872204_var] == true)) {
            if (true) {
                auto95BD98BD_g = UnitGroup("Barracks", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto95BD98BD_u = UnitGroupCount(auto95BD98BD_g, c_unitCountAll);
                for (;; auto95BD98BD_u -= 1) {
                    auto95BD98BD_var = UnitGroupUnitFromEnd(auto95BD98BD_g, auto95BD98BD_u);
                    if (auto95BD98BD_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto95BD98BD_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Marine", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Marine", 0, UnitGetOwner(auto95BD98BD_var), UnitGetPosition(auto95BD98BD_var), 270.0);
                    }

                }
                autoE14BB6C3_g = UnitGroup("EngineeringBay", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoE14BB6C3_u = UnitGroupCount(autoE14BB6C3_g, c_unitCountAll);
                for (;; autoE14BB6C3_u -= 1) {
                    autoE14BB6C3_var = UnitGroupUnitFromEnd(autoE14BB6C3_g, autoE14BB6C3_u);
                    if (autoE14BB6C3_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoE14BB6C3_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Reaper", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Reaper", 0, UnitGetOwner(autoE14BB6C3_var), UnitGetPosition(autoE14BB6C3_var), 270.0);
                    }

                }
                auto158E60B6_g = UnitGroup("GhostAcademy", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto158E60B6_u = UnitGroupCount(auto158E60B6_g, c_unitCountAll);
                for (;; auto158E60B6_u -= 1) {
                    auto158E60B6_var = UnitGroupUnitFromEnd(auto158E60B6_g, auto158E60B6_u);
                    if (auto158E60B6_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto158E60B6_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Ghost", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Ghost", 0, UnitGetOwner(auto158E60B6_var), UnitGetPosition(auto158E60B6_var), 270.0);
                    }

                }
                autoBBA58E87_g = UnitGroup("Factory", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoBBA58E87_u = UnitGroupCount(autoBBA58E87_g, c_unitCountAll);
                for (;; autoBBA58E87_u -= 1) {
                    autoBBA58E87_var = UnitGroupUnitFromEnd(autoBBA58E87_g, autoBBA58E87_u);
                    if (autoBBA58E87_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoBBA58E87_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Cyclone", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Cyclone", 0, UnitGetOwner(autoBBA58E87_var), UnitGetPosition(autoBBA58E87_var), 270.0);
                    }

                }
                auto2258F852_g = UnitGroup("Armory", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto2258F852_u = UnitGroupCount(auto2258F852_g, c_unitCountAll);
                for (;; auto2258F852_u -= 1) {
                    auto2258F852_var = UnitGroupUnitFromEnd(auto2258F852_g, auto2258F852_u);
                    if (auto2258F852_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto2258F852_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Thor", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Thor", 0, UnitGetOwner(auto2258F852_var), UnitGetPosition(auto2258F852_var), 270.0);
                    }

                }
                auto21D1865A_g = UnitGroup("Starport", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto21D1865A_u = UnitGroupCount(auto21D1865A_g, c_unitCountAll);
                for (;; auto21D1865A_u -= 1) {
                    auto21D1865A_var = UnitGroupUnitFromEnd(auto21D1865A_g, auto21D1865A_u);
                    if (auto21D1865A_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto21D1865A_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("VikingFighter", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "VikingFighter", 0, UnitGetOwner(auto21D1865A_var), UnitGetPosition(auto21D1865A_var), 270.0);
                    }

                }
                auto84CEBEE8_g = UnitGroup("FusionCore", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto84CEBEE8_u = UnitGroupCount(auto84CEBEE8_g, c_unitCountAll);
                for (;; auto84CEBEE8_u -= 1) {
                    auto84CEBEE8_var = UnitGroupUnitFromEnd(auto84CEBEE8_g, auto84CEBEE8_u);
                    if (auto84CEBEE8_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto84CEBEE8_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Battlecruiser", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Battlecruiser", 0, UnitGetOwner(auto84CEBEE8_var), UnitGetPosition(auto84CEBEE8_var), 270.0);
                    }

                }
            }

            if (true) {
                auto983DA19C_g = UnitGroup("SpawningPool", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto983DA19C_u = UnitGroupCount(auto983DA19C_g, c_unitCountAll);
                for (;; auto983DA19C_u -= 1) {
                    auto983DA19C_var = UnitGroupUnitFromEnd(auto983DA19C_g, auto983DA19C_u);
                    if (auto983DA19C_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto983DA19C_var), c_playerPropSuppliesUsed) < 199)) {
                        UnitCreate(2, "Zergling", 0, UnitGetOwner(auto983DA19C_var), UnitGetPosition(auto983DA19C_var), 270.0);
                    }

                }
                auto13982099_g = UnitGroup("EvolutionChamber", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto13982099_u = UnitGroupCount(auto13982099_g, c_unitCountAll);
                for (;; auto13982099_u -= 1) {
                    auto13982099_var = UnitGroupUnitFromEnd(auto13982099_g, auto13982099_u);
                    if (auto13982099_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto13982099_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Queen", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Queen", 0, UnitGetOwner(auto13982099_var), UnitGetPosition(auto13982099_var), 270.0);
                    }

                }
                auto5E1D69AF_g = UnitGroup("BanelingNest", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto5E1D69AF_u = UnitGroupCount(auto5E1D69AF_g, c_unitCountAll);
                for (;; auto5E1D69AF_u -= 1) {
                    auto5E1D69AF_var = UnitGroupUnitFromEnd(auto5E1D69AF_g, auto5E1D69AF_u);
                    if (auto5E1D69AF_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto5E1D69AF_var), c_playerPropSuppliesUsed) < 199)) {
                        UnitCreate(2, "Baneling", 0, UnitGetOwner(auto5E1D69AF_var), UnitGetPosition(auto5E1D69AF_var), 270.0);
                    }

                }
                auto4EA22A4C_g = UnitGroup("RoachWarren", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto4EA22A4C_u = UnitGroupCount(auto4EA22A4C_g, c_unitCountAll);
                for (;; auto4EA22A4C_u -= 1) {
                    auto4EA22A4C_var = UnitGroupUnitFromEnd(auto4EA22A4C_g, auto4EA22A4C_u);
                    if (auto4EA22A4C_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto4EA22A4C_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Roach", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Roach", 0, UnitGetOwner(auto4EA22A4C_var), UnitGetPosition(auto4EA22A4C_var), 270.0);
                    }

                }
                auto2DA3ED6B_g = UnitGroup("HydraliskDen", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto2DA3ED6B_u = UnitGroupCount(auto2DA3ED6B_g, c_unitCountAll);
                for (;; auto2DA3ED6B_u -= 1) {
                    auto2DA3ED6B_var = UnitGroupUnitFromEnd(auto2DA3ED6B_g, auto2DA3ED6B_u);
                    if (auto2DA3ED6B_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto2DA3ED6B_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Hydralisk", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Hydralisk", 0, UnitGetOwner(auto2DA3ED6B_var), UnitGetPosition(auto2DA3ED6B_var), 270.0);
                    }

                }
                auto68084DAA_g = UnitGroup("LurkerDenMP", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto68084DAA_u = UnitGroupCount(auto68084DAA_g, c_unitCountAll);
                for (;; auto68084DAA_u -= 1) {
                    auto68084DAA_var = UnitGroupUnitFromEnd(auto68084DAA_g, auto68084DAA_u);
                    if (auto68084DAA_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto68084DAA_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("LurkerMP", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "LurkerMP", 0, UnitGetOwner(auto68084DAA_var), UnitGetPosition(auto68084DAA_var), 270.0);
                    }

                }
                autoA2FFEDED_g = UnitGroup("InfestationPit", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoA2FFEDED_u = UnitGroupCount(autoA2FFEDED_g, c_unitCountAll);
                for (;; autoA2FFEDED_u -= 1) {
                    autoA2FFEDED_var = UnitGroupUnitFromEnd(autoA2FFEDED_g, autoA2FFEDED_u);
                    if (autoA2FFEDED_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoA2FFEDED_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Infestor", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Infestor", 0, UnitGetOwner(autoA2FFEDED_var), UnitGetPosition(autoA2FFEDED_var), 270.0);
                    }

                }
                auto87C1BBA7_g = UnitGroup("Spire", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto87C1BBA7_u = UnitGroupCount(auto87C1BBA7_g, c_unitCountAll);
                for (;; auto87C1BBA7_u -= 1) {
                    auto87C1BBA7_var = UnitGroupUnitFromEnd(auto87C1BBA7_g, auto87C1BBA7_u);
                    if (auto87C1BBA7_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto87C1BBA7_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Mutalisk", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Mutalisk", 0, UnitGetOwner(auto87C1BBA7_var), UnitGetPosition(auto87C1BBA7_var), 270.0);
                    }

                }
                autoDEF31499_g = UnitGroup("GreaterSpire", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoDEF31499_u = UnitGroupCount(autoDEF31499_g, c_unitCountAll);
                for (;; autoDEF31499_u -= 1) {
                    autoDEF31499_var = UnitGroupUnitFromEnd(autoDEF31499_g, autoDEF31499_u);
                    if (autoDEF31499_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoDEF31499_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("BroodLord", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "BroodLord", 0, UnitGetOwner(autoDEF31499_var), UnitGetPosition(autoDEF31499_var), 270.0);
                    }

                }
                autoD8B4CC42_g = UnitGroup("UltraliskCavern", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoD8B4CC42_u = UnitGroupCount(autoD8B4CC42_g, c_unitCountAll);
                for (;; autoD8B4CC42_u -= 1) {
                    autoD8B4CC42_var = UnitGroupUnitFromEnd(autoD8B4CC42_g, autoD8B4CC42_u);
                    if (autoD8B4CC42_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoD8B4CC42_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Ultralisk", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Ultralisk", 0, UnitGetOwner(autoD8B4CC42_var), UnitGetPosition(autoD8B4CC42_var), 270.0);
                    }

                }
                autoA465EE5F_g = UnitGroup("NydusCanal", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoA465EE5F_u = UnitGroupCount(autoA465EE5F_g, c_unitCountAll);
                for (;; autoA465EE5F_u -= 1) {
                    autoA465EE5F_var = UnitGroupUnitFromEnd(autoA465EE5F_g, autoA465EE5F_u);
                    if (autoA465EE5F_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoA465EE5F_var), c_playerPropSuppliesUsed) < 200)) {
                        UnitCreate(1, "KerriganInfestBroodling", 0, UnitGetOwner(autoA465EE5F_var), UnitGetPosition(autoA465EE5F_var), 270.0);
                    }

                }
            }

            if (true) {
                autoDD4415F3_g = UnitGroup("Gateway", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoDD4415F3_u = UnitGroupCount(autoDD4415F3_g, c_unitCountAll);
                for (;; autoDD4415F3_u -= 1) {
                    autoDD4415F3_var = UnitGroupUnitFromEnd(autoDD4415F3_g, autoDD4415F3_u);
                    if (autoDD4415F3_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoDD4415F3_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Zealot", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Zealot", 0, UnitGetOwner(autoDD4415F3_var), UnitGetPosition(autoDD4415F3_var), 270.0);
                    }

                }
                auto26D669C3_g = UnitGroup("WarpGate", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto26D669C3_u = UnitGroupCount(auto26D669C3_g, c_unitCountAll);
                for (;; auto26D669C3_u -= 1) {
                    auto26D669C3_var = UnitGroupUnitFromEnd(auto26D669C3_g, auto26D669C3_u);
                    if (auto26D669C3_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto26D669C3_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Zealot", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Zealot", 0, UnitGetOwner(auto26D669C3_var), UnitGetPosition(auto26D669C3_var), 270.0);
                    }

                }
                auto5E0A6719_g = UnitGroup("Forge", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto5E0A6719_u = UnitGroupCount(auto5E0A6719_g, c_unitCountAll);
                for (;; auto5E0A6719_u -= 1) {
                    auto5E0A6719_var = UnitGroupUnitFromEnd(auto5E0A6719_g, auto5E0A6719_u);
                    if (auto5E0A6719_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto5E0A6719_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Sentry", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Sentry", 0, UnitGetOwner(auto5E0A6719_var), UnitGetPosition(auto5E0A6719_var), 270.0);
                    }

                }
                auto539E47F6_g = UnitGroup("CyberneticsCore", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto539E47F6_u = UnitGroupCount(auto539E47F6_g, c_unitCountAll);
                for (;; auto539E47F6_u -= 1) {
                    auto539E47F6_var = UnitGroupUnitFromEnd(auto539E47F6_g, auto539E47F6_u);
                    if (auto539E47F6_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto539E47F6_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Stalker", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Stalker", 0, UnitGetOwner(auto539E47F6_var), UnitGetPosition(auto539E47F6_var), 270.0);
                    }

                }
                autoF7054F5A_g = UnitGroup("TwilightCouncil", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoF7054F5A_u = UnitGroupCount(autoF7054F5A_g, c_unitCountAll);
                for (;; autoF7054F5A_u -= 1) {
                    autoF7054F5A_var = UnitGroupUnitFromEnd(autoF7054F5A_g, autoF7054F5A_u);
                    if (autoF7054F5A_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoF7054F5A_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Adept", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Adept", 0, UnitGetOwner(autoF7054F5A_var), UnitGetPosition(autoF7054F5A_var), 270.0);
                    }

                }
                auto60FE5122_g = UnitGroup("RoboticsFacility", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto60FE5122_u = UnitGroupCount(auto60FE5122_g, c_unitCountAll);
                for (;; auto60FE5122_u -= 1) {
                    auto60FE5122_var = UnitGroupUnitFromEnd(auto60FE5122_g, auto60FE5122_u);
                    if (auto60FE5122_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto60FE5122_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Immortal", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Immortal", 0, UnitGetOwner(auto60FE5122_var), UnitGetPosition(auto60FE5122_var), 270.0);
                    }

                }
                auto49064200_g = UnitGroup("RoboticsBay", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto49064200_u = UnitGroupCount(auto49064200_g, c_unitCountAll);
                for (;; auto49064200_u -= 1) {
                    auto49064200_var = UnitGroupUnitFromEnd(auto49064200_g, auto49064200_u);
                    if (auto49064200_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto49064200_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Colossus", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Colossus", 0, UnitGetOwner(auto49064200_var), UnitGetPosition(auto49064200_var), 270.0);
                    }

                }
                autoDC67A225_g = UnitGroup("TemplarArchive", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoDC67A225_u = UnitGroupCount(autoDC67A225_g, c_unitCountAll);
                for (;; autoDC67A225_u -= 1) {
                    autoDC67A225_var = UnitGroupUnitFromEnd(autoDC67A225_g, autoDC67A225_u);
                    if (autoDC67A225_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoDC67A225_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("HighTemplar", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "HighTemplar", 0, UnitGetOwner(autoDC67A225_var), UnitGetPosition(autoDC67A225_var), 270.0);
                    }

                }
                autoAE66FD39_g = UnitGroup("DarkShrine", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoAE66FD39_u = UnitGroupCount(autoAE66FD39_g, c_unitCountAll);
                for (;; autoAE66FD39_u -= 1) {
                    autoAE66FD39_var = UnitGroupUnitFromEnd(autoAE66FD39_g, autoAE66FD39_u);
                    if (autoAE66FD39_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoAE66FD39_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("DarkTemplar", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "DarkTemplar", 0, UnitGetOwner(autoAE66FD39_var), UnitGetPosition(autoAE66FD39_var), 270.0);
                    }

                }
                auto35DE392D_g = UnitGroup("FleetBeacon", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto35DE392D_u = UnitGroupCount(auto35DE392D_g, c_unitCountAll);
                for (;; auto35DE392D_u -= 1) {
                    auto35DE392D_var = UnitGroupUnitFromEnd(auto35DE392D_g, auto35DE392D_u);
                    if (auto35DE392D_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto35DE392D_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("Carrier", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "Carrier", 0, UnitGetOwner(auto35DE392D_var), UnitGetPosition(auto35DE392D_var), 270.0);
                    }

                }
                autoB3AA5E3E_g = UnitGroup("Stargate", auto07872204_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                autoB3AA5E3E_u = UnitGroupCount(autoB3AA5E3E_g, c_unitCountAll);
                for (;; autoB3AA5E3E_u -= 1) {
                    autoB3AA5E3E_var = UnitGroupUnitFromEnd(autoB3AA5E3E_g, autoB3AA5E3E_u);
                    if (autoB3AA5E3E_var == null) { break; }
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoB3AA5E3E_var), c_playerPropSuppliesUsed) < (200 - FixedToInt(UnitTypeGetProperty("VoidRay", c_unitPropSuppliesUsed))))) {
                        UnitCreate(1, "VoidRay", 0, UnitGetOwner(autoB3AA5E3E_var), UnitGetPosition(autoB3AA5E3E_var), 270.0);
                    }

                }
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_NexusSpawn_Init () {
    lib22142002_gt_Mods_NexusSpawn = TriggerCreate("lib22142002_gt_Mods_NexusSpawn_Func");
    TriggerEnable(lib22142002_gt_Mods_NexusSpawn, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_Mods_NexusSpawn, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Killer Spawn
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_KillerSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_KillerSpawn[libNtve_gf_KillingPlayer()] == true)) {
        if ((UnitGetOwner(EventUnit()) != UnitGetOwner(libNtve_gf_KillingUnit())) && (UnitGetType(EventUnit()) != "Larva") && (UnitGetType(EventUnit()) != "Egg") && (UnitGetType(EventUnit()) != "Swarmling") && (UnitGetType(EventUnit()) != "Interceptor") && (UnitGetType(EventUnit()) != "InterceptorAiur") && (UnitGetType(EventUnit()) != "HydraliskLurkerEgg") && (UnitGetType(EventUnit()) != "TaldarimInterceptor") && (UnitGetType(EventUnit()) != "SelendisInterceptor") && (UnitGetType(EventUnit()) != "FlagshipInterceptor") && (PlayerGetAlliance(UnitGetOwner(EventUnit()), c_allianceIdPassive, UnitGetOwner(libNtve_gf_KillingUnit())) == false) && (UnitGetType(libNtve_gf_KillingUnit()) != "ProtossEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "ProtossEffectCreator01") && (UnitGetType(libNtve_gf_KillingUnit()) != "TerranEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "TerranEffectCreator01") && (UnitGetType(libNtve_gf_KillingUnit()) != "ZergEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "ZergEffectCreator01")) {
            if (((UnitGetType(libNtve_gf_KillingUnit()) == "InterceptorAiur"))) {
                UnitCreate(1, "CarrierAiur", 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
            }
            else {
                if (((UnitGetType(libNtve_gf_KillingUnit()) == "Interceptor"))) {
                    UnitCreate(1, "Carrier", 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
                }
                else {
                    if (((UnitGetType(libNtve_gf_KillingUnit()) == "KD8Charge"))) {
                        UnitCreate(1, "Reaper", 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
                    }
                    else {
                        UnitCreate(1, UnitGetType(libNtve_gf_KillingUnit()), 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
                    }
                }
            }
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_KillerSpawn_Init () {
    lib22142002_gt_Mods_KillerSpawn = TriggerCreate("lib22142002_gt_Mods_KillerSpawn_Func");
    TriggerEnable(lib22142002_gt_Mods_KillerSpawn, false);
    TriggerAddEventUnitDied(lib22142002_gt_Mods_KillerSpawn, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Killer Spawn 2
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_KillerSpawn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_KillerSpawn2[libNtve_gf_KillingPlayer()] == true)) {
        if ((UnitGetOwner(EventUnit()) != UnitGetOwner(libNtve_gf_KillingUnit())) && (UnitGetType(EventUnit()) != "Larva") && (UnitGetType(EventUnit()) != "Egg") && (UnitGetType(EventUnit()) != "Swarmling") && (UnitGetType(EventUnit()) != "Interceptor") && (UnitGetType(EventUnit()) != "InterceptorAiur") && (UnitGetType(EventUnit()) != "HydraliskLurkerEgg") && (UnitGetType(EventUnit()) != "TaldarimInterceptor") && (UnitGetType(EventUnit()) != "SelendisInterceptor") && (UnitGetType(EventUnit()) != "FlagshipInterceptor") && (PlayerGetAlliance(UnitGetOwner(EventUnit()), c_allianceIdPassive, UnitGetOwner(libNtve_gf_KillingUnit())) == false) && (UnitGetType(libNtve_gf_KillingUnit()) != "ProtossEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "ProtossEffectCreator01") && (UnitGetType(libNtve_gf_KillingUnit()) != "TerranEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "TerranEffectCreator01") && (UnitGetType(libNtve_gf_KillingUnit()) != "ZergEffectCreator02") && (UnitGetType(libNtve_gf_KillingUnit()) != "ZergEffectCreator01")) {
            UnitCreate(1, UnitGetType(EventUnit()), 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_KillerSpawn2_Init () {
    lib22142002_gt_Mods_KillerSpawn2 = TriggerCreate("lib22142002_gt_Mods_KillerSpawn2_Func");
    TriggerEnable(lib22142002_gt_Mods_KillerSpawn2, false);
    TriggerAddEventUnitDied(lib22142002_gt_Mods_KillerSpawn2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Twin Units
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_TwinUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_TwinUnits[UnitGetOwner(EventUnitCreatedUnit())] == true)) {
        Wait(0.01, c_timeGame);
        if ((UnitHasBehavior2(EventUnitCreatedUnit(), "DEITYTwinUnitsMark") == false) && (UnitGetType(UnitGetOriginalCaster(EventUnitCreatedUnit())) != "OtherCreator") && (UnitGetType(UnitGetOriginalCaster(EventUnitCreatedUnit())) != "ProtossCreator") && (UnitGetType(UnitGetOriginalCaster(EventUnitCreatedUnit())) != "TerranCreator") && (UnitGetType(UnitGetOriginalCaster(EventUnitCreatedUnit())) != "ZergCreator") && (UnitFilterMatch(EventUnitCreatedUnit(), UnitGetOwner(EventUnitCreatedUnit()), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterPassive - 32)) | (1 << (c_targetFilterSummoned - 32)) | (1 << (c_targetFilterMapBoss - 32)))) == true) && (UnitGetType(EventUnitCreatedUnit()) != "Larva")) {
            libNtve_gf_UnitCreateFacingPoint(1, UnitGetType(EventUnitCreatedUnit()), 0, UnitGetOwner(EventUnitCreatedUnit()), UnitGetPosition(EventUnitCreatedUnit()), UnitGetPosition(EventUnitCreatedUnit()));
            UnitBehaviorAdd(UnitLastCreated(), "DEITYTwinUnitsMark", UnitLastCreated(), 1);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 0), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 1), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 2), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 3), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 4), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 5), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), UnitOrder(EventUnitCreatedUnit(), 6), c_orderQueueAddToEnd);
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_TwinUnits_Init () {
    lib22142002_gt_Mods_TwinUnits = TriggerCreate("lib22142002_gt_Mods_TwinUnits_Func");
    TriggerEnable(lib22142002_gt_Mods_TwinUnits, false);
    TriggerAddEventUnitCreated(lib22142002_gt_Mods_TwinUnits, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Haunting Dead
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_HauntingDead_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_hD_UnitType;
    point lv_hD_Position;
    fixed lv_hD_FacingAngle;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_hD_UnitType = UnitGetType(EventUnit());
    lv_hD_Position = UnitGetPosition(EventUnit());
    lv_hD_FacingAngle = UnitGetFacing(EventUnit());

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_HauntingDead[EventPlayer()] == true)) {
        if ((EventUnitDamageDeathCheck(c_deathTypeImpact) == false) && (EventUnitDamageDeathCheck(c_deathTypeMorph) == false) && (EventUnitDamageDeathCheck(c_deathTypeRemove) == false) && (EventUnitDamageDeathCheck(c_deathTypeTimeout) == false) && (EventUnitDamageDeathCheck(c_deathTypeCancel) == false) && (EventUnitDamageDeathCheck(c_deathTypeEat) == false) && (EventUnitDamageDeathCheck(c_deathTypeSalvage) == false) && (EventUnitDamageDeathCheck(c_deathTypeUnderConstruction) == false) && (EventUnitDamageDeathCheck(c_deathTypeUnlink) == false) && (UnitFilterMatch(EventUnit(), UnitGetOwner(EventUnit()), UnitFilter(0, 0, (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterSummoned - 32)))) == true) && (UnitGetOwner(EventUnit()) != 14) && (UnitFilterMatch(EventUnit(), UnitGetOwner(EventUnit()), UnitFilter(0, 0, (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterPassive - 32)) | (1 << (c_targetFilterSummoned - 32)))) == true)) {
            Wait(20.0, c_timeGame);
            UnitCreate(1, lv_hD_UnitType, c_unitCreateIgnorePlacement, 14, lv_hD_Position, lv_hD_FacingAngle);
            UnitBehaviorAdd(UnitLastCreated(), "DEITYZombie", EventUnit(), 1);
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_HauntingDead_Init () {
    lib22142002_gt_Mods_HauntingDead = TriggerCreate("lib22142002_gt_Mods_HauntingDead_Func");
    TriggerEnable(lib22142002_gt_Mods_HauntingDead, false);
    TriggerAddEventUnitDied(lib22142002_gt_Mods_HauntingDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Alien Incubation
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_AlienIncubation_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_aI_SpawnAmount;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_aI_SpawnAmount = RoundI((UnitTypeGetProperty(UnitGetType(EventUnit()), c_unitPropSuppliesUsed) + 0.3));

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_AlienIncubationOwn[EventPlayer()] == true)) {
        if ((EventUnitDamageDeathCheck(c_deathTypeImpact) == false) && (EventUnitDamageDeathCheck(c_deathTypeMorph) == false) && (EventUnitDamageDeathCheck(c_deathTypeRemove) == false) && (EventUnitDamageDeathCheck(c_deathTypeTimeout) == false) && (EventUnitDamageDeathCheck(c_deathTypeCancel) == false) && (EventUnitDamageDeathCheck(c_deathTypeEat) == false) && (EventUnitDamageDeathCheck(c_deathTypeSalvage) == false) && (EventUnitDamageDeathCheck(c_deathTypeUnderConstruction) == false) && (EventUnitDamageDeathCheck(c_deathTypeUnlink) == false) && (UnitGetOwner(EventUnit()) != 14) && (UnitFilterMatch(EventUnit(), UnitGetOwner(EventUnit()), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterPassive - 32)) | (1 << (c_targetFilterSummoned - 32)))) == true) && (UnitGetType(EventUnit()) != "AlienIncubationBroodling") && (lv_aI_SpawnAmount > 0)) {
            UnitCreate(lv_aI_SpawnAmount, "AlienIncubationBroodling", c_unitCreateIgnorePlacement, 14, UnitGetPosition(EventUnit()), libNtve_gf_RandomAngle());
            UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(UnitGetOwner(EventUnit()), false));
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_AlienIncubation_Init () {
    lib22142002_gt_Mods_AlienIncubation = TriggerCreate("lib22142002_gt_Mods_AlienIncubation_Func");
    TriggerEnable(lib22142002_gt_Mods_AlienIncubation, false);
    TriggerAddEventUnitDied(lib22142002_gt_Mods_AlienIncubation, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mods_Kill Duplicate
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Mods_KillDuplicate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib22142002_gv_mods_100KillDuplicate[libNtve_gf_KillingPlayer()] == true) || (lib22142002_gv_mods_200KillDuplicate[libNtve_gf_KillingPlayer()] == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_mods_100KillDuplicate[libNtve_gf_KillingPlayer()] == true) && (UnitGetPropertyInt(libNtve_gf_KillingUnit(), c_unitPropKills, c_unitPropCurrent) >= 100)) {
        UnitSetPropertyFixed(libNtve_gf_KillingUnit(), c_unitPropKills, 0.0);
        UnitCreate(1, UnitGetType(libNtve_gf_KillingUnit()), 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(libNtve_gf_KillingUnit()), UnitGetFacing(libNtve_gf_KillingUnit()));
        SoundPlayAtPointForPlayer(SoundLink("Immortal_ReviveFinish", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(UnitLastCreated()), 0.0, 100.0, 0.0);
        libNtve_gf_CreateModelAtPoint("ZergHeroRevive", UnitGetPosition(UnitLastCreated()));
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        Wait(2.0, c_timeGame);
        libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    }
    else {
        if ((lib22142002_gv_mods_200KillDuplicate[libNtve_gf_KillingPlayer()] == true) && (UnitGetPropertyInt(libNtve_gf_KillingUnit(), c_unitPropKills, c_unitPropCurrent) >= 200)) {
            UnitSetPropertyFixed(libNtve_gf_KillingUnit(), c_unitPropKills, 0.0);
            UnitCreate(1, UnitGetType(libNtve_gf_KillingUnit()), 0, UnitGetOwner(libNtve_gf_KillingUnit()), UnitGetPosition(libNtve_gf_KillingUnit()), UnitGetFacing(libNtve_gf_KillingUnit()));
            SoundPlayAtPointForPlayer(SoundLink("Immortal_ReviveFinish", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(UnitLastCreated()), 0.0, 100.0, 0.0);
            libNtve_gf_CreateModelAtPoint("ZergHeroRevive", UnitGetPosition(UnitLastCreated()));
            ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
            Wait(2.0, c_timeGame);
            libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Mods_KillDuplicate_Init () {
    lib22142002_gt_Mods_KillDuplicate = TriggerCreate("lib22142002_gt_Mods_KillDuplicate_Func");
    TriggerEnable(lib22142002_gt_Mods_KillDuplicate, false);
    TriggerAddEventUnitDied(lib22142002_gt_Mods_KillDuplicate, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DN_Effects
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DN_Effects_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;
    unitgroup lv_burn;

    // Automatic Variable Declarations
    bool auto5D7DCCF7_val;
    unitgroup auto6431EFA0_g;
    int auto6431EFA0_u;
    unit auto6431EFA0_var;
    unitgroup auto160FD0DE_g;
    int auto160FD0DE_u;
    unit auto160FD0DE_var;
    unitgroup autoA11E9570_g;
    int autoA11E9570_u;
    unit autoA11E9570_var;
    unitgroup autoDB60FAAE_g;
    int autoDB60FAAE_u;
    unit autoDB60FAAE_var;
    unitgroup auto17334BD3_g;
    int auto17334BD3_u;
    unit auto17334BD3_var;
    playergroup auto866712A8_g;
    int auto866712A8_var;
    unitgroup autoB8EA8831_g;
    int autoB8EA8831_u;
    unit autoB8EA8831_var;
    playergroup auto4576F14B_g;
    int auto4576F14B_var;
    unitgroup auto49862A9C_g;
    int auto49862A9C_u;
    unit auto49862A9C_var;
    playergroup auto6CC514C2_g;
    int auto6CC514C2_var;
    unitgroup auto52A86BF7_g;
    int auto52A86BF7_u;
    unit auto52A86BF7_var;
    unitgroup auto5F0C27F8_g;
    int auto5F0C27F8_u;
    unit auto5F0C27F8_var;
    unitgroup auto435DC3E8_g;
    int auto435DC3E8_u;
    unit auto435DC3E8_var;
    playergroup auto979BDB02_g;
    int auto979BDB02_var;
    playergroup auto5C5C87B9_g;
    int auto5C5C87B9_var;
    playergroup autoA3A9C60A_g;
    int autoA3A9C60A_var;
    playergroup auto6404FBF3_g;
    int auto6404FBF3_var;

    // Variable Initialization
    lv_burn = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dN_EffectsVisualCounter += 1;
    auto5D7DCCF7_val = lib22142002_gv_dN_NightTime;
    if (auto5D7DCCF7_val == false) {
        if ((lib22142002_gv_dN_HyperSunburn == true)) {
            auto6431EFA0_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMassive) | (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
            auto6431EFA0_u = UnitGroupCount(auto6431EFA0_g, c_unitCountAll);
            for (;; auto6431EFA0_u -= 1) {
                auto6431EFA0_var = UnitGroupUnitFromEnd(auto6431EFA0_g, auto6431EFA0_u);
                if (auto6431EFA0_var == null) { break; }
                UnitBehaviorAdd(auto6431EFA0_var, "Sunrise", lv_u, 1);
            }
        }
        else {
            if ((lib22142002_gv_dN_Sunburn == true)) {
                auto160FD0DE_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                auto160FD0DE_u = UnitGroupCount(auto160FD0DE_g, c_unitCountAll);
                for (;; auto160FD0DE_u -= 1) {
                    auto160FD0DE_var = UnitGroupUnitFromEnd(auto160FD0DE_g, auto160FD0DE_u);
                    if (auto160FD0DE_var == null) { break; }
                    if ((UnitHasBehavior2(auto160FD0DE_var, "DEITYZombie") == true)) {
                        UnitGroupAdd(lv_burn, auto160FD0DE_var);
                    }

                }
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("InfestedCivilian", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("NovaInfestedBanshee", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("InfestedFirebat", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("InfestedTerranCampaign", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("InfestedExploder", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("InfestedGhost", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Spotter", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Choker", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Hunterling", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Stank", c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Kaboomer", 15, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Kaboomer", 14, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Kaboomer", 13, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                UnitGroupAddUnitGroup(lv_burn, UnitGroup("Kaboomer", 12, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterBuried), (1 << (c_targetFilterDead - 32))), 0));
                autoA11E9570_g = lv_burn;
                autoA11E9570_u = UnitGroupCount(autoA11E9570_g, c_unitCountAll);
                for (;; autoA11E9570_u -= 1) {
                    autoA11E9570_var = UnitGroupUnitFromEnd(autoA11E9570_g, autoA11E9570_u);
                    if (autoA11E9570_var == null) { break; }
                    if ((libNtve_gf_UnitIsInsideTransport(autoA11E9570_var) == false)) {
                        UnitBehaviorAdd(autoA11E9570_var, "Sunrise", lv_u, 1);
                    }

                }
            }

        }
        if (((lib22142002_gv_dN_Coldnight == true) || (lib22142002_gv_dN_HyperColdnight == true))) {
            autoDB60FAAE_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
            autoDB60FAAE_u = UnitGroupCount(autoDB60FAAE_g, c_unitCountAll);
            for (;; autoDB60FAAE_u -= 1) {
                autoDB60FAAE_var = UnitGroupUnitFromEnd(autoDB60FAAE_g, autoDB60FAAE_u);
                if (autoDB60FAAE_var == null) { break; }
                UnitBehaviorRemove(autoDB60FAAE_var, "FlashFreezeLevel3", 1);
            }
        }

        if ((lib22142002_gv_dN_Hazardoussun == true)) {
            auto17334BD3_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterDestructible), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
            auto17334BD3_u = UnitGroupCount(auto17334BD3_g, c_unitCountAll);
            for (;; auto17334BD3_u -= 1) {
                auto17334BD3_var = UnitGroupUnitFromEnd(auto17334BD3_g, auto17334BD3_u);
                if (auto17334BD3_var == null) { break; }
                if ((libNtve_gf_UnitIsInsideTransport(auto17334BD3_var) == false)) {
                    UnitBehaviorAdd(auto17334BD3_var, "HazardousSun", lv_u, 1);
                }

            }
        }

        if ((lib22142002_gv_dN_DarknightDarkening == true)) {
            auto866712A8_g = PlayerGroupAll();
            auto866712A8_var = -1;
            while (true) {
                auto866712A8_var = PlayerGroupNextPlayer(auto866712A8_g, auto866712A8_var);
                if (auto866712A8_var < 0) { break; }
                if (((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto866712A8_var) == false) || ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto866712A8_var) == true) && (lib22142002_gv_godMode[auto866712A8_var] == 3)))) {
                    VisFillArea(auto866712A8_var, RegionEntireMap(), c_fillTypeUnexplored, false);
                    VisEnable(c_visTypeMask, false);
                }

            }
            lib22142002_gv_dN_DarknightDarkening = false;
        }

        if ((lib22142002_gv_dN_CorruptedDay == true)) {
            autoB8EA8831_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
            autoB8EA8831_u = UnitGroupCount(autoB8EA8831_g, c_unitCountAll);
            for (;; autoB8EA8831_u -= 1) {
                autoB8EA8831_var = UnitGroupUnitFromEnd(autoB8EA8831_g, autoB8EA8831_u);
                if (autoB8EA8831_var == null) { break; }
                if ((libNtve_gf_UnitIsInsideTransport(autoB8EA8831_var) == false) && (UnitHasBehavior2(autoB8EA8831_var, "VoidShade") == false) && (UnitHasBehavior2(autoB8EA8831_var, "TerrazineShadow") == false) && (UnitGetType(autoB8EA8831_var) != "Hybrid") && (UnitGetType(autoB8EA8831_var) != "HybridBehemoth") && (UnitGetType(autoB8EA8831_var) != "HybridDestroyer") && (UnitGetType(autoB8EA8831_var) != "HybridDominator") && (UnitGetType(autoB8EA8831_var) != "HybridDominatorVoid") && (UnitGetType(autoB8EA8831_var) != "HybridGeneral") && (UnitGetType(autoB8EA8831_var) != "HybridNemesis") && (UnitGetType(autoB8EA8831_var) != "HybridReaver") && (UnitGetType(autoB8EA8831_var) != "VoidThrasher") && (UnitGetType(autoB8EA8831_var) != "VoidThrasherWalker") && (UnitGetType(autoB8EA8831_var) != "NarudEpilogue") && (UnitGetType(autoB8EA8831_var) != "CustomVoidRift") && (UnitGetType(autoB8EA8831_var) != "VoidRift") && (UnitGetType(autoB8EA8831_var) != "VoidShard") && (UnitGetType(autoB8EA8831_var) != "VoidTendrilDeathGripCrystal") && (UnitGetType(autoB8EA8831_var) != "VoidTendrilDeathGripCrystal")) {
                    UnitBehaviorAdd(autoB8EA8831_var, "VoidTendrilDamageFieldDebuff", lv_u, 1);
                    UnitBehaviorSetDuration(autoB8EA8831_var, "VoidTendrilDamageFieldDebuff", 2.0);
                }

            }
        }

    }
    else if (auto5D7DCCF7_val == true) {
        if ((lib22142002_gv_dN_HyperColdnight == true)) {
            UnitBehaviorAdd(UnitGroupRandomUnit(UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0), c_unitCountAlive), "FlashFreezeLevel3", lv_u, 1);
        }
        else {
            if ((lib22142002_gv_dN_Coldnight == true)) {
                UnitBehaviorAdd(UnitGroupRandomUnit(UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterDestructible) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterUnstoppable - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0), c_unitCountAlive), "FlashFreezeLevel3", lv_u, 1);
            }

        }
        if ((lib22142002_gv_dN_Darknight == true)) {
            auto49862A9C_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
            auto49862A9C_u = UnitGroupCount(auto49862A9C_g, c_unitCountAll);
            for (;; auto49862A9C_u -= 1) {
                auto49862A9C_var = UnitGroupUnitFromEnd(auto49862A9C_g, auto49862A9C_u);
                if (auto49862A9C_var == null) { break; }
                UnitBehaviorAdd(auto49862A9C_var, "DarkNight", lv_u, 1);
            }
            if ((lib22142002_gv_dN_EffectsVisualCounter == 6)) {
                auto6CC514C2_g = PlayerGroupAll();
                auto6CC514C2_var = -1;
                while (true) {
                    auto6CC514C2_var = PlayerGroupNextPlayer(auto6CC514C2_g, auto6CC514C2_var);
                    if (auto6CC514C2_var < 0) { break; }
                    if (((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto6CC514C2_var) == false) || ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto6CC514C2_var) == true) && (lib22142002_gv_godMode[auto6CC514C2_var] == 3)))) {
                        VisFillArea(auto6CC514C2_var, RegionEntireMap(), c_fillTypeHidden, false);
                        VisEnable(c_visTypeMask, true);
                    }

                }
            }

            lib22142002_gv_dN_DarknightDarkening = true;
        }
        else {
            if ((lib22142002_gv_dN_DarknightDarkening == true)) {
                auto4576F14B_g = PlayerGroupAll();
                auto4576F14B_var = -1;
                while (true) {
                    auto4576F14B_var = PlayerGroupNextPlayer(auto4576F14B_g, auto4576F14B_var);
                    if (auto4576F14B_var < 0) { break; }
                    if (((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto4576F14B_var) == false) || ((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, auto4576F14B_var) == true) && (lib22142002_gv_godMode[auto4576F14B_var] == 3)))) {
                        VisFillArea(auto4576F14B_var, RegionEntireMap(), c_fillTypeUnexplored, false);
                    }

                }
                lib22142002_gv_dN_DarknightDarkening = false;
            }

        }
        if ((lib22142002_gv_dN_CorruptedNight == true)) {
            auto52A86BF7_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
            auto52A86BF7_u = UnitGroupCount(auto52A86BF7_g, c_unitCountAll);
            for (;; auto52A86BF7_u -= 1) {
                auto52A86BF7_var = UnitGroupUnitFromEnd(auto52A86BF7_g, auto52A86BF7_u);
                if (auto52A86BF7_var == null) { break; }
                if ((libNtve_gf_UnitIsInsideTransport(auto52A86BF7_var) == false) && (UnitHasBehavior2(auto52A86BF7_var, "VoidShade") == false) && (UnitHasBehavior2(auto52A86BF7_var, "TerrazineShadow") == false) && (UnitGetType(auto52A86BF7_var) != "Hybrid") && (UnitGetType(auto52A86BF7_var) != "HybridBehemoth") && (UnitGetType(auto52A86BF7_var) != "HybridDestroyer") && (UnitGetType(auto52A86BF7_var) != "HybridDominator") && (UnitGetType(auto52A86BF7_var) != "HybridDominatorVoid") && (UnitGetType(auto52A86BF7_var) != "HybridGeneral") && (UnitGetType(auto52A86BF7_var) != "HybridNemesis") && (UnitGetType(auto52A86BF7_var) != "HybridReaver") && (UnitGetType(auto52A86BF7_var) != "VoidThrasher") && (UnitGetType(auto52A86BF7_var) != "VoidThrasherWalker") && (UnitGetType(auto52A86BF7_var) != "NarudEpilogue") && (UnitGetType(auto52A86BF7_var) != "CustomVoidRift") && (UnitGetType(auto52A86BF7_var) != "VoidRift") && (UnitGetType(auto52A86BF7_var) != "VoidShard") && (UnitGetType(auto52A86BF7_var) != "VoidTendrilDeathGripCrystal") && (UnitGetType(auto52A86BF7_var) != "VoidTendrilDeathGripCrystal")) {
                    UnitBehaviorAdd(auto52A86BF7_var, "VoidTendrilDamageFieldDebuff", lv_u, 1);
                    UnitBehaviorSetDuration(auto52A86BF7_var, "VoidTendrilDamageFieldDebuff", 2.0);
                }

            }
        }

    }
    else {
    }
    if ((lib22142002_gv_dN_Darkwind == true)) {
        auto5F0C27F8_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterDestructible), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
        auto5F0C27F8_u = UnitGroupCount(auto5F0C27F8_g, c_unitCountAll);
        for (;; auto5F0C27F8_u -= 1) {
            auto5F0C27F8_var = UnitGroupUnitFromEnd(auto5F0C27F8_g, auto5F0C27F8_u);
            if (auto5F0C27F8_var == null) { break; }
            UnitBehaviorAdd(auto5F0C27F8_var, "DarkWind", lv_u, 1);
        }
    }

    if ((lib22142002_gv_dN_Darkfog == true)) {
        auto435DC3E8_g = UnitGroup(null, c_playerAny, null, UnitFilter((1 << c_targetFilterGround) | (1 << c_targetFilterStructure), 0, (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterDestructible), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0);
        auto435DC3E8_u = UnitGroupCount(auto435DC3E8_g, c_unitCountAll);
        for (;; auto435DC3E8_u -= 1) {
            auto435DC3E8_var = UnitGroupUnitFromEnd(auto435DC3E8_g, auto435DC3E8_u);
            if (auto435DC3E8_var == null) { break; }
            UnitBehaviorAdd(auto435DC3E8_var, "DarkFog", lv_u, 1);
        }
    }

    if ((lib22142002_gv_dN_EffectsVisualCounter == 6)) {
        lib22142002_gv_dN_EffectsVisualCounter = 0;
        if (((lib22142002_gv_dN_Coldnight == true) || (lib22142002_gv_dN_HyperColdnight == true) || (lib22142002_gv_dN_Darkfog == true) || (lib22142002_gv_dN_Darkwind == true) || (lib22142002_gv_dN_CorruptedDay == true) || (lib22142002_gv_dN_CorruptedNight == true))) {
            if (((lib22142002_gv_dN_Coldnight == true) || (lib22142002_gv_dN_HyperColdnight == true))) {
                auto979BDB02_g = PlayerGroupActive();
                auto979BDB02_var = -1;
                while (true) {
                    auto979BDB02_var = PlayerGroupNextPlayer(auto979BDB02_g, auto979BDB02_var);
                    if (auto979BDB02_var < 0) { break; }
                    lib22142002_gf_DN_EffectsVisual_ColdNight(auto979BDB02_var);
                }
            }

            if ((lib22142002_gv_dN_Darkfog == true)) {
                auto5C5C87B9_g = PlayerGroupActive();
                auto5C5C87B9_var = -1;
                while (true) {
                    auto5C5C87B9_var = PlayerGroupNextPlayer(auto5C5C87B9_g, auto5C5C87B9_var);
                    if (auto5C5C87B9_var < 0) { break; }
                    lib22142002_gf_DN_EffectsVisual_DarkFog(auto5C5C87B9_var);
                }
            }

            if ((lib22142002_gv_dN_Darkwind == true)) {
                autoA3A9C60A_g = PlayerGroupActive();
                autoA3A9C60A_var = -1;
                while (true) {
                    autoA3A9C60A_var = PlayerGroupNextPlayer(autoA3A9C60A_g, autoA3A9C60A_var);
                    if (autoA3A9C60A_var < 0) { break; }
                    lib22142002_gf_DN_EffectsVisual_DarkWind(autoA3A9C60A_var);
                }
            }

            if (((lib22142002_gv_dN_CorruptedDay == true) || (lib22142002_gv_dN_CorruptedNight == true))) {
                auto6404FBF3_g = PlayerGroupActive();
                auto6404FBF3_var = -1;
                while (true) {
                    auto6404FBF3_var = PlayerGroupNextPlayer(auto6404FBF3_g, auto6404FBF3_var);
                    if (auto6404FBF3_var < 0) { break; }
                    lib22142002_gf_DN_EffectsVisual_Corruption(auto6404FBF3_var);
                }
            }

        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DN_Effects_Init () {
    lib22142002_gt_DN_Effects = TriggerCreate("lib22142002_gt_DN_Effects_Func");
    TriggerEnable(lib22142002_gt_DN_Effects, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_DN_Effects, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Respawn A Hero AB
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_RespawnAHeroAB_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.25, c_timeGame);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "RespawnHeroA", EventPlayerEffectUsedUnit(c_effectUnitCaster), 1);
    Wait(0.5, c_timeGame);
    UnitGroupAdd(lib22142002_gv_respawnableUnit, EventPlayerEffectUsedUnit(c_effectUnitTarget));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_RespawnAHeroAB_Init () {
    lib22142002_gt_RespawnAHeroAB = TriggerCreate("lib22142002_gt_RespawnAHeroAB_Func");
    TriggerEnable(lib22142002_gt_RespawnAHeroAB, false);
    TriggerAddEventPlayerEffectUsed(lib22142002_gt_RespawnAHeroAB, c_playerAny, "RespawnHeroAAB");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Respawnable Unit Dies
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_RespawnableUnitDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnitDamageDeathCheck(c_deathTypeCancel) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeImpact) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeMorph) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeRemove) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeSalvage) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeUnderConstruction) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeUnlink) == false))) {
            return false;
        }

        if (!((UnitHasBehavior2(EventUnit(), "RespawnWaitingA") == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupHasUnit(lib22142002_gv_respawnableUnit, EventUnit()) == true)) {
        UnitRevive(EventUnit());
        if ((UnitFilterMatch(EventUnit(), UnitGetOwner(EventUnit()), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterHidden - 32)))) == true)) {
            UnitSetFacing(EventUnit(), 270.0, 0.0);
        }

        UnitBehaviorAdd(EventUnit(), "RespawnWaitingForCooldown", EventUnit(), 1);
        UnitBehaviorAdd(EventUnit(), "RespawnWaitingA", EventUnit(), 1);
        libNtve_gf_CreatePingFacingAngle(libNtve_gf_AlliesEnemiesOfPlayerCountInactiveAndSelf(libNtve_ge_PlayerRelation_Ally, UnitGetOwner(EventUnit())), "RespawnAPing", UnitGetPosition(EventUnit()), ColorWithAlpha(15.69, 58.82, 15.69, 0.00), 0.0, 270.0);
        lib22142002_gf_RespawnableUnitAttachedPing(EventUnit(), PingLastCreated());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_RespawnableUnitDies_Init () {
    lib22142002_gt_RespawnableUnitDies = TriggerCreate("lib22142002_gt_RespawnableUnitDies_Func");
    TriggerEnable(lib22142002_gt_RespawnableUnitDies, false);
    TriggerAddEventUnitDied(lib22142002_gt_RespawnableUnitDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Command Post Takeover
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CommandPostTakeover_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto56CAE2CC_g;
    int auto56CAE2CC_u;
    unit auto56CAE2CC_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitCount("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto56CAE2CC_g = UnitGroup("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto56CAE2CC_u = UnitGroupCount(auto56CAE2CC_g, c_unitCountAll);
    for (;; auto56CAE2CC_u -= 1) {
        auto56CAE2CC_var = UnitGroupUnitFromEnd(auto56CAE2CC_g, auto56CAE2CC_u);
        if (auto56CAE2CC_var == null) { break; }
        if ((UnitGetPropertyFixed(auto56CAE2CC_var, c_unitPropEnergy, c_unitPropCurrent) > 0.0)) {
            if ((UnitCountAlliance(UnitGetOwner(auto56CAE2CC_var), c_unitAllianceEnemy, RegionCircle(UnitGetPosition(auto56CAE2CC_var), lib22142002_gv_commandPostRegion), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                if ((UnitCountAlliance(UnitGetOwner(auto56CAE2CC_var), c_unitAllianceAlly, RegionCircle(UnitGetPosition(auto56CAE2CC_var), lib22142002_gv_commandPostRegion), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) == 0)) {
                    UnitBehaviorAdd(auto56CAE2CC_var, "CommandPostAttacked", lv_u, 1);
                }

            }

        }
        else {
            UnitSetOwner(auto56CAE2CC_var, UnitGetOwner(UnitGroupUnit(UnitGroup(null, c_playerAny, RegionCircle(UnitGetPosition(auto56CAE2CC_var), lib22142002_gv_commandPostRegion), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1)), true);
        }
        if ((UnitGetPropertyFixed(auto56CAE2CC_var, c_unitPropEnergyPercent, c_unitPropCurrent) < 100.0)) {
            if ((UnitCountAlliance(UnitGetOwner(auto56CAE2CC_var), c_unitAllianceEnemy, RegionCircle(UnitGetPosition(auto56CAE2CC_var), lib22142002_gv_commandPostRegion), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) == 0)) {
                UnitBehaviorAdd(auto56CAE2CC_var, "CommandPostRegenerating", lv_u, 1);
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CommandPostTakeover_Init () {
    lib22142002_gt_CommandPostTakeover = TriggerCreate("lib22142002_gt_CommandPostTakeover_Func");
    TriggerEnable(lib22142002_gt_CommandPostTakeover, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_CommandPostTakeover, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Command Post Spawn Units Simple
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CommandPostSpawnUnitsSimple_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto45D8CEBF_g;
    int auto45D8CEBF_u;
    unit auto45D8CEBF_var;

    // Conditions
    if (testConds) {
        if (!((UnitCount("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto45D8CEBF_g = UnitGroup("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto45D8CEBF_u = UnitGroupCount(auto45D8CEBF_g, c_unitCountAll);
    for (;; auto45D8CEBF_u -= 1) {
        auto45D8CEBF_var = UnitGroupUnitFromEnd(auto45D8CEBF_g, auto45D8CEBF_u);
        if (auto45D8CEBF_var == null) { break; }
        if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("Nexus", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
            UnitCreate(1, "Zealot", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
            UnitCreate(1, "Zealot", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
        }
        else {
            if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("Hatchery", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Lair", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Hive", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                UnitCreate(2, "Zergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                UnitCreate(2, "Zergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
            }
            else {
                if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("CommandCenter", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("OrbitalCommand", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PlanetaryFortress", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                    UnitCreate(1, "Marine", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                    UnitCreate(1, "Marine", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                }
                else {
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("InfestedCC", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                        UnitCreate(2, "InfestedCivilian", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        UnitCreate(2, "InfestedCivilian", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        UnitCreate(1, "InfestedTerranCampaign", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                    }
                    else {
                        if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("XelNagaConstruct", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        }
                        else {
                            if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("PrimalTownHall", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PrimalTownHallUprooted", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            }

                        }
                    }
                }
            }
        }
        Wait(3.0, c_timeGame);
        if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("Nexus", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
            UnitCreate(1, "Zealot", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
            UnitCreate(1, "Zealot", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
        }
        else {
            if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("Hatchery", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Lair", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Hive", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                UnitCreate(2, "Zergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                UnitCreate(2, "Zergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
            }
            else {
                if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("CommandCenter", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("OrbitalCommand", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PlanetaryFortress", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                    UnitCreate(1, "Marine", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                    UnitCreate(1, "Marine", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                }
                else {
                    if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("InfestedCC", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                        UnitCreate(2, "InfestedCivilian", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        UnitCreate(2, "InfestedCivilian", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        UnitCreate(1, "InfestedTerranCampaign", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                    }
                    else {
                        if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (UnitCount("XelNagaConstruct", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        }
                        else {
                            if ((PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(auto45D8CEBF_var), c_playerPropSuppliesUsed)) && ((UnitCount("PrimalTownHall", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PrimalTownHallUprooted", UnitGetOwner(auto45D8CEBF_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                                UnitCreate(1, "PrimalZergling", 0, UnitGetOwner(auto45D8CEBF_var), RegionRandomPoint(RegionCircle(UnitGetPosition(auto45D8CEBF_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            }

                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CommandPostSpawnUnitsSimple_Init () {
    lib22142002_gt_CommandPostSpawnUnitsSimple = TriggerCreate("lib22142002_gt_CommandPostSpawnUnitsSimple_Func");
    TriggerEnable(lib22142002_gt_CommandPostSpawnUnitsSimple, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_CommandPostSpawnUnitsSimple, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Command Post Spawn Units Special
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CommandPostSpawnUnitsSpecial_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC7401139_g;
    int autoC7401139_u;
    unit autoC7401139_var;

    // Conditions
    if (testConds) {
        if (!((UnitCount("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(2.0, c_timeGame);
    autoC7401139_g = UnitGroup("CommandPost", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC7401139_u = UnitGroupCount(autoC7401139_g, c_unitCountAll);
    for (;; autoC7401139_u -= 1) {
        autoC7401139_var = UnitGroupUnitFromEnd(autoC7401139_g, autoC7401139_u);
        if (autoC7401139_var == null) { break; }
        if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (UnitCount("Nexus", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
            UnitCreate(1, "Stalker", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
        }
        else {
            if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && ((UnitCount("Hatchery", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Lair", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("Hive", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                UnitCreate(1, "Hydralisk", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
            }
            else {
                if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && ((UnitCount("CommandCenter", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("OrbitalCommand", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PlanetaryFortress", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                    UnitCreate(1, "Marauder", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                }
                else {
                    if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (UnitCount("InfestedCC", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                        UnitCreate(1, "InfestedCivilian", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        UnitCreate(1, "InfestedFirebat", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                    }
                    else {
                        if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (UnitCount("XelNagaConstruct", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0)) {
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            UnitCreate(1, "XelNagaChargedCrystal", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                        }
                        else {
                            if ((PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesMade) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && (PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesLimit) > PlayerGetPropertyInt(UnitGetOwner(autoC7401139_var), c_playerPropSuppliesUsed)) && ((UnitCount("PrimalTownHall", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0) || (UnitCount("PrimalTownHallUprooted", UnitGetOwner(autoC7401139_var), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) > 0))) {
                                UnitCreate(1, "PrimalRoach", 0, UnitGetOwner(autoC7401139_var), RegionRandomPoint(RegionCircle(UnitGetPosition(autoC7401139_var), lib22142002_gv_commandPostRegion)), libNtve_gf_RandomAngle());
                            }

                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CommandPostSpawnUnitsSpecial_Init () {
    lib22142002_gt_CommandPostSpawnUnitsSpecial = TriggerCreate("lib22142002_gt_CommandPostSpawnUnitsSpecial_Func");
    TriggerEnable(lib22142002_gt_CommandPostSpawnUnitsSpecial, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_CommandPostSpawnUnitsSpecial, 80.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_Add Skill
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_SE_AddSkill_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto598FB55E_val;

    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreTerran01") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreTerran02") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreProtoss01") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreProtoss02") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreZerg01") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreZerg02") || (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitCaster)) == "CustomSkillEditorCoreOthers01")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto598FB55E_val = EventPlayerEffectUsed();
    if (auto598FB55E_val == "AddCustomSkillEMPRound01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMP1");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPRound02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMP2");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPRound03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMP3");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPRound04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMP4");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPShockwave01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMPShockwave1");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPShockwave02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMPShockwave2");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPShockwave03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMPShockwave3");
    }
    else if (auto598FB55E_val == "AddCustomSkillEMPShockwave04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEMPShockwave4");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdownMissile01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdownMissile1");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdownMissile02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdownMissile2");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdownMissile03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdownMissile3");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdownMissile04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdownMissile4");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdown01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdown1");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdown02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdown2");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdown03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdown3");
    }
    else if (auto598FB55E_val == "AddCustomSkillLockdown04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLockdown4");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsiShield01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiShield1");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsiShield02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiShield2");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsiShield03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiShield3");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsiShield04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiShield4");
    }
    else if (auto598FB55E_val == "AddCustomSkillConsumption01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConsumption1");
    }
    else if (auto598FB55E_val == "AddCustomSkillConsumption02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConsumption2");
    }
    else if (auto598FB55E_val == "AddCustomSkillConsumption03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConsumption3");
    }
    else if (auto598FB55E_val == "AddCustomSkillConsumption04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConsumption4");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimpack01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimpack1");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimpack02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimpack2");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimpack03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimpack3");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimpack04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimpack4");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimInfusion01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimInfusion1");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimInfusion02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimInfusion2");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimInfusion03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimInfusion3");
    }
    else if (auto598FB55E_val == "AddCustomSkillStimInfusion04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStimInfusion4");
    }
    else if (auto598FB55E_val == "AddCustomSkillVenom01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVenom1");
    }
    else if (auto598FB55E_val == "AddCustomSkillVenom02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVenom2");
    }
    else if (auto598FB55E_val == "AddCustomSkillVenom03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVenom3");
    }
    else if (auto598FB55E_val == "AddCustomSkillVenom04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVenom4");
    }
    else if (auto598FB55E_val == "AddCustomSkillRestoration01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRestoration1");
    }
    else if (auto598FB55E_val == "AddCustomSkillRestoration02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRestoration2");
    }
    else if (auto598FB55E_val == "AddCustomSkillRestoration03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRestoration3");
    }
    else if (auto598FB55E_val == "AddCustomSkillRestoration04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRestoration4");
    }
    else if (auto598FB55E_val == "AddCustomSkillG4Clusterbomb01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillG4Clusterbomb1");
    }
    else if (auto598FB55E_val == "AddCustomSkillG4Clusterbomb02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillG4Clusterbomb2");
    }
    else if (auto598FB55E_val == "AddCustomSkillG4Clusterbomb03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillG4Clusterbomb3");
    }
    else if (auto598FB55E_val == "AddCustomSkillG4Clusterbomb04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillG4Clusterbomb4");
    }
    else if (auto598FB55E_val == "AddCustomSkillKD8Charge01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKD8Charge1");
    }
    else if (auto598FB55E_val == "AddCustomSkillKD8Charge02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKD8Charge2");
    }
    else if (auto598FB55E_val == "AddCustomSkillKD8Charge03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKD8Charge3");
    }
    else if (auto598FB55E_val == "AddCustomSkillKD8Charge04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKD8Charge4");
    }
    else if (auto598FB55E_val == "AddCustomSkillVultureSpiderMines01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVultureSpiderMines1");
    }
    else if (auto598FB55E_val == "AddCustomSkillVultureSpiderMines02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVultureSpiderMines2");
    }
    else if (auto598FB55E_val == "AddCustomSkillVultureSpiderMines03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVultureSpiderMines3");
    }
    else if (auto598FB55E_val == "AddCustomSkillVultureSpiderMines04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillVultureSpiderMines4");
    }
    else if (auto598FB55E_val == "AddCustomSkillWildMutation01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillWildMutation1");
    }
    else if (auto598FB55E_val == "AddCustomSkillWildMutation02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillWildMutation2");
    }
    else if (auto598FB55E_val == "AddCustomSkillWildMutation03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillWildMutation3");
    }
    else if (auto598FB55E_val == "AddCustomSkillWildMutation04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillWildMutation4");
    }
    else if (auto598FB55E_val == "AddCustomSkillNanoRepair01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillNanoRepair1");
    }
    else if (auto598FB55E_val == "AddCustomSkillNanoRepair02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillNanoRepair2");
    }
    else if (auto598FB55E_val == "AddCustomSkillNanoRepair03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillNanoRepair3");
    }
    else if (auto598FB55E_val == "AddCustomSkillNanoRepair04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillNanoRepair4");
    }
    else if (auto598FB55E_val == "AddCustomSkillHeal01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillHeal1");
    }
    else if (auto598FB55E_val == "AddCustomSkillHeal02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillHeal2");
    }
    else if (auto598FB55E_val == "AddCustomSkillHeal03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillHeal3");
    }
    else if (auto598FB55E_val == "AddCustomSkillHeal04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillHeal4");
    }
    else if (auto598FB55E_val == "AddCustomSkillDefensiveMatrix01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDefensiveMatrix1");
    }
    else if (auto598FB55E_val == "AddCustomSkillDefensiveMatrix02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDefensiveMatrix2");
    }
    else if (auto598FB55E_val == "AddCustomSkillDefensiveMatrix03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDefensiveMatrix3");
    }
    else if (auto598FB55E_val == "AddCustomSkillDefensiveMatrix04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDefensiveMatrix4");
    }
    else if (auto598FB55E_val == "AddCustomSkillSpawnBanelings01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSpawnBanelings1");
    }
    else if (auto598FB55E_val == "AddCustomSkillSpawnBanelings02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSpawnBanelings2");
    }
    else if (auto598FB55E_val == "AddCustomSkillSpawnBanelings03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSpawnBanelings3");
    }
    else if (auto598FB55E_val == "AddCustomSkillSpawnBanelings04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSpawnBanelings4");
    }
    else if (auto598FB55E_val == "AddCustomSkillDeepTunnel01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDeepTunnel1");
    }
    else if (auto598FB55E_val == "AddCustomSkillDeepTunnel02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDeepTunnel2");
    }
    else if (auto598FB55E_val == "AddCustomSkillDeepTunnel03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDeepTunnel3");
    }
    else if (auto598FB55E_val == "AddCustomSkillDeepTunnel04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDeepTunnel4");
    }
    else if (auto598FB55E_val == "AddCustomSkillTransfusion01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillTransfusion1");
    }
    else if (auto598FB55E_val == "AddCustomSkillTransfusion02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillTransfusion2");
    }
    else if (auto598FB55E_val == "AddCustomSkillTransfusion03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillTransfusion3");
    }
    else if (auto598FB55E_val == "AddCustomSkillTransfusion04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillTransfusion4");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlink01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlink1");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlink02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlink2");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlink03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlink3");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlink04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlink4");
    }
    else if (auto598FB55E_val == "AddCustomSkillRecall01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRecall1");
    }
    else if (auto598FB55E_val == "AddCustomSkillRecall02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRecall2");
    }
    else if (auto598FB55E_val == "AddCustomSkillRecall03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRecall3");
    }
    else if (auto598FB55E_val == "AddCustomSkillRecall04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRecall4");
    }
    else if (auto598FB55E_val == "AddCustomSkillScannerSweep01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillScannerSweep1");
    }
    else if (auto598FB55E_val == "AddCustomSkillScannerSweep02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillScannerSweep2");
    }
    else if (auto598FB55E_val == "AddCustomSkillScannerSweep03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillScannerSweep3");
    }
    else if (auto598FB55E_val == "AddCustomSkillScannerSweep04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillScannerSweep4");
    }
    else if (auto598FB55E_val == "AddCustomSkillShieldRecharge01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShieldRecharge1");
    }
    else if (auto598FB55E_val == "AddCustomSkillShieldRecharge02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShieldRecharge2");
    }
    else if (auto598FB55E_val == "AddCustomSkillShieldRecharge03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShieldRecharge3");
    }
    else if (auto598FB55E_val == "AddCustomSkillShieldRecharge04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShieldRecharge4");
    }
    else if (auto598FB55E_val == "AddCustomSkillMaelstrom01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMaelstrom1");
    }
    else if (auto598FB55E_val == "AddCustomSkillMaelstrom02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMaelstrom2");
    }
    else if (auto598FB55E_val == "AddCustomSkillMaelstrom03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMaelstrom3");
    }
    else if (auto598FB55E_val == "AddCustomSkillMaelstrom04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMaelstrom4");
    }
    else if (auto598FB55E_val == "AddCustomSkillPlasmaSurge01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPlasmaSurge1");
    }
    else if (auto598FB55E_val == "AddCustomSkillPlasmaSurge02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPlasmaSurge2");
    }
    else if (auto598FB55E_val == "AddCustomSkillPlasmaSurge03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPlasmaSurge3");
    }
    else if (auto598FB55E_val == "AddCustomSkillPlasmaSurge04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPlasmaSurge4");
    }
    else if (auto598FB55E_val == "AddCustomSkillConfusion01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConfusion1");
    }
    else if (auto598FB55E_val == "AddCustomSkillConfusion02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConfusion2");
    }
    else if (auto598FB55E_val == "AddCustomSkillConfusion03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConfusion3");
    }
    else if (auto598FB55E_val == "AddCustomSkillConfusion04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillConfusion4");
    }
    else if (auto598FB55E_val == "AddCustomSkillMindBlast01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMindBlast1");
    }
    else if (auto598FB55E_val == "AddCustomSkillMindBlast02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMindBlast2");
    }
    else if (auto598FB55E_val == "AddCustomSkillMindBlast03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMindBlast3");
    }
    else if (auto598FB55E_val == "AddCustomSkillMindBlast04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMindBlast4");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicOrb01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiOrb1");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicOrb02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiOrb2");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicOrb03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiOrb3");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicOrb04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsiOrb4");
    }
    else if (auto598FB55E_val == "AddCustomSkillSummonVoidRift01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSummonVoidRift1");
    }
    else if (auto598FB55E_val == "AddCustomSkillSummonVoidRift02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSummonVoidRift2");
    }
    else if (auto598FB55E_val == "AddCustomSkillSummonVoidRift03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSummonVoidRift3");
    }
    else if (auto598FB55E_val == "AddCustomSkillSummonVoidRift04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSummonVoidRift4");
    }
    else if (auto598FB55E_val == "AddCustomSkillCloakingField01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCloakingField1");
    }
    else if (auto598FB55E_val == "AddCustomSkillCloakingField02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCloakingField2");
    }
    else if (auto598FB55E_val == "AddCustomSkillCloakingField03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCloakingField3");
    }
    else if (auto598FB55E_val == "AddCustomSkillCloakingField04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCloakingField4");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkSwarm01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkSwarm1");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkSwarm02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkSwarm2");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkSwarm03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkSwarm3");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkSwarm04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkSwarm4");
    }
    else if (auto598FB55E_val == "AddCustomSkillChronoBeam01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChronoBeam1");
    }
    else if (auto598FB55E_val == "AddCustomSkillChronoBeam02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChronoBeam2");
    }
    else if (auto598FB55E_val == "AddCustomSkillChronoBeam03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChronoBeam3");
    }
    else if (auto598FB55E_val == "AddCustomSkillChronoBeam04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChronoBeam4");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicStorm01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsionicStorm1");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicStorm02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsionicStorm2");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicStorm03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsionicStorm3");
    }
    else if (auto598FB55E_val == "AddCustomSkillPsionicStorm04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPsionicStorm4");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceField01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceField1");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceField02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceField2");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceField03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceField3");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceField04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceField4");
    }
    else if (auto598FB55E_val == "AddCustomSkillDestructionWave01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDestructionWave1");
    }
    else if (auto598FB55E_val == "AddCustomSkillDestructionWave02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDestructionWave2");
    }
    else if (auto598FB55E_val == "AddCustomSkillDestructionWave03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDestructionWave3");
    }
    else if (auto598FB55E_val == "AddCustomSkillDestructionWave04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDestructionWave4");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlackHole01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlackHole1");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlackHole02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlackHole2");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlackHole03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlackHole3");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlackHole04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillBlackHole4");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnsnare01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnsnare1");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnsnare02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnsnare2");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnsnare03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnsnare3");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnsnare04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnsnare4");
    }
    else if (auto598FB55E_val == "AddCustomSkillFungalGrowth01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFungalGrowth1");
    }
    else if (auto598FB55E_val == "AddCustomSkillFungalGrowth02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFungalGrowth2");
    }
    else if (auto598FB55E_val == "AddCustomSkillFungalGrowth03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFungalGrowth3");
    }
    else if (auto598FB55E_val == "AddCustomSkillFungalGrowth04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFungalGrowth4");
    }
    else if (auto598FB55E_val == "AddCustomSkillFrenzy01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFrenzy1");
    }
    else if (auto598FB55E_val == "AddCustomSkillFrenzy02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFrenzy2");
    }
    else if (auto598FB55E_val == "AddCustomSkillFrenzy03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFrenzy3");
    }
    else if (auto598FB55E_val == "AddCustomSkillFrenzy04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFrenzy4");
    }
    else if (auto598FB55E_val == "AddCustomSkillAntiGravitation01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAntiGravitation1");
    }
    else if (auto598FB55E_val == "AddCustomSkillAntiGravitation02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAntiGravitation2");
    }
    else if (auto598FB55E_val == "AddCustomSkillAntiGravitation03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAntiGravitation3");
    }
    else if (auto598FB55E_val == "AddCustomSkillAntiGravitation04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAntiGravitation4");
    }
    else if (auto598FB55E_val == "AddCustomSkillPulseGrenade01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPulseGrenade1");
    }
    else if (auto598FB55E_val == "AddCustomSkillPulseGrenade02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPulseGrenade2");
    }
    else if (auto598FB55E_val == "AddCustomSkillPulseGrenade03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPulseGrenade3");
    }
    else if (auto598FB55E_val == "AddCustomSkillPulseGrenade04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillPulseGrenade4");
    }
    else if (auto598FB55E_val == "AddCustomSkillSmokeGrenade01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSmokeGrenade1");
    }
    else if (auto598FB55E_val == "AddCustomSkillSmokeGrenade02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSmokeGrenade2");
    }
    else if (auto598FB55E_val == "AddCustomSkillSmokeGrenade03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSmokeGrenade3");
    }
    else if (auto598FB55E_val == "AddCustomSkillSmokeGrenade04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSmokeGrenade4");
    }
    else if (auto598FB55E_val == "AddCustomSkillFlashbangGrenade01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFlashbangGrenade1");
    }
    else if (auto598FB55E_val == "AddCustomSkillFlashbangGrenade02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFlashbangGrenade2");
    }
    else if (auto598FB55E_val == "AddCustomSkillFlashbangGrenade03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFlashbangGrenade3");
    }
    else if (auto598FB55E_val == "AddCustomSkillFlashbangGrenade04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFlashbangGrenade4");
    }
    else if (auto598FB55E_val == "AddCustomSkillSacrifice01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSacrifice1");
    }
    else if (auto598FB55E_val == "AddCustomSkillSacrifice02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSacrifice2");
    }
    else if (auto598FB55E_val == "AddCustomSkillSacrifice03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSacrifice3");
    }
    else if (auto598FB55E_val == "AddCustomSkillSacrifice04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillSacrifice4");
    }
    else if (auto598FB55E_val == "AddCustomSkillKineticBlast01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKineticBlast1");
    }
    else if (auto598FB55E_val == "AddCustomSkillKineticBlast02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKineticBlast2");
    }
    else if (auto598FB55E_val == "AddCustomSkillKineticBlast03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKineticBlast3");
    }
    else if (auto598FB55E_val == "AddCustomSkillKineticBlast04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillKineticBlast4");
    }
    else if (auto598FB55E_val == "AddCustomSkillFeedback01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFeedback1");
    }
    else if (auto598FB55E_val == "AddCustomSkillFeedback02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFeedback2");
    }
    else if (auto598FB55E_val == "AddCustomSkillFeedback03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFeedback3");
    }
    else if (auto598FB55E_val == "AddCustomSkillFeedback04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillFeedback4");
    }
    else if (auto598FB55E_val == "AddCustomSkillGather") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillGather");
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "DroneCarcassHarvest");
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SCVTerrazineShrineHarvest");
    }
    else if (auto598FB55E_val == "AddCustomSkillMend01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMend1");
    }
    else if (auto598FB55E_val == "AddCustomSkillMend02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMend2");
    }
    else if (auto598FB55E_val == "AddCustomSkillMend03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMend3");
    }
    else if (auto598FB55E_val == "AddCustomSkillMend04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMend4");
    }
    else if (auto598FB55E_val == "AddCustomSkillRevelation01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRevelation1");
    }
    else if (auto598FB55E_val == "AddCustomSkillRevelation02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRevelation2");
    }
    else if (auto598FB55E_val == "AddCustomSkillRevelation03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRevelation3");
    }
    else if (auto598FB55E_val == "AddCustomSkillRevelation04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRevelation4");
    }
    else if (auto598FB55E_val == "AddCustomSkillStasisField01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStasisField1");
    }
    else if (auto598FB55E_val == "AddCustomSkillStasisField02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStasisField2");
    }
    else if (auto598FB55E_val == "AddCustomSkillStasisField03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStasisField3");
    }
    else if (auto598FB55E_val == "AddCustomSkillStasisField04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillStasisField4");
    }
    else if (auto598FB55E_val == "AddCustomSkillBlink012") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChainBlink1");
    }
    else if (auto598FB55E_val == "AddCustomSkillChainBlink02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChainBlink2");
    }
    else if (auto598FB55E_val == "AddCustomSkillChainBlink03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChainBlink3");
    }
    else if (auto598FB55E_val == "AddCustomSkillChainBlink04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillChainBlink4");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrike01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrike1");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrike02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrike2");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrike03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrike3");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrike04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrike4");
    }
    else if (auto598FB55E_val == "AddCustomSkillStructureOvercharge01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAlarakStructureOvercharge1");
    }
    else if (auto598FB55E_val == "AddCustomSkillStructureOvercharge02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAlarakStructureOvercharge2");
    }
    else if (auto598FB55E_val == "AddCustomSkillStructureOvercharge03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAlarakStructureOvercharge3");
    }
    else if (auto598FB55E_val == "AddCustomSkillStructureOvercharge04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillAlarakStructureOvercharge4");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayLarva01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayLarva1");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayLarva02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayLarva2");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayLarva03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayLarva3");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayLarva04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayLarva4");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayEggs01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayEggs1");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayEggs02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayEggs2");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayEggs03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayEggs3");
    }
    else if (auto598FB55E_val == "AddCustomSkillLayEggs04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillLayEggs4");
    }
    else if (auto598FB55E_val == "AddCustomSkillCrushingGrip01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCrushingGrip1");
    }
    else if (auto598FB55E_val == "AddCustomSkillCrushingGrip02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCrushingGrip2");
    }
    else if (auto598FB55E_val == "AddCustomSkillCrushingGrip03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCrushingGrip3");
    }
    else if (auto598FB55E_val == "AddCustomSkillCrushingGrip04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCrushingGrip4");
    }
    else if (auto598FB55E_val == "AddCustomSkillShredderGrenade01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShredderGrenade1");
    }
    else if (auto598FB55E_val == "AddCustomSkillShredderGrenade02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShredderGrenade2");
    }
    else if (auto598FB55E_val == "AddCustomSkillShredderGrenade03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShredderGrenade3");
    }
    else if (auto598FB55E_val == "AddCustomSkillShredderGrenade04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillShredderGrenade4");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkcoil01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkcoil1");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkcoil02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkcoil2");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkcoil03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkcoil3");
    }
    else if (auto598FB55E_val == "AddCustomSkillDarkcoil04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillDarkcoil4");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceFieldHavoc01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceFieldHavoc1");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceFieldHavoc02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceFieldHavoc2");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceFieldHavoc03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceFieldHavoc3");
    }
    else if (auto598FB55E_val == "AddCustomSkillForceFieldHavoc04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillForceFieldHavoc4");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrikeAmon01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrikeAmon1");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrikeAmon02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrikeAmon2");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrikeAmon03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrikeAmon3");
    }
    else if (auto598FB55E_val == "AddCustomSkillOrbitalStrikeAmon04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillOrbitalStrikeAmon4");
    }
    else if (auto598FB55E_val == "AddCustomSkillMolotovCocktail01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMolotovCocktail1");
    }
    else if (auto598FB55E_val == "AddCustomSkillMolotovCocktail02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMolotovCocktail2");
    }
    else if (auto598FB55E_val == "AddCustomSkillMolotovCocktail03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMolotovCocktail3");
    }
    else if (auto598FB55E_val == "AddCustomSkillMolotovCocktail04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillMolotovCocktail4");
    }
    else if (auto598FB55E_val == "AddCustomSkillHoldFire") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "GhostHoldFire");
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "GhostWeaponsFree");
    }
    else if (auto598FB55E_val == "AddCustomSkillDock") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "LokiDock");
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "LokiUndock");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnergyRecharge01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnergyRecharge1");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnergyRecharge02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnergyRecharge2");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnergyRecharge03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnergyRecharge3");
    }
    else if (auto598FB55E_val == "AddCustomSkillEnergyRecharge04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillEnergyRecharge4");
    }
    else if (auto598FB55E_val == "AddCustomSkillCorrosiveBile01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCorrosiveBile1");
    }
    else if (auto598FB55E_val == "AddCustomSkillCorrosiveBile02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCorrosiveBile2");
    }
    else if (auto598FB55E_val == "AddCustomSkillCorrosiveBile03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCorrosiveBile3");
    }
    else if (auto598FB55E_val == "AddCustomSkillCorrosiveBile04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillCorrosiveBile4");
    }
    else if (auto598FB55E_val == "AddCustomSkillRazorSwarm01") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRazorSwarm1");
    }
    else if (auto598FB55E_val == "AddCustomSkillRazorSwarm02") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRazorSwarm2");
    }
    else if (auto598FB55E_val == "AddCustomSkillRazorSwarm03") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRazorSwarm3");
    }
    else if (auto598FB55E_val == "AddCustomSkillRazorSwarm04") {
        UnitAbilityAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "CustomSkillRazorSwarm4");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_SE_AddSkill_Init () {
    lib22142002_gt_SE_AddSkill = TriggerCreate("lib22142002_gt_SE_AddSkill_Func");
    TriggerEnable(lib22142002_gt_SE_AddSkill, false);
    TriggerAddEventPlayerEffectUsed(lib22142002_gt_SE_AddSkill, c_playerAny, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_Morph keep Skill Spot
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_SE_MorphkeepSkillSpot_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_location;

    // Automatic Variable Declarations
    unitgroup autoEC7B75AC_g;
    int autoEC7B75AC_u;
    unit autoEC7B75AC_var;
    unitgroup autoC889EA66_g;
    int autoC889EA66_u;
    unit autoC889EA66_var;
    unitgroup autoC4DBBAD1_g;
    int autoC4DBBAD1_u;
    unit autoC4DBBAD1_var;
    unitgroup auto3AAA47EA_g;
    int auto3AAA47EA_u;
    unit auto3AAA47EA_var;

    // Variable Initialization
    lv_location = UnitGetPosition(EventUnit());

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnit(), "CustomSkillSpot01") == true)) {
        Wait(1.0, c_timeGame);
        auto3AAA47EA_g = UnitGroup(null, EventPlayer(), RegionCircle(lv_location, 0.6), UnitFilter((1 << c_targetFilterArmored) | (1 << c_targetFilterRobotic) | (1 << c_targetFilterMechanical) | (1 << c_targetFilterPsionic) | (1 << c_targetFilterHover), 0, (1 << c_targetFilterLight) | (1 << c_targetFilterMassive) | (1 << c_targetFilterStructure) | (1 << c_targetFilterHeroic) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32))), 0);
        auto3AAA47EA_u = UnitGroupCount(auto3AAA47EA_g, c_unitCountAll);
        for (;; auto3AAA47EA_u -= 1) {
            auto3AAA47EA_var = UnitGroupUnitFromEnd(auto3AAA47EA_g, auto3AAA47EA_u);
            if (auto3AAA47EA_var == null) { break; }
            UnitBehaviorRemove(auto3AAA47EA_var, "CustomSkillSpot02", c_unitBehaviorCountAll);
            UnitBehaviorRemove(auto3AAA47EA_var, "CustomSkillSpot03", c_unitBehaviorCountAll);
            UnitBehaviorRemove(auto3AAA47EA_var, "CustomSkillSpot04", c_unitBehaviorCountAll);
            UnitBehaviorAdd(auto3AAA47EA_var, "CustomSkillSpot01", auto3AAA47EA_var, 1);
        }
    }
    else {
        if ((UnitHasBehavior2(EventUnit(), "CustomSkillSpot02") == true)) {
            Wait(1.0, c_timeGame);
            autoC4DBBAD1_g = UnitGroup(null, EventPlayer(), RegionCircle(lv_location, 0.6), UnitFilter((1 << c_targetFilterArmored) | (1 << c_targetFilterRobotic) | (1 << c_targetFilterMechanical) | (1 << c_targetFilterPsionic) | (1 << c_targetFilterHover), 0, (1 << c_targetFilterLight) | (1 << c_targetFilterMassive) | (1 << c_targetFilterStructure) | (1 << c_targetFilterHeroic) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32))), 0);
            autoC4DBBAD1_u = UnitGroupCount(autoC4DBBAD1_g, c_unitCountAll);
            for (;; autoC4DBBAD1_u -= 1) {
                autoC4DBBAD1_var = UnitGroupUnitFromEnd(autoC4DBBAD1_g, autoC4DBBAD1_u);
                if (autoC4DBBAD1_var == null) { break; }
                UnitBehaviorRemove(autoC4DBBAD1_var, "CustomSkillSpot01", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC4DBBAD1_var, "CustomSkillSpot03", c_unitBehaviorCountAll);
                UnitBehaviorRemove(autoC4DBBAD1_var, "CustomSkillSpot04", c_unitBehaviorCountAll);
                UnitBehaviorAdd(autoC4DBBAD1_var, "CustomSkillSpot02", autoC4DBBAD1_var, 1);
            }
        }
        else {
            if ((UnitHasBehavior2(EventUnit(), "CustomSkillSpot03") == true)) {
                Wait(0.6, c_timeGame);
                autoC889EA66_g = UnitGroup(null, EventPlayer(), RegionCircle(lv_location, 0.6), UnitFilter((1 << c_targetFilterArmored) | (1 << c_targetFilterRobotic) | (1 << c_targetFilterMechanical) | (1 << c_targetFilterPsionic) | (1 << c_targetFilterHover), 0, (1 << c_targetFilterLight) | (1 << c_targetFilterMassive) | (1 << c_targetFilterStructure) | (1 << c_targetFilterHeroic) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32))), 0);
                autoC889EA66_u = UnitGroupCount(autoC889EA66_g, c_unitCountAll);
                for (;; autoC889EA66_u -= 1) {
                    autoC889EA66_var = UnitGroupUnitFromEnd(autoC889EA66_g, autoC889EA66_u);
                    if (autoC889EA66_var == null) { break; }
                    UnitBehaviorRemove(autoC889EA66_var, "CustomSkillSpot01", c_unitBehaviorCountAll);
                    UnitBehaviorRemove(autoC889EA66_var, "CustomSkillSpot02", c_unitBehaviorCountAll);
                    UnitBehaviorRemove(autoC889EA66_var, "CustomSkillSpot04", c_unitBehaviorCountAll);
                    UnitBehaviorAdd(autoC889EA66_var, "CustomSkillSpot03", autoC889EA66_var, 1);
                }
            }
            else {
                if ((UnitHasBehavior2(EventUnit(), "CustomSkillSpot04") == true)) {
                    Wait(1.0, c_timeGame);
                    autoEC7B75AC_g = UnitGroup(null, EventPlayer(), RegionCircle(lv_location, 0.6), UnitFilter((1 << c_targetFilterArmored) | (1 << c_targetFilterRobotic) | (1 << c_targetFilterMechanical) | (1 << c_targetFilterPsionic), 0, (1 << c_targetFilterLight) | (1 << c_targetFilterMassive) | (1 << c_targetFilterStructure) | (1 << c_targetFilterHeroic) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32))), 0);
                    autoEC7B75AC_u = UnitGroupCount(autoEC7B75AC_g, c_unitCountAll);
                    for (;; autoEC7B75AC_u -= 1) {
                        autoEC7B75AC_var = UnitGroupUnitFromEnd(autoEC7B75AC_g, autoEC7B75AC_u);
                        if (autoEC7B75AC_var == null) { break; }
                        UnitBehaviorRemove(autoEC7B75AC_var, "CustomSkillSpot01", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(autoEC7B75AC_var, "CustomSkillSpot02", c_unitBehaviorCountAll);
                        UnitBehaviorRemove(autoEC7B75AC_var, "CustomSkillSpot03", c_unitBehaviorCountAll);
                        UnitBehaviorAdd(autoEC7B75AC_var, "CustomSkillSpot04", autoEC7B75AC_var, 1);
                    }
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_SE_MorphkeepSkillSpot_Init () {
    lib22142002_gt_SE_MorphkeepSkillSpot = TriggerCreate("lib22142002_gt_SE_MorphkeepSkillSpot_Func");
    TriggerEnable(lib22142002_gt_SE_MorphkeepSkillSpot, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreT01", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreT02", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreP01", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreP02", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreZ01", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreZ02", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreO01", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_SE_MorphkeepSkillSpot, null, AbilityCommand("MorphtoSkillEditorCoreO02", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_Ability_Remove All abilities
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_SE_Ability_RemoveAllabilities_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_abInt;

    // Automatic Variable Declarations
    const int autoF427A38F_ae = 1;
    const int autoF427A38F_ai = -1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventPlayerEffectUsed() == "RemoveAbilitiesTargetDummy"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while ((UnitOrderCount(EventPlayerEffectUsedUnit(c_effectUnitTarget)) > 1)) {
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 6, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 5, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 4, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 3, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 2, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 1, c_unitProgressStageCancel);
        UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 1, c_unitProgressStageCancel);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que1", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5Addon", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5CancelToSelection", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("HangarQueue5", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5Passive", 0)), c_orderQueueReplace);
        UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que8", 0)), c_orderQueueReplace);
        Wait(0.0001, c_timeGame);
    }
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 6, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 5, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 4, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 3, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 2, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 1, c_unitProgressStageCancel);
    UnitSetProgressStage(EventPlayerEffectUsedUnit(c_effectUnitTarget), 1, c_unitProgressStageCancel);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que1", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5Addon", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5CancelToSelection", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("HangarQueue5", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que5Passive", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventPlayerEffectUsedUnit(c_effectUnitTarget), Order(AbilityCommand("que8", 0)), c_orderQueueReplace);

    if ((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != "YagdraEggBig") && (UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != "YagdraEggSmall")) {
        lv_abInt = 30;
        for ( ; ( (autoF427A38F_ai >= 0 && lv_abInt <= autoF427A38F_ae) || (autoF427A38F_ai < 0 && lv_abInt >= autoF427A38F_ae) ) ; lv_abInt += autoF427A38F_ai ) {
            if ((UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "attack") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "stop") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "move") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "BattlecruiserAttack") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "BattlecruiserStop") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "BattlecruiserMove") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "ZealotPurifierReviveDeath") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "ZealotPurifierReviveRebuild") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "TorrasqueChrysalis") && (UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt) != "TorrasqueCorpse")) {
                UnitAbilityRemove(EventPlayerEffectUsedUnit(c_effectUnitTarget), UnitAbilityGet(EventPlayerEffectUsedUnit(c_effectUnitTarget), lv_abInt));
            }

        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_SE_Ability_RemoveAllabilities_Init () {
    lib22142002_gt_SE_Ability_RemoveAllabilities = TriggerCreate("lib22142002_gt_SE_Ability_RemoveAllabilities_Func");
    TriggerEnable(lib22142002_gt_SE_Ability_RemoveAllabilities, false);
    TriggerAddEventPlayerEffectUsed(lib22142002_gt_SE_Ability_RemoveAllabilities, c_playerAny, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GE_Sacrifice Target
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_GE_SacrificeTarget_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_sC_ST_SacrificingPlayer;
    int lv_sC_ST_SacrificingType;

    // Automatic Variable Declarations
    string auto6731DAA7_val;

    // Variable Initialization
    lv_sC_ST_SacrificingPlayer = UnitGetOwner(EventUnitTargetUnit());

    // Actions
    if (!runActions) {
        return true;
    }

    if ((RegionContainsPoint(RegionCircle(UnitGetPosition(EventUnit()), 15.0), CameraGetTarget(lv_sC_ST_SacrificingPlayer)) == true)) {
        auto6731DAA7_val = UnitGetType(EventUnit());
        if (auto6731DAA7_val == "SacrificalCircle00") {
            lv_sC_ST_SacrificingType = 0;
        }
        else if (auto6731DAA7_val == "SacrificalCircle01") {
            lv_sC_ST_SacrificingType = 1;
        }
        else if (auto6731DAA7_val == "SacrificalCircle02") {
            lv_sC_ST_SacrificingType = 2;
        }
        else if (auto6731DAA7_val == "SacrificalCircle03") {
            lv_sC_ST_SacrificingType = 3;
        }
        else if (auto6731DAA7_val == "SacrificalCircle04") {
            lv_sC_ST_SacrificingType = 4;
        }
        else if (auto6731DAA7_val == "SacrificalCircle05") {
            lv_sC_ST_SacrificingType = 5;
        }
        else if (auto6731DAA7_val == "SacrificalCircle06") {
            lv_sC_ST_SacrificingType = 6;
        }
        else if (auto6731DAA7_val == "SacrificalCircle07") {
            lv_sC_ST_SacrificingType = 7;
        }
        else if (auto6731DAA7_val == "SacrificalCircle08") {
            lv_sC_ST_SacrificingType = 8;
        }
        else if (auto6731DAA7_val == "SacrificalCircle09") {
            lv_sC_ST_SacrificingType = 9;
        }
        else if (auto6731DAA7_val == "SacrificalCircle10") {
            lv_sC_ST_SacrificingType = 10;
        }
        else if (auto6731DAA7_val == "SacrificalCircle11") {
            lv_sC_ST_SacrificingType = 11;
        }
        else if (auto6731DAA7_val == "SacrificalCircle12") {
            lv_sC_ST_SacrificingType = 12;
        }
        else {
        }
        lib22142002_gv_sacr_SacrificialPoints[lv_sC_ST_SacrificingPlayer][lv_sC_ST_SacrificingType] += UnitGetPropertyFixed(EventUnitTargetUnit(), c_unitPropSuppliesUsed, c_unitPropCurrent);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_GE_SacrificeTarget_Init () {
    lib22142002_gt_GE_SacrificeTarget = TriggerCreate("lib22142002_gt_GE_SacrificeTarget_Func");
    TriggerAddEventUnitAbility(lib22142002_gt_GE_SacrificeTarget, null, AbilityCommand("SacrificeTarget", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Attack Damage
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeAttackDamage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto21971BE4_val;
    unitgroup autoDA60CBA5_g;
    int autoDA60CBA5_u;
    unit autoDA60CBA5_var;
    unitgroup auto94181EC3_g;
    int auto94181EC3_u;
    unit auto94181EC3_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FEC32CAB")));
    auto21971BE4_val = UnitGetType(EventUnit());
    if (auto21971BE4_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoDA60CBA5_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoDA60CBA5_u = UnitGroupCount(autoDA60CBA5_g, c_unitCountAll);
        for (;; autoDA60CBA5_u -= 1) {
            autoDA60CBA5_var = UnitGroupUnitFromEnd(autoDA60CBA5_g, autoDA60CBA5_u);
            if (autoDA60CBA5_var == null) { break; }
            UnitBehaviorAdd(autoDA60CBA5_var, "AttackDamageUpp", EventUnit(), 1);
        }
    }
    else if (auto21971BE4_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "AttackDamageUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else if (auto21971BE4_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto94181EC3_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto94181EC3_u = UnitGroupCount(auto94181EC3_g, c_unitCountAll);
        for (;; auto94181EC3_u -= 1) {
            auto94181EC3_var = UnitGroupUnitFromEnd(auto94181EC3_g, auto94181EC3_u);
            if (auto94181EC3_var == null) { break; }
            UnitBehaviorAdd(auto94181EC3_var, "MajorUpgradeCenterAttackDamageUpp", EventUnit(), 1);
        }
    }
    else if (auto21971BE4_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterAttackDamageUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeAttackDamage_Init () {
    lib22142002_gt_UC_UpgradeAttackDamage = TriggerCreate("lib22142002_gt_UC_UpgradeAttackDamage_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackDamage, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeAttackDamage, null, AbilityCommand("UpgradeAttackDamage", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Attack Range
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeAttackRange_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoD35F068E_val;
    unitgroup auto3652E319_g;
    int auto3652E319_u;
    unit auto3652E319_var;
    unitgroup auto04CD97E8_g;
    int auto04CD97E8_u;
    unit auto04CD97E8_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0FF9973D")));
    autoD35F068E_val = UnitGetType(EventUnit());
    if (autoD35F068E_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto3652E319_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto3652E319_u = UnitGroupCount(auto3652E319_g, c_unitCountAll);
        for (;; auto3652E319_u -= 1) {
            auto3652E319_var = UnitGroupUnitFromEnd(auto3652E319_g, auto3652E319_u);
            if (auto3652E319_var == null) { break; }
            UnitBehaviorAdd(auto3652E319_var, "AttackRangeUpp", EventUnit(), 1);
        }
    }
    else if (autoD35F068E_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "AttackRangeUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else if (autoD35F068E_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto04CD97E8_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto04CD97E8_u = UnitGroupCount(auto04CD97E8_g, c_unitCountAll);
        for (;; auto04CD97E8_u -= 1) {
            auto04CD97E8_var = UnitGroupUnitFromEnd(auto04CD97E8_g, auto04CD97E8_u);
            if (auto04CD97E8_var == null) { break; }
            UnitBehaviorAdd(auto04CD97E8_var, "MajorUpgradeCenterAttackRangeUpp", EventUnit(), 1);
        }
    }
    else if (autoD35F068E_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterAttackRangeUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeAttackRange_Init () {
    lib22142002_gt_UC_UpgradeAttackRange = TriggerCreate("lib22142002_gt_UC_UpgradeAttackRange_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackRange, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeAttackRange, null, AbilityCommand("UpgradeAttackRange", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Attack Speed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeAttackSpeed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto2406A757_val;
    unitgroup autoB8BF5522_g;
    int autoB8BF5522_u;
    unit autoB8BF5522_var;
    unitgroup autoE0DBC278_g;
    int autoE0DBC278_u;
    unit autoE0DBC278_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_841FC48F")));
    auto2406A757_val = UnitGetType(EventUnit());
    if (auto2406A757_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoB8BF5522_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoB8BF5522_u = UnitGroupCount(autoB8BF5522_g, c_unitCountAll);
        for (;; autoB8BF5522_u -= 1) {
            autoB8BF5522_var = UnitGroupUnitFromEnd(autoB8BF5522_g, autoB8BF5522_u);
            if (autoB8BF5522_var == null) { break; }
            UnitBehaviorAdd(autoB8BF5522_var, "AttackSpeedUpp", EventUnit(), 1);
        }
    }
    else if (auto2406A757_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "AttackSpeedUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else if (auto2406A757_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoE0DBC278_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoE0DBC278_u = UnitGroupCount(autoE0DBC278_g, c_unitCountAll);
        for (;; autoE0DBC278_u -= 1) {
            autoE0DBC278_var = UnitGroupUnitFromEnd(autoE0DBC278_g, autoE0DBC278_u);
            if (autoE0DBC278_var == null) { break; }
            UnitBehaviorAdd(autoE0DBC278_var, "MajorUpgradeCenterAttackSpeedUpp", EventUnit(), 1);
        }
    }
    else if (auto2406A757_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterAttackSpeedUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactRed", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeAttackSpeed_Init () {
    lib22142002_gt_UC_UpgradeAttackSpeed = TriggerCreate("lib22142002_gt_UC_UpgradeAttackSpeed_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeAttackSpeed, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeAttackSpeed, null, AbilityCommand("UpgradeAttackSpeed", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Energy Max
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeEnergyMax_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto12751133_val;
    unitgroup auto4B5ED849_g;
    int auto4B5ED849_u;
    unit auto4B5ED849_var;
    unitgroup autoF9A2BBE0_g;
    int autoF9A2BBE0_u;
    unit autoF9A2BBE0_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3FE53965")));
    auto12751133_val = UnitGetType(EventUnit());
    if (auto12751133_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto4B5ED849_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto4B5ED849_u = UnitGroupCount(auto4B5ED849_g, c_unitCountAll);
        for (;; auto4B5ED849_u -= 1) {
            auto4B5ED849_var = UnitGroupUnitFromEnd(auto4B5ED849_g, auto4B5ED849_u);
            if (auto4B5ED849_var == null) { break; }
            UnitBehaviorAdd(auto4B5ED849_var, "EnergyMaxUpp", EventUnit(), 1);
        }
    }
    else if (auto12751133_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "EnergyMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
    }
    else if (auto12751133_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoF9A2BBE0_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoF9A2BBE0_u = UnitGroupCount(autoF9A2BBE0_g, c_unitCountAll);
        for (;; autoF9A2BBE0_u -= 1) {
            autoF9A2BBE0_var = UnitGroupUnitFromEnd(autoF9A2BBE0_g, autoF9A2BBE0_u);
            if (autoF9A2BBE0_var == null) { break; }
            UnitBehaviorAdd(autoF9A2BBE0_var, "MajorUpgradeCenterEnergyMaxUpp", EventUnit(), 1);
        }
    }
    else if (auto12751133_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterEnergyMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeEnergyMax_Init () {
    lib22142002_gt_UC_UpgradeEnergyMax = TriggerCreate("lib22142002_gt_UC_UpgradeEnergyMax_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeEnergyMax, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeEnergyMax, null, AbilityCommand("UpgradeEnergyMax", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Energy Regen
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeEnergyRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto6353D9A0_val;
    unitgroup autoCA4D80E0_g;
    int autoCA4D80E0_u;
    unit autoCA4D80E0_var;
    unitgroup auto349D3674_g;
    int auto349D3674_u;
    unit auto349D3674_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4456CC93")));
    auto6353D9A0_val = UnitGetType(EventUnit());
    if (auto6353D9A0_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoCA4D80E0_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoCA4D80E0_u = UnitGroupCount(autoCA4D80E0_g, c_unitCountAll);
        for (;; autoCA4D80E0_u -= 1) {
            autoCA4D80E0_var = UnitGroupUnitFromEnd(autoCA4D80E0_g, autoCA4D80E0_u);
            if (autoCA4D80E0_var == null) { break; }
            UnitBehaviorAdd(autoCA4D80E0_var, "EnergyRegenUpp", EventUnit(), 1);
        }
    }
    else if (auto6353D9A0_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "EnergyRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
    }
    else if (auto6353D9A0_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto349D3674_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto349D3674_u = UnitGroupCount(auto349D3674_g, c_unitCountAll);
        for (;; auto349D3674_u -= 1) {
            auto349D3674_var = UnitGroupUnitFromEnd(auto349D3674_g, auto349D3674_u);
            if (auto349D3674_var == null) { break; }
            UnitBehaviorAdd(auto349D3674_var, "MajorUpgradeCenterEnergyRegenUpp", EventUnit(), 1);
        }
    }
    else if (auto6353D9A0_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterEnergyRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactPurple", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeEnergyRegen_Init () {
    lib22142002_gt_UC_UpgradeEnergyRegen = TriggerCreate("lib22142002_gt_UC_UpgradeEnergyRegen_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeEnergyRegen, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeEnergyRegen, null, AbilityCommand("UpgradeEnergyRegen", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Life Armor
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeLifeArmor_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto64E8B3B9_val;
    unitgroup autoDC0E4A2A_g;
    int autoDC0E4A2A_u;
    unit autoDC0E4A2A_var;
    unitgroup auto1BE2D1CD_g;
    int auto1BE2D1CD_u;
    unit auto1BE2D1CD_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_82489261")));
    auto64E8B3B9_val = UnitGetType(EventUnit());
    if (auto64E8B3B9_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoDC0E4A2A_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoDC0E4A2A_u = UnitGroupCount(autoDC0E4A2A_g, c_unitCountAll);
        for (;; autoDC0E4A2A_u -= 1) {
            autoDC0E4A2A_var = UnitGroupUnitFromEnd(autoDC0E4A2A_g, autoDC0E4A2A_u);
            if (autoDC0E4A2A_var == null) { break; }
            UnitBehaviorAdd(autoDC0E4A2A_var, "LifeArmorUpp", EventUnit(), 1);
        }
    }
    else if (auto64E8B3B9_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "LifeArmorUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else if (auto64E8B3B9_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto1BE2D1CD_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto1BE2D1CD_u = UnitGroupCount(auto1BE2D1CD_g, c_unitCountAll);
        for (;; auto1BE2D1CD_u -= 1) {
            auto1BE2D1CD_var = UnitGroupUnitFromEnd(auto1BE2D1CD_g, auto1BE2D1CD_u);
            if (auto1BE2D1CD_var == null) { break; }
            UnitBehaviorAdd(auto1BE2D1CD_var, "MajorUpgradeCenterLifeArmorUpp", EventUnit(), 1);
        }
    }
    else if (auto64E8B3B9_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterLifeArmorUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeLifeArmor_Init () {
    lib22142002_gt_UC_UpgradeLifeArmor = TriggerCreate("lib22142002_gt_UC_UpgradeLifeArmor_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeArmor, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeLifeArmor, null, AbilityCommand("UpgradeLifeArmor", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Life Max
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeLifeMax_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoCAF92C34_val;
    unitgroup autoFDAE7110_g;
    int autoFDAE7110_u;
    unit autoFDAE7110_var;
    unitgroup autoFE9C8945_g;
    int autoFE9C8945_u;
    unit autoFE9C8945_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B5669E73")));
    autoCAF92C34_val = UnitGetType(EventUnit());
    if (autoCAF92C34_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoFDAE7110_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoFDAE7110_u = UnitGroupCount(autoFDAE7110_g, c_unitCountAll);
        for (;; autoFDAE7110_u -= 1) {
            autoFDAE7110_var = UnitGroupUnitFromEnd(autoFDAE7110_g, autoFDAE7110_u);
            if (autoFDAE7110_var == null) { break; }
            UnitBehaviorAdd(autoFDAE7110_var, "LifeMaxUpp", EventUnit(), 1);
        }
    }
    else if (autoCAF92C34_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "LifeMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else if (autoCAF92C34_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoFE9C8945_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoFE9C8945_u = UnitGroupCount(autoFE9C8945_g, c_unitCountAll);
        for (;; autoFE9C8945_u -= 1) {
            autoFE9C8945_var = UnitGroupUnitFromEnd(autoFE9C8945_g, autoFE9C8945_u);
            if (autoFE9C8945_var == null) { break; }
            UnitBehaviorAdd(autoFE9C8945_var, "MajorUpgradeCenterLifeMaxUpp", EventUnit(), 1);
        }
    }
    else if (autoCAF92C34_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterLifeMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeLifeMax_Init () {
    lib22142002_gt_UC_UpgradeLifeMax = TriggerCreate("lib22142002_gt_UC_UpgradeLifeMax_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeMax, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeLifeMax, null, AbilityCommand("UpgradeLifeMax", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Life Regen
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeLifeRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto2F9A9745_val;
    unitgroup auto1109494E_g;
    int auto1109494E_u;
    unit auto1109494E_var;
    unitgroup auto593876EC_g;
    int auto593876EC_u;
    unit auto593876EC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E8E5B487")));
    auto2F9A9745_val = UnitGetType(EventUnit());
    if (auto2F9A9745_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto1109494E_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto1109494E_u = UnitGroupCount(auto1109494E_g, c_unitCountAll);
        for (;; auto1109494E_u -= 1) {
            auto1109494E_var = UnitGroupUnitFromEnd(auto1109494E_g, auto1109494E_u);
            if (auto1109494E_var == null) { break; }
            UnitBehaviorAdd(auto1109494E_var, "LifeRegenUpp", EventUnit(), 1);
        }
    }
    else if (auto2F9A9745_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "LifeRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else if (auto2F9A9745_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto593876EC_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto593876EC_u = UnitGroupCount(auto593876EC_g, c_unitCountAll);
        for (;; auto593876EC_u -= 1) {
            auto593876EC_var = UnitGroupUnitFromEnd(auto593876EC_g, auto593876EC_u);
            if (auto593876EC_var == null) { break; }
            UnitBehaviorAdd(auto593876EC_var, "MajorUpgradeCenterLifeRegenUpp", EventUnit(), 1);
        }
    }
    else if (auto2F9A9745_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterLifeRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactGreen", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeLifeRegen_Init () {
    lib22142002_gt_UC_UpgradeLifeRegen = TriggerCreate("lib22142002_gt_UC_UpgradeLifeRegen_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeLifeRegen, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeLifeRegen, null, AbilityCommand("UpgradeLifeRegen", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Shield Armor
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeShieldArmor_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoCC8CD846_val;
    unitgroup autoD078E8D9_g;
    int autoD078E8D9_u;
    unit autoD078E8D9_var;
    unitgroup auto4EE782BC_g;
    int auto4EE782BC_u;
    unit auto4EE782BC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_87E4ED47")));
    autoCC8CD846_val = UnitGetType(EventUnit());
    if (autoCC8CD846_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoD078E8D9_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoD078E8D9_u = UnitGroupCount(autoD078E8D9_g, c_unitCountAll);
        for (;; autoD078E8D9_u -= 1) {
            autoD078E8D9_var = UnitGroupUnitFromEnd(autoD078E8D9_g, autoD078E8D9_u);
            if (autoD078E8D9_var == null) { break; }
            UnitBehaviorAdd(autoD078E8D9_var, "ShieldArmorUpp", EventUnit(), 1);
        }
    }
    else if (autoCC8CD846_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "ShieldArmorUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else if (autoCC8CD846_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto4EE782BC_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto4EE782BC_u = UnitGroupCount(auto4EE782BC_g, c_unitCountAll);
        for (;; auto4EE782BC_u -= 1) {
            auto4EE782BC_var = UnitGroupUnitFromEnd(auto4EE782BC_g, auto4EE782BC_u);
            if (auto4EE782BC_var == null) { break; }
            UnitBehaviorAdd(auto4EE782BC_var, "MajorUpgradeCenterShieldArmorUpp", EventUnit(), 1);
        }
    }
    else if (autoCC8CD846_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterShieldArmorUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeShieldArmor_Init () {
    lib22142002_gt_UC_UpgradeShieldArmor = TriggerCreate("lib22142002_gt_UC_UpgradeShieldArmor_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldArmor, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeShieldArmor, null, AbilityCommand("UpgradeShieldArmor", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Shield Max
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeShieldMax_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto0D23F68A_val;
    unitgroup autoD6F17C00_g;
    int autoD6F17C00_u;
    unit autoD6F17C00_var;
    unitgroup autoFD3CB255_g;
    int autoFD3CB255_u;
    unit autoFD3CB255_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_BC0F82EC")));
    auto0D23F68A_val = UnitGetType(EventUnit());
    if (auto0D23F68A_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoD6F17C00_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoD6F17C00_u = UnitGroupCount(autoD6F17C00_g, c_unitCountAll);
        for (;; autoD6F17C00_u -= 1) {
            autoD6F17C00_var = UnitGroupUnitFromEnd(autoD6F17C00_g, autoD6F17C00_u);
            if (autoD6F17C00_var == null) { break; }
            UnitBehaviorAdd(autoD6F17C00_var, "ShieldMaxUpp", EventUnit(), 1);
        }
    }
    else if (auto0D23F68A_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "ShieldMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else if (auto0D23F68A_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoFD3CB255_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoFD3CB255_u = UnitGroupCount(autoFD3CB255_g, c_unitCountAll);
        for (;; autoFD3CB255_u -= 1) {
            autoFD3CB255_var = UnitGroupUnitFromEnd(autoFD3CB255_g, autoFD3CB255_u);
            if (autoFD3CB255_var == null) { break; }
            UnitBehaviorAdd(autoFD3CB255_var, "MajorUpgradeCenterShieldMaxUpp", EventUnit(), 1);
        }
    }
    else if (auto0D23F68A_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterShieldMaxUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeShieldMax_Init () {
    lib22142002_gt_UC_UpgradeShieldMax = TriggerCreate("lib22142002_gt_UC_UpgradeShieldMax_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldMax, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeShieldMax, null, AbilityCommand("UpgradeShieldMax", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Shield Regen
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeShieldRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoE0DAE6B5_val;
    unitgroup auto78EBBD6D_g;
    int auto78EBBD6D_u;
    unit auto78EBBD6D_var;
    unitgroup autoB9E492D6_g;
    int autoB9E492D6_u;
    unit autoB9E492D6_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0EE89319")));
    autoE0DAE6B5_val = UnitGetType(EventUnit());
    if (autoE0DAE6B5_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto78EBBD6D_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto78EBBD6D_u = UnitGroupCount(auto78EBBD6D_g, c_unitCountAll);
        for (;; auto78EBBD6D_u -= 1) {
            auto78EBBD6D_var = UnitGroupUnitFromEnd(auto78EBBD6D_g, auto78EBBD6D_u);
            if (auto78EBBD6D_var == null) { break; }
            UnitBehaviorAdd(auto78EBBD6D_var, "ShieldRegenUpp", EventUnit(), 1);
        }
    }
    else if (autoE0DAE6B5_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "ShieldRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else if (autoE0DAE6B5_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoB9E492D6_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoB9E492D6_u = UnitGroupCount(autoB9E492D6_g, c_unitCountAll);
        for (;; autoB9E492D6_u -= 1) {
            autoB9E492D6_var = UnitGroupUnitFromEnd(autoB9E492D6_g, autoB9E492D6_u);
            if (autoB9E492D6_var == null) { break; }
            UnitBehaviorAdd(autoB9E492D6_var, "MajorUpgradeCenterShieldRegenUpp", EventUnit(), 1);
        }
    }
    else if (autoE0DAE6B5_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterShieldRegenUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactBlue", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeShieldRegen_Init () {
    lib22142002_gt_UC_UpgradeShieldRegen = TriggerCreate("lib22142002_gt_UC_UpgradeShieldRegen_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeShieldRegen, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeShieldRegen, null, AbilityCommand("UpgradeShieldRegen", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Sight Range
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeSightRange_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto52D8AF56_val;
    unitgroup autoF34B07DD_g;
    int autoF34B07DD_u;
    unit autoF34B07DD_var;
    unitgroup autoD4FCF757_g;
    int autoD4FCF757_u;
    unit autoD4FCF757_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_645D6D79")));
    auto52D8AF56_val = UnitGetType(EventUnit());
    if (auto52D8AF56_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoF34B07DD_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoF34B07DD_u = UnitGroupCount(autoF34B07DD_g, c_unitCountAll);
        for (;; autoF34B07DD_u -= 1) {
            autoF34B07DD_var = UnitGroupUnitFromEnd(autoF34B07DD_g, autoF34B07DD_u);
            if (autoF34B07DD_var == null) { break; }
            UnitBehaviorAdd(autoF34B07DD_var, "SightRangeUpp", EventUnit(), 1);
        }
    }
    else if (auto52D8AF56_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "SightRangeUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else if (auto52D8AF56_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoD4FCF757_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoD4FCF757_u = UnitGroupCount(autoD4FCF757_g, c_unitCountAll);
        for (;; autoD4FCF757_u -= 1) {
            autoD4FCF757_var = UnitGroupUnitFromEnd(autoD4FCF757_g, autoD4FCF757_u);
            if (autoD4FCF757_var == null) { break; }
            UnitBehaviorAdd(autoD4FCF757_var, "MajorUpgradeCenterSightRangeUpp", EventUnit(), 1);
        }
    }
    else if (auto52D8AF56_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterSightRangeUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeSightRange_Init () {
    lib22142002_gt_UC_UpgradeSightRange = TriggerCreate("lib22142002_gt_UC_UpgradeSightRange_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeSightRange, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeSightRange, null, AbilityCommand("UpgradeSightRange", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Spell Damage
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeSpellDamage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto917C5BD3_val;
    unitgroup auto8D471C38_g;
    int auto8D471C38_u;
    unit auto8D471C38_var;
    unitgroup auto3CF53121_g;
    int auto3CF53121_u;
    unit auto3CF53121_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4D0E0EEA")));
    auto917C5BD3_val = UnitGetType(EventUnit());
    if (auto917C5BD3_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto8D471C38_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto8D471C38_u = UnitGroupCount(auto8D471C38_g, c_unitCountAll);
        for (;; auto8D471C38_u -= 1) {
            auto8D471C38_var = UnitGroupUnitFromEnd(auto8D471C38_g, auto8D471C38_u);
            if (auto8D471C38_var == null) { break; }
            UnitBehaviorAdd(auto8D471C38_var, "SpellDamageUpp", EventUnit(), 1);
        }
    }
    else if (auto917C5BD3_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "SpellDamageUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else if (auto917C5BD3_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto3CF53121_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto3CF53121_u = UnitGroupCount(auto3CF53121_g, c_unitCountAll);
        for (;; auto3CF53121_u -= 1) {
            auto3CF53121_var = UnitGroupUnitFromEnd(auto3CF53121_g, auto3CF53121_u);
            if (auto3CF53121_var == null) { break; }
            UnitBehaviorAdd(auto3CF53121_var, "MajorUpgradeCenterSpellDamageUpp", EventUnit(), 1);
        }
    }
    else if (auto917C5BD3_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterSpellDamageUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeSpellDamage_Init () {
    lib22142002_gt_UC_UpgradeSpellDamage = TriggerCreate("lib22142002_gt_UC_UpgradeSpellDamage_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeSpellDamage, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeSpellDamage, null, AbilityCommand("UpgradeSpellDamage", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Movement Speed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeMovementSpeed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto96E5EB9D_val;
    unitgroup auto4277D0E0_g;
    int auto4277D0E0_u;
    unit auto4277D0E0_var;
    unitgroup auto0B8FCF31_g;
    int auto0B8FCF31_u;
    unit auto0B8FCF31_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A99DB961")));
    auto96E5EB9D_val = UnitGetType(EventUnit());
    if (auto96E5EB9D_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto4277D0E0_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto4277D0E0_u = UnitGroupCount(auto4277D0E0_g, c_unitCountAll);
        for (;; auto4277D0E0_u -= 1) {
            auto4277D0E0_var = UnitGroupUnitFromEnd(auto4277D0E0_g, auto4277D0E0_u);
            if (auto4277D0E0_var == null) { break; }
            UnitBehaviorAdd(auto4277D0E0_var, "MovementSpeedUpp", EventUnit(), 1);
        }
    }
    else if (auto96E5EB9D_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MovementSpeedUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else if (auto96E5EB9D_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto0B8FCF31_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto0B8FCF31_u = UnitGroupCount(auto0B8FCF31_g, c_unitCountAll);
        for (;; auto0B8FCF31_u -= 1) {
            auto0B8FCF31_var = UnitGroupUnitFromEnd(auto0B8FCF31_g, auto0B8FCF31_u);
            if (auto0B8FCF31_var == null) { break; }
            UnitBehaviorAdd(auto0B8FCF31_var, "MajorUpgradeCenterMovementSpeedUpp", EventUnit(), 1);
        }
    }
    else if (auto96E5EB9D_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterMovementSpeedUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeMovementSpeed_Init () {
    lib22142002_gt_UC_UpgradeMovementSpeed = TriggerCreate("lib22142002_gt_UC_UpgradeMovementSpeed_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeMovementSpeed, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeMovementSpeed, null, AbilityCommand("UpgradeMovementSpeed", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UC_Upgrade Cooldown Reduction
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_UC_UpgradeCooldownReduction_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto3C951E55_val;
    unitgroup auto35442975_g;
    int auto35442975_u;
    unit auto35442975_var;
    unitgroup autoDE9D52DA_g;
    int autoDE9D52DA_u;
    unit autoDE9D52DA_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), lib22142002_gv_upgradeCenterMessageArea, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C8437EC7")));
    auto3C951E55_val = UnitGetType(EventUnit());
    if (auto3C951E55_val == "DEITYToolsUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        auto35442975_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto35442975_u = UnitGroupCount(auto35442975_g, c_unitCountAll);
        for (;; auto35442975_u -= 1) {
            auto35442975_var = UnitGroupUnitFromEnd(auto35442975_g, auto35442975_u);
            if (auto35442975_var == null) { break; }
            UnitBehaviorAdd(auto35442975_var, "CooldownReductionUpp", EventUnit(), 1);
        }
    }
    else if (auto3C951E55_val == "DEITYToolsUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "CooldownReductionUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else if (auto3C951E55_val == "DEITYToolsMajorUpgradeCenterA") {
        libNtve_gf_AttachActorToUnit(EventUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
        ActorSend(libNtve_gf_ActorLastCreated(), "SetScale 2.000000");
        autoDE9D52DA_g = UnitGroup(null, UnitGetOwner(EventUnit()), null, UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoDE9D52DA_u = UnitGroupCount(autoDE9D52DA_g, c_unitCountAll);
        for (;; autoDE9D52DA_u -= 1) {
            autoDE9D52DA_var = UnitGroupUnitFromEnd(autoDE9D52DA_g, autoDE9D52DA_u);
            if (autoDE9D52DA_var == null) { break; }
            UnitBehaviorAdd(autoDE9D52DA_var, "MajorUpgradeCenterCooldownReductionUpp", EventUnit(), 1);
        }
    }
    else if (auto3C951E55_val == "DEITYToolsMajorUpgradeCenterS") {
        UnitBehaviorAdd(EventUnitTargetUnit(), "MajorUpgradeCenterCooldownReductionUpp", EventUnit(), 1);
        libNtve_gf_AttachActorToUnit(EventUnitTargetUnit(), "UpgradeCenterUpgradeImpactYellow", "Ref_Origin");
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_UC_UpgradeCooldownReduction_Init () {
    lib22142002_gt_UC_UpgradeCooldownReduction = TriggerCreate("lib22142002_gt_UC_UpgradeCooldownReduction_Func");
    TriggerEnable(lib22142002_gt_UC_UpgradeCooldownReduction, false);
    TriggerAddEventUnitAbility(lib22142002_gt_UC_UpgradeCooldownReduction, null, AbilityCommand("UpgradeCooldownReduction", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Contr_PlayerGivesControl
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Contr_PlayerGivesControl_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoA41F6216_ae = 15;
    int autoA41F6216_var;

    // Conditions
    if (testConds) {
        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((PlayerGroupCount(PlayerGroupAlliance(c_playerGroupAlly, EventPlayer())) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoA41F6216_var = 0;
    for ( ; autoA41F6216_var <= autoA41F6216_ae; autoA41F6216_var += 1 ) {
        if ((PlayerGetAlliance(EventPlayer(), c_allianceIdControl, autoA41F6216_var) == true)) {
            if ((lib22142002_gv_dEITY_RelationsControl[EventPlayer()][autoA41F6216_var] == false)) {
                lib22142002_gv_dEITY_RelationsControl[EventPlayer()][autoA41F6216_var] = true;
            }

        }
        else {
            if ((lib22142002_gv_dEITY_RelationsControl[EventPlayer()][autoA41F6216_var] == true)) {
                lib22142002_gv_dEITY_RelationsControl[EventPlayer()][autoA41F6216_var] = false;
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Contr_PlayerGivesControl_Init () {
    lib22142002_gt_Contr_PlayerGivesControl = TriggerCreate("lib22142002_gt_Contr_PlayerGivesControl_Func");
    TriggerAddEventPlayerAllianceChange(lib22142002_gt_Contr_PlayerGivesControl, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GE_CameraFollowUnitDeath
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_GE_CameraFollowUnitDeath_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2F2AA42B_ae = 15;
    int auto2F2AA42B_var;

    // Conditions
    if (testConds) {
        if (!(((EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[0]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[1]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[2]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[3]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[4]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[5]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[6]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[7]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[8]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[9]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[10]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[11]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[12]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[13]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[14]) || (EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[15])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2F2AA42B_var = 0;
    for ( ; auto2F2AA42B_var <= auto2F2AA42B_ae; auto2F2AA42B_var += 1 ) {
        if ((EventUnit() == lib22142002_gv_c_SC_CameraFollowUnit[auto2F2AA42B_var]) && (lib22142002_gv_c_SC_CameraLock[auto2F2AA42B_var] == false)) {
            CameraLockInput(auto2F2AA42B_var, false);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_GE_CameraFollowUnitDeath_Init () {
    lib22142002_gt_GE_CameraFollowUnitDeath = TriggerCreate("lib22142002_gt_GE_CameraFollowUnitDeath_Func");
    TriggerEnable(lib22142002_gt_GE_CameraFollowUnitDeath, false);
    TriggerAddEventUnitDied(lib22142002_gt_GE_CameraFollowUnitDeath, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bounty_Reward
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Bounty_Reward_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoA822F271_val;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_KillingUnit() != null))) {
            return false;
        }

        if (!((libNtve_gf_KillingPlayer() != c_playerAny))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != libNtve_gf_KillingPlayer()))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeCancel) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeImpact) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeRemove) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeUnlink) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeSalvage) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeTimeout) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeUnderConstruction) == false))) {
            return false;
        }

        if (!((EventUnitDamageDeathCheck(c_deathTypeMorph) == false))) {
            return false;
        }

        if (!((UnitFilterMatch(EventUnit(), UnitGetOwner(EventUnit()), UnitFilter(0, 0, (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterSummoned - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib22142002_gv_bounty_GiveBounty[EventPlayer()] == true) && (lib22142002_gv_bounty_GainBounty[libNtve_gf_KillingPlayer()] == true)) {
        if ((UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][0]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][1]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][2]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][3]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][4]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][5]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][6]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][7]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][8]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][9]) && (UnitGetType(EventUnit()) != lib22142002_gv_bounty_UnitSpecial[EventPlayer()][10])) {
            if ((((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), 0)) == true) && (lib22142002_gv_bounty_DoStructuresDropLoot[EventPlayer()] == true)) || (UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterStructure), 0, 0, 0)) == false))) {
                if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterHeroic), 0, (1 << c_targetFilterMissile), 0)) == true)) {
                    lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Heroic[EventPlayer()]);
                }
                else {
                    if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterLight), 0, (1 << c_targetFilterMissile), 0)) == true)) {
                        lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Light[EventPlayer()]);
                    }
                    else {
                        if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterArmored), 0, (1 << c_targetFilterMissile), 0)) == true)) {
                            lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Armored[EventPlayer()]);
                        }
                        else {
                            if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter((1 << c_targetFilterMassive), 0, (1 << c_targetFilterMissile), 0)) == true)) {
                                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Massive[EventPlayer()]);
                            }
                            else {
                                if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterMissile), 0)) == true)) {
                                    lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Standard[EventPlayer()]);
                                }

                            }
                        }
                    }
                }
            }

        }
        else {
            autoA822F271_val = UnitGetType(EventUnit());
            if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][0]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][0]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][1]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][1]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][2]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][2]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][3]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][3]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][4]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][4]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][5]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][5]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][6]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][6]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][7]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][7]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][8]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][8]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][9]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][9]);
            }
            else if (autoA822F271_val == lib22142002_gv_bounty_UnitSpecial[EventPlayer()][10]) {
                lib22142002_gf_BountyRNegativeSafe(libNtve_gf_KillingPlayer(), lib22142002_gv_bounty_Special[EventPlayer()][10]);
            }
            else {
            }
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Bounty_Reward_Init () {
    lib22142002_gt_Bounty_Reward = TriggerCreate("lib22142002_gt_Bounty_Reward_Func");
    TriggerEnable(lib22142002_gt_Bounty_Reward, false);
    TriggerAddEventUnitDied(lib22142002_gt_Bounty_Reward, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bounty_Dialogs_Initate
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Bounty_Dialogs_Initate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bDI_SpecialInt;
    int lv_bDI_YOffset;
    int lv_bDI_YDistance;
    int lv_bDI_XOffset;
    int lv_bDI_TextWidth;
    int lv_bDI_ValueWidth;
    int lv_bDI_YDistanceSpecial;

    // Automatic Variable Declarations
    playergroup auto62059C3F_g;
    int auto62059C3F_var;
    const int autoF4B7D00D_ae = 11;
    const int autoF4B7D00D_ai = 1;

    // Variable Initialization
    lv_bDI_YOffset = 75;
    lv_bDI_YDistance = 40;
    lv_bDI_TextWidth = 350;
    lv_bDI_ValueWidth = 100;
    lv_bDI_YDistanceSpecial = 25;

    // Actions
    if (!runActions) {
        return true;
    }

    auto62059C3F_g = PlayerGroupAll();
    auto62059C3F_var = -1;
    while (true) {
        auto62059C3F_var = PlayerGroupNextPlayer(auto62059C3F_g, auto62059C3F_var);
        if (auto62059C3F_var < 0) { break; }
        lib22142002_gv_bounty_DoDisplay[auto62059C3F_var] = false;
        DialogCreate(500, 740, c_anchorRight, 0, -100, true);
        lib22142002_gv_bounty_Dialog[auto62059C3F_var] = DialogLastCreated();
        DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 50, 50, c_anchorTopRight, 13, 13, StringToText(""), StringExternal("Param/Value/lib_22142002_61AD642F"), "");
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(auto62059C3F_var), true);
        lib22142002_gv_bounty_Dia_Button_Close[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 40, 45, c_anchorTop, 165, 30, StringToText(""), StringExternal("Param/Value/lib_22142002_B3F0F6CC"), "");
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(auto62059C3F_var), true);
        lib22142002_gv_bounty_Dia_Button_Next[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 40, 45, c_anchorTop, -165, 30, StringToText(""), StringExternal("Param/Value/lib_22142002_0D578995"), "");
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupSingle(auto62059C3F_var), true);
        lib22142002_gv_bounty_Dia_Button_Prev[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTop, 50, 35, (StringExternal("Param/Value/lib_22142002_284F2FDA") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(0), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(0, false)))), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Name_Text[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (0 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_7CA4D89D"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (0 * lv_bDI_YDistance)), libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_GainBounty[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_ReceiveBounty[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (1 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_7D9C7D45"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (1 * lv_bDI_YDistance)), libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_GiveBounty[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_DoBounty[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (2 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_FA14A891"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (2 * lv_bDI_YDistance)), libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_DoStructuresDropLoot[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_DoStructuresLoot[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (3 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_348E3348"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (3 * lv_bDI_YDistance)), IntToText(lib22142002_gv_bounty_Light[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Light[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (4 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_FD63F262"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (4 * lv_bDI_YDistance)), IntToText(lib22142002_gv_bounty_Standard[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Standard[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (5 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_2180006F"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (5 * lv_bDI_YDistance)), IntToText(lib22142002_gv_bounty_Armored[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Armored[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (6 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_79DFA6B4"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (6 * lv_bDI_YDistance)), IntToText(lib22142002_gv_bounty_Massive[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Massive[auto62059C3F_var] = DialogControlLastCreated();
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (7 * lv_bDI_YDistance)), StringExternal("Param/Value/lib_22142002_5B9AD982"), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (7 * lv_bDI_YDistance)), IntToText(lib22142002_gv_bounty_Heroic[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        lib22142002_gv_bounty_Dia_Heroic[auto62059C3F_var] = DialogControlLastCreated();
        lv_bDI_SpecialInt = 0;
        for ( ; ( (autoF4B7D00D_ai >= 0 && lv_bDI_SpecialInt <= autoF4B7D00D_ae) || (autoF4B7D00D_ai < 0 && lv_bDI_SpecialInt >= autoF4B7D00D_ae) ) ; lv_bDI_SpecialInt += autoF4B7D00D_ai ) {
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_TextWidth, 50, c_anchorTopLeft, 50, (lv_bDI_YOffset + (8 * lv_bDI_YDistance) + (lv_bDI_SpecialInt * lv_bDI_YDistanceSpecial)), (StringExternal("Param/Value/lib_22142002_A90EBB73") + IntToText(lv_bDI_SpecialInt) + StringExternal("Param/Value/lib_22142002_6A75C88F") + UnitTypeGetName(lib22142002_gv_bounty_UnitSpecial[lv_bDI_SpecialInt][1]) + StringExternal("Param/Value/lib_22142002_EAE2394B")), ColorWithAlpha(0,0,0,0), false, 2.0);
            lib22142002_gv_bounty_Dia_Special_Text[auto62059C3F_var][lv_bDI_SpecialInt] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_bDI_ValueWidth, 50, c_anchorTopRight, lv_bDI_XOffset, (lv_bDI_YOffset + (8 * lv_bDI_YDistance) + (lv_bDI_SpecialInt * lv_bDI_YDistanceSpecial)), IntToText(lib22142002_gv_bounty_Special[lv_bDI_SpecialInt][1]), ColorWithAlpha(0,0,0,0), false, 2.0);
            lib22142002_gv_bounty_Dia_Special_Value[auto62059C3F_var][lv_bDI_SpecialInt] = DialogControlLastCreated();
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Bounty_Dialogs_Initate_Init () {
    lib22142002_gt_Bounty_Dialogs_Initate = TriggerCreate("lib22142002_gt_Bounty_Dialogs_Initate_Func");
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Initate, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bounty_Dialogs_Update
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Bounty_Dialogs_Update_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bDU_SpecialInt;

    // Automatic Variable Declarations
    playergroup autoEEDB803F_g;
    int autoEEDB803F_var;
    const int auto476BD8C3_ae = 11;
    const int auto476BD8C3_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoEEDB803F_g = PlayerGroupAll();
    autoEEDB803F_var = -1;
    while (true) {
        autoEEDB803F_var = PlayerGroupNextPlayer(autoEEDB803F_g, autoEEDB803F_var);
        if (autoEEDB803F_var < 0) { break; }
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Name_Text[autoEEDB803F_var], (StringExternal("Param/Value/lib_22142002_97615FF0") + TextWithColor(lib22142002_gf_NameOfPlayerNoName(lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var], false)))), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_ReceiveBounty[autoEEDB803F_var], libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_GainBounty[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_DoBounty[autoEEDB803F_var], libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_GiveBounty[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_DoStructuresLoot[autoEEDB803F_var], libNtve_gf_ConvertBooleanToText(lib22142002_gv_bounty_DoStructuresDropLoot[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Light[autoEEDB803F_var], IntToText(lib22142002_gv_bounty_Light[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Standard[autoEEDB803F_var], IntToText(lib22142002_gv_bounty_Standard[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Armored[autoEEDB803F_var], IntToText(lib22142002_gv_bounty_Armored[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Massive[autoEEDB803F_var], IntToText(lib22142002_gv_bounty_Massive[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Heroic[autoEEDB803F_var], IntToText(lib22142002_gv_bounty_Heroic[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]]), PlayerGroupAll());
        lv_bDU_SpecialInt = 0;
        for ( ; ( (auto476BD8C3_ai >= 0 && lv_bDU_SpecialInt <= auto476BD8C3_ae) || (auto476BD8C3_ai < 0 && lv_bDU_SpecialInt >= auto476BD8C3_ae) ) ; lv_bDU_SpecialInt += auto476BD8C3_ai ) {
            libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Special_Text[autoEEDB803F_var][lv_bDU_SpecialInt], (StringExternal("Param/Value/lib_22142002_AC1D4BFA") + IntToText(lv_bDU_SpecialInt) + StringExternal("Param/Value/lib_22142002_C0768451") + UnitTypeGetName(lib22142002_gv_bounty_UnitSpecial[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]][lv_bDU_SpecialInt]) + StringExternal("Param/Value/lib_22142002_6B87E261")), PlayerGroupAll());
            libNtve_gf_SetDialogItemText(lib22142002_gv_bounty_Dia_Special_Value[autoEEDB803F_var][lv_bDU_SpecialInt], IntToText(lib22142002_gv_bounty_Special[lib22142002_gv_bounty_DisplayPage[autoEEDB803F_var]][lv_bDU_SpecialInt]), PlayerGroupAll());
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Bounty_Dialogs_Update_Init () {
    lib22142002_gt_Bounty_Dialogs_Update = TriggerCreate("lib22142002_gt_Bounty_Dialogs_Update_Func");
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Update, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bounty_Dialogs_Pressed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Bounty_Dialogs_Pressed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib22142002_gv_bounty_Dia_Button_Close[EventPlayer()])) {
        DialogSetVisible(lib22142002_gv_bounty_Dialog[EventPlayer()], PlayerGroupAll(), false);
        lib22142002_gv_bounty_DoDisplay[EventPlayer()] = false;
    }

    if ((EventDialogControl() == lib22142002_gv_bounty_Dia_Button_Next[EventPlayer()])) {
        if ((lib22142002_gv_bounty_DisplayPage[EventPlayer()] == 15)) {
            lib22142002_gv_bounty_DisplayPage[EventPlayer()] = 0;
        }
        else {
            lib22142002_gv_bounty_DisplayPage[EventPlayer()] += 1;
        }
    }

    if ((EventDialogControl() == lib22142002_gv_bounty_Dia_Button_Prev[EventPlayer()])) {
        if ((lib22142002_gv_bounty_DisplayPage[EventPlayer()] == 0)) {
            lib22142002_gv_bounty_DisplayPage[EventPlayer()] = 15;
        }
        else {
            lib22142002_gv_bounty_DisplayPage[EventPlayer()] -= 1;
        }
    }

    TriggerExecute(lib22142002_gt_Bounty_Dialogs_Update, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Bounty_Dialogs_Pressed_Init () {
    lib22142002_gt_Bounty_Dialogs_Pressed = TriggerCreate("lib22142002_gt_Bounty_Dialogs_Pressed_Func");
    TriggerEnable(lib22142002_gt_Bounty_Dialogs_Pressed, false);
    TriggerAddEventDialogControl(lib22142002_gt_Bounty_Dialogs_Pressed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CUT_Death
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CUT_Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gf_CUT_Remove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CUT_Death_Init () {
    lib22142002_gt_CUT_Death = TriggerCreate("lib22142002_gt_CUT_Death_Func");
    TriggerEnable(lib22142002_gt_CUT_Death, false);
    TriggerAddEventUnitDied(lib22142002_gt_CUT_Death, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CUT_TheBehavior
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CUT_TheBehavior_Func (bool testConds, bool runActions) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(0,0,0);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "ZeratulHeroDarkArchon")) {
        lv_color = Color(54.51, 0.00, 0.00);
    }

    if ((UnitGetType(EventUnit()) == "ZeratulSummonKarass")) {
        lv_color = Color(92.94, 99.61, 8.63);
    }

    if ((UnitGetType(EventUnit()) == "Zoraya")) {
        lv_color = Color(27.45, 15.29, 34.90);
    }

    if (((UnitGetType(EventUnit()) == "RaszagalCorsair") || (UnitGetType(EventUnit()) == "ArtanisScout") || (UnitGetType(EventUnit()) == "FenixDragoonHero") || (UnitGetType(EventUnit()) == "FenixZealot") || (UnitGetType(EventUnit()) == "GantrithorCarrier") || (UnitGetType(EventUnit()) == "TassadarHighTemplar") || (UnitGetType(EventUnit()) == "GuiMontagFirebat") || (UnitGetType(EventUnit()) == "RaynorSC1") || (UnitGetType(EventUnit()) == "VultureACGluescreenDummy") || (UnitGetType(EventUnit()) == "NoradIIBattlecruiser") || (UnitGetType(EventUnit()) == "CrashedNoradIIBattlecruiser") || (UnitGetType(EventUnit()) == "NoradIIIBattlecruiser") || (UnitGetType(EventUnit()) == "SarahKerriganSC1Ghost") || (UnitGetType(EventUnit()) == "TomKazanskyWraith") || (UnitGetType(EventUnit()) == "SiegeTankACGluescreenDummySieged") || (UnitGetType(EventUnit()) == "SiegeTankACGluescreenDummy"))) {
        lv_color = Color(0.00, 50.20, 50.20);
    }

    if (((UnitGetType(EventUnit()) == "DemiothDragoon") || (UnitGetType(EventUnit()) == "EdullonZealot"))) {
        lv_color = Color(50.20, 0.00, 25.10);
    }

    if (((UnitGetType(EventUnit()) == "CharlieVaneWraith") || (UnitGetType(EventUnit()) == "JackFrostFirebat") || (UnitGetType(EventUnit()) == "TsunameGoliath"))) {
        lv_color = Color(50.20, 0.00, 100.00);
    }

    if (((UnitGetType(EventUnit()) == "EredasDragoon") || (UnitGetType(EventUnit()) == "KizrathScout") || (UnitGetType(EventUnit()) == "MojoScoutSC1"))) {
        lv_color = Color(15.69, 43.14, 86.27);
    }

    if (((UnitGetType(EventUnit()) == "KhorunZealot") || (UnitGetType(EventUnit()) == "DragoonACGluescreenDummy") || (UnitGetType(EventUnit()) == "AldarisHighTemplar") || (UnitGetType(EventUnit()) == "CharlieMoxFirebat") || (UnitGetType(EventUnit()) == "DaleGurneyGoliath"))) {
        lv_color = Color(0.00, 25.10, 50.20);
    }

    if (((UnitGetType(EventUnit()) == "CorsairACGluescreenDummy") || (UnitGetType(EventUnit()) == "DarkTemplarTalDarimShadowClone"))) {
        lv_color = Color(0.00, 0.00, 100.00);
    }

    if (((UnitGetType(EventUnit()) == "Moloch") || (UnitGetType(EventUnit()) == "JakeHellfireFirebat") || (UnitGetType(EventUnit()) == "HydraliskACGluescreenDummy"))) {
        lv_color = Color(98.04, 84.31, 3.92);
    }

    if (((UnitGetType(EventUnit()) == "GoliathACGluescreenDummy"))) {
        lv_color = Color(100.00, 100.00, 50.20);
    }

    if (((UnitGetType(EventUnit()) == "BlackMorganDropship") || (UnitGetType(EventUnit()) == "HadesScienceVessel") || (UnitGetType(EventUnit()) == "IanAnduinMarine") || (UnitGetType(EventUnit()) == "IanAnduinVulture") || (UnitGetType(EventUnit()) == "VultureHero"))) {
        lv_color = Color(100.00, 0.00, 0.00);
    }

    if (((UnitGetType(EventUnit()) == "BudMorrisFirebat"))) {
        lv_color = Color(100.00, 50.20, 25.10);
    }

    if (((UnitGetType(EventUnit()) == "ScienceVesselACGluescreenDummy"))) {
        lv_color = Color(94.12, 88.24, 82.35);
    }

    if (((UnitGetType(EventUnit()) == "DefilerHeroZergrinch") || (UnitGetType(EventUnit()) == "DefilerHeroZergrinchBurrowed"))) {
        lv_color = Color(0.00, 66.67, 0.00);
    }

    if ((UnitGetType(EventUnit()) == "ZealotACGluescreenDummy")) {
        lv_color = Color(0.00, 0.00, 25.10);
    }

    if ((UnitGetType(EventUnit()) == "DarkTemplarShakurasACGluescreenDummy") && (UnitGetType(EventUnit()) == "ZealotVorazunACGluescreenDummy")) {
        lv_color = Color(0.00, 41.57, 20.78);
    }

    if ((UnitGetType(EventUnit()) == "HighTemplarACGluescreenDummy")) {
        lv_color = Color(100.00, 50.20, 0.00);
    }

    if (((UnitGetType(EventUnit()) == "AedusXerxesArchon") || (UnitGetType(EventUnit()) == "AndraxxusCarrier") || (UnitGetType(EventUnit()) == "DanimothArbiter") || (UnitGetType(EventUnit()) == "NannothTaeradunArchon") || (UnitGetType(EventUnit()) == "SyndreaArbiter") || (UnitGetType(EventUnit()) == "TaldarinDragoon") || (UnitGetType(EventUnit()) == "TurmalisArbiter") || (UnitGetType(EventUnit()) == "TurmalisHighTemplar") || (UnitGetType(EventUnit()) == "WarbringerReaver") || (UnitGetType(EventUnit()) == "ThakrasDefilerBurrowed") || (UnitGetType(EventUnit()) == "ThakrasDefiler"))) {
        lv_color = libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(EventUnit()), false));
    }

    UnitGroupAdd(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit());
    lib22142002_gf_CUT_AddUpdate(EventUnit(), lv_color);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CUT_TheBehavior_Init () {
    lib22142002_gt_CUT_TheBehavior = TriggerCreate("lib22142002_gt_CUT_TheBehavior_Func");
    TriggerEnable(lib22142002_gt_CUT_TheBehavior, false);
    TriggerAddEventUnitBehaviorChange(lib22142002_gt_CUT_TheBehavior, null, "DEITYUniqueColor", c_unitBehaviorChangeCreate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TXT&Tip_Death
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_TXTTip_Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGroupHasUnit(lib22142002_gv_tXTTip_TextAppliedUnit, EventUnit()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gf_TXTTip_Remove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_TXTTip_Death_Init () {
    lib22142002_gt_TXTTip_Death = TriggerCreate("lib22142002_gt_TXTTip_Death_Func");
    TriggerEnable(lib22142002_gt_TXTTip_Death, false);
    TriggerAddEventUnitDied(lib22142002_gt_TXTTip_Death, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Button Reactions
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_ButtonReactions_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoACACEF09_g;
    int autoACACEF09_u;
    unit autoACACEF09_var;
    unitgroup auto4B113AD5_g;
    int auto4B113AD5_u;
    unit auto4B113AD5_var;
    unitgroup auto32E00087_g;
    int auto32E00087_u;
    unit auto32E00087_var;
    unitgroup auto9F66D74E_g;
    int auto9F66D74E_u;
    unit auto9F66D74E_var;

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_confirm) || (EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_close)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_confirm)) {
        if ((lib22142002_gv_cCS_RecolorType[EventPlayer()] == "Player")) {
            autoACACEF09_g = UnitGroupSelected(EventPlayer());
            autoACACEF09_u = UnitGroupCount(autoACACEF09_g, c_unitCountAll);
            for (;; autoACACEF09_u -= 1) {
                autoACACEF09_var = UnitGroupUnitFromEnd(autoACACEF09_g, autoACACEF09_u);
                if (autoACACEF09_var == null) { break; }
                lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(autoACACEF09_var)] = Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider, EventPlayer()));
                lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(autoACACEF09_var)] = lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(autoACACEF09_var)];
                lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(autoACACEF09_var));
            }
        }
        else {
            if ((lib22142002_gv_cCS_RecolorType[EventPlayer()] == "Unit")) {
                lib22142002_gv_cCS_UnitTeamColor = Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider, EventPlayer()));
                auto9F66D74E_g = UnitGroupSelected(EventPlayer());
                auto9F66D74E_u = UnitGroupCount(auto9F66D74E_g, c_unitCountAll);
                for (;; auto9F66D74E_u -= 1) {
                    auto9F66D74E_var = UnitGroupUnitFromEnd(auto9F66D74E_g, auto9F66D74E_u);
                    if (auto9F66D74E_var == null) { break; }
                    libNtve_gf_SendActorMessageToUnit(auto9F66D74E_var, libNtve_gf_SetTeamColor(lib22142002_gv_cCS_UnitTeamColor, lib22142002_gv_cCS_UnitTeamColor));
                    lib22142002_gf_CUT_AddUpdate(auto9F66D74E_var, lib22142002_gv_cCS_UnitTeamColor);
                    UnitGroupAdd(lib22142002_gv_recolor_ColorAppliedUnit, auto9F66D74E_var);
                }
            }
            else {
                if ((lib22142002_gv_cCS_RecolorType[EventPlayer()] == "PlayerTint")) {
                    auto4B113AD5_g = UnitGroupSelected(EventPlayer());
                    auto4B113AD5_u = UnitGroupCount(auto4B113AD5_g, c_unitCountAll);
                    for (;; auto4B113AD5_u -= 1) {
                        auto4B113AD5_var = UnitGroupUnitFromEnd(auto4B113AD5_g, auto4B113AD5_u);
                        if (auto4B113AD5_var == null) { break; }
                        lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(auto4B113AD5_var)] = Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider, EventPlayer()));
                        lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(auto4B113AD5_var)] = true;
                        lib22142002_gf_CCS_Player_COLORAPPLY(UnitGetOwner(auto4B113AD5_var));
                    }
                }
                else {
                    if ((lib22142002_gv_cCS_RecolorType[EventPlayer()] == "UnitTint")) {
                        lib22142002_gv_cCS_UnitTintColor = Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider, EventPlayer()));
                        auto32E00087_g = UnitGroupSelected(EventPlayer());
                        auto32E00087_u = UnitGroupCount(auto32E00087_g, c_unitCountAll);
                        for (;; auto32E00087_u -= 1) {
                            auto32E00087_var = UnitGroupUnitFromEnd(auto32E00087_g, auto32E00087_u);
                            if (auto32E00087_var == null) { break; }
                            libNtve_gf_SendActorMessageToUnit(auto32E00087_var, libNtve_gf_SetTintColor(lib22142002_gv_cCS_UnitTintColor, 1.0, 0.0));
                            UnitGroupAdd(lib22142002_gv_tint_ColorAppliedUnit, auto32E00087_var);
                        }
                    }

                }
            }
        }
    }
    else {
        DialogSetVisible(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_dialog, PlayerGroupSingle(EventPlayer()), false);
        UnitGroupClear(lib22142002_gv_cCS_UnitSelect_Recolor[EventPlayer()]);
        PlayerGroupClear(lib22142002_gv_cCS_PlayerSelect_Recolor[EventPlayer()]);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_ButtonReactions_Init () {
    lib22142002_gt_CCS_ButtonReactions = TriggerCreate("lib22142002_gt_CCS_ButtonReactions_Func");
    TriggerEnable(lib22142002_gt_CCS_ButtonReactions, false);
    TriggerAddEventDialogControl(lib22142002_gt_CCS_ButtonReactions, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Customize Dialog Creation
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_CustomizeDialogCreation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto04CF3D20_g;
    int auto04CF3D20_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto04CF3D20_g = PlayerGroupAll();
    auto04CF3D20_var = -1;
    while (true) {
        auto04CF3D20_var = PlayerGroupNextPlayer(auto04CF3D20_g, auto04CF3D20_var);
        if (auto04CF3D20_var < 0) { break; }
        if ((PlayerType(auto04CF3D20_var) == c_playerTypeUser)) {
            DialogCreate(550, 300, c_anchorTopRight, 5, 5, true);
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog = DialogLastCreated();
            DialogSetImageVisible(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, false);
            libNtve_gf_CreateDialogItemImage(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, 550, 300, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_ingame_blackmask.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_background = DialogControlLastCreated();
            DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), 0.0, 10.0);
            libNtve_gf_CreateDialogItemImage(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, 180, 220, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\grey.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_playerColorPreviewBox = DialogControlLastCreated();
            libNtve_gf_SetDialogItemDesaturated(DialogControlLastCreated(), true, PlayerGroupAll());
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorTopLeft, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_background, c_anchorTopLeft, 10, 10);
            DialogControlCreateFromTemplate(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, c_triggerControlTypeSlider, "Sliders/SliderRED");
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_redSlider = DialogControlLastCreated();
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorTopLeft, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_playerColorPreviewBox, c_anchorTopRight, 40, 0);
            DialogControlCreateFromTemplate(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, c_triggerControlTypeSlider, "Sliders/SliderGREEN");
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_greenSlider = DialogControlLastCreated();
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorTop, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_redSlider, c_anchorBottom, 0, 10);
            DialogControlCreateFromTemplate(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, c_triggerControlTypeSlider, "Sliders/SliderBLUE");
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_blueSlider = DialogControlLastCreated();
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorTop, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_greenSlider, c_anchorBottom, 0, 10);

            libNtve_gf_CreateDialogItemButton(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, 200, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/lib_22142002_2BD4025F"), "");
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_close = DialogControlLastCreated();
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorBottomLeft, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_background, c_anchorBottomLeft, 5, -5);
            libNtve_gf_CreateDialogItemButton(lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_dialog, 300, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/lib_22142002_2584DB32"), "");
            lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_confirm = DialogControlLastCreated();
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupSingle(auto04CF3D20_var), c_anchorBottomRight, lib22142002_gv_cCS_CustomizeUI[auto04CF3D20_var].lv_background, c_anchorBottomRight, -5, -5);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_CustomizeDialogCreation_Init () {
    lib22142002_gt_CCS_CustomizeDialogCreation = TriggerCreate("lib22142002_gt_CCS_CustomizeDialogCreation_Func");
    TriggerEnable(lib22142002_gt_CCS_CustomizeDialogCreation, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Player Colors
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_PlayerColors_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCC1C0396_g;
    int autoCC1C0396_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCC1C0396_g = PlayerGroupAll();
    autoCC1C0396_var = -1;
    while (true) {
        autoCC1C0396_var = PlayerGroupNextPlayer(autoCC1C0396_g, autoCC1C0396_var);
        if (autoCC1C0396_var < 0) { break; }
        lib22142002_gv_cCS_PlayerTeamColor[autoCC1C0396_var] = libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoCC1C0396_var, false));
        lib22142002_gv_cCS_PlayerTeamColorSec[autoCC1C0396_var] = lib22142002_gf_GetSecondaryColor(libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoCC1C0396_var, false)));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_PlayerColors_Init () {
    lib22142002_gt_CCS_PlayerColors = TriggerCreate("lib22142002_gt_CCS_PlayerColors_Func");
    TriggerEnable(lib22142002_gt_CCS_PlayerColors, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Slider Reactions
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_SliderReactions_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider) || (EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider) || (EventDialogControl() == lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemDesaturationColor(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_playerColorPreviewBox, Color(libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_redSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_greenSlider, EventPlayer()), libNtve_gf_DialogItemValue(lib22142002_gv_cCS_CustomizeUI[EventPlayer()].lv_blueSlider, EventPlayer())), PlayerGroupSingle(EventPlayer()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_SliderReactions_Init () {
    lib22142002_gt_CCS_SliderReactions = TriggerCreate("lib22142002_gt_CCS_SliderReactions_Func");
    TriggerEnable(lib22142002_gt_CCS_SliderReactions, false);
    TriggerAddEventDialogControl(lib22142002_gt_CCS_SliderReactions, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeValueChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Player_DYNAMIC COLOR  APPLY  Created
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated_Func (bool testConds, bool runActions) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(0,0,0);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitCreatedUnit(), "DEITYUncolorable") == false)) {
        if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnitCreatedUnit()) == false)) {
            libNtve_gf_SendActorMessageToUnit(EventUnitCreatedUnit(), libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(EventUnitCreatedUnit())], lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(EventUnitCreatedUnit())]));
        }

    }

    if ((lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(EventUnitCreatedUnit())] == true)) {
        libNtve_gf_SendActorMessageToUnit(EventUnitCreatedUnit(), libNtve_gf_SetTintColor(lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(EventUnitCreatedUnit())], lib22142002_gv_cCS_PlayerTintColorHDR[0], 0.0));
        UnitGroupAdd(lib22142002_gv_tint_ColorAppliedPlayer, EventUnitCreatedUnit());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated_Init () {
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated = TriggerCreate("lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated_Func");
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated, false);
    TriggerAddEventUnitCreated(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Player_DYNAMIC COLOR  APPLY  Trained
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained_Func (bool testConds, bool runActions) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(0,0,0);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitProgressUnit(), "DEITYUncolorable") == false)) {
        if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnitProgressUnit()) == false)) {
            libNtve_gf_SendActorMessageToUnit(EventUnitProgressUnit(), libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(EventUnitProgressUnit())], lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(EventUnitProgressUnit())]));
        }

    }

    if ((lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(EventUnitProgressUnit())] == true)) {
        libNtve_gf_SendActorMessageToUnit(EventUnitProgressUnit(), libNtve_gf_SetTintColor(lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(EventUnitProgressUnit())], lib22142002_gv_cCS_PlayerTintColorHDR[0], 0.0));
        UnitGroupAdd(lib22142002_gv_tint_ColorAppliedPlayer, EventUnitProgressUnit());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained_Init () {
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained = TriggerCreate("lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained_Func");
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained, false);
    TriggerAddEventUnitTrainProgress(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Player_DYNAMIC COLOR  APPLY  Revived
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived_Func (bool testConds, bool runActions) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(0,0,0);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnit(), "DEITYUncolorable") == false)) {
        if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit()) == false)) {
            libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[UnitGetOwner(EventUnit())], lib22142002_gv_cCS_PlayerTeamColorSec[UnitGetOwner(EventUnit())]));
        }

    }

    if ((lib22142002_gv_tint_PlayerRecolorActive[UnitGetOwner(EventUnit())] == true)) {
        libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTintColor(lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(EventUnit())], lib22142002_gv_cCS_PlayerTintColorHDR[0], 0.0));
        UnitGroupAdd(lib22142002_gv_tint_ColorAppliedPlayer, EventUnit());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived_Init () {
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived = TriggerCreate("lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived_Func");
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived, false);
    TriggerAddEventUnitRevive(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CCS_Player_DYNAMIC COLOR  APPLY  Owner Changed
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged_Func (bool testConds, bool runActions) {
    // Variable Declarations
    color lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(0,0,0);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnit(), "DEITYUncolorable") == false)) {
        if ((UnitGroupHasUnit(lib22142002_gv_c_CO_RetainColor, EventUnit()) == false)) {
            if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit()) == true)) {
                lib22142002_gf_CUT_Remove(EventUnit());
                UnitGroupRemove(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit());
            }

            libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTeamColor(lib22142002_gv_cCS_PlayerTeamColor[EventUnitOwnerNew()], lib22142002_gv_cCS_PlayerTeamColorSec[EventUnitOwnerNew()]));
        }
        else {
            if ((UnitGroupHasUnit(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit()) == false)) {
                lv_color = lib22142002_gv_cCS_PlayerTeamColor[EventUnitOwnerOld()];
                lib22142002_gf_CUT_AddUpdate(EventUnit(), lv_color);
                UnitGroupAdd(lib22142002_gv_recolor_ColorAppliedUnit, EventUnit());
            }
            else {
                lv_color = lib22142002_gf_CUT_ReturnColor(EventUnit());
            }
            libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTeamColor(lv_color, lib22142002_gf_GetSecondaryColor(lv_color)));
        }
    }

    if ((lib22142002_gv_tint_PlayerRecolorActive[EventUnitOwnerNew()] == true)) {
        if ((UnitGroupHasUnit(lib22142002_gv_c_CO_RetainColor, EventUnit()) == false)) {
            libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTintColor(lib22142002_gv_cCS_PlayerTintColor[UnitGetOwner(EventUnit())], lib22142002_gv_cCS_PlayerTintColorHDR[0], 0.0));
            UnitGroupAdd(lib22142002_gv_tint_ColorAppliedPlayer, EventUnit());
        }

    }
    else {
        if ((lib22142002_gv_tint_PlayerRecolorActive[EventUnitOwnerOld()] == true)) {
            libNtve_gf_SendActorMessageToUnit(EventUnit(), libNtve_gf_SetTintColor(Color(100.00, 100.00, 100.00), 1.0, 0.0));
        }

    }
    if (((UnitGroupHasUnit(lib22142002_gv_tXTTip_TextAppliedUnit, EventUnit()) == true) || (UnitGroupHasUnit(lib22142002_gv_tXTTip_TipAppliedUnit, EventUnit()) == true))) {
        Wait(0.13, c_timeGame);
        if ((UnitGroupHasUnit(lib22142002_gv_tXTTip_TextAppliedUnit, EventUnit()) == true)) {
            UnitSetInfoText2(EventUnit(), lib22142002_gf_TXTTip_ReturnText(EventUnit()));
        }

        if ((UnitGroupHasUnit(lib22142002_gv_tXTTip_TipAppliedUnit, EventUnit()) == true)) {
            UnitSetInfoTip(EventUnit(), lib22142002_gf_TXTTip_ReturnTip(EventUnit()));
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged_Init () {
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged = TriggerCreate("lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged_Func");
    TriggerEnable(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged, false);
    TriggerAddEventUnitChangeOwner(lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PE_Enabler
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_PE_Enabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_HostileMove, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_PE_Enabler_Init () {
    lib22142002_gt_PE_Enabler = TriggerCreate("lib22142002_gt_PE_Enabler_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_PE_Enabler, 4.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hostile Move
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_HostileMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD8038EAE_g;
    int autoD8038EAE_var;
    unitgroup auto7A11FDC4_g;
    int auto7A11FDC4_u;
    unit auto7A11FDC4_var;

    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(UnitGroup(null, 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem) | (1 << c_targetFilterBuried), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterPassive - 32)) | (1 << (c_targetFilterMapBoss - 32))), 0), c_unitCountAlive) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoD8038EAE_g = PlayerGroupAlliance(c_playerGroupEnemy, 15);
    autoD8038EAE_var = -1;
    while (true) {
        autoD8038EAE_var = PlayerGroupNextPlayer(autoD8038EAE_g, autoD8038EAE_var);
        if (autoD8038EAE_var < 0) { break; }
        auto7A11FDC4_g = UnitGroup(null, 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 200);
        auto7A11FDC4_u = UnitGroupCount(auto7A11FDC4_g, c_unitCountAll);
        for (;; auto7A11FDC4_u -= 1) {
            auto7A11FDC4_var = UnitGroupUnitFromEnd(auto7A11FDC4_g, auto7A11FDC4_u);
            if (auto7A11FDC4_var == null) { break; }
            if (((UnitHasBehavior2(auto7A11FDC4_var, "DarkArchonConfusion") == false) && (UnitHasBehavior2(auto7A11FDC4_var, "DarkArchonMindControl") == false) && (UnitHasBehavior2(auto7A11FDC4_var, "MindControl") == false) && (UnitHasBehavior2(auto7A11FDC4_var, "NeuralParasite") == false))) {
                if ((UnitCanAttackTarget(auto7A11FDC4_var, UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var))) == true)) {
                    UnitIssueOrder(auto7A11FDC4_var, OrderTargetingRelativePoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var)))), c_orderQueueReplace);
                }
                else {
                    if ((UnitCanAttackTarget(auto7A11FDC4_var, UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterGround) | (1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var))) == true)) {
                        UnitIssueOrder(auto7A11FDC4_var, OrderTargetingRelativePoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterGround) | (1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var)))), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitCanAttackTarget(auto7A11FDC4_var, UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterAir) | (1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var))) == true)) {
                            UnitIssueOrder(auto7A11FDC4_var, OrderTargetingRelativePoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(libNtve_gf_UnitsInRegionWithAllianceToPlayerMatchingCondition(null, "", "", 15, c_unitAllianceEnemy, null, UnitFilter((1 << c_targetFilterAir) | (1 << c_targetFilterVisible), 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterUser1) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), UnitGetPosition(auto7A11FDC4_var)))), c_orderQueueReplace);
                        }

                    }
                }
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_HostileMove_Init () {
    lib22142002_gt_HostileMove = TriggerCreate("lib22142002_gt_HostileMove_Func");
    TriggerEnable(lib22142002_gt_HostileMove, false);
    TriggerAddEventTimePeriodic(lib22142002_gt_HostileMove, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -catalog
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_catalog_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_temporaryUnitGroupLocalized;
    string lv_chatString;

    // Automatic Variable Declarations
    unitgroup autoA809466D_g;
    int autoA809466D_u;
    unit autoA809466D_var;

    // Variable Initialization
    lv_temporaryUnitGroupLocalized = UnitGroupEmpty();
    lv_chatString = StringWord(EventChatMessage(false), 3);

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }

        if (!((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0))) {
            return false;
        }

        if (!((StringWord(EventChatMessage(false), 1) == "-catalog"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((StringWord(EventChatMessage(false), 2) == "lm") || (StringWord(EventChatMessage(false), 2) == "la") || (StringWord(EventChatMessage(false), 2) == "lr") || (StringWord(EventChatMessage(false), 2) == "lrd") || (StringWord(EventChatMessage(false), 2) == "lifemax") || (StringWord(EventChatMessage(false), 2) == "lifearmor") || (StringWord(EventChatMessage(false), 2) == "liferegen") || (StringWord(EventChatMessage(false), 2) == "liferegendelay") || (StringWord(EventChatMessage(false), 2) == "sm") || (StringWord(EventChatMessage(false), 2) == "sa") || (StringWord(EventChatMessage(false), 2) == "sr") || (StringWord(EventChatMessage(false), 2) == "srd") || (StringWord(EventChatMessage(false), 2) == "sdr") || (StringWord(EventChatMessage(false), 2) == "shieldmax") || (StringWord(EventChatMessage(false), 2) == "shieldarmor") || (StringWord(EventChatMessage(false), 2) == "shieldregen") || (StringWord(EventChatMessage(false), 2) == "shieldregendelay") || (StringWord(EventChatMessage(false), 2) == "shielddamageratio") || (StringWord(EventChatMessage(false), 2) == "em") || (StringWord(EventChatMessage(false), 2) == "ea") || (StringWord(EventChatMessage(false), 2) == "er") || (StringWord(EventChatMessage(false), 2) == "es") || (StringWord(EventChatMessage(false), 2) == "erd") || (StringWord(EventChatMessage(false), 2) == "edr") || (StringWord(EventChatMessage(false), 2) == "energymax") || (StringWord(EventChatMessage(false), 2) == "energyarmor") || (StringWord(EventChatMessage(false), 2) == "energyregen") || (StringWord(EventChatMessage(false), 2) == "energystarting") || (StringWord(EventChatMessage(false), 2) == "energyregendelay") || (StringWord(EventChatMessage(false), 2) == "energydamageratio") || (StringWord(EventChatMessage(false), 2) == "ma") || (StringWord(EventChatMessage(false), 2) == "mda") || (StringWord(EventChatMessage(false), 2) == "ms") || (StringWord(EventChatMessage(false), 2) == "mboc") || (StringWord(EventChatMessage(false), 2) == "mtr") || (StringWord(EventChatMessage(false), 2) == "mstr") || (StringWord(EventChatMessage(false), 2) == "movementacceleration") || (StringWord(EventChatMessage(false), 2) == "movementdeacceleration") || (StringWord(EventChatMessage(false), 2) == "movementspeed") || (StringWord(EventChatMessage(false), 2) == "movementbonusoncreep") || (StringWord(EventChatMessage(false), 2) == "movementturningrate") || (StringWord(EventChatMessage(false), 2) == "movementstationaryturningrate") || (StringWord(EventChatMessage(false), 2) == "ssv") || (StringWord(EventChatMessage(false), 2) == "ssn") || (StringWord(EventChatMessage(false), 2) == "sshv") || (StringWord(EventChatMessage(false), 2) == "ssasmoc") || (StringWord(EventChatMessage(false), 2) == "specialstatsvision") || (StringWord(EventChatMessage(false), 2) == "specialstatsname") || (StringWord(EventChatMessage(false), 2) == "specialstatsheightvision") || (StringWord(EventChatMessage(false), 2) == "specialstatsattackspeedmultiplieroncreep") || (StringWord(EventChatMessage(false), 2) == "cm") || (StringWord(EventChatMessage(false), 2) == "cv") || (StringWord(EventChatMessage(false), 2) == "cb") || (StringWord(EventChatMessage(false), 2) == "ca") || (StringWord(EventChatMessage(false), 2) == "cs") || (StringWord(EventChatMessage(false), 2) == "costminerals") || (StringWord(EventChatMessage(false), 2) == "costvespene") || (StringWord(EventChatMessage(false), 2) == "costbiomass") || (StringWord(EventChatMessage(false), 2) == "costartifacts") || (StringWord(EventChatMessage(false), 2) == "costsupply") || (StringWord(EventChatMessage(false), 2) == "w1ec") || (StringWord(EventChatMessage(false), 2) == "w2ec") || (StringWord(EventChatMessage(false), 2) == "w3ec") || (StringWord(EventChatMessage(false), 2) == "weapon1energycost") || (StringWord(EventChatMessage(false), 2) == "weapon2energycost") || (StringWord(EventChatMessage(false), 2) == "weapon3energycost") || (StringWord(EventChatMessage(false), 2) == "w1mr") || (StringWord(EventChatMessage(false), 2) == "w2mr") || (StringWord(EventChatMessage(false), 2) == "w3mr") || (StringWord(EventChatMessage(false), 2) == "weapon1minimumrange") || (StringWord(EventChatMessage(false), 2) == "weapon2minimumrange") || (StringWord(EventChatMessage(false), 2) == "weapon3minimumrange") || (StringWord(EventChatMessage(false), 2) == "w1s") || (StringWord(EventChatMessage(false), 2) == "w2s") || (StringWord(EventChatMessage(false), 2) == "w3s") || (StringWord(EventChatMessage(false), 2) == "weapon1speed") || (StringWord(EventChatMessage(false), 2) == "weapon2speed") || (StringWord(EventChatMessage(false), 2) == "weapon3speed") || (StringWord(EventChatMessage(false), 2) == "w1r") || (StringWord(EventChatMessage(false), 2) == "w2r") || (StringWord(EventChatMessage(false), 2) == "w3r") || (StringWord(EventChatMessage(false), 2) == "weapon1range") || (StringWord(EventChatMessage(false), 2) == "weapon2range") || (StringWord(EventChatMessage(false), 2) == "weapon3range") || (StringWord(EventChatMessage(false), 2) == "w1d") || (StringWord(EventChatMessage(false), 2) == "w2d") || (StringWord(EventChatMessage(false), 2) == "w3d") || (StringWord(EventChatMessage(false), 2) == "weapon1damage") || (StringWord(EventChatMessage(false), 2) == "weapon2damage") || (StringWord(EventChatMessage(false), 2) == "weapon3damage") || (StringWord(EventChatMessage(false), 2) == "w1abd") || (StringWord(EventChatMessage(false), 2) == "w2abd") || (StringWord(EventChatMessage(false), 2) == "w3abd") || (StringWord(EventChatMessage(false), 2) == "weapon1armoredbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2armoredbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3armoredbonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1lbd") || (StringWord(EventChatMessage(false), 2) == "w2lbd") || (StringWord(EventChatMessage(false), 2) == "w3lbd") || (StringWord(EventChatMessage(false), 2) == "weapon1lightbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2lightbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3lightbonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1bbd") || (StringWord(EventChatMessage(false), 2) == "w2bbd") || (StringWord(EventChatMessage(false), 2) == "w3bbd") || (StringWord(EventChatMessage(false), 2) == "weapon1biologicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2biologicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3biologicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1mbd") || (StringWord(EventChatMessage(false), 2) == "w2mbd") || (StringWord(EventChatMessage(false), 2) == "w3mbd") || (StringWord(EventChatMessage(false), 2) == "weapon1mechanicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2mechanicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3mechanicalbonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1sbd") || (StringWord(EventChatMessage(false), 2) == "w2sbd") || (StringWord(EventChatMessage(false), 2) == "w3sbd") || (StringWord(EventChatMessage(false), 2) == "weapon1shieldbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2shieldbonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3shieldbonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1stbd") || (StringWord(EventChatMessage(false), 2) == "w2stbd") || (StringWord(EventChatMessage(false), 2) == "w3stbd") || (StringWord(EventChatMessage(false), 2) == "weapon1structurebonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon2structurebonusdamage") || (StringWord(EventChatMessage(false), 2) == "weapon3structurebonusdamage") || (StringWord(EventChatMessage(false), 2) == "w1ar") || (StringWord(EventChatMessage(false), 2) == "w2ar") || (StringWord(EventChatMessage(false), 2) == "w3ar") || (StringWord(EventChatMessage(false), 2) == "weapon1armorreduction") || (StringWord(EventChatMessage(false), 2) == "weapon2armorreduction") || (StringWord(EventChatMessage(false), 2) == "weapon3armorreduction"))) {
        autoA809466D_g = UnitGroupSelected(EventPlayer());
        autoA809466D_u = UnitGroupCount(autoA809466D_g, c_unitCountAll);
        for (;; autoA809466D_u -= 1) {
            autoA809466D_var = UnitGroupUnitFromEnd(autoA809466D_g, autoA809466D_u);
            if (autoA809466D_var == null) { break; }
            if (((StringWord(EventChatMessage(false), 2) == "lm") || (StringWord(EventChatMessage(false), 2) == "lifemax")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "LifeMax", UnitGetOwner(autoA809466D_var), lv_chatString);
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "LifeStart", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_11AE67D0")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "la") || (StringWord(EventChatMessage(false), 2) == "lifearmor")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "LifeArmor", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8D849E94")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "lr") || (StringWord(EventChatMessage(false), 2) == "liferegen")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "LifeRegenRate", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F79671FB")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "lrd") || (StringWord(EventChatMessage(false), 2) == "liferegendelay")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "LifeRegenDelay", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_430BD695")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "sm") || (StringWord(EventChatMessage(false), 2) == "shieldmax")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldsMax", UnitGetOwner(autoA809466D_var), lv_chatString);
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldsStart", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A271EC12")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "sa") || (StringWord(EventChatMessage(false), 2) == "shieldarmor")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldArmor", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B4E41558")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "sr") || (StringWord(EventChatMessage(false), 2) == "shieldregen")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldRegenRate", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F65E00B5")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "srd") || (StringWord(EventChatMessage(false), 2) == "shieldregendelay")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldRegenDelay", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5FBB4593")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "sdr") || (StringWord(EventChatMessage(false), 2) == "shielddamageratio")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "ShieldDamageRatio", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8E483C98")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "em") || (StringWord(EventChatMessage(false), 2) == "energymax")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyMax", UnitGetOwner(autoA809466D_var), lv_chatString);
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyStart", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C5144B94")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ea") || (StringWord(EventChatMessage(false), 2) == "energyarmor")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyArmor", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C26DE0DE")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "er") || (StringWord(EventChatMessage(false), 2) == "energyregen")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyRegenRate", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EF16C034")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "es") || (StringWord(EventChatMessage(false), 2) == "energystarting")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyStart", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A29C8B94")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "erd") || (StringWord(EventChatMessage(false), 2) == "energyregendelay")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyRegenDelay", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4D04128B")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "edr") || (StringWord(EventChatMessage(false), 2) == "energydamageratio")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "EnergyDamageRatio", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_37EFBBAF")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ma") || (StringWord(EventChatMessage(false), 2) == "movementacceleration")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Acceleration", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_66B8BBCE")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "mda") || (StringWord(EventChatMessage(false), 2) == "movementdeacceleration")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Deceleration", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_67631B50")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ms") || (StringWord(EventChatMessage(false), 2) == "movementspeed")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Speed", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1AD0DA51")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "mboc") || (StringWord(EventChatMessage(false), 2) == "movementbonusoncreep")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "SpeedBonusCreep", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_25AAF69D")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "mtr") || (StringWord(EventChatMessage(false), 2) == "movementturningrate")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "TurningRate", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0709A98F")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "mstr") || (StringWord(EventChatMessage(false), 2) == "movementstationaryturningrate")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "StationaryTurningRate", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C7B15C09")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ssasmoc") || (StringWord(EventChatMessage(false), 2) == "specialstatsattackspeedmultiplieroncreep")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "AttackSpeedMultiplierCreep", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7A678D65")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ssv") || (StringWord(EventChatMessage(false), 2) == "specialstatsvision")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Sight", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7AEB6BF3")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ssn") || (StringWord(EventChatMessage(false), 2) == "specialstatsname")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Name", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2EC84932")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "sshv") || (StringWord(EventChatMessage(false), 2) == "specialstatsheightvision")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "VisionHeight", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_ABD40F66")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "cm") || (StringWord(EventChatMessage(false), 2) == "costminerals")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "CostResource[" + IntToString(c_unitCostMinerals) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7ADE8139")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "cv") || (StringWord(EventChatMessage(false), 2) == "costvespene")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "CostResource[" + IntToString(c_unitCostVespene) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DF5A6E63")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "cb") || (StringWord(EventChatMessage(false), 2) == "costbiomass")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "CostResource[" + IntToString(c_unitCostTerrazine) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B60D71F9")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "ca") || (StringWord(EventChatMessage(false), 2) == "costartifacts")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "CostResource[" + IntToString(c_unitCostCustomResource) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_95F11F89")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "cs") || (StringWord(EventChatMessage(false), 2) == "costsupply")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationInteger(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogUnit, UnitGetType(autoA809466D_var), "Food", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6B46D310")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1ec") || (StringWord(EventChatMessage(false), 2) == "weapon1energycost")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "Cost.Vital[" + IntToString(c_unitVitalEnergy) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_77544B68")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2ec") || (StringWord(EventChatMessage(false), 2) == "weapon2energycost")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "Cost.Vital[" + IntToString(c_unitVitalEnergy) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_383A42E1")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3ec") || (StringWord(EventChatMessage(false), 2) == "weapon3energycost")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "Cost.Vital[" + IntToString(c_unitVitalEnergy) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FEDB0C81")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1mr") || (StringWord(EventChatMessage(false), 2) == "weapon1minimumrange")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "MinimumRange", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2868710F")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2mr") || (StringWord(EventChatMessage(false), 2) == "weapon2minimumrange")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "MinimumRange", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7FAFC102")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3mr") || (StringWord(EventChatMessage(false), 2) == "weapon3minimumrange")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "MinimumRange", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_DF3E5239")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1s") || (StringWord(EventChatMessage(false), 2) == "weapon1speed")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "Period", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8E922007")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2s") || (StringWord(EventChatMessage(false), 2) == "weapon2speed")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "Period", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_40C45D64")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3s") || (StringWord(EventChatMessage(false), 2) == "weapon3speed")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "Period", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_46937CC4")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1r") || (StringWord(EventChatMessage(false), 2) == "weapon1range")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "Range", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_0979DF43")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2r") || (StringWord(EventChatMessage(false), 2) == "weapon2range")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "Range", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D5A9D701")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3r") || (StringWord(EventChatMessage(false), 2) == "weapon3range")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "Range", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1B3299B8")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1d") || (StringWord(EventChatMessage(false), 2) == "weapon1damage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "Amount", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8EDE3CCF")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2d") || (StringWord(EventChatMessage(false), 2) == "weapon2damage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "Amount", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F24FEFE6")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3d") || (StringWord(EventChatMessage(false), 2) == "weapon3damage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "Amount", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4D0ACC14")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1abd") || (StringWord(EventChatMessage(false), 2) == "weapon1armoredbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeArmored) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CF6B2258")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2abd") || (StringWord(EventChatMessage(false), 2) == "weapon2armoredbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeArmored) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B2469313")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3abd") || (StringWord(EventChatMessage(false), 2) == "weapon3armoredbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeArmored) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CE69CBF7")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1lbd") || (StringWord(EventChatMessage(false), 2) == "weapon1lightbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeLight) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E7FE22BA")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2lbd") || (StringWord(EventChatMessage(false), 2) == "weapon2lightbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeLight) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F1F69C80")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3lbd") || (StringWord(EventChatMessage(false), 2) == "weapon3lightbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeLight) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D597B315")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1bbd") || (StringWord(EventChatMessage(false), 2) == "weapon1biologicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeBiological) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8F5F1FCB")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2bbd") || (StringWord(EventChatMessage(false), 2) == "weapon2biologicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeBiological) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5234674A")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3bbd") || (StringWord(EventChatMessage(false), 2) == "weapon3biologicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeBiological) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C6A7D8C9")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1mbd") || (StringWord(EventChatMessage(false), 2) == "weapon1mechanicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeMechanical) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_FBC1D9F3")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2mbd") || (StringWord(EventChatMessage(false), 2) == "weapon2mechanicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeMechanical) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_983E3762")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3mbd") || (StringWord(EventChatMessage(false), 2) == "weapon3mechanicalbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeMechanical) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4CD3CCAE")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1sbd") || (StringWord(EventChatMessage(false), 2) == "weapon1shieldbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ShieldBonus", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_D0A87D85")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2sbd") || (StringWord(EventChatMessage(false), 2) == "weapon2shieldbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ShieldBonus", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8D300CA5")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3sbd") || (StringWord(EventChatMessage(false), 2) == "weapon3shieldbonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ShieldBonus", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_082CD6B6")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1stbd") || (StringWord(EventChatMessage(false), 2) == "weapon1structurebonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeStructure) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AD2D8C2A")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2stbd") || (StringWord(EventChatMessage(false), 2) == "weapon2structurebonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeStructure) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3F3EA201")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3stbd") || (StringWord(EventChatMessage(false), 2) == "weapon3structurebonusdamage")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "AttributeBonus[" + IntToString(c_unitAttributeStructure) + "]", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_E65EA835")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w1ar") || (StringWord(EventChatMessage(false), 2) == "weapon1armorreduction")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 1), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ArmorReduction", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1BB46FC8")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w2ar") || (StringWord(EventChatMessage(false), 2) == "weapon2armorreduction")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 2), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ArmorReduction", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1D076F36")));
            }

            if (((StringWord(EventChatMessage(false), 2) == "w3ar") || (StringWord(EventChatMessage(false), 2) == "weapon3armorreduction")) && (UnitHasBehavior2(autoA809466D_var, "DEITYMainTools") == false) && (lib22142002_gf_StringNumberValidationReal(StringWord(EventChatMessage(false), 3)) == true)) {
                CatalogFieldValueSet(c_gameCatalogEffect, CatalogFieldValueGet(c_gameCatalogWeapon, UnitWeaponGet(autoA809466D_var, 3), "DisplayEffect", UnitGetOwner(autoA809466D_var)), "ArmorReduction", UnitGetOwner(autoA809466D_var), lv_chatString);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_75BFCB9A")));
            }

            return true;
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_72EF4ACC")));
        Wait(8.0, c_timeReal);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_78736544")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_catalog_Init () {
    lib22142002_gt_catalog = TriggerCreate("lib22142002_gt_catalog_Func");
    TriggerAddEventChatMessage(lib22142002_gt_catalog, c_playerAny, "-catalog", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -cataloghelp
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_cataloghelp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }

        if (!((StringWord(EventChatMessage(false), 1) == "-cataloghelp"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_377CF0E2")));
    Wait(3.0, c_timeReal);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EC24E9C3")));
    Wait(8.0, c_timeReal);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3C640905")));
    Wait(8.0, c_timeReal);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4145EF40")));
    Wait(8.0, c_timeReal);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6F4EB131")));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_cataloghelp_Init () {
    lib22142002_gt_cataloghelp = TriggerCreate("lib22142002_gt_cataloghelp_Func");
    TriggerAddEventChatMessage(lib22142002_gt_cataloghelp, c_playerAny, "-cataloghelp", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Consequences_MortalWounds
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Consequences_MortalWounds_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) / 5.0)) == true))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeHeroic) == false))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "MortalWounds", EventUnit(), 1);
    UnitGroupAdd(lib22142002_gv_consequences_MortalWoundsReseter, EventUnit());
    UnitFlashSelection(EventUnit(), 2.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Consequences_MortalWounds_Init () {
    lib22142002_gt_Consequences_MortalWounds = TriggerCreate("lib22142002_gt_Consequences_MortalWounds_Func");
    TriggerEnable(lib22142002_gt_Consequences_MortalWounds, false);
    TriggerAddEventUnitProperty(lib22142002_gt_Consequences_MortalWounds, null, c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Consequences_MechanicalDrawbacks
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Consequences_MechanicalDrawbacks_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeMechanical) == true))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "MechanicalDrawbacks", EventUnit(), 1);
    UnitGroupAdd(lib22142002_gv_consequences_MechanicalDrawbacks_Reseter, EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Consequences_MechanicalDrawbacks_Init () {
    lib22142002_gt_Consequences_MechanicalDrawbacks = TriggerCreate("lib22142002_gt_Consequences_MechanicalDrawbacks_Func");
    TriggerEnable(lib22142002_gt_Consequences_MechanicalDrawbacks, false);
    TriggerAddEventUnitRegion(lib22142002_gt_Consequences_MechanicalDrawbacks, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Consequences_CombatTrauma
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_Consequences_CombatTrauma_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 1.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 2.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 3.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 4.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 5.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 6.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 7.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 8.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 9.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 10.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 11.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 12.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 13.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 14.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 15.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 16.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 17.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 18.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 19.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 20.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 21.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 22.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 23.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 24.0) || ((UnitGetPropertyFixed(EventUnit(), c_unitPropKills, c_unitPropCurrent) / 80.0) == 25.0)))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeHeroic) == false))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "DarkArchonConfusionDVD", EventUnit(), 1);
    UnitGroupAdd(lib22142002_gv_consequences_CombatTraumaReseter, EventUnit());
    UnitFlashSelection(EventUnit(), 2.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_Consequences_CombatTrauma_Init () {
    lib22142002_gt_Consequences_CombatTrauma = TriggerCreate("lib22142002_gt_Consequences_CombatTrauma_Func");
    TriggerEnable(lib22142002_gt_Consequences_CombatTrauma, false);
    TriggerAddEventUnitProperty(lib22142002_gt_Consequences_CombatTrauma, null, c_unitPropKills);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -map explored/unexplored
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_mapexploredunexplored_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC74241EF_g;
    int autoC74241EF_u;
    unit autoC74241EF_var;
    unitgroup auto6317C4B4_g;
    int auto6317C4B4_u;
    unit auto6317C4B4_var;

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }

        if (!((StringWord(EventChatMessage(false), 1) == "-map"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0) && ((StringWord(EventChatMessage(false), 2) == "unexplored") || (StringWord(EventChatMessage(false), 2) == "explored"))) {
        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0) && (StringWord(EventChatMessage(false), 2) == "explored")) {
            autoC74241EF_g = UnitGroupSelected(EventPlayer());
            autoC74241EF_u = UnitGroupCount(autoC74241EF_g, c_unitCountAll);
            for (;; autoC74241EF_u -= 1) {
                autoC74241EF_var = UnitGroupUnitFromEnd(autoC74241EF_g, autoC74241EF_u);
                if (autoC74241EF_var == null) { break; }
                VisExploreArea(UnitGetOwner(autoC74241EF_var), RegionEntireMap(), true, false);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A0513A9B")));
            }
        }

        if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0) && (StringWord(EventChatMessage(false), 2) == "unexplored")) {
            auto6317C4B4_g = UnitGroupSelected(EventPlayer());
            auto6317C4B4_u = UnitGroupCount(auto6317C4B4_g, c_unitCountAll);
            for (;; auto6317C4B4_u -= 1) {
                auto6317C4B4_var = UnitGroupUnitFromEnd(auto6317C4B4_g, auto6317C4B4_u);
                if (auto6317C4B4_var == null) { break; }
                VisExploreArea(UnitGetOwner(auto6317C4B4_var), RegionEntireMap(), false, false);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4D0ECAA7")));
            }
        }

    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_5B2BA21C")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_mapexploredunexplored_Init () {
    lib22142002_gt_mapexploredunexplored = TriggerCreate("lib22142002_gt_mapexploredunexplored_Func");
    TriggerAddEventChatMessage(lib22142002_gt_mapexploredunexplored, c_playerAny, "-map", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -freeze
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_freeze_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup autoEC319A9D_g;
    int autoEC319A9D_u;
    unit autoEC319A9D_var;
    unitgroup auto73E29B39_g;
    int auto73E29B39_u;
    unit auto73E29B39_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((StringWord(EventChatMessage(false), 2) == "on") || (StringWord(EventChatMessage(false), 2) == "off"))) {
        if ((StringWord(EventChatMessage(false), 2) == "on")) {
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
                if ((UnitHasBehavior2(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1), "DEITYMainTools") == false)) {
                    if (((UnitHasBehavior2(EventUnit(), "FlashFreezeLevel3Revelation") == false) || (UnitHasBehavior2(EventUnit(), "FlashFreezeLevel3") == false))) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_835A203F")));
                        auto73E29B39_g = UnitGroupSelected(EventPlayer());
                        auto73E29B39_u = UnitGroupCount(auto73E29B39_g, c_unitCountAll);
                        for (;; auto73E29B39_u -= 1) {
                            auto73E29B39_var = UnitGroupUnitFromEnd(auto73E29B39_g, auto73E29B39_u);
                            if (auto73E29B39_var == null) { break; }
                            UnitBehaviorAdd(auto73E29B39_var, "FlashFreezeLevel3Revelation", lv_u, 1);
                            UnitFlashSelection(auto73E29B39_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
                        }
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F06643DD")));
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_55BC243C")));
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_84D36512")));
            }
        }
        else {
            if ((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) > 0)) {
                if ((UnitHasBehavior2(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1), "DEITYMainTools") == false)) {
                    if (((UnitHasBehavior2(EventUnit(), "FlashFreezeLevel3Revelation") == false))) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_42B86E49")));
                        autoEC319A9D_g = UnitGroupSelected(EventPlayer());
                        autoEC319A9D_u = UnitGroupCount(autoEC319A9D_g, c_unitCountAll);
                        for (;; autoEC319A9D_u -= 1) {
                            autoEC319A9D_var = UnitGroupUnitFromEnd(autoEC319A9D_g, autoEC319A9D_u);
                            if (autoEC319A9D_var == null) { break; }
                            UnitBehaviorRemove(autoEC319A9D_var, "FlashFreezeLevel3Revelation", 1);
                            UnitFlashSelection(autoEC319A9D_var, lib22142002_gv_c_DEITY_KeyModificationFlashDuration);
                        }
                    }
                    else {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_AA883183")));
                    }
                }
                else {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6DE04472")));
                }
            }
            else {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYRespondTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_32776E53")));
            }
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_95AFA46C")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_freeze_Init () {
    lib22142002_gt_freeze = TriggerCreate("lib22142002_gt_freeze_Func");
    TriggerAddEventChatMessage(lib22142002_gt_freeze, c_playerAny, "-freeze", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -weapon
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_weapon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_chatString;

    // Automatic Variable Declarations
    string autoA36C0806_val;
    unitgroup auto7D8B4887_g;
    int auto7D8B4887_u;
    unit auto7D8B4887_var;
    unitgroup auto07216596_g;
    int auto07216596_u;
    unit auto07216596_var;
    unitgroup autoB479AEA8_g;
    int autoB479AEA8_u;
    unit autoB479AEA8_var;
    unitgroup auto38609F56_g;
    int auto38609F56_u;
    unit auto38609F56_var;
    unitgroup auto8DEA616F_g;
    int auto8DEA616F_u;
    unit auto8DEA616F_var;
    unitgroup autoC91F726F_g;
    int autoC91F726F_u;
    unit autoC91F726F_var;
    unitgroup auto6DEF7881_g;
    int auto6DEF7881_u;
    unit auto6DEF7881_var;
    unitgroup auto1D5190CF_g;
    int auto1D5190CF_u;
    unit auto1D5190CF_var;
    unitgroup auto046CBC7B_g;
    int auto046CBC7B_u;
    unit auto046CBC7B_var;
    unitgroup autoA39F128E_g;
    int autoA39F128E_u;
    unit autoA39F128E_var;
    unitgroup auto71CFF39A_g;
    int auto71CFF39A_u;
    unit auto71CFF39A_var;
    unitgroup autoD0C99A05_g;
    int autoD0C99A05_u;
    unit autoD0C99A05_var;
    unitgroup auto034321F0_g;
    int auto034321F0_u;
    unit auto034321F0_var;
    unitgroup auto81A3E944_g;
    int auto81A3E944_u;
    unit auto81A3E944_var;
    unitgroup auto353DEB00_g;
    int auto353DEB00_u;
    unit auto353DEB00_var;
    unitgroup autoCC1DA488_g;
    int autoCC1DA488_u;
    unit autoCC1DA488_var;
    unitgroup autoE4547B0D_g;
    int autoE4547B0D_u;
    unit autoE4547B0D_var;
    unitgroup auto12FD037B_g;
    int auto12FD037B_u;
    unit auto12FD037B_var;
    unitgroup autoF4D27190_g;
    int autoF4D27190_u;
    unit autoF4D27190_var;
    unitgroup auto9B09F927_g;
    int auto9B09F927_u;
    unit auto9B09F927_var;
    unitgroup auto5606041A_g;
    int auto5606041A_u;
    unit auto5606041A_var;
    unitgroup auto178BF2F0_g;
    int auto178BF2F0_u;
    unit auto178BF2F0_var;
    unitgroup autoC00993E4_g;
    int autoC00993E4_u;
    unit autoC00993E4_var;
    unitgroup autoA5A18818_g;
    int autoA5A18818_u;
    unit autoA5A18818_var;
    unitgroup auto7D7087E1_g;
    int auto7D7087E1_u;
    unit auto7D7087E1_var;
    unitgroup autoEEC1C255_g;
    int autoEEC1C255_u;
    unit autoEEC1C255_var;
    unitgroup auto1BA8E31C_g;
    int auto1BA8E31C_u;
    unit auto1BA8E31C_var;
    unitgroup autoA813A46A_g;
    int autoA813A46A_u;
    unit autoA813A46A_var;
    unitgroup auto067E026E_g;
    int auto067E026E_u;
    unit auto067E026E_var;
    unitgroup autoE4429C09_g;
    int autoE4429C09_u;
    unit autoE4429C09_var;
    unitgroup auto3230CBB8_g;
    int auto3230CBB8_u;
    unit auto3230CBB8_var;
    unitgroup auto3AB937D5_g;
    int auto3AB937D5_u;
    unit auto3AB937D5_var;
    unitgroup autoA9064D2C_g;
    int autoA9064D2C_u;
    unit autoA9064D2C_var;
    unitgroup autoA6D8CDA5_g;
    int autoA6D8CDA5_u;
    unit autoA6D8CDA5_var;
    unitgroup autoACA89C8E_g;
    int autoACA89C8E_u;
    unit autoACA89C8E_var;
    unitgroup auto48F148EF_g;
    int auto48F148EF_u;
    unit auto48F148EF_var;
    unitgroup auto24FA9766_g;
    int auto24FA9766_u;
    unit auto24FA9766_var;
    unitgroup auto8D64A94F_g;
    int auto8D64A94F_u;
    unit auto8D64A94F_var;
    unitgroup auto5F8C415F_g;
    int auto5F8C415F_u;
    unit auto5F8C415F_var;
    unitgroup autoAACA0131_g;
    int autoAACA0131_u;
    unit autoAACA0131_var;
    unitgroup auto604D73A1_g;
    int auto604D73A1_u;
    unit auto604D73A1_var;
    unitgroup auto7302177E_g;
    int auto7302177E_u;
    unit auto7302177E_var;
    unitgroup autoFAAFB6E8_g;
    int autoFAAFB6E8_u;
    unit autoFAAFB6E8_var;
    unitgroup autoECA716CA_g;
    int autoECA716CA_u;
    unit autoECA716CA_var;
    unitgroup auto56168DF1_g;
    int auto56168DF1_u;
    unit auto56168DF1_var;
    unitgroup autoF697FD3D_g;
    int autoF697FD3D_u;
    unit autoF697FD3D_var;
    unitgroup autoA1B30CF4_g;
    int autoA1B30CF4_u;
    unit autoA1B30CF4_var;
    unitgroup auto1CA11992_g;
    int auto1CA11992_u;
    unit auto1CA11992_var;
    unitgroup auto713B5B88_g;
    int auto713B5B88_u;
    unit auto713B5B88_var;
    unitgroup autoE29A47C7_g;
    int autoE29A47C7_u;
    unit autoE29A47C7_var;
    unitgroup auto64F7DC22_g;
    int auto64F7DC22_u;
    unit auto64F7DC22_var;
    unitgroup auto574F1C5B_g;
    int auto574F1C5B_u;
    unit auto574F1C5B_var;
    unitgroup auto7F9E42CD_g;
    int auto7F9E42CD_u;
    unit auto7F9E42CD_var;
    unitgroup auto4F74BC6D_g;
    int auto4F74BC6D_u;
    unit auto4F74BC6D_var;
    unitgroup autoBB190F1D_g;
    int autoBB190F1D_u;
    unit autoBB190F1D_var;
    unitgroup auto74305222_g;
    int auto74305222_u;
    unit auto74305222_var;
    unitgroup auto74D307B5_g;
    int auto74D307B5_u;
    unit auto74D307B5_var;
    unitgroup autoBE2F7B31_g;
    int autoBE2F7B31_u;
    unit autoBE2F7B31_var;
    unitgroup autoA115DE1B_g;
    int autoA115DE1B_u;
    unit autoA115DE1B_var;
    unitgroup autoF20A94E0_g;
    int autoF20A94E0_u;
    unit autoF20A94E0_var;
    unitgroup auto6C02B780_g;
    int auto6C02B780_u;
    unit auto6C02B780_var;
    unitgroup auto3758ABE4_g;
    int auto3758ABE4_u;
    unit auto3758ABE4_var;
    unitgroup auto3C581A61_g;
    int auto3C581A61_u;
    unit auto3C581A61_var;
    unitgroup auto17390F29_g;
    int auto17390F29_u;
    unit auto17390F29_var;
    unitgroup autoA594836D_g;
    int autoA594836D_u;
    unit autoA594836D_var;
    unitgroup auto9EC96BEC_g;
    int auto9EC96BEC_u;
    unit auto9EC96BEC_var;
    unitgroup autoB356E9B2_g;
    int autoB356E9B2_u;
    unit autoB356E9B2_var;
    unitgroup auto48A302B8_g;
    int auto48A302B8_u;
    unit auto48A302B8_var;
    unitgroup auto8F559DB7_g;
    int auto8F559DB7_u;
    unit auto8F559DB7_var;
    unitgroup auto3DF4E285_g;
    int auto3DF4E285_u;
    unit auto3DF4E285_var;
    unitgroup auto720723FC_g;
    int auto720723FC_u;
    unit auto720723FC_var;
    unitgroup auto81943111_g;
    int auto81943111_u;
    unit auto81943111_var;
    unitgroup autoAAC497BE_g;
    int autoAAC497BE_u;
    unit autoAAC497BE_var;
    unitgroup autoBF9D5603_g;
    int autoBF9D5603_u;
    unit autoBF9D5603_var;
    unitgroup auto51785F05_g;
    int auto51785F05_u;
    unit auto51785F05_var;
    unitgroup auto2D3990E4_g;
    int auto2D3990E4_u;
    unit auto2D3990E4_var;
    unitgroup auto8FE817BD_g;
    int auto8FE817BD_u;
    unit auto8FE817BD_var;
    unitgroup auto40289077_g;
    int auto40289077_u;
    unit auto40289077_var;
    unitgroup auto5E84F4B4_g;
    int auto5E84F4B4_u;
    unit auto5E84F4B4_var;
    unitgroup auto5C36B27F_g;
    int auto5C36B27F_u;
    unit auto5C36B27F_var;
    unitgroup auto47FAFBB5_g;
    int auto47FAFBB5_u;
    unit auto47FAFBB5_var;
    unitgroup auto21552139_g;
    int auto21552139_u;
    unit auto21552139_var;
    unitgroup autoD1873AC0_g;
    int autoD1873AC0_u;
    unit autoD1873AC0_var;
    unitgroup autoB7EBBD84_g;
    int autoB7EBBD84_u;
    unit autoB7EBBD84_var;
    unitgroup auto54237936_g;
    int auto54237936_u;
    unit auto54237936_var;
    unitgroup auto6AE35466_g;
    int auto6AE35466_u;
    unit auto6AE35466_var;
    unitgroup auto35752856_g;
    int auto35752856_u;
    unit auto35752856_var;
    unitgroup auto40F8C898_g;
    int auto40F8C898_u;
    unit auto40F8C898_var;
    unitgroup autoCF8E5AA6_g;
    int autoCF8E5AA6_u;
    unit autoCF8E5AA6_var;
    unitgroup autoEA750401_g;
    int autoEA750401_u;
    unit autoEA750401_var;
    unitgroup autoD66C32B0_g;
    int autoD66C32B0_u;
    unit autoD66C32B0_var;
    unitgroup auto1A044BE1_g;
    int auto1A044BE1_u;
    unit auto1A044BE1_var;

    // Variable Initialization
    lv_chatString = StringWord(EventChatMessage(false), 3);

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(lib22142002_gv_dEITYGroup, EventPlayer()) == true))) {
            return false;
        }

        if (!((UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive) != 0))) {
            return false;
        }

        if (!((StringWord(EventChatMessage(false), 1) == "-weapon"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((StringWord(EventChatMessage(false), 2) == "add") || (StringWord(EventChatMessage(false), 2) == "remove"))) {
        autoA36C0806_val = lv_chatString;
        if (autoA36C0806_val == "marine") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto07216596_g = UnitGroupSelected(EventPlayer());
                auto07216596_u = UnitGroupCount(auto07216596_g, c_unitCountAll);
                for (;; auto07216596_u -= 1) {
                    auto07216596_var = UnitGroupUnitFromEnd(auto07216596_g, auto07216596_u);
                    if (auto07216596_var == null) { break; }
                    if ((UnitWeaponCount(auto07216596_var) < 3)) {
                        UnitWeaponAdd(auto07216596_var, "GuassRifle", null);
                    }

                }
            }
            else {
                auto7D8B4887_g = UnitGroupSelected(EventPlayer());
                auto7D8B4887_u = UnitGroupCount(auto7D8B4887_g, c_unitCountAll);
                for (;; auto7D8B4887_u -= 1) {
                    auto7D8B4887_var = UnitGroupUnitFromEnd(auto7D8B4887_g, auto7D8B4887_u);
                    if (auto7D8B4887_var == null) { break; }
                    UnitWeaponRemove(auto7D8B4887_var, "GuassRifle");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A9B9F0F4")));
        }
        else if (autoA36C0806_val == "firebat") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto38609F56_g = UnitGroupSelected(EventPlayer());
                auto38609F56_u = UnitGroupCount(auto38609F56_g, c_unitCountAll);
                for (;; auto38609F56_u -= 1) {
                    auto38609F56_var = UnitGroupUnitFromEnd(auto38609F56_g, auto38609F56_u);
                    if (auto38609F56_var == null) { break; }
                    if ((UnitWeaponCount(auto38609F56_var) < 3)) {
                        UnitWeaponAdd(auto38609F56_var, "Firebat", null);
                    }

                }
            }
            else {
                autoB479AEA8_g = UnitGroupSelected(EventPlayer());
                autoB479AEA8_u = UnitGroupCount(autoB479AEA8_g, c_unitCountAll);
                for (;; autoB479AEA8_u -= 1) {
                    autoB479AEA8_var = UnitGroupUnitFromEnd(autoB479AEA8_g, autoB479AEA8_u);
                    if (autoB479AEA8_var == null) { break; }
                    UnitWeaponRemove(autoB479AEA8_var, "Firebat");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_58105008")));
        }
        else if (autoA36C0806_val == "marauder") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoC91F726F_g = UnitGroupSelected(EventPlayer());
                autoC91F726F_u = UnitGroupCount(autoC91F726F_g, c_unitCountAll);
                for (;; autoC91F726F_u -= 1) {
                    autoC91F726F_var = UnitGroupUnitFromEnd(autoC91F726F_g, autoC91F726F_u);
                    if (autoC91F726F_var == null) { break; }
                    if ((UnitWeaponCount(autoC91F726F_var) < 3)) {
                        UnitWeaponAdd(autoC91F726F_var, "PunisherGrenades", null);
                    }

                }
            }
            else {
                auto8DEA616F_g = UnitGroupSelected(EventPlayer());
                auto8DEA616F_u = UnitGroupCount(auto8DEA616F_g, c_unitCountAll);
                for (;; auto8DEA616F_u -= 1) {
                    auto8DEA616F_var = UnitGroupUnitFromEnd(auto8DEA616F_g, auto8DEA616F_u);
                    if (auto8DEA616F_var == null) { break; }
                    UnitWeaponRemove(auto8DEA616F_var, "PunisherGrenades");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_288BFA75")));
        }
        else if (autoA36C0806_val == "ghost") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto1D5190CF_g = UnitGroupSelected(EventPlayer());
                auto1D5190CF_u = UnitGroupCount(auto1D5190CF_g, c_unitCountAll);
                for (;; auto1D5190CF_u -= 1) {
                    auto1D5190CF_var = UnitGroupUnitFromEnd(auto1D5190CF_g, auto1D5190CF_u);
                    if (auto1D5190CF_var == null) { break; }
                    if ((UnitWeaponCount(auto1D5190CF_var) < 3)) {
                        UnitWeaponAdd(auto1D5190CF_var, "C10CanisterRifle", null);
                    }

                }
            }
            else {
                auto6DEF7881_g = UnitGroupSelected(EventPlayer());
                auto6DEF7881_u = UnitGroupCount(auto6DEF7881_g, c_unitCountAll);
                for (;; auto6DEF7881_u -= 1) {
                    auto6DEF7881_var = UnitGroupUnitFromEnd(auto6DEF7881_g, auto6DEF7881_u);
                    if (auto6DEF7881_var == null) { break; }
                    UnitWeaponRemove(auto6DEF7881_var, "C10CanisterRifle");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6CED2F3E")));
        }
        else if (autoA36C0806_val == "hellion") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoA39F128E_g = UnitGroupSelected(EventPlayer());
                autoA39F128E_u = UnitGroupCount(autoA39F128E_g, c_unitCountAll);
                for (;; autoA39F128E_u -= 1) {
                    autoA39F128E_var = UnitGroupUnitFromEnd(autoA39F128E_g, autoA39F128E_u);
                    if (autoA39F128E_var == null) { break; }
                    if ((UnitWeaponCount(autoA39F128E_var) < 3)) {
                        UnitWeaponAdd(autoA39F128E_var, "InfernalFlameThrower", null);
                    }

                }
            }
            else {
                auto046CBC7B_g = UnitGroupSelected(EventPlayer());
                auto046CBC7B_u = UnitGroupCount(auto046CBC7B_g, c_unitCountAll);
                for (;; auto046CBC7B_u -= 1) {
                    auto046CBC7B_var = UnitGroupUnitFromEnd(auto046CBC7B_g, auto046CBC7B_u);
                    if (auto046CBC7B_var == null) { break; }
                    UnitWeaponRemove(auto046CBC7B_var, "InfernalFlameThrower");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F8E088E2")));
        }
        else if (autoA36C0806_val == "viking1") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoD0C99A05_g = UnitGroupSelected(EventPlayer());
                autoD0C99A05_u = UnitGroupCount(autoD0C99A05_g, c_unitCountAll);
                for (;; autoD0C99A05_u -= 1) {
                    autoD0C99A05_var = UnitGroupUnitFromEnd(autoD0C99A05_g, autoD0C99A05_u);
                    if (autoD0C99A05_var == null) { break; }
                    if ((UnitWeaponCount(autoD0C99A05_var) < 3)) {
                        UnitWeaponAdd(autoD0C99A05_var, "LanzerTorpedoes", null);
                    }

                }
            }
            else {
                auto71CFF39A_g = UnitGroupSelected(EventPlayer());
                auto71CFF39A_u = UnitGroupCount(auto71CFF39A_g, c_unitCountAll);
                for (;; auto71CFF39A_u -= 1) {
                    auto71CFF39A_var = UnitGroupUnitFromEnd(auto71CFF39A_g, auto71CFF39A_u);
                    if (auto71CFF39A_var == null) { break; }
                    UnitWeaponRemove(auto71CFF39A_var, "LanzerTorpedoes");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_55388DF3")));
        }
        else if (autoA36C0806_val == "viking2") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto81A3E944_g = UnitGroupSelected(EventPlayer());
                auto81A3E944_u = UnitGroupCount(auto81A3E944_g, c_unitCountAll);
                for (;; auto81A3E944_u -= 1) {
                    auto81A3E944_var = UnitGroupUnitFromEnd(auto81A3E944_g, auto81A3E944_u);
                    if (auto81A3E944_var == null) { break; }
                    if ((UnitWeaponCount(auto81A3E944_var) < 3)) {
                        UnitWeaponAdd(auto81A3E944_var, "TwinGatlingCannon", null);
                    }

                }
            }
            else {
                auto034321F0_g = UnitGroupSelected(EventPlayer());
                auto034321F0_u = UnitGroupCount(auto034321F0_g, c_unitCountAll);
                for (;; auto034321F0_u -= 1) {
                    auto034321F0_var = UnitGroupUnitFromEnd(auto034321F0_g, auto034321F0_u);
                    if (auto034321F0_var == null) { break; }
                    UnitWeaponRemove(auto034321F0_var, "TwinGatlingCannon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B81FAF86")));
        }
        else if (autoA36C0806_val == "banshee") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoCC1DA488_g = UnitGroupSelected(EventPlayer());
                autoCC1DA488_u = UnitGroupCount(autoCC1DA488_g, c_unitCountAll);
                for (;; autoCC1DA488_u -= 1) {
                    autoCC1DA488_var = UnitGroupUnitFromEnd(autoCC1DA488_g, autoCC1DA488_u);
                    if (autoCC1DA488_var == null) { break; }
                    if ((UnitWeaponCount(autoCC1DA488_var) < 3)) {
                        UnitWeaponAdd(autoCC1DA488_var, "BacklashRockets", null);
                    }

                }
            }
            else {
                auto353DEB00_g = UnitGroupSelected(EventPlayer());
                auto353DEB00_u = UnitGroupCount(auto353DEB00_g, c_unitCountAll);
                for (;; auto353DEB00_u -= 1) {
                    auto353DEB00_var = UnitGroupUnitFromEnd(auto353DEB00_g, auto353DEB00_u);
                    if (auto353DEB00_var == null) { break; }
                    UnitWeaponRemove(auto353DEB00_var, "BacklashRockets");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8E2F39D1")));
        }
        else if (autoA36C0806_val == "wraith1") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto12FD037B_g = UnitGroupSelected(EventPlayer());
                auto12FD037B_u = UnitGroupCount(auto12FD037B_g, c_unitCountAll);
                for (;; auto12FD037B_u -= 1) {
                    auto12FD037B_var = UnitGroupUnitFromEnd(auto12FD037B_g, auto12FD037B_u);
                    if (auto12FD037B_var == null) { break; }
                    if ((UnitWeaponCount(auto12FD037B_var) < 3)) {
                        UnitWeaponAdd(auto12FD037B_var, "WraithA", null);
                    }

                }
            }
            else {
                autoE4547B0D_g = UnitGroupSelected(EventPlayer());
                autoE4547B0D_u = UnitGroupCount(autoE4547B0D_g, c_unitCountAll);
                for (;; autoE4547B0D_u -= 1) {
                    autoE4547B0D_var = UnitGroupUnitFromEnd(autoE4547B0D_g, autoE4547B0D_u);
                    if (autoE4547B0D_var == null) { break; }
                    UnitWeaponRemove(autoE4547B0D_var, "WraithA");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A59E145E")));
        }
        else if (autoA36C0806_val == "wraith2") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto9B09F927_g = UnitGroupSelected(EventPlayer());
                auto9B09F927_u = UnitGroupCount(auto9B09F927_g, c_unitCountAll);
                for (;; auto9B09F927_u -= 1) {
                    auto9B09F927_var = UnitGroupUnitFromEnd(auto9B09F927_g, auto9B09F927_u);
                    if (auto9B09F927_var == null) { break; }
                    if ((UnitWeaponCount(auto9B09F927_var) < 3)) {
                        UnitWeaponAdd(auto9B09F927_var, "WraithG", null);
                    }

                }
            }
            else {
                autoF4D27190_g = UnitGroupSelected(EventPlayer());
                autoF4D27190_u = UnitGroupCount(autoF4D27190_g, c_unitCountAll);
                for (;; autoF4D27190_u -= 1) {
                    autoF4D27190_var = UnitGroupUnitFromEnd(autoF4D27190_g, autoF4D27190_u);
                    if (autoF4D27190_var == null) { break; }
                    UnitWeaponRemove(autoF4D27190_var, "WraithG");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_484F6DA5")));
        }
        else if (autoA36C0806_val == "siegetank1") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto178BF2F0_g = UnitGroupSelected(EventPlayer());
                auto178BF2F0_u = UnitGroupCount(auto178BF2F0_g, c_unitCountAll);
                for (;; auto178BF2F0_u -= 1) {
                    auto178BF2F0_var = UnitGroupUnitFromEnd(auto178BF2F0_g, auto178BF2F0_u);
                    if (auto178BF2F0_var == null) { break; }
                    if ((UnitWeaponCount(auto178BF2F0_var) < 3)) {
                        UnitWeaponAdd(auto178BF2F0_var, "CrucioShockCannon", null);
                    }

                }
            }
            else {
                auto5606041A_g = UnitGroupSelected(EventPlayer());
                auto5606041A_u = UnitGroupCount(auto5606041A_g, c_unitCountAll);
                for (;; auto5606041A_u -= 1) {
                    auto5606041A_var = UnitGroupUnitFromEnd(auto5606041A_g, auto5606041A_u);
                    if (auto5606041A_var == null) { break; }
                    UnitWeaponRemove(auto5606041A_var, "CrucioShockCannon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_88C09646")));
        }
        else if (autoA36C0806_val == "siegetank2") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoA5A18818_g = UnitGroupSelected(EventPlayer());
                autoA5A18818_u = UnitGroupCount(autoA5A18818_g, c_unitCountAll);
                for (;; autoA5A18818_u -= 1) {
                    autoA5A18818_var = UnitGroupUnitFromEnd(autoA5A18818_g, autoA5A18818_u);
                    if (autoA5A18818_var == null) { break; }
                    if ((UnitWeaponCount(autoA5A18818_var) < 3)) {
                        UnitWeaponAdd(autoA5A18818_var, "90mmCannons", null);
                    }

                }
            }
            else {
                autoC00993E4_g = UnitGroupSelected(EventPlayer());
                autoC00993E4_u = UnitGroupCount(autoC00993E4_g, c_unitCountAll);
                for (;; autoC00993E4_u -= 1) {
                    autoC00993E4_var = UnitGroupUnitFromEnd(autoC00993E4_g, autoC00993E4_u);
                    if (autoC00993E4_var == null) { break; }
                    UnitWeaponRemove(autoC00993E4_var, "90mmCannons");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F267C247")));
        }
        else if (autoA36C0806_val == "diamondback") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoEEC1C255_g = UnitGroupSelected(EventPlayer());
                autoEEC1C255_u = UnitGroupCount(autoEEC1C255_g, c_unitCountAll);
                for (;; autoEEC1C255_u -= 1) {
                    autoEEC1C255_var = UnitGroupUnitFromEnd(autoEEC1C255_g, autoEEC1C255_u);
                    if (autoEEC1C255_var == null) { break; }
                    if ((UnitWeaponCount(autoEEC1C255_var) < 3)) {
                        UnitWeaponAdd(autoEEC1C255_var, "Diamondback", null);
                    }

                }
            }
            else {
                auto7D7087E1_g = UnitGroupSelected(EventPlayer());
                auto7D7087E1_u = UnitGroupCount(auto7D7087E1_g, c_unitCountAll);
                for (;; auto7D7087E1_u -= 1) {
                    auto7D7087E1_var = UnitGroupUnitFromEnd(auto7D7087E1_g, auto7D7087E1_u);
                    if (auto7D7087E1_var == null) { break; }
                    UnitWeaponRemove(auto7D7087E1_var, "Diamondback");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_CA9B9A73")));
        }
        else if (autoA36C0806_val == "vulture") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoA813A46A_g = UnitGroupSelected(EventPlayer());
                autoA813A46A_u = UnitGroupCount(autoA813A46A_g, c_unitCountAll);
                for (;; autoA813A46A_u -= 1) {
                    autoA813A46A_var = UnitGroupUnitFromEnd(autoA813A46A_g, autoA813A46A_u);
                    if (autoA813A46A_var == null) { break; }
                    if ((UnitWeaponCount(autoA813A46A_var) < 3)) {
                        UnitWeaponAdd(autoA813A46A_var, "Vulture", null);
                    }

                }
            }
            else {
                auto1BA8E31C_g = UnitGroupSelected(EventPlayer());
                auto1BA8E31C_u = UnitGroupCount(auto1BA8E31C_g, c_unitCountAll);
                for (;; auto1BA8E31C_u -= 1) {
                    auto1BA8E31C_var = UnitGroupUnitFromEnd(auto1BA8E31C_g, auto1BA8E31C_u);
                    if (auto1BA8E31C_var == null) { break; }
                    UnitWeaponRemove(auto1BA8E31C_var, "Vulture");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A7917EB2")));
        }
        else if (autoA36C0806_val == "spectre") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoE4429C09_g = UnitGroupSelected(EventPlayer());
                autoE4429C09_u = UnitGroupCount(autoE4429C09_g, c_unitCountAll);
                for (;; autoE4429C09_u -= 1) {
                    autoE4429C09_var = UnitGroupUnitFromEnd(autoE4429C09_g, autoE4429C09_u);
                    if (autoE4429C09_var == null) { break; }
                    if ((UnitWeaponCount(autoE4429C09_var) < 3)) {
                        UnitWeaponAdd(autoE4429C09_var, "Specter", null);
                    }

                }
            }
            else {
                auto067E026E_g = UnitGroupSelected(EventPlayer());
                auto067E026E_u = UnitGroupCount(auto067E026E_g, c_unitCountAll);
                for (;; auto067E026E_u -= 1) {
                    auto067E026E_var = UnitGroupUnitFromEnd(auto067E026E_g, auto067E026E_u);
                    if (auto067E026E_var == null) { break; }
                    UnitWeaponRemove(auto067E026E_var, "Specter");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_314678BA")));
        }
        else if (autoA36C0806_val == "zergling") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto3AB937D5_g = UnitGroupSelected(EventPlayer());
                auto3AB937D5_u = UnitGroupCount(auto3AB937D5_g, c_unitCountAll);
                for (;; auto3AB937D5_u -= 1) {
                    auto3AB937D5_var = UnitGroupUnitFromEnd(auto3AB937D5_g, auto3AB937D5_u);
                    if (auto3AB937D5_var == null) { break; }
                    if ((UnitWeaponCount(auto3AB937D5_var) < 3)) {
                        UnitWeaponAdd(auto3AB937D5_var, "Claws", null);
                    }

                }
            }
            else {
                auto3230CBB8_g = UnitGroupSelected(EventPlayer());
                auto3230CBB8_u = UnitGroupCount(auto3230CBB8_g, c_unitCountAll);
                for (;; auto3230CBB8_u -= 1) {
                    auto3230CBB8_var = UnitGroupUnitFromEnd(auto3230CBB8_g, auto3230CBB8_u);
                    if (auto3230CBB8_var == null) { break; }
                    UnitWeaponRemove(auto3230CBB8_var, "Claws");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_876F5859")));
        }
        else if (autoA36C0806_val == "roach") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoA6D8CDA5_g = UnitGroupSelected(EventPlayer());
                autoA6D8CDA5_u = UnitGroupCount(autoA6D8CDA5_g, c_unitCountAll);
                for (;; autoA6D8CDA5_u -= 1) {
                    autoA6D8CDA5_var = UnitGroupUnitFromEnd(autoA6D8CDA5_g, autoA6D8CDA5_u);
                    if (autoA6D8CDA5_var == null) { break; }
                    if ((UnitWeaponCount(autoA6D8CDA5_var) < 3)) {
                        UnitWeaponAdd(autoA6D8CDA5_var, "AcidSaliva", null);
                    }

                }
            }
            else {
                autoA9064D2C_g = UnitGroupSelected(EventPlayer());
                autoA9064D2C_u = UnitGroupCount(autoA9064D2C_g, c_unitCountAll);
                for (;; autoA9064D2C_u -= 1) {
                    autoA9064D2C_var = UnitGroupUnitFromEnd(autoA9064D2C_g, autoA9064D2C_u);
                    if (autoA9064D2C_var == null) { break; }
                    UnitWeaponRemove(autoA9064D2C_var, "AcidSaliva");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_4F21B838")));
        }
        else if (autoA36C0806_val == "vileroach") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto48F148EF_g = UnitGroupSelected(EventPlayer());
                auto48F148EF_u = UnitGroupCount(auto48F148EF_g, c_unitCountAll);
                for (;; auto48F148EF_u -= 1) {
                    auto48F148EF_var = UnitGroupUnitFromEnd(auto48F148EF_g, auto48F148EF_u);
                    if (auto48F148EF_var == null) { break; }
                    if ((UnitWeaponCount(auto48F148EF_var) < 3)) {
                        UnitWeaponAdd(auto48F148EF_var, "RoachVileAcidSaliva", null);
                    }

                }
            }
            else {
                autoACA89C8E_g = UnitGroupSelected(EventPlayer());
                autoACA89C8E_u = UnitGroupCount(autoACA89C8E_g, c_unitCountAll);
                for (;; autoACA89C8E_u -= 1) {
                    autoACA89C8E_var = UnitGroupUnitFromEnd(autoACA89C8E_g, autoACA89C8E_u);
                    if (autoACA89C8E_var == null) { break; }
                    UnitWeaponRemove(autoACA89C8E_var, "RoachVileAcidSaliva");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_62498531")));
        }
        else if (autoA36C0806_val == "corpserroach") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto8D64A94F_g = UnitGroupSelected(EventPlayer());
                auto8D64A94F_u = UnitGroupCount(auto8D64A94F_g, c_unitCountAll);
                for (;; auto8D64A94F_u -= 1) {
                    auto8D64A94F_var = UnitGroupUnitFromEnd(auto8D64A94F_g, auto8D64A94F_u);
                    if (auto8D64A94F_var == null) { break; }
                    if ((UnitWeaponCount(auto8D64A94F_var) < 3)) {
                        UnitWeaponAdd(auto8D64A94F_var, "RoachCorpserAcidSaliva", null);
                    }

                }
            }
            else {
                auto24FA9766_g = UnitGroupSelected(EventPlayer());
                auto24FA9766_u = UnitGroupCount(auto24FA9766_g, c_unitCountAll);
                for (;; auto24FA9766_u -= 1) {
                    auto24FA9766_var = UnitGroupUnitFromEnd(auto24FA9766_g, auto24FA9766_u);
                    if (auto24FA9766_var == null) { break; }
                    UnitWeaponRemove(auto24FA9766_var, "RoachCorpserAcidSaliva");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_8D6EC688")));
        }
        else if (autoA36C0806_val == "queen1") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoAACA0131_g = UnitGroupSelected(EventPlayer());
                autoAACA0131_u = UnitGroupCount(autoAACA0131_g, c_unitCountAll);
                for (;; autoAACA0131_u -= 1) {
                    autoAACA0131_var = UnitGroupUnitFromEnd(autoAACA0131_g, autoAACA0131_u);
                    if (autoAACA0131_var == null) { break; }
                    if ((UnitWeaponCount(autoAACA0131_var) < 3)) {
                        UnitWeaponAdd(autoAACA0131_var, "AcidSpines", null);
                    }

                }
            }
            else {
                auto5F8C415F_g = UnitGroupSelected(EventPlayer());
                auto5F8C415F_u = UnitGroupCount(auto5F8C415F_g, c_unitCountAll);
                for (;; auto5F8C415F_u -= 1) {
                    auto5F8C415F_var = UnitGroupUnitFromEnd(auto5F8C415F_g, auto5F8C415F_u);
                    if (auto5F8C415F_var == null) { break; }
                    UnitWeaponRemove(auto5F8C415F_var, "AcidSpines");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_03A7562E")));
        }
        else if (autoA36C0806_val == "queen2") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto7302177E_g = UnitGroupSelected(EventPlayer());
                auto7302177E_u = UnitGroupCount(auto7302177E_g, c_unitCountAll);
                for (;; auto7302177E_u -= 1) {
                    auto7302177E_var = UnitGroupUnitFromEnd(auto7302177E_g, auto7302177E_u);
                    if (auto7302177E_var == null) { break; }
                    if ((UnitWeaponCount(auto7302177E_var) < 3)) {
                        UnitWeaponAdd(auto7302177E_var, "TalonsMissile", null);
                    }

                }
            }
            else {
                auto604D73A1_g = UnitGroupSelected(EventPlayer());
                auto604D73A1_u = UnitGroupCount(auto604D73A1_g, c_unitCountAll);
                for (;; auto604D73A1_u -= 1) {
                    auto604D73A1_var = UnitGroupUnitFromEnd(auto604D73A1_g, auto604D73A1_u);
                    if (auto604D73A1_var == null) { break; }
                    UnitWeaponRemove(auto604D73A1_var, "TalonsMissile");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2523349B")));
        }
        else if (autoA36C0806_val == "hydralisk") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoECA716CA_g = UnitGroupSelected(EventPlayer());
                autoECA716CA_u = UnitGroupCount(autoECA716CA_g, c_unitCountAll);
                for (;; autoECA716CA_u -= 1) {
                    autoECA716CA_var = UnitGroupUnitFromEnd(autoECA716CA_g, autoECA716CA_u);
                    if (autoECA716CA_var == null) { break; }
                    if ((UnitWeaponCount(autoECA716CA_var) < 3)) {
                        UnitWeaponAdd(autoECA716CA_var, "NeedleSpines", null);
                    }

                }
            }
            else {
                autoFAAFB6E8_g = UnitGroupSelected(EventPlayer());
                autoFAAFB6E8_u = UnitGroupCount(autoFAAFB6E8_g, c_unitCountAll);
                for (;; autoFAAFB6E8_u -= 1) {
                    autoFAAFB6E8_var = UnitGroupUnitFromEnd(autoFAAFB6E8_g, autoFAAFB6E8_u);
                    if (autoFAAFB6E8_var == null) { break; }
                    UnitWeaponRemove(autoFAAFB6E8_var, "NeedleSpines");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_36942433")));
        }
        else if (autoA36C0806_val == "mutalisk") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoF697FD3D_g = UnitGroupSelected(EventPlayer());
                autoF697FD3D_u = UnitGroupCount(autoF697FD3D_g, c_unitCountAll);
                for (;; autoF697FD3D_u -= 1) {
                    autoF697FD3D_var = UnitGroupUnitFromEnd(autoF697FD3D_g, autoF697FD3D_u);
                    if (autoF697FD3D_var == null) { break; }
                    if ((UnitWeaponCount(autoF697FD3D_var) < 3)) {
                        UnitWeaponAdd(autoF697FD3D_var, "GlaiveWurm", null);
                    }

                }
            }
            else {
                auto56168DF1_g = UnitGroupSelected(EventPlayer());
                auto56168DF1_u = UnitGroupCount(auto56168DF1_g, c_unitCountAll);
                for (;; auto56168DF1_u -= 1) {
                    auto56168DF1_var = UnitGroupUnitFromEnd(auto56168DF1_g, auto56168DF1_u);
                    if (auto56168DF1_var == null) { break; }
                    UnitWeaponRemove(auto56168DF1_var, "GlaiveWurm");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_89F1B090")));
        }
        else if (autoA36C0806_val == "ultralisk") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto1CA11992_g = UnitGroupSelected(EventPlayer());
                auto1CA11992_u = UnitGroupCount(auto1CA11992_g, c_unitCountAll);
                for (;; auto1CA11992_u -= 1) {
                    auto1CA11992_var = UnitGroupUnitFromEnd(auto1CA11992_g, auto1CA11992_u);
                    if (auto1CA11992_var == null) { break; }
                    if ((UnitWeaponCount(auto1CA11992_var) < 3)) {
                        UnitWeaponAdd(auto1CA11992_var, "KaiserBlades", null);
                    }

                }
            }
            else {
                autoA1B30CF4_g = UnitGroupSelected(EventPlayer());
                autoA1B30CF4_u = UnitGroupCount(autoA1B30CF4_g, c_unitCountAll);
                for (;; autoA1B30CF4_u -= 1) {
                    autoA1B30CF4_var = UnitGroupUnitFromEnd(autoA1B30CF4_g, autoA1B30CF4_u);
                    if (autoA1B30CF4_var == null) { break; }
                    UnitWeaponRemove(autoA1B30CF4_var, "KaiserBlades");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_79438384")));
        }
        else if (autoA36C0806_val == "aberration") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoE29A47C7_g = UnitGroupSelected(EventPlayer());
                autoE29A47C7_u = UnitGroupCount(autoE29A47C7_g, c_unitCountAll);
                for (;; autoE29A47C7_u -= 1) {
                    autoE29A47C7_var = UnitGroupUnitFromEnd(autoE29A47C7_g, autoE29A47C7_u);
                    if (autoE29A47C7_var == null) { break; }
                    if ((UnitWeaponCount(autoE29A47C7_var) < 3)) {
                        UnitWeaponAdd(autoE29A47C7_var, "InfestedAbomination", null);
                    }

                }
            }
            else {
                auto713B5B88_g = UnitGroupSelected(EventPlayer());
                auto713B5B88_u = UnitGroupCount(auto713B5B88_g, c_unitCountAll);
                for (;; auto713B5B88_u -= 1) {
                    auto713B5B88_var = UnitGroupUnitFromEnd(auto713B5B88_g, auto713B5B88_u);
                    if (auto713B5B88_var == null) { break; }
                    UnitWeaponRemove(auto713B5B88_var, "InfestedAbomination");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_2EB21F0A")));
        }
        else if (autoA36C0806_val == "zealot") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto574F1C5B_g = UnitGroupSelected(EventPlayer());
                auto574F1C5B_u = UnitGroupCount(auto574F1C5B_g, c_unitCountAll);
                for (;; auto574F1C5B_u -= 1) {
                    auto574F1C5B_var = UnitGroupUnitFromEnd(auto574F1C5B_g, auto574F1C5B_u);
                    if (auto574F1C5B_var == null) { break; }
                    if ((UnitWeaponCount(auto574F1C5B_var) < 3)) {
                        UnitWeaponAdd(auto574F1C5B_var, "PsiBlades", null);
                    }

                }
            }
            else {
                auto64F7DC22_g = UnitGroupSelected(EventPlayer());
                auto64F7DC22_u = UnitGroupCount(auto64F7DC22_g, c_unitCountAll);
                for (;; auto64F7DC22_u -= 1) {
                    auto64F7DC22_var = UnitGroupUnitFromEnd(auto64F7DC22_g, auto64F7DC22_u);
                    if (auto64F7DC22_var == null) { break; }
                    UnitWeaponRemove(auto64F7DC22_var, "PsiBlades");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_289BBA9D")));
        }
        else if (autoA36C0806_val == "aiurzealot") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto4F74BC6D_g = UnitGroupSelected(EventPlayer());
                auto4F74BC6D_u = UnitGroupCount(auto4F74BC6D_g, c_unitCountAll);
                for (;; auto4F74BC6D_u -= 1) {
                    auto4F74BC6D_var = UnitGroupUnitFromEnd(auto4F74BC6D_g, auto4F74BC6D_u);
                    if (auto4F74BC6D_var == null) { break; }
                    if ((UnitWeaponCount(auto4F74BC6D_var) < 3)) {
                        UnitWeaponAdd(auto4F74BC6D_var, "SolariteReaper", null);
                    }

                }
            }
            else {
                auto7F9E42CD_g = UnitGroupSelected(EventPlayer());
                auto7F9E42CD_u = UnitGroupCount(auto7F9E42CD_g, c_unitCountAll);
                for (;; auto7F9E42CD_u -= 1) {
                    auto7F9E42CD_var = UnitGroupUnitFromEnd(auto7F9E42CD_g, auto7F9E42CD_u);
                    if (auto7F9E42CD_var == null) { break; }
                    UnitWeaponRemove(auto7F9E42CD_var, "SolariteReaper");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_C9385E08")));
        }
        else if (autoA36C0806_val == "stalker") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto74305222_g = UnitGroupSelected(EventPlayer());
                auto74305222_u = UnitGroupCount(auto74305222_g, c_unitCountAll);
                for (;; auto74305222_u -= 1) {
                    auto74305222_var = UnitGroupUnitFromEnd(auto74305222_g, auto74305222_u);
                    if (auto74305222_var == null) { break; }
                    if ((UnitWeaponCount(auto74305222_var) < 3)) {
                        UnitWeaponAdd(auto74305222_var, "ParticleDisruptors", null);
                    }

                }
            }
            else {
                autoBB190F1D_g = UnitGroupSelected(EventPlayer());
                autoBB190F1D_u = UnitGroupCount(autoBB190F1D_g, c_unitCountAll);
                for (;; autoBB190F1D_u -= 1) {
                    autoBB190F1D_var = UnitGroupUnitFromEnd(autoBB190F1D_g, autoBB190F1D_u);
                    if (autoBB190F1D_var == null) { break; }
                    UnitWeaponRemove(autoBB190F1D_var, "ParticleDisruptors");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_07464C96")));
        }
        else if (autoA36C0806_val == "dragoon") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoBE2F7B31_g = UnitGroupSelected(EventPlayer());
                autoBE2F7B31_u = UnitGroupCount(autoBE2F7B31_g, c_unitCountAll);
                for (;; autoBE2F7B31_u -= 1) {
                    autoBE2F7B31_var = UnitGroupUnitFromEnd(autoBE2F7B31_g, autoBE2F7B31_u);
                    if (autoBE2F7B31_var == null) { break; }
                    if ((UnitWeaponCount(autoBE2F7B31_var) < 3)) {
                        UnitWeaponAdd(autoBE2F7B31_var, "Dragoon", null);
                    }

                }
            }
            else {
                auto74D307B5_g = UnitGroupSelected(EventPlayer());
                auto74D307B5_u = UnitGroupCount(auto74D307B5_g, c_unitCountAll);
                for (;; auto74D307B5_u -= 1) {
                    auto74D307B5_var = UnitGroupUnitFromEnd(auto74D307B5_g, auto74D307B5_u);
                    if (auto74D307B5_var == null) { break; }
                    UnitWeaponRemove(auto74D307B5_var, "Dragoon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_830677A1")));
        }
        else if (autoA36C0806_val == "adept") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoF20A94E0_g = UnitGroupSelected(EventPlayer());
                autoF20A94E0_u = UnitGroupCount(autoF20A94E0_g, c_unitCountAll);
                for (;; autoF20A94E0_u -= 1) {
                    autoF20A94E0_var = UnitGroupUnitFromEnd(autoF20A94E0_g, autoF20A94E0_u);
                    if (autoF20A94E0_var == null) { break; }
                    if ((UnitWeaponCount(autoF20A94E0_var) < 3)) {
                        UnitWeaponAdd(autoF20A94E0_var, "Adept", null);
                    }

                }
            }
            else {
                autoA115DE1B_g = UnitGroupSelected(EventPlayer());
                autoA115DE1B_u = UnitGroupCount(autoA115DE1B_g, c_unitCountAll);
                for (;; autoA115DE1B_u -= 1) {
                    autoA115DE1B_var = UnitGroupUnitFromEnd(autoA115DE1B_g, autoA115DE1B_u);
                    if (autoA115DE1B_var == null) { break; }
                    UnitWeaponRemove(autoA115DE1B_var, "Adept");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_B01A9804")));
        }
        else if (autoA36C0806_val == "immortal") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto3758ABE4_g = UnitGroupSelected(EventPlayer());
                auto3758ABE4_u = UnitGroupCount(auto3758ABE4_g, c_unitCountAll);
                for (;; auto3758ABE4_u -= 1) {
                    auto3758ABE4_var = UnitGroupUnitFromEnd(auto3758ABE4_g, auto3758ABE4_u);
                    if (auto3758ABE4_var == null) { break; }
                    if ((UnitWeaponCount(auto3758ABE4_var) < 3)) {
                        UnitWeaponAdd(auto3758ABE4_var, "PhaseDisruptors", null);
                    }

                }
            }
            else {
                auto6C02B780_g = UnitGroupSelected(EventPlayer());
                auto6C02B780_u = UnitGroupCount(auto6C02B780_g, c_unitCountAll);
                for (;; auto6C02B780_u -= 1) {
                    auto6C02B780_var = UnitGroupUnitFromEnd(auto6C02B780_g, auto6C02B780_u);
                    if (auto6C02B780_var == null) { break; }
                    UnitWeaponRemove(auto6C02B780_var, "PhaseDisruptors");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_95AB885B")));
        }
        else if (autoA36C0806_val == "anihilator") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto17390F29_g = UnitGroupSelected(EventPlayer());
                auto17390F29_u = UnitGroupCount(auto17390F29_g, c_unitCountAll);
                for (;; auto17390F29_u -= 1) {
                    auto17390F29_var = UnitGroupUnitFromEnd(auto17390F29_g, auto17390F29_u);
                    if (auto17390F29_var == null) { break; }
                    if ((UnitWeaponCount(auto17390F29_var) < 3)) {
                        UnitWeaponAdd(auto17390F29_var, "AnnihilatorParticleDisruptors", null);
                    }

                }
            }
            else {
                auto3C581A61_g = UnitGroupSelected(EventPlayer());
                auto3C581A61_u = UnitGroupCount(auto3C581A61_g, c_unitCountAll);
                for (;; auto3C581A61_u -= 1) {
                    auto3C581A61_var = UnitGroupUnitFromEnd(auto3C581A61_g, auto3C581A61_u);
                    if (auto3C581A61_var == null) { break; }
                    UnitWeaponRemove(auto3C581A61_var, "AnnihilatorParticleDisruptors");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_019F5ED6")));
        }
        else if (autoA36C0806_val == "vanguard") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto9EC96BEC_g = UnitGroupSelected(EventPlayer());
                auto9EC96BEC_u = UnitGroupCount(auto9EC96BEC_g, c_unitCountAll);
                for (;; auto9EC96BEC_u -= 1) {
                    auto9EC96BEC_var = UnitGroupUnitFromEnd(auto9EC96BEC_g, auto9EC96BEC_u);
                    if (auto9EC96BEC_var == null) { break; }
                    if ((UnitWeaponCount(auto9EC96BEC_var) < 3)) {
                        UnitWeaponAdd(auto9EC96BEC_var, "ImmortalTaldarim", null);
                    }

                }
            }
            else {
                autoA594836D_g = UnitGroupSelected(EventPlayer());
                autoA594836D_u = UnitGroupCount(autoA594836D_g, c_unitCountAll);
                for (;; autoA594836D_u -= 1) {
                    autoA594836D_var = UnitGroupUnitFromEnd(autoA594836D_g, autoA594836D_u);
                    if (autoA594836D_var == null) { break; }
                    UnitWeaponRemove(autoA594836D_var, "ImmortalTaldarim");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_F0D02510")));
        }
        else if (autoA36C0806_val == "archon") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto48A302B8_g = UnitGroupSelected(EventPlayer());
                auto48A302B8_u = UnitGroupCount(auto48A302B8_g, c_unitCountAll);
                for (;; auto48A302B8_u -= 1) {
                    auto48A302B8_var = UnitGroupUnitFromEnd(auto48A302B8_g, auto48A302B8_u);
                    if (auto48A302B8_var == null) { break; }
                    if ((UnitWeaponCount(auto48A302B8_var) < 3)) {
                        UnitWeaponAdd(auto48A302B8_var, "PsionicShockwave", null);
                    }

                }
            }
            else {
                autoB356E9B2_g = UnitGroupSelected(EventPlayer());
                autoB356E9B2_u = UnitGroupCount(autoB356E9B2_g, c_unitCountAll);
                for (;; autoB356E9B2_u -= 1) {
                    autoB356E9B2_var = UnitGroupUnitFromEnd(autoB356E9B2_g, autoB356E9B2_u);
                    if (autoB356E9B2_var == null) { break; }
                    UnitWeaponRemove(autoB356E9B2_var, "PsionicShockwave");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A357D433")));
        }
        else if (autoA36C0806_val == "darkarchon") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto3DF4E285_g = UnitGroupSelected(EventPlayer());
                auto3DF4E285_u = UnitGroupCount(auto3DF4E285_g, c_unitCountAll);
                for (;; auto3DF4E285_u -= 1) {
                    auto3DF4E285_var = UnitGroupUnitFromEnd(auto3DF4E285_g, auto3DF4E285_u);
                    if (auto3DF4E285_var == null) { break; }
                    if ((UnitWeaponCount(auto3DF4E285_var) < 3)) {
                        UnitWeaponAdd(auto3DF4E285_var, "DarkArchonWeapon", null);
                    }

                }
            }
            else {
                auto8F559DB7_g = UnitGroupSelected(EventPlayer());
                auto8F559DB7_u = UnitGroupCount(auto8F559DB7_g, c_unitCountAll);
                for (;; auto8F559DB7_u -= 1) {
                    auto8F559DB7_var = UnitGroupUnitFromEnd(auto8F559DB7_g, auto8F559DB7_u);
                    if (auto8F559DB7_var == null) { break; }
                    UnitWeaponRemove(auto8F559DB7_var, "DarkArchonWeapon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1126116C")));
        }
        else if (autoA36C0806_val == "darktemplar") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto81943111_g = UnitGroupSelected(EventPlayer());
                auto81943111_u = UnitGroupCount(auto81943111_g, c_unitCountAll);
                for (;; auto81943111_u -= 1) {
                    auto81943111_var = UnitGroupUnitFromEnd(auto81943111_g, auto81943111_u);
                    if (auto81943111_var == null) { break; }
                    if ((UnitWeaponCount(auto81943111_var) < 3)) {
                        UnitWeaponAdd(auto81943111_var, "WarpBlades", null);
                    }

                }
            }
            else {
                auto720723FC_g = UnitGroupSelected(EventPlayer());
                auto720723FC_u = UnitGroupCount(auto720723FC_g, c_unitCountAll);
                for (;; auto720723FC_u -= 1) {
                    auto720723FC_var = UnitGroupUnitFromEnd(auto720723FC_g, auto720723FC_u);
                    if (auto720723FC_var == null) { break; }
                    UnitWeaponRemove(auto720723FC_var, "WarpBlades");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_EB14509D")));
        }
        else if (autoA36C0806_val == "avenger") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoBF9D5603_g = UnitGroupSelected(EventPlayer());
                autoBF9D5603_u = UnitGroupCount(autoBF9D5603_g, c_unitCountAll);
                for (;; autoBF9D5603_u -= 1) {
                    autoBF9D5603_var = UnitGroupUnitFromEnd(autoBF9D5603_g, autoBF9D5603_u);
                    if (autoBF9D5603_var == null) { break; }
                    if ((UnitWeaponCount(autoBF9D5603_var) < 3)) {
                        UnitWeaponAdd(autoBF9D5603_var, "AvengerWeapon", null);
                    }

                }
            }
            else {
                autoAAC497BE_g = UnitGroupSelected(EventPlayer());
                autoAAC497BE_u = UnitGroupCount(autoAAC497BE_g, c_unitCountAll);
                for (;; autoAAC497BE_u -= 1) {
                    autoAAC497BE_var = UnitGroupUnitFromEnd(autoAAC497BE_g, autoAAC497BE_u);
                    if (autoAAC497BE_var == null) { break; }
                    UnitWeaponRemove(autoAAC497BE_var, "AvengerWeapon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_1E90FA9A")));
        }
        else if (autoA36C0806_val == "bloodhunter") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto2D3990E4_g = UnitGroupSelected(EventPlayer());
                auto2D3990E4_u = UnitGroupCount(auto2D3990E4_g, c_unitCountAll);
                for (;; auto2D3990E4_u -= 1) {
                    auto2D3990E4_var = UnitGroupUnitFromEnd(auto2D3990E4_g, auto2D3990E4_u);
                    if (auto2D3990E4_var == null) { break; }
                    if ((UnitWeaponCount(auto2D3990E4_var) < 3)) {
                        UnitWeaponAdd(auto2D3990E4_var, "DarkTemplarTaldarim", null);
                    }

                }
            }
            else {
                auto51785F05_g = UnitGroupSelected(EventPlayer());
                auto51785F05_u = UnitGroupCount(auto51785F05_g, c_unitCountAll);
                for (;; auto51785F05_u -= 1) {
                    auto51785F05_var = UnitGroupUnitFromEnd(auto51785F05_g, auto51785F05_u);
                    if (auto51785F05_var == null) { break; }
                    UnitWeaponRemove(auto51785F05_var, "DarkTemplarTaldarim");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_50C4A36A")));
        }
        else if (autoA36C0806_val == "hightemplar") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto40289077_g = UnitGroupSelected(EventPlayer());
                auto40289077_u = UnitGroupCount(auto40289077_g, c_unitCountAll);
                for (;; auto40289077_u -= 1) {
                    auto40289077_var = UnitGroupUnitFromEnd(auto40289077_g, auto40289077_u);
                    if (auto40289077_var == null) { break; }
                    if ((UnitWeaponCount(auto40289077_var) < 3)) {
                        UnitWeaponAdd(auto40289077_var, "HighTemplarWeapon", null);
                    }

                }
            }
            else {
                auto8FE817BD_g = UnitGroupSelected(EventPlayer());
                auto8FE817BD_u = UnitGroupCount(auto8FE817BD_g, c_unitCountAll);
                for (;; auto8FE817BD_u -= 1) {
                    auto8FE817BD_var = UnitGroupUnitFromEnd(auto8FE817BD_g, auto8FE817BD_u);
                    if (auto8FE817BD_var == null) { break; }
                    UnitWeaponRemove(auto8FE817BD_var, "HighTemplarWeapon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_A8323A81")));
        }
        else if (autoA36C0806_val == "ascendant") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto5C36B27F_g = UnitGroupSelected(EventPlayer());
                auto5C36B27F_u = UnitGroupCount(auto5C36B27F_g, c_unitCountAll);
                for (;; auto5C36B27F_u -= 1) {
                    auto5C36B27F_var = UnitGroupUnitFromEnd(auto5C36B27F_g, auto5C36B27F_u);
                    if (auto5C36B27F_var == null) { break; }
                    if ((UnitWeaponCount(auto5C36B27F_var) < 3)) {
                        UnitWeaponAdd(auto5C36B27F_var, "AscendantWeapon", null);
                    }

                }
            }
            else {
                auto5E84F4B4_g = UnitGroupSelected(EventPlayer());
                auto5E84F4B4_u = UnitGroupCount(auto5E84F4B4_g, c_unitCountAll);
                for (;; auto5E84F4B4_u -= 1) {
                    auto5E84F4B4_var = UnitGroupUnitFromEnd(auto5E84F4B4_g, auto5E84F4B4_u);
                    if (auto5E84F4B4_var == null) { break; }
                    UnitWeaponRemove(auto5E84F4B4_var, "AscendantWeapon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_68D1D26A")));
        }
        else if (autoA36C0806_val == "phoenix") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto21552139_g = UnitGroupSelected(EventPlayer());
                auto21552139_u = UnitGroupCount(auto21552139_g, c_unitCountAll);
                for (;; auto21552139_u -= 1) {
                    auto21552139_var = UnitGroupUnitFromEnd(auto21552139_g, auto21552139_u);
                    if (auto21552139_var == null) { break; }
                    if ((UnitWeaponCount(auto21552139_var) < 3)) {
                        UnitWeaponAdd(auto21552139_var, "IonCannons", null);
                    }

                }
            }
            else {
                auto47FAFBB5_g = UnitGroupSelected(EventPlayer());
                auto47FAFBB5_u = UnitGroupCount(auto47FAFBB5_g, c_unitCountAll);
                for (;; auto47FAFBB5_u -= 1) {
                    auto47FAFBB5_var = UnitGroupUnitFromEnd(auto47FAFBB5_g, auto47FAFBB5_u);
                    if (auto47FAFBB5_var == null) { break; }
                    UnitWeaponRemove(auto47FAFBB5_var, "IonCannons");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_015A45E7")));
        }
        else if (autoA36C0806_val == "corsair") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoB7EBBD84_g = UnitGroupSelected(EventPlayer());
                autoB7EBBD84_u = UnitGroupCount(autoB7EBBD84_g, c_unitCountAll);
                for (;; autoB7EBBD84_u -= 1) {
                    autoB7EBBD84_var = UnitGroupUnitFromEnd(autoB7EBBD84_g, autoB7EBBD84_u);
                    if (autoB7EBBD84_var == null) { break; }
                    if ((UnitWeaponCount(autoB7EBBD84_var) < 3)) {
                        UnitWeaponAdd(autoB7EBBD84_var, "NeutronFlare", null);
                    }

                }
            }
            else {
                autoD1873AC0_g = UnitGroupSelected(EventPlayer());
                autoD1873AC0_u = UnitGroupCount(autoD1873AC0_g, c_unitCountAll);
                for (;; autoD1873AC0_u -= 1) {
                    autoD1873AC0_var = UnitGroupUnitFromEnd(autoD1873AC0_g, autoD1873AC0_u);
                    if (autoD1873AC0_var == null) { break; }
                    UnitWeaponRemove(autoD1873AC0_var, "NeutronFlare");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_7270D911")));
        }
        else if (autoA36C0806_val == "destroyer") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto6AE35466_g = UnitGroupSelected(EventPlayer());
                auto6AE35466_u = UnitGroupCount(auto6AE35466_g, c_unitCountAll);
                for (;; auto6AE35466_u -= 1) {
                    auto6AE35466_var = UnitGroupUnitFromEnd(auto6AE35466_g, auto6AE35466_u);
                    if (auto6AE35466_var == null) { break; }
                    if ((UnitWeaponCount(auto6AE35466_var) < 3)) {
                        UnitWeaponAdd(auto6AE35466_var, "VoidRayChargeBeamBounce", null);
                    }

                }
            }
            else {
                auto54237936_g = UnitGroupSelected(EventPlayer());
                auto54237936_u = UnitGroupCount(auto54237936_g, c_unitCountAll);
                for (;; auto54237936_u -= 1) {
                    auto54237936_var = UnitGroupUnitFromEnd(auto54237936_g, auto54237936_u);
                    if (auto54237936_var == null) { break; }
                    UnitWeaponRemove(auto54237936_var, "VoidRayChargeBeamBounce");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6F68D56B")));
        }
        else if (autoA36C0806_val == "arbiter") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto40F8C898_g = UnitGroupSelected(EventPlayer());
                auto40F8C898_u = UnitGroupCount(auto40F8C898_g, c_unitCountAll);
                for (;; auto40F8C898_u -= 1) {
                    auto40F8C898_var = UnitGroupUnitFromEnd(auto40F8C898_g, auto40F8C898_u);
                    if (auto40F8C898_var == null) { break; }
                    if ((UnitWeaponCount(auto40F8C898_var) < 3)) {
                        UnitWeaponAdd(auto40F8C898_var, "ArbiterMPWeapon", null);
                    }

                }
            }
            else {
                auto35752856_g = UnitGroupSelected(EventPlayer());
                auto35752856_u = UnitGroupCount(auto35752856_g, c_unitCountAll);
                for (;; auto35752856_u -= 1) {
                    auto35752856_var = UnitGroupUnitFromEnd(auto35752856_g, auto35752856_u);
                    if (auto35752856_var == null) { break; }
                    UnitWeaponRemove(auto35752856_var, "ArbiterMPWeapon");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_6D916BE3")));
        }
        else if (autoA36C0806_val == "colossus") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                autoEA750401_g = UnitGroupSelected(EventPlayer());
                autoEA750401_u = UnitGroupCount(autoEA750401_g, c_unitCountAll);
                for (;; autoEA750401_u -= 1) {
                    autoEA750401_var = UnitGroupUnitFromEnd(autoEA750401_g, autoEA750401_u);
                    if (autoEA750401_var == null) { break; }
                    if ((UnitWeaponCount(autoEA750401_var) < 3)) {
                        UnitWeaponAdd(autoEA750401_var, "ThermalLances", null);
                    }

                }
            }
            else {
                autoCF8E5AA6_g = UnitGroupSelected(EventPlayer());
                autoCF8E5AA6_u = UnitGroupCount(autoCF8E5AA6_g, c_unitCountAll);
                for (;; autoCF8E5AA6_u -= 1) {
                    autoCF8E5AA6_var = UnitGroupUnitFromEnd(autoCF8E5AA6_g, autoCF8E5AA6_u);
                    if (autoCF8E5AA6_var == null) { break; }
                    UnitWeaponRemove(autoCF8E5AA6_var, "ThermalLances");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_3890C702")));
        }
        else if (autoA36C0806_val == "mothership") {
            if ((StringWord(EventChatMessage(false), 2) == "add")) {
                auto1A044BE1_g = UnitGroupSelected(EventPlayer());
                auto1A044BE1_u = UnitGroupCount(auto1A044BE1_g, c_unitCountAll);
                for (;; auto1A044BE1_u -= 1) {
                    auto1A044BE1_var = UnitGroupUnitFromEnd(auto1A044BE1_g, auto1A044BE1_u);
                    if (auto1A044BE1_var == null) { break; }
                    if ((UnitWeaponCount(auto1A044BE1_var) < 3)) {
                        UnitWeaponAdd(auto1A044BE1_var, "MothershipBeam", null);
                    }

                }
            }
            else {
                autoD66C32B0_g = UnitGroupSelected(EventPlayer());
                autoD66C32B0_u = UnitGroupCount(autoD66C32B0_g, c_unitCountAll);
                for (;; autoD66C32B0_u -= 1) {
                    autoD66C32B0_var = UnitGroupUnitFromEnd(autoD66C32B0_g, autoD66C32B0_u);
                    if (autoD66C32B0_var == null) { break; }
                    UnitWeaponRemove(autoD66C32B0_var, "MothershipBeam");
                }
            }
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondFont + StringExternal("Param/Value/lib_22142002_5E9270BE")));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_A3E6E47E")));
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), lib22142002_gv_dEITYHelpTextLocation, (lib22142002_gv_dEITYRespondError + StringExternal("Param/Value/lib_22142002_E4CD3FF3")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_weapon_Init () {
    lib22142002_gt_weapon = TriggerCreate("lib22142002_gt_weapon_Func");
    TriggerAddEventChatMessage(lib22142002_gt_weapon, c_playerAny, "-weapon", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DialogPanels_Enabler
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DialogPanels_Enabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(lib22142002_gt_DP_Click, true);
    TriggerEnable(lib22142002_gt_DP_OpenPanels, true);
    TriggerEnable(lib22142002_gt_DP_ClosePanels, true);
    TriggerEnable(lib22142002_gt_DP_Auto_RacesOwnerChange, true);
    TriggerEnable(lib22142002_gt_US_AutoUpdating, true);
    TriggerEnable(lib22142002_gt_US_HideUpgradeDialogs, true);
    TriggerEnable(lib22142002_gt_US_CreateDialogs, true);
    TriggerEnable(lib22142002_gt_TTUS_CreateDialogs, true);
    TriggerEnable(lib22142002_gt_TTUS_HideTechTreeUnitDialogs, true);
    TriggerEnable(lib22142002_gt_TTSS_CreateDialogs, true);
    TriggerEnable(lib22142002_gt_TTSS_HideTechTreeStructureDialogs, true);
    Wait(0.001, c_timeGame);
    lib22142002_gf_DP_CreateRaceDialogs();
    lib22142002_gf_TTSS_Database();
    TriggerExecute(lib22142002_gt_TTSS_CreateDialogs, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DialogPanels_Enabler_Init () {
    lib22142002_gt_DialogPanels_Enabler = TriggerCreate("lib22142002_gt_DialogPanels_Enabler_Func");
    TriggerAddEventTimeElapsed(lib22142002_gt_DialogPanels_Enabler, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DP_Click
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DP_Click_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dP_TriggeringDialogItem = EventDialogControl();
    if ((lib22142002_gf_DP_DialogisDPDialog(lib22142002_gv_dP_TriggeringDialogItem) == true)) {
        lib22142002_gv_dP_IntDEITY = EventPlayer();
        lib22142002_gv_dP_IntTPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(lib22142002_gv_dP_IntDEITY, 6), 1));
        if ((lib22142002_gf_DP_DialogUsedActions() == true)) {
            return true;
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DP_Click_Init () {
    lib22142002_gt_DP_Click = TriggerCreate("lib22142002_gt_DP_Click_Func");
    TriggerEnable(lib22142002_gt_DP_Click, false);
    TriggerAddEventDialogControl(lib22142002_gt_DP_Click, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DP_Open Panels
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DP_OpenPanels_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_PlayerDEITY;
    int lv_local_PlayerTarget;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_local_PlayerDEITY = EventPlayer();
    lv_local_PlayerTarget = UnitGetOwner(EventUnit());

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dP_IntDEITY = EventPlayer();
    lib22142002_gv_dP_IntTPlayer = UnitGetOwner(EventUnit());
    lib22142002_gf_DP_HideAllDialogs();
    DialogSetVisible(lib22142002_gv_dP_DialogRace, PlayerGroupSingle(lv_local_PlayerDEITY), true);
    lib22142002_gf_DP_OpenPanelManagerPanel(lv_local_PlayerTarget, lv_local_PlayerDEITY);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DP_OpenPanels_Init () {
    lib22142002_gt_DP_OpenPanels = TriggerCreate("lib22142002_gt_DP_OpenPanels_Func");
    TriggerEnable(lib22142002_gt_DP_OpenPanels, false);
    TriggerAddEventUnitAbility(lib22142002_gt_DP_OpenPanels, null, AbilityCommand("StructureTechnologyPanel", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_DP_OpenPanels, null, AbilityCommand("UnitTechnologyPanel", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib22142002_gt_DP_OpenPanels, null, AbilityCommand("UpgradesPanel", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DP_Close Panels
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DP_ClosePanels_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dP_IntDEITY = EventPlayer();
    lib22142002_gv_dP_IntTPlayer = UnitGetOwner(EventUnit());
    DialogSetVisible(lib22142002_gv_dP_DialogRace, PlayerGroupSingle(EventPlayer()), false);
    lib22142002_gf_DP_HideAllDialogs();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DP_ClosePanels_Init () {
    lib22142002_gt_DP_ClosePanels = TriggerCreate("lib22142002_gt_DP_ClosePanels_Func");
    TriggerEnable(lib22142002_gt_DP_ClosePanels, false);
    TriggerAddEventUnitAbility(lib22142002_gt_DP_ClosePanels, null, AbilityCommand("UnitClosePanel", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DP_Auto_Races (OwnerChange)
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_DP_Auto_RacesOwnerChange_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dP_IntDEITY = EventPlayer();
    lib22142002_gv_dP_IntTPlayer = UnitGetOwner(UnitGroupUnit(UnitControlGroup(lib22142002_gv_dP_IntDEITY, 6), 1));
    lib22142002_gv_dP_IntRace = lib22142002_gv_dP_CurrentRace[EventPlayer()];
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_DP_Auto_RacesOwnerChange_Init () {
    lib22142002_gt_DP_Auto_RacesOwnerChange = TriggerCreate("lib22142002_gt_DP_Auto_RacesOwnerChange_Func");
    TriggerEnable(lib22142002_gt_DP_Auto_RacesOwnerChange, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: US_AutoUpdating
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_US_AutoUpdating_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoC0B50B3D_ae = 576;
    int autoC0B50B3D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    lib22142002_gv_dP_IntTPlayer = EventPlayer();
    autoC0B50B3D_var = 1;
    for ( ; autoC0B50B3D_var <= autoC0B50B3D_ae; autoC0B50B3D_var += 1 ) {
        if ((lib22142002_gv_uS_UpgradeLink[autoC0B50B3D_var] == EventUpgradeName())) {
            lib22142002_gv_uS_IntUpp = autoC0B50B3D_var;
            if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == true)) {
                lib22142002_gf_US_UpgradesOff();
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 0) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == false)) {
                lib22142002_gf_US_Auto_UpgradesOn();
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 1)) {
                lib22142002_gf_US_UpgradeLvlShowNext();
                lib22142002_gf_US_Auto_UpgradesOn();
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 2)) {
                lib22142002_gf_US_UpgradeLvlShowNext();
                lib22142002_gf_US_Auto_UpgradesOn();
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == false)) {
                lib22142002_gf_US_Auto_UpgradesOn();
            }
            else if ((lib22142002_gv_uS_UpgradeLevel[lib22142002_gv_uS_IntUpp] == 3) && (lib22142002_gv_uS_UpgradeFlag[lib22142002_gv_uS_IntUpp][lib22142002_gv_dP_IntTPlayer] == true)) {
                lib22142002_gf_US_UpgradeLvlShowNext();
                lib22142002_gf_US_UpgradeLvlReset();
            }
            break;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_US_AutoUpdating_Init () {
    lib22142002_gt_US_AutoUpdating = TriggerCreate("lib22142002_gt_US_AutoUpdating_Func");
    TriggerEnable(lib22142002_gt_US_AutoUpdating, false);
    TriggerAddEventUpgradeLevelChanged(lib22142002_gt_US_AutoUpdating, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: US_Hide Upgrade Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_US_HideUpgradeDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_Player;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int auto506D0034_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int auto506D0034_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_uS_DialogsCreated == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_local_Race = 1;
    for ( ; ( (auto506D0034_ai >= 0 && lv_local_Race <= auto506D0034_ae) || (auto506D0034_ai < 0 && lv_local_Race >= auto506D0034_ae) ) ; lv_local_Race += auto506D0034_ai ) {
        DialogSetVisible(lib22142002_gv_uS_DialogUpps[lv_local_Race], PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_US_HideUpgradeDialogs_Init () {
    lib22142002_gt_US_HideUpgradeDialogs = TriggerCreate("lib22142002_gt_US_HideUpgradeDialogs_Func");
    TriggerEnable(lib22142002_gt_US_HideUpgradeDialogs, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: US_Create Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_US_CreateDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int auto306D40C0_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int auto306D40C0_ai = 1;
    const int auto0B9CDBFD_ae = 15;
    int auto0B9CDBFD_var;

    // Variable Initialization
    lv_y = lib22142002_gv_dP_XYOffset;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_y += lib22142002_gv_dP_YDialogsOffset;
    lib22142002_gv_uS_IntUpp = 0;
    lv_local_Race = 1;
    for ( ; ( (auto306D40C0_ai >= 0 && lv_local_Race <= auto306D40C0_ae) || (auto306D40C0_ai < 0 && lv_local_Race >= auto306D40C0_ae) ) ; lv_local_Race += auto306D40C0_ai ) {
        DialogCreate((58 + (lib22142002_gv_dP_ButtonPerRowFix * lib22142002_gv_dP_ButtonWidth)), (58 + (lib22142002_gf_US_PageColumnAmount(lv_local_Race) * lib22142002_gv_dP_ButtonWidth)), c_anchorTopLeft, lv_x, lv_y, true);
        lib22142002_gv_uS_DialogUpps[lv_local_Race] = DialogLastCreated();
        lib22142002_gf_US_Createbuttonsforresearch(lv_local_Race);
    }
    auto0B9CDBFD_var = 0;
    for ( ; auto0B9CDBFD_var <= auto0B9CDBFD_ae; auto0B9CDBFD_var += 1 ) {
        lib22142002_gv_dP_CurrentRace[auto0B9CDBFD_var] = 1;
    }
    lib22142002_gv_init_FastLoading = true;
    lib22142002_gv_uS_DialogsCreated = true;
    lib22142002_gv_init_PanelsCreated = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_US_CreateDialogs_Init () {
    lib22142002_gt_US_CreateDialogs = TriggerCreate("lib22142002_gt_US_CreateDialogs_Func");
    TriggerEnable(lib22142002_gt_US_CreateDialogs, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TTUS_Hide TechTreeUnit Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_TTUS_HideTechTreeUnitDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_Player;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int autoE53DF536_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int autoE53DF536_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_tTUS_DialogsCreated == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_local_Race = 1;
    for ( ; ( (autoE53DF536_ai >= 0 && lv_local_Race <= autoE53DF536_ae) || (autoE53DF536_ai < 0 && lv_local_Race >= autoE53DF536_ae) ) ; lv_local_Race += autoE53DF536_ai ) {
        DialogSetVisible(lib22142002_gv_tTUS_DialogTechUnits[lv_local_Race], PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_TTUS_HideTechTreeUnitDialogs_Init () {
    lib22142002_gt_TTUS_HideTechTreeUnitDialogs = TriggerCreate("lib22142002_gt_TTUS_HideTechTreeUnitDialogs_Func");
    TriggerEnable(lib22142002_gt_TTUS_HideTechTreeUnitDialogs, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fenix Unit Disabler
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_FenixUnitDisabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD123470A_g;
    int autoD123470A_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD123470A_g = PlayerGroupAll();
    autoD123470A_var = -1;
    while (true) {
        autoD123470A_var = PlayerGroupNextPlayer(autoD123470A_g, autoD123470A_var);
        if (autoD123470A_var < 0) { break; }
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("GatewayTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("GatewayTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("GatewayTrain", 22), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("WarpGateTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("WarpGateTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("WarpGateTrain002", 2), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KhalaiGatewayTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KhalaiGatewayTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KhalaiGatewayTrain", 22), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("ArtanisWarpGateTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("ArtanisWarpGateTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("ArtanisWarpGateTrain002", 2), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunGatewayTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunGatewayTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunGatewayTrain", 22), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunWarpGateTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunWarpGateTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("VorazunWarpGateTrain002", 2), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxGatewayTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxGatewayTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxGatewayTrain", 22), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxWarpGateTrain", 15), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxWarpGateTrain", 14), false);
        TechTreeAbilityAllow(autoD123470A_var, AbilityCommand("KaraxWarpGateTrain002", 2), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_FenixUnitDisabler_Init () {
    lib22142002_gt_FenixUnitDisabler = TriggerCreate("lib22142002_gt_FenixUnitDisabler_Func");
    TriggerAddEventMapInit(lib22142002_gt_FenixUnitDisabler);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TTUS_Create Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_TTUS_CreateDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int autoE5A5F954_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int autoE5A5F954_ai = 1;
    const int auto244553CB_ae = 15;
    int auto244553CB_var;

    // Variable Initialization
    lv_y = lib22142002_gv_dP_XYOffset;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_y += lib22142002_gv_dP_YDialogsOffset;
    lib22142002_gv_tTUS_IntTechTreeU = 0;
    lv_local_Race = 1;
    for ( ; ( (autoE5A5F954_ai >= 0 && lv_local_Race <= autoE5A5F954_ae) || (autoE5A5F954_ai < 0 && lv_local_Race >= autoE5A5F954_ae) ) ; lv_local_Race += autoE5A5F954_ai ) {
        DialogCreate((58 + (lib22142002_gv_dP_ButtonPerRowFix * lib22142002_gv_dP_ButtonWidth)), (58 + (lib22142002_gf_TTUS_PageColumnAmount(lv_local_Race) * lib22142002_gv_dP_ButtonWidth)), c_anchorTopLeft, lv_x, lv_y, true);
        lib22142002_gv_tTUS_DialogTechUnits[lv_local_Race] = DialogLastCreated();
        lib22142002_gf_TTUS_Createbuttonsfortechtree(lv_local_Race);
    }
    auto244553CB_var = 0;
    for ( ; auto244553CB_var <= auto244553CB_ae; auto244553CB_var += 1 ) {
        lib22142002_gv_dP_CurrentRace[auto244553CB_var] = 1;
    }
    lib22142002_gf_US_Database();
    Wait(0.75, c_timeGame);
    lib22142002_gv_tTUS_DialogsCreated = true;
    TriggerExecute(lib22142002_gt_US_CreateDialogs, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_TTUS_CreateDialogs_Init () {
    lib22142002_gt_TTUS_CreateDialogs = TriggerCreate("lib22142002_gt_TTUS_CreateDialogs_Func");
    TriggerEnable(lib22142002_gt_TTUS_CreateDialogs, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TTSS_Hide TechTreeStructure Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_TTSS_HideTechTreeStructureDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_local_Player;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int auto1AB662E6_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int auto1AB662E6_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib22142002_gv_tTSS_DialogsCreated == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_local_Race = 1;
    for ( ; ( (auto1AB662E6_ai >= 0 && lv_local_Race <= auto1AB662E6_ae) || (auto1AB662E6_ai < 0 && lv_local_Race >= auto1AB662E6_ae) ) ; lv_local_Race += auto1AB662E6_ai ) {
        DialogSetVisible(lib22142002_gv_tTSS_DialogTechStructures[lv_local_Race], PlayerGroupSingle(lib22142002_gv_dP_IntDEITY), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_TTSS_HideTechTreeStructureDialogs_Init () {
    lib22142002_gt_TTSS_HideTechTreeStructureDialogs = TriggerCreate("lib22142002_gt_TTSS_HideTechTreeStructureDialogs_Func");
    TriggerEnable(lib22142002_gt_TTSS_HideTechTreeStructureDialogs, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TTSS_Create Dialogs
//--------------------------------------------------------------------------------------------------
bool lib22142002_gt_TTSS_CreateDialogs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_x;
    int lv_y;
    int lv_local_Race;

    // Automatic Variable Declarations
    const int auto77EAD3E6_ae = lib22142002_gv_dP_RaceButtonsAmount;
    const int auto77EAD3E6_ai = 1;
    const int auto20E63625_ae = 15;
    int auto20E63625_var;

    // Variable Initialization
    lv_y = lib22142002_gv_dP_XYOffset;

    // Actions
    if (!runActions) {
        return true;
    }

    lv_y += lib22142002_gv_dP_YDialogsOffset;
    lib22142002_gv_tTSS_IntTechTreeS = 0;
    lv_local_Race = 1;
    for ( ; ( (auto77EAD3E6_ai >= 0 && lv_local_Race <= auto77EAD3E6_ae) || (auto77EAD3E6_ai < 0 && lv_local_Race >= auto77EAD3E6_ae) ) ; lv_local_Race += auto77EAD3E6_ai ) {
        DialogCreate((58 + (lib22142002_gv_dP_ButtonPerRowFix * lib22142002_gv_dP_ButtonWidth)), (58 + (lib22142002_gf_TTSS_PageColumnAmount(lv_local_Race) * lib22142002_gv_dP_ButtonWidth)), c_anchorTopLeft, lv_x, lv_y, true);
        lib22142002_gv_tTSS_DialogTechStructures[lv_local_Race] = DialogLastCreated();
        lib22142002_gf_TTSS_CreatebuttonsfortechtreeS(lv_local_Race);
    }
    auto20E63625_var = 0;
    for ( ; auto20E63625_var <= auto20E63625_ae; auto20E63625_var += 1 ) {
        lib22142002_gv_dP_CurrentRace[auto20E63625_var] = 1;
    }
    lib22142002_gf_TTUS_Database();
    TriggerExecute(lib22142002_gt_TTUS_CreateDialogs, true, false);
    lib22142002_gv_tTSS_DialogsCreated = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib22142002_gt_TTSS_CreateDialogs_Init () {
    lib22142002_gt_TTSS_CreateDialogs = TriggerCreate("lib22142002_gt_TTSS_CreateDialogs_Func");
    TriggerEnable(lib22142002_gt_TTSS_CreateDialogs, false);
}

void lib22142002_InitTriggers () {
    lib22142002_gt_Initialization_Init();
    lib22142002_gt_PlayerN_Init_Init();
    lib22142002_gt_PlayerN_DialogUsed_Init();
    lib22142002_gt_Init_InitiateDEITY_Init();
    lib22142002_gt_Init_ApproveDEITYPlayers_Init();
    lib22142002_gt_CMV_Setup_Init();
    lib22142002_gt_CMV_Update_Init();
    lib22142002_gt_CMV_Destroy_Init();
    lib22142002_gt_MRB_Setup_Init();
    lib22142002_gt_MRB_Select_Init();
    lib22142002_gt_MRB_Deselect_Init();
    lib22142002_gt_MRB_Update_P0_Init();
    lib22142002_gt_MRB_Update_P1_Init();
    lib22142002_gt_MRB_Update_P2_Init();
    lib22142002_gt_MRB_Update_P3_Init();
    lib22142002_gt_MRB_Update_P4_Init();
    lib22142002_gt_MRB_Update_P5_Init();
    lib22142002_gt_MRB_Update_P6_Init();
    lib22142002_gt_MRB_Update_P7_Init();
    lib22142002_gt_MRB_Update_P8_Init();
    lib22142002_gt_MRB_Update_P9_Init();
    lib22142002_gt_MRB_Update_P10_Init();
    lib22142002_gt_MRB_Update_P11_Init();
    lib22142002_gt_MRB_Update_P12_Init();
    lib22142002_gt_MRB_Update_P13_Init();
    lib22142002_gt_MRB_Update_P14_Init();
    lib22142002_gt_MRB_Update_P15_Init();
    lib22142002_gt_Commands_Enabler_Init();
    lib22142002_gt_DEITY_CreateTipsCommands_Init();
    lib22142002_gt_CPTT_Created_Init();
    lib22142002_gt_CPTT_Trained_Init();
    lib22142002_gt_CPTT_Revived_Init();
    lib22142002_gt_CPTT_OwnerChanged_Init();
    lib22142002_gt_C_KC_NumberChangeOwner_Init();
    lib22142002_gt_C_KC_FullLifei_Init();
    lib22142002_gt_C_KC_LifeRegenCtrli_Init();
    lib22142002_gt_C_KC_LifeRegenShfti_Init();
    lib22142002_gt_C_KC_MaxLifeAltCtrli_Init();
    lib22142002_gt_C_KC_MaxLifeAltShfti_Init();
    lib22142002_gt_C_KC_FullShieldo_Init();
    lib22142002_gt_C_KC_ShieldRegenCtrlo_Init();
    lib22142002_gt_C_KC_ShieldRegenShfto_Init();
    lib22142002_gt_C_KC_MaxShieldAltCtrlo_Init();
    lib22142002_gt_C_KC_MaxShieldAltShfto_Init();
    lib22142002_gt_C_KC_FullEnergyp_Init();
    lib22142002_gt_C_KC_EnergyRegenCtrlp_Init();
    lib22142002_gt_C_KC_EnergyRegenShftp_Init();
    lib22142002_gt_C_KC_MaxEnergyAltCtrlp_Init();
    lib22142002_gt_C_KC_MaxEnergyAltShftp_Init();
    lib22142002_gt_C_KC_OffCooldownu_Init();
    lib22142002_gt_C_KC_SupplyUseOFFCtrlShftk_Init();
    lib22142002_gt_C_KC_SupplyUseONShftk_Init();
    lib22142002_gt_C_KC_ActorSizeCtrlj_Init();
    lib22142002_gt_C_KC_ActorSizeShftj_Init();
    lib22142002_gt_C_KC_Cloak_Init();
    lib22142002_gt_C_KC_DeCloakCtrl_Init();
    lib22142002_gt_C_KC_DetectionON_Init();
    lib22142002_gt_C_KC_DetectionOFFCtrl_Init();
    lib22142002_gt_C_KC_DuplicateGametime_Init();
    lib22142002_gt_C_KC_ChronoboostCtrl_Init();
    lib22142002_gt_C_KC_SuperChronoboostCtrlShft_Init();
    lib22142002_gt_C_KC_TerrazineShadowAltCtrl_Init();
    lib22142002_gt_C_KC_FreezeGametime_Init();
    lib22142002_gt_C_KC_UnfreezeCtrl_Init();
    lib22142002_gt_C_KC_ShareVisionHome_Init();
    lib22142002_gt_C_KC_UnshareVisionEnd_Init();
    lib22142002_gt_C_KC_DeleteDel_Init();
    lib22142002_gt_C_KC_DeleteHalfAltDel_Init();
    lib22142002_gt_C_KC_InstaTeleportCtrlt_Init();
    lib22142002_gt_C_KC_Ally0ShftPageDown_Init();
    lib22142002_gt_C_SC_OneCommandTriggertoRuleThemAll_Init();
    lib22142002_gt_C_SC_TimeWIP_Init();
    lib22142002_gt_C_SCW_AutomaticDays_Init();
    lib22142002_gt_C_SCW_Daytime_Init();
    lib22142002_gt_C_SCW_Nighttime_Init();
    lib22142002_gt_C_SC_WeatherWIP_Init();
    lib22142002_gt_C_SCW_SunburnONOFF_Init();
    lib22142002_gt_C_SCW_HyperSunburnONOFF_Init();
    lib22142002_gt_C_SCW_ColdnightONOFF_Init();
    lib22142002_gt_C_SCW_HypercoldnightONOFF_Init();
    lib22142002_gt_C_SCW_HazardoussunONOFF_Init();
    lib22142002_gt_C_SCW_DarknightONOFF_Init();
    lib22142002_gt_C_SCW_DarkwindONOFF_Init();
    lib22142002_gt_C_SCW_DarkfogONOFF_Init();
    lib22142002_gt_C_SCW_CorruptedDayONOFF_Init();
    lib22142002_gt_C_SCW_CorruptedNightONOFF_Init();
    lib22142002_gt_WIP_Init();
    lib22142002_gt_RCZ_Init();
    lib22142002_gt_UntitledTrigger001_Init();
    lib22142002_gt_DEITYMaintance_Init();
    lib22142002_gt_DM_ControlGroups_Init();
    lib22142002_gt_DM_VisionApply_Init();
    lib22142002_gt_DM_StatusApply_Init();
    lib22142002_gt_GE_Enabler_Init();
    lib22142002_gt_Mods_NexusSpawn_Init();
    lib22142002_gt_Mods_KillerSpawn_Init();
    lib22142002_gt_Mods_KillerSpawn2_Init();
    lib22142002_gt_Mods_TwinUnits_Init();
    lib22142002_gt_Mods_HauntingDead_Init();
    lib22142002_gt_Mods_AlienIncubation_Init();
    lib22142002_gt_Mods_KillDuplicate_Init();
    lib22142002_gt_DN_Effects_Init();
    lib22142002_gt_RespawnAHeroAB_Init();
    lib22142002_gt_RespawnableUnitDies_Init();
    lib22142002_gt_CommandPostTakeover_Init();
    lib22142002_gt_CommandPostSpawnUnitsSimple_Init();
    lib22142002_gt_CommandPostSpawnUnitsSpecial_Init();
    lib22142002_gt_SE_AddSkill_Init();
    lib22142002_gt_SE_MorphkeepSkillSpot_Init();
    lib22142002_gt_SE_Ability_RemoveAllabilities_Init();
    lib22142002_gt_GE_SacrificeTarget_Init();
    lib22142002_gt_UC_UpgradeAttackDamage_Init();
    lib22142002_gt_UC_UpgradeAttackRange_Init();
    lib22142002_gt_UC_UpgradeAttackSpeed_Init();
    lib22142002_gt_UC_UpgradeEnergyMax_Init();
    lib22142002_gt_UC_UpgradeEnergyRegen_Init();
    lib22142002_gt_UC_UpgradeLifeArmor_Init();
    lib22142002_gt_UC_UpgradeLifeMax_Init();
    lib22142002_gt_UC_UpgradeLifeRegen_Init();
    lib22142002_gt_UC_UpgradeShieldArmor_Init();
    lib22142002_gt_UC_UpgradeShieldMax_Init();
    lib22142002_gt_UC_UpgradeShieldRegen_Init();
    lib22142002_gt_UC_UpgradeSightRange_Init();
    lib22142002_gt_UC_UpgradeSpellDamage_Init();
    lib22142002_gt_UC_UpgradeMovementSpeed_Init();
    lib22142002_gt_UC_UpgradeCooldownReduction_Init();
    lib22142002_gt_Contr_PlayerGivesControl_Init();
    lib22142002_gt_GE_CameraFollowUnitDeath_Init();
    lib22142002_gt_Bounty_Reward_Init();
    lib22142002_gt_Bounty_Dialogs_Initate_Init();
    lib22142002_gt_Bounty_Dialogs_Update_Init();
    lib22142002_gt_Bounty_Dialogs_Pressed_Init();
    lib22142002_gt_CUT_Death_Init();
    lib22142002_gt_CUT_TheBehavior_Init();
    lib22142002_gt_TXTTip_Death_Init();
    lib22142002_gt_CCS_ButtonReactions_Init();
    lib22142002_gt_CCS_CustomizeDialogCreation_Init();
    lib22142002_gt_CCS_PlayerColors_Init();
    lib22142002_gt_CCS_SliderReactions_Init();
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYCreated_Init();
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYTrained_Init();
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYRevived_Init();
    lib22142002_gt_CCS_Player_DYNAMICCOLORAPPLYOwnerChanged_Init();
    lib22142002_gt_PE_Enabler_Init();
    lib22142002_gt_HostileMove_Init();
    lib22142002_gt_catalog_Init();
    lib22142002_gt_cataloghelp_Init();
    lib22142002_gt_Consequences_MortalWounds_Init();
    lib22142002_gt_Consequences_MechanicalDrawbacks_Init();
    lib22142002_gt_Consequences_CombatTrauma_Init();
    lib22142002_gt_mapexploredunexplored_Init();
    lib22142002_gt_freeze_Init();
    lib22142002_gt_weapon_Init();
    lib22142002_gt_DialogPanels_Enabler_Init();
    lib22142002_gt_DP_Click_Init();
    lib22142002_gt_DP_OpenPanels_Init();
    lib22142002_gt_DP_ClosePanels_Init();
    lib22142002_gt_DP_Auto_RacesOwnerChange_Init();
    lib22142002_gt_US_AutoUpdating_Init();
    lib22142002_gt_US_HideUpgradeDialogs_Init();
    lib22142002_gt_US_CreateDialogs_Init();
    lib22142002_gt_TTUS_HideTechTreeUnitDialogs_Init();
    lib22142002_gt_FenixUnitDisabler_Init();
    lib22142002_gt_TTUS_CreateDialogs_Init();
    lib22142002_gt_TTSS_HideTechTreeStructureDialogs_Init();
    lib22142002_gt_TTSS_CreateDialogs_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib22142002_InitLib_completed = false;

void lib22142002_InitLib () {
    if (lib22142002_InitLib_completed) {
        return;
    }

    lib22142002_InitLib_completed = true;

    lib22142002_InitLibraries();
    lib22142002_InitVariables();
    lib22142002_InitTriggers();
}

