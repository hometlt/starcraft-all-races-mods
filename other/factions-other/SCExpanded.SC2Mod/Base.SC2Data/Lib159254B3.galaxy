include "TriggerLibs/NativeLib"

include "Lib159254B3_h"

//--------------------------------------------------------------------------------------------------
// Library: AI Mechanics
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib159254B3_InitLibraries () {
    libNtve_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Train - Brutalisk
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainBrutalisk_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "UltraliskCavern"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "BroodZagara", c_techCountCompleteOnly) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Brutalisk", libNtve_gf_DifficultyValueInt(1, 2, 3, 4));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainBrutalisk_Init () {
    lib159254B3_gt_TrainBrutalisk = TriggerCreate("lib159254B3_gt_TrainBrutalisk_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainBrutalisk, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Hybrid
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainHybrid_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "UltraliskCavern"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "BroodHybrid", c_techCountCompleteOnly) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Hybrid", libNtve_gf_DifficultyValueInt(1, 2, 3, 4));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainHybrid_Init () {
    lib159254B3_gt_TrainHybrid = TriggerCreate("lib159254B3_gt_TrainHybrid_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainHybrid, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Zagara
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainZagara_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "SpawningPool"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "BroodZagara", c_techCountCompleteOnly) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "ZaGara", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainZagara_Init () {
    lib159254B3_gt_TrainZagara = TriggerCreate("lib159254B3_gt_TrainZagara_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainZagara, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade - Hybrid Physiology
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_UpgradeHybridPhysiology_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "DarkProtoss", c_techCountCompleteOnly) > 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) == "TwilightCouncil"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "HybridPhysiology");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_UpgradeHybridPhysiology_Init () {
    lib159254B3_gt_UpgradeHybridPhysiology = TriggerCreate("lib159254B3_gt_UpgradeHybridPhysiology_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_UpgradeHybridPhysiology, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade - Khaydarin Amulet
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_UpgradeKhaydarinAmulet_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "TribeKhalai", c_techCountCompleteOnly) > 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) == "TemplarArchive"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "HighTemplarKhaydarinAmulet");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_UpgradeKhaydarinAmulet_Init () {
    lib159254B3_gt_UpgradeKhaydarinAmulet = TriggerCreate("lib159254B3_gt_UpgradeKhaydarinAmulet_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_UpgradeKhaydarinAmulet, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Protoss Hybrid
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainProtossHybrid_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "TemplarArchive"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "DarkProtoss", c_techCountCompleteOnly) > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Maar", libNtve_gf_DifficultyValueInt(1, 2, 4, 6));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainProtossHybrid_Init () {
    lib159254B3_gt_TrainProtossHybrid = TriggerCreate("lib159254B3_gt_TrainProtossHybrid_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainProtossHybrid, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Dragoon
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainDragoon_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((((TechTreeUnitCount(UnitGetOwner(EventUnit()), "CyberneticsCore", c_techCountCompleteOnly) >= 1) && (UnitGetType(EventUnitCreatedUnit()) == "Gateway")) || ((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "TribeKhalai", c_techCountCompleteOnly) > 0) && (UnitGetType(EventUnitCreatedUnit()) == "CyberneticsCore"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Dragoon", libNtve_gf_DifficultyValueInt(4, 8, 12, 16));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainDragoon_Init () {
    lib159254B3_gt_TrainDragoon = TriggerCreate("lib159254B3_gt_TrainDragoon_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainDragoon, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Build - Psi Disrupter
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_BuildPsiDisrupter_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "EngineeringBay"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinMoebius", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AIBuild(UnitGetOwner(EventUnit()), 0, -1, "PsiDisruptor", 1, -1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_BuildPsiDisrupter_Init () {
    lib159254B3_gt_BuildPsiDisrupter = TriggerCreate("lib159254B3_gt_BuildPsiDisrupter_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_BuildPsiDisrupter, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Laserdrill Tank
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainLaserdrillTank_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "Armory"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinKelMorian", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "LaserdrillTank", libNtve_gf_DifficultyValueInt(0, 1, 2, 4));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainLaserdrillTank_Init () {
    lib159254B3_gt_TrainLaserdrillTank = TriggerCreate("lib159254B3_gt_TrainLaserdrillTank_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainLaserdrillTank, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Cerberus
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainCerberus_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "FusionCore"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinKelMorian", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "SJPirateCapitalShip", libNtve_gf_DifficultyValueInt(1, 2, 4, 6));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainCerberus_Init () {
    lib159254B3_gt_TrainCerberus = TriggerCreate("lib159254B3_gt_TrainCerberus_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainCerberus, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Warhound
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainWarhound_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "Armory"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinDominion", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "WarHound", libNtve_gf_DifficultyValueInt(1, 2, 4, 6));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainWarhound_Init () {
    lib159254B3_gt_TrainWarhound = TriggerCreate("lib159254B3_gt_TrainWarhound_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainWarhound, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Medic
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainMedic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "GhostAcademy"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinRaynorsRaiders", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Medic", libNtve_gf_DifficultyValueInt(2, 4, 6, 8));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainMedic_Init () {
    lib159254B3_gt_TrainMedic = TriggerCreate("lib159254B3_gt_TrainMedic_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainMedic, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Train - Diamondback
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_TrainDiamondback_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "Armory"))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinMoebius", c_techCountCompleteOnly) >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, "Diamondback", libNtve_gf_DifficultyValueInt(1, 2, 4, 6));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_TrainDiamondback_Init () {
    lib159254B3_gt_TrainDiamondback = TriggerCreate("lib159254B3_gt_TrainDiamondback_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_TrainDiamondback, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade - Kel-Morian
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_UpgradeKelMorian_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((TechTreeUpgradeCount(UnitGetOwner(EventUnitCreatedUnit()), "JoinKelMorian", c_techCountCompleteOnly) > 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) == "EngineeringBay"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "MicroFiltering");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_UpgradeKelMorian_Init () {
    lib159254B3_gt_UpgradeKelMorian = TriggerCreate("lib159254B3_gt_UpgradeKelMorian_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_UpgradeKelMorian, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Replace unit
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_Replaceunit_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitBehaviorEnabled(EventUnit(), "AIToken") == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AITrain(UnitGetOwner(EventUnit()), 0, -1, UnitGetType(EventUnit()), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_Replaceunit_Init () {
    lib159254B3_gt_Replaceunit = TriggerCreate("lib159254B3_gt_Replaceunit_Func");
    TriggerAddEventUnitDied(lib159254B3_gt_Replaceunit, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI Choices
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_AIChoices_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((UnitGetType(EventUnitCreatedUnit()) == "Pylon") && ((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 50)))) {
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "DarkProtoss");
    }
    else {
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "TribeKhalai");
    }
    if ((UnitGetType(EventUnitCreatedUnit()) == "SpawningPool")) {
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "Baneling");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectTransfusion");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectGlialReconstitution");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectGoovedSpines");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectChitinousPlating");
        if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 90))) {
            if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 80))) {
                AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "BroodHybrid");
            }
            else {
                AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "BroodZagara");
            }
        }
        else {
        }
    }
    else {
    }
    if ((UnitGetType(EventUnitCreatedUnit()) == "SupplyDepot")) {
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "Marauder");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectCombatShield");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "Hellion");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectNeosteelFrame");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "Thor");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "ScienceVessel2");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectCloak");
        AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "SelectYamato");
        if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 50))) {
            if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 50))) {
                if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 50))) {
                    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "JoinDominion");
                }
                else {
                    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "JoinKelMorian");
                }
            }
            else {
                if (((RandomInt(0, 100) >= 0) && (RandomInt(0, 100) <= 50))) {
                    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "JoinMoebius");
                }
                else {
                    AIResearch(UnitGetOwner(EventUnitCreatedUnit()), 0, -1, "JoinRaynorsRaiders");
                }
            }
        }
        else {
        }
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_AIChoices_Init () {
    lib159254B3_gt_AIChoices = TriggerCreate("lib159254B3_gt_AIChoices_Func");
    TriggerAddEventUnitCreated(lib159254B3_gt_AIChoices, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Extension selection
//--------------------------------------------------------------------------------------------------
bool lib159254B3_gt_Extensionselection_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameAttributeGameValue("1") == "0002")) {
        TechTreeUpgradeAddLevel(0, "BigGameHunters", 1);
    }
    else {
    }
    if ((GameAttributeGameValue("1") == "0003")) {
        TechTreeUpgradeAddLevel(0, "WanderingMinerals", 1);
    }
    else {
    }
    if ((GameAttributeGameValue("1") == "0004")) {
        TechTreeUpgradeAddLevel(1, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(2, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(3, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(4, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(5, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(6, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(7, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(8, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(9, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(10, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(11, "ContentUnlocker", 1);
        TechTreeUpgradeAddLevel(12, "ContentUnlocker", 1);
    }
    else {
    }
    if ((GameAttributeGameValue("2") == "0002")) {
        TechTreeUpgradeAddLevel(1, "HeroMode", 1);
        TechTreeUpgradeAddLevel(2, "HeroMode", 1);
        TechTreeUpgradeAddLevel(3, "HeroMode", 1);
        TechTreeUpgradeAddLevel(4, "HeroMode", 1);
        TechTreeUpgradeAddLevel(5, "HeroMode", 1);
        TechTreeUpgradeAddLevel(6, "HeroMode", 1);
        TechTreeUpgradeAddLevel(7, "HeroMode", 1);
        TechTreeUpgradeAddLevel(8, "HeroMode", 1);
        TechTreeUpgradeAddLevel(9, "HeroMode", 1);
        TechTreeUpgradeAddLevel(10, "HeroMode", 1);
        TechTreeUpgradeAddLevel(11, "HeroMode", 1);
        TechTreeUpgradeAddLevel(12, "HeroMode", 1);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib159254B3_gt_Extensionselection_Init () {
    lib159254B3_gt_Extensionselection = TriggerCreate("lib159254B3_gt_Extensionselection_Func");
    TriggerAddEventMapInit(lib159254B3_gt_Extensionselection);
}

void lib159254B3_InitTriggers () {
    lib159254B3_gt_TrainBrutalisk_Init();
    lib159254B3_gt_TrainHybrid_Init();
    lib159254B3_gt_TrainZagara_Init();
    lib159254B3_gt_UpgradeHybridPhysiology_Init();
    lib159254B3_gt_UpgradeKhaydarinAmulet_Init();
    lib159254B3_gt_TrainProtossHybrid_Init();
    lib159254B3_gt_TrainDragoon_Init();
    lib159254B3_gt_BuildPsiDisrupter_Init();
    lib159254B3_gt_TrainLaserdrillTank_Init();
    lib159254B3_gt_TrainCerberus_Init();
    lib159254B3_gt_TrainWarhound_Init();
    lib159254B3_gt_TrainMedic_Init();
    lib159254B3_gt_TrainDiamondback_Init();
    lib159254B3_gt_UpgradeKelMorian_Init();
    lib159254B3_gt_Replaceunit_Init();
    lib159254B3_gt_AIChoices_Init();
    lib159254B3_gt_Extensionselection_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib159254B3_InitLib_completed = false;

void lib159254B3_InitLib () {
    if (lib159254B3_InitLib_completed) {
        return;
    }

    lib159254B3_InitLib_completed = true;

    lib159254B3_InitLibraries();
    lib159254B3_InitTriggers();
}

