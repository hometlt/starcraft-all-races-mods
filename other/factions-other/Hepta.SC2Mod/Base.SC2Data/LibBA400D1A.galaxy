include "TriggerLibs/NativeLib"
include "TriggerLibs/LibertyLib"

include "LibBA400D1A_h"

//--------------------------------------------------------------------------------------------------
// Library: HeptaCraft
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libBA400D1A_InitLibraries () {
    libNtve_InitVariables();
    libLbty_InitVariables();
}

// Variable Initialization
bool libBA400D1A_InitVariables_completed = false;

void libBA400D1A_InitVariables () {
    int init_i;

    if (libBA400D1A_InitVariables_completed) {
        return;
    }

    libBA400D1A_InitVariables_completed = true;

    libBA400D1A_gv_version = StringExternal("Param/Value/lib_BA400D1A_3013E3F7");
    libBA400D1A_gv_news = StringExternal("Param/Value/lib_BA400D1A_8CD37EBB");
    libBA400D1A_gv_countdown = 20;
    libBA400D1A_gv_notificationsBorder = StringExternal("Param/Value/lib_BA400D1A_13DFD428");
    libBA400D1A_gv_dayNightIcon = c_invalidDialogControlId;
    libBA400D1A_gv_dayNightLabel = c_invalidDialogControlId;
    libBA400D1A_gv_nighttimeTooltip = StringExternal("Param/Value/lib_BA400D1A_9A0C0671");
    libBA400D1A_gv_daytimeTooltip = StringExternal("Param/Value/lib_BA400D1A_381D409B");
    libBA400D1A_gv_dayNightDialogue = c_invalidDialogId;
    libBA400D1A_gv_daylightTimer = TimerCreate();
    libBA400D1A_gv_terrazineBonus = 1;
    libBA400D1A_gv_terrazineTimer = TimerCreate();
    libBA400D1A_gv_terrazineDelay = 20.0;
    libBA400D1A_gv_tutorialDelay = 23.0;
    libBA400D1A_gv_tutorialTimer = TimerCreate();
    libBA400D1A_gv_supplyAlert = 2;
    libBA400D1A_gv_army = UnitGroupEmpty();
    libBA400D1A_gv_workers = UnitGroupEmpty();
    libBA400D1A_gv_start1 = PointFromName("Start Location 001");
    libBA400D1A_gv_start2 = PointFromName("Start Location 002");
    libBA400D1A_gv_start3 = PointFromName("Start Location 003");
    libBA400D1A_gv_start4 = PointFromName("Start Location 004");
    libBA400D1A_gv_start5 = PointFromName("Start Location 005");
    libBA400D1A_gv_start6 = PointFromName("Start Location 006");
    libBA400D1A_gv_start7 = PointFromName("Start Location 007");
    libBA400D1A_gv_start8 = PointFromName("Start Location 008");
    libBA400D1A_gv_startK1 = PointFromName("\\xec\\x8b\\x9c\\xec\\x9e\\x91\\x20\\xec\\x9e\\xa5\\xec\\x86\\x8c\\x20\\x30\\x30\\x31");
    libBA400D1A_gv_startK2 = PointFromName("\"\\xec\\x8b\\x9c\\xec\\x9e\\x91\\x20\\xec\\x9e\\xa5\\xec\\x86\\x8c\\x20\\x30\\x30\\x32\"");
    libBA400D1A_gv_titleOffset = 12;
    libBA400D1A_gv_infoTextOffset = 50;
    libBA400D1A_gv_dialogesOffsetYStart = 204;
    libBA400D1A_gv_dialogesOffsetBetween = 4;
    libBA400D1A_gv_dialogesYtotal = 969;
    libBA400D1A_gv_dialogesYD1 = 630;
    libBA400D1A_gv_dialogesYD3 = 215;
    libBA400D1A_gv_dialogesYD4 = 12;
    libBA400D1A_gv_dialogeMiddleX = 742;
    libBA400D1A_gv_dialogeSideX = 460;
    libBA400D1A_gv_underlineX = 20;
    libBA400D1A_gv_underlineY = 56;
    libBA400D1A_gv_underlineYI = 44;
    libBA400D1A_gv_dialogeSideOffsetX = -605;
    libBA400D1A_gv_labelOffsetY = 69;
    libBA400D1A_gv_labelOffsetX = 30;
    libBA400D1A_gv_labelWidth = 400;
    libBA400D1A_gv_color_dominion = Color(100.00, 21.57, 21.57);
    libBA400D1A_gv_color_raiders = Color(27.06, 37.65, 100.00);
    libBA400D1A_gv_color_khala = Color(96.47, 100.00, 27.06);
    libBA400D1A_gv_color_nerazim = Color(60.78, 48.24, 76.86);
    libBA400D1A_gv_color_swarm = Color(87.45, 48.24, 9.02);
    libBA400D1A_gv_color_infested = Color(32.16, 54.12, 7.45);
    libBA400D1A_gv_color_covenant = Color(41.18, 76.86, 100.00);
    libBA400D1A_gv_color_heptacraft_headers = Color(48.24, 57.25, 66.27);
    libBA400D1A_gv_color_heptacraft_title = Color(34.51, 37.65, 41.18);
    libBA400D1A_gv_color_tutorial = Color(100.00, 100.00, 100.00);
    libBA400D1A_gv_color_info = libBA400D1A_gv_color_heptacraft_headers;
    libBA400D1A_gv_color_day = Color(100.00, 87.45, 0.00);
    libBA400D1A_gv_color_night = Color(48.24, 37.65, 87.45);
    libBA400D1A_gv_terrazineLabel = c_invalidDialogControlId;
    libBA400D1A_gv_ladderDialogue = c_invalidDialogId;
    libBA400D1A_gv_brood_mother_select_diag = c_invalidDialogId;
    libBA400D1A_gv_brood_mother_select_off_diag = c_invalidDialogId;
    libBA400D1A_gv_informationDialogue = c_invalidDialogId;
    libBA400D1A_gv_ladderSetDialogue = c_invalidDialogId;
    libBA400D1A_gv_ladderWaitingDialogue = c_invalidDialogId;
    libBA400D1A_gv_factionSelectionDialogue = c_invalidDialogId;
    libBA400D1A_gv_factionSelectionDialogueSet = c_invalidDialogId;
    libBA400D1A_gv_factionSelectionDialogueWarning = c_invalidDialogControlId;
    libBA400D1A_gv_factionSelectionDialogueCountdown = c_invalidDialogControlId;
    libBA400D1A_gv_notificationsFlash1 = c_invalidDialogControlId;
    libBA400D1A_gv_notificationsFlash2 = c_invalidDialogControlId;
    libBA400D1A_gv_titleDialogue = c_invalidDialogId;
    libBA400D1A_gv_background = c_invalidDialogId;
    libBA400D1A_gv_backgroundL = c_invalidDialogId;
    libBA400D1A_gv_backgroundR = c_invalidDialogId;
    libBA400D1A_gv_backgroundB = c_invalidDialogId;
    libBA400D1A_gv_tutorialDialogue = c_invalidDialogId;
    libBA400D1A_gv_aboutDialogue = c_invalidDialogId;
    libBA400D1A_gv_noMirrorDialogue = c_invalidDialogId;
    libBA400D1A_gv_versionDialogue = c_invalidDialogId;
    libBA400D1A_gv_betaDialogue = c_invalidDialogId;
    libBA400D1A_gv_brood_mother_select = c_invalidDialogControlId;
    libBA400D1A_gv_brood_mother_select_off = c_invalidDialogControlId;
    libBA400D1A_gv_label_countdown_timer = c_invalidDialogControlId;
    libBA400D1A_gv_button_ready = c_invalidDialogControlId;
    libBA400D1A_gv_button_selectqueens = c_invalidDialogControlId;
    libBA400D1A_gv_button_ladder_old = c_invalidDialogControlId;
    libBA400D1A_gv_check_TutorialGeneral = c_invalidDialogControlId;
    libBA400D1A_gv_check_TutorialContext = c_invalidDialogControlId;
    libBA400D1A_gv_button_ladder = c_invalidDialogControlId;
    libBA400D1A_gv_check_covenant = c_invalidDialogControlId;
    libBA400D1A_gv_check_infested = c_invalidDialogControlId;
    libBA400D1A_gv_check_swarm = c_invalidDialogControlId;
    libBA400D1A_gv_check_nerazim = c_invalidDialogControlId;
    libBA400D1A_gv_check_khala = c_invalidDialogControlId;
    libBA400D1A_gv_check_raiders = c_invalidDialogControlId;
    libBA400D1A_gv_check_dominion = c_invalidDialogControlId;
    libBA400D1A_gv_underline_cc = c_invalidDialogControlId;
    libBA400D1A_gv_underline_cc2 = c_invalidDialogControlId;
    libBA400D1A_gv_underline_cc3 = c_invalidDialogControlId;
    libBA400D1A_gv_underline_cc4 = c_invalidDialogControlId;
    libBA400D1A_gv_information_Text3Cov = StringExternal("Param/Value/lib_BA400D1A_71F00B5F");
    libBA400D1A_gv_information_Text2Cov = StringExternal("Param/Value/lib_BA400D1A_359907F1");
    libBA400D1A_gv_information_Text1Cov = StringExternal("Param/Value/lib_BA400D1A_D26A0675");
    libBA400D1A_gv_information_Text0Cov = StringExternal("Param/Value/lib_BA400D1A_D78B08A9");
    libBA400D1A_gv_information_HeaderCov = StringExternal("Param/Value/lib_BA400D1A_1C4867D3");
    libBA400D1A_gv_information_Text3Inf = StringExternal("Param/Value/lib_BA400D1A_A6FEAE75");
    libBA400D1A_gv_information_Text2Inf = StringExternal("Param/Value/lib_BA400D1A_4EF99DFF");
    libBA400D1A_gv_information_Text1Inf = StringExternal("Param/Value/lib_BA400D1A_23DBE58C");
    libBA400D1A_gv_information_Text0Inf = StringExternal("Param/Value/lib_BA400D1A_3EC2759B");
    libBA400D1A_gv_information_HeaderInf = StringExternal("Param/Value/lib_BA400D1A_2ADD472C");
    libBA400D1A_gv_information_Text3Swa = StringExternal("Param/Value/lib_BA400D1A_660AAB87");
    libBA400D1A_gv_information_Text2Swa = StringExternal("Param/Value/lib_BA400D1A_C21C3652");
    libBA400D1A_gv_information_Text1Swa = StringExternal("Param/Value/lib_BA400D1A_298275EE");
    libBA400D1A_gv_information_Text0Swa = StringExternal("Param/Value/lib_BA400D1A_E0E5BC4D");
    libBA400D1A_gv_information_HeaderSwa = StringExternal("Param/Value/lib_BA400D1A_804A57FC");
    libBA400D1A_gv_information_Text3Nzm = StringExternal("Param/Value/lib_BA400D1A_8DB8A89B");
    libBA400D1A_gv_information_Text2Nzm = StringExternal("Param/Value/lib_BA400D1A_029DAA9C");
    libBA400D1A_gv_information_Text1Nzm = StringExternal("Param/Value/lib_BA400D1A_FF7FABA0");
    libBA400D1A_gv_information_Text0Nzm = StringExternal("Param/Value/lib_BA400D1A_A9008D48");
    libBA400D1A_gv_information_HeaderNzm = StringExternal("Param/Value/lib_BA400D1A_050CE3AC");
    libBA400D1A_gv_information_Text3Kha = StringExternal("Param/Value/lib_BA400D1A_175D35D2");
    libBA400D1A_gv_information_Text2Kha = StringExternal("Param/Value/lib_BA400D1A_0E6E396A");
    libBA400D1A_gv_information_Text1Kha = StringExternal("Param/Value/lib_BA400D1A_2E539C32");
    libBA400D1A_gv_information_Text0Kha = StringExternal("Param/Value/lib_BA400D1A_9F8F9CB8");
    libBA400D1A_gv_information_HeaderKha = StringExternal("Param/Value/lib_BA400D1A_27CF2D70");
    libBA400D1A_gv_information_Text3Rai = StringExternal("Param/Value/lib_BA400D1A_7B6FE221");
    libBA400D1A_gv_information_Text2Rai = StringExternal("Param/Value/lib_BA400D1A_E42B1A0F");
    libBA400D1A_gv_information_Text1Rai = StringExternal("Param/Value/lib_BA400D1A_79D0972D");
    libBA400D1A_gv_information_Text0Rai = StringExternal("Param/Value/lib_BA400D1A_ED2DFAA8");
    libBA400D1A_gv_information_HeaderRaid = StringExternal("Param/Value/lib_BA400D1A_07EACCF2");
    libBA400D1A_gv_information_Text3Dom = StringExternal("Param/Value/lib_BA400D1A_103BB5AB");
    libBA400D1A_gv_information_Text2Dom = StringExternal("Param/Value/lib_BA400D1A_01F16CAF");
    libBA400D1A_gv_information_Text1Dom = StringExternal("Param/Value/lib_BA400D1A_0502A52D");
    libBA400D1A_gv_information_Text0Dom = StringExternal("Param/Value/lib_BA400D1A_DA3AA79C");
    libBA400D1A_gv_information_HeaderDom = StringExternal("Param/Value/lib_BA400D1A_BAC8E9FC");
    libBA400D1A_gv_information_Header3Fac = StringExternal("Param/Value/lib_BA400D1A_7B75B38F");
    libBA400D1A_gv_information_Header2Fac = StringExternal("Param/Value/lib_BA400D1A_7DB48AD6");
    libBA400D1A_gv_information_Header1Fac = StringExternal("Param/Value/lib_BA400D1A_9A34DEE6");
    libBA400D1A_gv_information_Text3Def = StringExternal("Param/Value/lib_BA400D1A_F360112B");
    libBA400D1A_gv_information_Text2Def = StringExternal("Param/Value/lib_BA400D1A_86601701");
    libBA400D1A_gv_information_Text1Def = StringExternal("Param/Value/lib_BA400D1A_5D6701AA");
    libBA400D1A_gv_information_Text0Def = StringExternal("Param/Value/lib_BA400D1A_335419F4");
    libBA400D1A_gv_information_Header3Def = StringExternal("Param/Value/lib_BA400D1A_FC10F1FF");
    libBA400D1A_gv_information_Header2Def = StringExternal("Param/Value/lib_BA400D1A_A4B4EA68");
    libBA400D1A_gv_information_Header1Def = StringExternal("Param/Value/lib_BA400D1A_B39B5D18");
    libBA400D1A_gv_information_Header = StringExternal("Param/Value/lib_BA400D1A_8084A7DA");
    libBA400D1A_gv_information_header0 = c_invalidDialogControlId;
    libBA400D1A_gv_information_header1 = c_invalidDialogControlId;
    libBA400D1A_gv_information_header2 = c_invalidDialogControlId;
    libBA400D1A_gv_information_header3 = c_invalidDialogControlId;
    libBA400D1A_gv_information_text0 = c_invalidDialogControlId;
    libBA400D1A_gv_information_text1 = c_invalidDialogControlId;
    libBA400D1A_gv_information_text2 = c_invalidDialogControlId;
    libBA400D1A_gv_information_text3 = c_invalidDialogControlId;
    libBA400D1A_gv_infoHeader1Offset = 120;
    libBA400D1A_gv_infoHeader2Offset = 490;
    libBA400D1A_gv_infoHeader3Offset = 740;
    libBA400D1A_gv_information_Header1 = libBA400D1A_gv_information_Header1Def;
    libBA400D1A_gv_information_Header2 = libBA400D1A_gv_information_Header2Def;
    libBA400D1A_gv_information_Header3 = libBA400D1A_gv_information_Header3Def;
    libBA400D1A_gv_information_Text0 = libBA400D1A_gv_information_Text0Def;
    libBA400D1A_gv_information_Text1 = libBA400D1A_gv_information_Text1Def;
    libBA400D1A_gv_information_Text2 = libBA400D1A_gv_information_Text2Def;
    libBA400D1A_gv_information_Text3 = libBA400D1A_gv_information_Text3Def;
    libBA400D1A_gv_townHallDummies = UnitGroupEmpty();
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_player_faction[init_i] = "";
    }
    libBA400D1A_gv_daytime = true;
    libBA400D1A_gv_dayNightCycleLenght = 120.0;
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_dominion[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_raiders[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_khala[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_nerazim[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_swarm[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_infested[init_i] = 1;
    }
    for (init_i = 0; init_i <= 8; init_i += 1) {
        libBA400D1A_gv_include_covenant[init_i] = 1;
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: ClearDefaultMeleeUnits
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_ClearDefaultMeleeUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0D56E715_g;
    int auto0D56E715_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0D56E715_g = PlayerGroupActive();
    auto0D56E715_var = -1;
    while (true) {
        auto0D56E715_var = PlayerGroupNextPlayer(auto0D56E715_g, auto0D56E715_var);
        if (auto0D56E715_var < 0) { break; }
        MeleeSetOption(auto0D56E715_var, c_meleeOptionReveal, false);
        MeleeSetOption(auto0D56E715_var, c_meleeOptionVictory, false);
        MeleeSetOption(auto0D56E715_var, c_meleeOptionStalemate, false);
        MeleeSetOption(auto0D56E715_var, c_meleeOptionDefeat, false);
    }
    CreepModify(UnitGetPosition(EventUnit()), 100.0, false, false);
    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_ClearDefaultMeleeUnits_Init () {
    libBA400D1A_gt_ClearDefaultMeleeUnits = TriggerCreate("libBA400D1A_gt_ClearDefaultMeleeUnits_Func");
    TriggerAddEventUnitRegion(libBA400D1A_gt_ClearDefaultMeleeUnits, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MapInitializiation
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_MapInitializiation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto883DA6C0_g;
    int auto883DA6C0_var;

    // Actions
    if (!runActions) {
        return true;
    }

    GameSetMissionTimePaused(true);
    GameSetLighting("MarSaraCampaignDay", 0.0);
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeTerrazine, true);
    libNtve_gf_HideGameUI(false, PlayerGroupAll());
    auto883DA6C0_g = PlayerGroupActive();
    auto883DA6C0_var = -1;
    while (true) {
        auto883DA6C0_var = PlayerGroupNextPlayer(auto883DA6C0_g, auto883DA6C0_var);
        if (auto883DA6C0_var < 0) { break; }
        MeleeSetOption(auto883DA6C0_var, c_meleeOptionVictory, false);
        MeleeSetOption(auto883DA6C0_var, c_meleeOptionStalemate, false);
        MeleeSetOption(auto883DA6C0_var, c_meleeOptionDefeat, false);
        MeleeSetOption(auto883DA6C0_var, c_meleeOptionReveal, false);
        PlayerOptionOverride(auto883DA6C0_var, "simplecommandcard", "0");
        PlayerSetRace(auto883DA6C0_var, "Prot");
        TechTreeUpgradeAllow(auto883DA6C0_var, "GameTimeGreaterthan5Seconds", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "AdeptSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "ColossusSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "ColossusTal", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "OverlordSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "PylonSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "SupplyDepotSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "ThorSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "UltraliskSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "ZealotSkin", false);
        TechTreeUpgradeAllow(auto883DA6C0_var, "ZerglingSkin", false);
        libBA400D1A_gv_include_dominion[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_raiders[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_khala[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_nerazim[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_swarm[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_infested[auto883DA6C0_var] = RandomInt(1, 235);
        libBA400D1A_gv_include_covenant[auto883DA6C0_var] = RandomInt(1, 235);
    }
    TriggerExecute(libBA400D1A_gt_TitleDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_FactionSelectionDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_TutorialDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_VersionDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_NotificationsDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_InformationDialogue, true, true);
    TriggerExecute(libBA400D1A_gt_SetResources, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_MapInitializiation_Init () {
    libBA400D1A_gt_MapInitializiation = TriggerCreate("libBA400D1A_gt_MapInitializiation_Func");
    TriggerAddEventMapInit(libBA400D1A_gt_MapInitializiation);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SetResources
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_SetResources_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_tooClose;
    unitgroup lv_removedGeysers;
    unitgroup lv_removedMinerals;
    unitgroup lv_startGeysers;
    unitgroup lv_startMinerals;
    fixed lv_pruningRange;
    fixed lv_startLocationPickRange;
    point lv_geyser1Position;
    point lv_geyserPoint;
    fixed lv_geyserDistanceToStartingPos;
    fixed lv_geyserDistanceMin;
    fixed lv_geyserDistanceMax;
    fixed lv_geyserAngle;
    string lv_geyserType;
    fixed lv_mineralsAngleShift1;
    fixed lv_mineralsAngleShift2;
    fixed lv_mineralsAngle;
    fixed lv_mineralsDistanceToStartingPos;
    fixed lv_distance;
    point lv_mineralsPoint1;
    point lv_mineralsPoint2;

    // Automatic Variable Declarations
    unitgroup autoC65B098D_g;
    int autoC65B098D_u;
    unit autoC65B098D_var;
    playergroup autoA019D7C0_g;
    int autoA019D7C0_var;
    unitgroup auto41100E87_g;
    int auto41100E87_u;
    unit auto41100E87_var;
    unitgroup autoDC5A2A57_g;
    int autoDC5A2A57_u;
    unit autoDC5A2A57_var;
    playergroup auto0ABFE451_g;
    int auto0ABFE451_var;
    unitgroup auto059DEE77_g;
    int auto059DEE77_u;
    unit auto059DEE77_var;
    playergroup autoD1530033_g;
    int autoD1530033_var;
    playergroup auto567B25B1_g;
    int auto567B25B1_var;
    unitgroup auto50EF2756_g;
    int auto50EF2756_u;
    unit auto50EF2756_var;
    unitgroup auto366D7394_g;
    int auto366D7394_u;
    unit auto366D7394_var;
    unitgroup autoC29BA875_g;
    int autoC29BA875_u;
    unit autoC29BA875_var;

    // Variable Initialization
    lv_removedGeysers = UnitGroupEmpty();
    lv_removedMinerals = UnitGroupEmpty();
    lv_startGeysers = UnitGroupEmpty();
    lv_startMinerals = UnitGroupEmpty();
    lv_pruningRange = 18.0;
    lv_startLocationPickRange = 14.0;
    lv_geyserDistanceToStartingPos = 8.5;
    lv_geyserDistanceMin = 6.0;
    lv_geyserDistanceMax = 7.0;
    lv_mineralsAngleShift1 = 5.0;
    lv_mineralsAngleShift2 = 10.0;
    lv_mineralsDistanceToStartingPos = 7.7;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC65B098D_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
    autoC65B098D_u = UnitGroupCount(autoC65B098D_g, c_unitCountAll);
    for (;; autoC65B098D_u -= 1) {
        autoC65B098D_var = UnitGroupUnitFromEnd(autoC65B098D_g, autoC65B098D_u);
        if (autoC65B098D_var == null) { break; }
        if ((true)) {
            lv_tooClose = false;
            autoA019D7C0_g = PlayerGroupActive();
            autoA019D7C0_var = -1;
            while (true) {
                autoA019D7C0_var = PlayerGroupNextPlayer(autoA019D7C0_g, autoA019D7C0_var);
                if (autoA019D7C0_var < 0) { break; }
                if (((DistanceBetweenPoints(UnitGetPosition(autoC65B098D_var), PlayerStartLocation(autoA019D7C0_var)) < lv_pruningRange))) {
                    lv_tooClose = true;
                }

            }
            lv_distance = DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedMinerals, UnitGetPosition(autoC65B098D_var))), UnitGetPosition(autoC65B098D_var));
            if ((DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedMinerals, UnitGetPosition(autoC65B098D_var))), UnitGetPosition(autoC65B098D_var)) < lv_pruningRange) && (DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedMinerals, UnitGetPosition(autoC65B098D_var))), UnitGetPosition(autoC65B098D_var)) != 0.0)) {
                lv_tooClose = true;
            }

            if ((lv_tooClose == false)) {
                UnitGroupAdd(lv_removedMinerals, autoC65B098D_var);
            }

        }

    }
    auto41100E87_g = lv_removedMinerals;
    auto41100E87_u = UnitGroupCount(auto41100E87_g, c_unitCountAll);
    for (;; auto41100E87_u -= 1) {
        auto41100E87_var = UnitGroupUnitFromEnd(auto41100E87_g, auto41100E87_u);
        if (auto41100E87_var == null) { break; }
        UnitRemove(auto41100E87_var);
    }
    autoDC5A2A57_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterRawResource), 0, 0, 0), 0);
    autoDC5A2A57_u = UnitGroupCount(autoDC5A2A57_g, c_unitCountAll);
    for (;; autoDC5A2A57_u -= 1) {
        autoDC5A2A57_var = UnitGroupUnitFromEnd(autoDC5A2A57_g, autoDC5A2A57_u);
        if (autoDC5A2A57_var == null) { break; }
        if ((true)) {
            lv_tooClose = false;
            auto0ABFE451_g = PlayerGroupActive();
            auto0ABFE451_var = -1;
            while (true) {
                auto0ABFE451_var = PlayerGroupNextPlayer(auto0ABFE451_g, auto0ABFE451_var);
                if (auto0ABFE451_var < 0) { break; }
                if (((DistanceBetweenPoints(UnitGetPosition(autoDC5A2A57_var), PlayerStartLocation(auto0ABFE451_var)) < lv_pruningRange))) {
                    lv_tooClose = true;
                }

            }
            lv_distance = DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedGeysers, UnitGetPosition(autoDC5A2A57_var))), UnitGetPosition(autoDC5A2A57_var));
            if ((DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedGeysers, UnitGetPosition(autoDC5A2A57_var))), UnitGetPosition(autoDC5A2A57_var)) < lv_pruningRange) && (DistanceBetweenPoints(UnitGetPosition(UnitGroupClosestToPoint(lv_removedGeysers, UnitGetPosition(autoDC5A2A57_var))), UnitGetPosition(autoDC5A2A57_var)) != 0.0)) {
                lv_tooClose = true;
            }

            if ((lv_tooClose == false)) {
                UnitGroupAdd(lv_removedGeysers, autoDC5A2A57_var);
            }

        }

    }
    auto059DEE77_g = lv_removedGeysers;
    auto059DEE77_u = UnitGroupCount(auto059DEE77_g, c_unitCountAll);
    for (;; auto059DEE77_u -= 1) {
        auto059DEE77_var = UnitGroupUnitFromEnd(auto059DEE77_g, auto059DEE77_u);
        if (auto059DEE77_var == null) { break; }
        UnitRemove(auto059DEE77_var);
    }
    autoD1530033_g = PlayerGroupAll();
    autoD1530033_var = -1;
    while (true) {
        autoD1530033_var = PlayerGroupNextPlayer(autoD1530033_g, autoD1530033_var);
        if (autoD1530033_var < 0) { break; }
        VisRevealArea(autoD1530033_var, RegionEntireMap(), 0.1, false);
    }
    auto567B25B1_g = PlayerGroupActive();
    auto567B25B1_var = -1;
    while (true) {
        auto567B25B1_var = PlayerGroupNextPlayer(auto567B25B1_g, auto567B25B1_var);
        if (auto567B25B1_var < 0) { break; }
        UnitGroupClear(lv_startMinerals);
        UnitGroupClear(lv_startGeysers);
        auto50EF2756_g = UnitGroup(null, c_playerAny, RegionCircle(PlayerStartLocation(auto567B25B1_var), lv_startLocationPickRange), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
        auto50EF2756_u = UnitGroupCount(auto50EF2756_g, c_unitCountAll);
        for (;; auto50EF2756_u -= 1) {
            auto50EF2756_var = UnitGroupUnitFromEnd(auto50EF2756_g, auto50EF2756_u);
            if (auto50EF2756_var == null) { break; }
            UnitGroupAdd(lv_startMinerals, auto50EF2756_var);
        }
        lv_geyser1Position = PlayerStartLocation(auto567B25B1_var);
        auto366D7394_g = UnitGroup(null, c_playerAny, RegionCircle(PlayerStartLocation(auto567B25B1_var), lv_startLocationPickRange), UnitFilter((1 << c_targetFilterRawResource), 0, 0, 0), 0);
        auto366D7394_u = UnitGroupCount(auto366D7394_g, c_unitCountAll);
        for (;; auto366D7394_u -= 1) {
            auto366D7394_var = UnitGroupUnitFromEnd(auto366D7394_g, auto366D7394_u);
            if (auto366D7394_var == null) { break; }
            lv_geyserType = UnitGetType(auto366D7394_var);
            lv_geyserAngle = -180.0;
            lv_geyserPoint = PointWithOffsetPolar(PlayerStartLocation(auto567B25B1_var), lv_geyserDistanceToStartingPos, lv_geyserAngle);
            while (((DistanceBetweenPoints(lv_geyserPoint, lv_geyser1Position) < lv_geyserDistanceMin) || (DistanceBetweenPoints(lv_geyserPoint, UnitGetPosition(UnitGroupClosestToPoint(lv_startMinerals, lv_geyserPoint))) < lv_geyserDistanceMin) || (DistanceBetweenPoints(lv_geyserPoint, UnitGetPosition(UnitGroupClosestToPoint(lv_startMinerals, lv_geyserPoint))) > lv_geyserDistanceMax))) {
                lv_geyserAngle = (lv_geyserAngle + 1.0);
                lv_geyserPoint = PointWithOffsetPolar(PlayerStartLocation(auto567B25B1_var), lv_geyserDistanceToStartingPos, lv_geyserAngle);
            }
            UnitSetPosition(auto366D7394_var, lv_geyserPoint, false);
            lv_geyser1Position = UnitGetPosition(auto366D7394_var);
            lv_mineralsPoint1 = libNtve_gf_PointOffsetTowardsPoint(lv_geyserPoint, 3.5, UnitGetPosition(UnitGroupClosestToPoint(lv_startMinerals, lv_geyserPoint)));
            while (((DistanceBetweenPoints(lv_mineralsPoint1, PlayerStartLocation(auto567B25B1_var)) > lv_mineralsDistanceToStartingPos))) {
                lv_mineralsPoint1 = libNtve_gf_PointOffsetTowardsPoint(lv_mineralsPoint1, 0.1, PlayerStartLocation(auto567B25B1_var));
            }
            while (((DistanceBetweenPoints(lv_mineralsPoint1, PlayerStartLocation(auto567B25B1_var)) < lv_mineralsDistanceToStartingPos))) {
                lv_mineralsPoint1 = libNtve_gf_PointOffsetTowardsPoint(lv_mineralsPoint1, -0.1, PlayerStartLocation(auto567B25B1_var));
            }
            lv_mineralsPoint2 = libNtve_gf_PointOffsetTowardsPoint(lv_geyserPoint, 5.0, UnitGetPosition(UnitGroupClosestToPoint(lv_startMinerals, lv_geyserPoint)));
            while (((DistanceBetweenPoints(lv_mineralsPoint2, PlayerStartLocation(auto567B25B1_var)) > lv_mineralsDistanceToStartingPos))) {
                lv_mineralsPoint2 = libNtve_gf_PointOffsetTowardsPoint(lv_mineralsPoint2, 0.1, PlayerStartLocation(auto567B25B1_var));
            }
            while (((DistanceBetweenPoints(lv_mineralsPoint2, PlayerStartLocation(auto567B25B1_var)) < lv_mineralsDistanceToStartingPos))) {
                lv_mineralsPoint2 = libNtve_gf_PointOffsetTowardsPoint(lv_mineralsPoint2, -0.1, PlayerStartLocation(auto567B25B1_var));
            }
            libNtve_gf_CreateUnitsWithDefaultFacing(1, UnitGetType(UnitGroupClosestToPoint(lv_startMinerals, PlayerStartLocation(auto567B25B1_var))), c_unitCreateIgnorePlacement, 0, lv_mineralsPoint1);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, UnitGetType(UnitGroupClosestToPoint(lv_startMinerals, PlayerStartLocation(auto567B25B1_var))), c_unitCreateIgnorePlacement, 0, lv_mineralsPoint2);
        }
    }
    autoC29BA875_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterRawResource), 0, 0, 0), 0);
    autoC29BA875_u = UnitGroupCount(autoC29BA875_g, c_unitCountAll);
    for (;; autoC29BA875_u -= 1) {
        autoC29BA875_var = UnitGroupUnitFromEnd(autoC29BA875_g, autoC29BA875_u);
        if (autoC29BA875_var == null) { break; }
        UnitBehaviorAdd(autoC29BA875_var, "RawRichVespeneGeyserGas", autoC29BA875_var, 1);
        UnitBehaviorRemove(autoC29BA875_var, "RawVespeneGeyserGas", 1);
    }
    Wait(0.2, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_SetResources_Init () {
    libBA400D1A_gt_SetResources = TriggerCreate("libBA400D1A_gt_SetResources_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: WaitForAllPlayersReady
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_WaitForAllPlayersReady_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto888BD441_g;
    int auto888BD441_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_allPlayersReady = true;
    auto888BD441_g = PlayerGroupActive();
    auto888BD441_var = -1;
    while (true) {
        auto888BD441_var = PlayerGroupNextPlayer(auto888BD441_g, auto888BD441_var);
        if (auto888BD441_var < 0) { break; }
        if ((libBA400D1A_gv_playerReady[auto888BD441_var] == true)) {
        }
        else {
            libBA400D1A_gv_allPlayersReady = false;
        }
    }
    if ((libBA400D1A_gv_allPlayersReady == true)) {
        TriggerExecute(libBA400D1A_gt_RandomizeAndCreateUnits, true, false);
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_WaitForAllPlayersReady_Init () {
    libBA400D1A_gt_WaitForAllPlayersReady = TriggerCreate("libBA400D1A_gt_WaitForAllPlayersReady_Func");
    TriggerAddEventTimePeriodic(libBA400D1A_gt_WaitForAllPlayersReady, 0.23, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RandomizeAndCreateUnits
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RandomizeAndCreateUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD61D1FF8_g;
    int autoD61D1FF8_var;
    int auto2FBF9955_val;
    string auto92BD3AD5_val;

    // Actions
    if (!runActions) {
        return true;
    }

    GameSetSeed(RandomInt(1, 23555));
    TriggerEnable(libBA400D1A_gt_ClearDefaultMeleeUnits, false);
    autoD61D1FF8_g = PlayerGroupActive();
    autoD61D1FF8_var = -1;
    while (true) {
        autoD61D1FF8_var = PlayerGroupNextPlayer(autoD61D1FF8_g, autoD61D1FF8_var);
        if (autoD61D1FF8_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(autoD61D1FF8_var, "Autocast", 1);
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_TutorialGeneral, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_tutorialGeneralEnabled[autoD61D1FF8_var] = true;
        }

        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_TutorialContext, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_tutorialContextEnabled[autoD61D1FF8_var] = true;
        }

        libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = PlayerName(autoD61D1FF8_var);
        libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + StringExternal("Param/Value/lib_BA400D1A_0D4C4D76"));
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_dominion, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_290F0D28"), libBA400D1A_gv_color_dominion));
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_raiders, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_B291CE57"), libBA400D1A_gv_color_raiders));
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_khala, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_1B249267"), libBA400D1A_gv_color_khala));
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_nerazim, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_80338843"), libBA400D1A_gv_color_nerazim));
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_swarm, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_032B2E30"), libBA400D1A_gv_color_swarm));
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_infested, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_8BD2D225"), libBA400D1A_gv_color_infested));
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = 0;
        }
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_covenant, autoD61D1FF8_var) == true)) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_4E97C0D1"), libBA400D1A_gv_color_covenant));
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
        }
        else {
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = 0;
        }
        if (((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_dominion, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_raiders, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_khala, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_nerazim, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_swarm, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_infested, autoD61D1FF8_var) == false) && (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_covenant, autoD61D1FF8_var) == false))) {
            libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] = (libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var] + StringExternal("Param/Value/lib_BA400D1A_E96DE96B"));
            libBA400D1A_gv_include_dominion[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_raiders[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_khala[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_nerazim[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_swarm[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_infested[autoD61D1FF8_var] = RandomInt(255, 2300);
            libBA400D1A_gv_include_covenant[autoD61D1FF8_var] = RandomInt(255, 2300);
        }

        TriggerEnable(libBA400D1A_gt_ClearDefaultMeleeUnits, false);
        DialogSetVisible(libBA400D1A_gv_factionSelectionDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_factionSelectionDialogueSet, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_tutorialDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_titleDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_ladderDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_ladderSetDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_ladderWaitingDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_versionDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_aboutDialogue, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_background, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_backgroundB, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_backgroundL, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_backgroundR, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_informationDialogue, PlayerGroupAll(), false);
        DialogControlSetVisible(libBA400D1A_gv_button_ready, PlayerGroupAll(), false);
        DialogSetVisible(libBA400D1A_gv_factionSelectionDialogueSet, PlayerGroupAll(), false);
        DialogControlSetVisible(libBA400D1A_gv_factionSelectionDialogueWarning, PlayerGroupAll(), false);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, libBA400D1A_gv_text_faction_selection[autoD61D1FF8_var]);
        auto2FBF9955_val = MaxI(libBA400D1A_gv_include_covenant[autoD61D1FF8_var], MaxI(libBA400D1A_gv_include_swarm[autoD61D1FF8_var], MaxI(libBA400D1A_gv_include_raiders[autoD61D1FF8_var], MaxI(libBA400D1A_gv_include_nerazim[autoD61D1FF8_var], MaxI(libBA400D1A_gv_include_khala[autoD61D1FF8_var], MaxI(libBA400D1A_gv_include_infested[autoD61D1FF8_var], libBA400D1A_gv_include_dominion[autoD61D1FF8_var]))))));
        if (auto2FBF9955_val == libBA400D1A_gv_include_swarm[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "swarm";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_raiders[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "raiders";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_nerazim[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "nerazim";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_khala[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "khala";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_infested[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "infested";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_dominion[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "dominion";
        }
        else if (auto2FBF9955_val == libBA400D1A_gv_include_covenant[autoD61D1FF8_var]) {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "covenant";
        }
        else {
            libBA400D1A_gv_player_faction[autoD61D1FF8_var] = "dominion";
        }
        auto92BD3AD5_val = libBA400D1A_gv_player_faction[autoD61D1FF8_var];
        if (auto92BD3AD5_val == "dominion") {
            PlayerSetRace(autoD61D1FF8_var, "Terr");
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_dominion;
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_EBC205FE"), libBA400D1A_gv_color_dominion));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "PlanetaryFortress", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("CommandCenterTrain2", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyCommand", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "SCV2", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            TechTreeUpgradeAddLevel(autoD61D1FF8_var, "ShieldWall", 1);
            TechTreeUpgradeAddLevel(autoD61D1FF8_var, "NeosteelFrame", 1);
            TriggerEnable(libBA400D1A_gt_PlanetaryFortressAttackPriority, true);
            TriggerEnable(libBA400D1A_gt_PatriotBomb, true);
        }
        else if (auto92BD3AD5_val == "khala") {
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_C4CD4E21"), libBA400D1A_gv_color_khala));
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_khala;
            PlayerSetRace(autoD61D1FF8_var, "Prot");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Nexus", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("NexusTrain", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyNexus", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "Probe", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            TriggerEnable(libBA400D1A_gt_InstantReturn, true);
            TriggerEnable(libBA400D1A_gt_Colossus, true);
        }
        else if (auto92BD3AD5_val == "nerazim") {
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_5CB005F9"), libBA400D1A_gv_color_nerazim));
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_nerazim;
            PlayerSetRace(autoD61D1FF8_var, "Prot");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Nexus2", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("NexusTrain2", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyNexus", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "Probe2", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            TriggerEnable(libBA400D1A_gt_VoidRayLoseCharge, true);
        }
        else if (auto92BD3AD5_val == "raiders") {
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_EB8E1A4F"), libBA400D1A_gv_color_raiders));
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_raiders;
            PlayerSetRace(autoD61D1FF8_var, "Terr");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "OrbitalCommand", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("CommandCenterTrain", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyCommand", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "SCV", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            TechTreeUpgradeAddLevel(autoD61D1FF8_var, "TechReactor", 1);
            TechTreeUpgradeAddLevel(autoD61D1FF8_var, "SupplyDepotSkin", 1);
        }
        else if (auto92BD3AD5_val == "swarm") {
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_77BDFD29"), libBA400D1A_gv_color_swarm));
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_swarm;
            PlayerSetRace(autoD61D1FF8_var, "Zerg");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hatchery", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyHatchery", 1), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            UnitCreateEffectUnit(UnitLastCreated(), "SpawnMutantLarvaApplySpawnBehavior", UnitLastCreated());
            CreepModify(UnitGetPosition(UnitLastCreated()), 10.0, true, false);
            libNtve_gf_UnitBehaviorRemoveCooldown(UnitLastCreated(), "SpawnLarva", "Behavior/SpawnLarva");
            libNtve_gf_UnitBehaviorRemoveCooldown(UnitLastCreated(), "SpawnLarva", "Behavior/SpawnLarva");
            libNtve_gf_UnitBehaviorRemoveCooldown(UnitLastCreated(), "SpawnLarva", "Behavior/SpawnLarva");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Larva", 0, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("LarvaTrain", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("Rally", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "Drone", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            UnitGroupIssueOrder(UnitGroup("Drone", autoD61D1FF8_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), OrderTargetingUnit(AbilityCommand("DroneHarvest", 0), UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var))), c_orderQueueReplace);
            TriggerExecute(libBA400D1A_gt_TurnOnAdaptionTriggers, true, false);
        }
        else if (auto92BD3AD5_val == "covenant") {
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_F0D51A17"), libBA400D1A_gv_color_covenant));
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_covenant;
            PlayerSetRace(autoD61D1FF8_var, "Terr");
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Flagship", 0, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "BioDomeCommand", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("CommandCenterTrain3", 0)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyCommand", 0), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "SCV3", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            TriggerEnable(libBA400D1A_gt_MothershipRotation, true);
            TriggerEnable(libBA400D1A_gt_MothershipDevoteeSouls, true);
            TriggerEnable(libBA400D1A_gt_MothershipTrainAnim, true);
            TriggerEnable(libBA400D1A_gt_OrbitalUpdate, true);
            TriggerEnable(libBA400D1A_gt_PredatorKidnap, true);
        }
        else if (auto92BD3AD5_val == "infested") {
            PlayerSetRace(autoD61D1FF8_var, "Zerg");
            libBA400D1A_gv_color_tutorial = libBA400D1A_gv_color_infested;
            UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_E697A11A"), libBA400D1A_gv_color_infested));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "VirophageHC", c_unitCreateIgnorePlacement, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("RallyHatchery2", 1), libNtve_gf_ConvertUnitToUnitGroup(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("CommandCenterTrain32", 0)), c_orderQueueReplace);
            libNtve_gf_CreateUnitsWithDefaultFacing(7, "Feederling2", 0, autoD61D1FF8_var, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(UnitLastCreated()), 3.2, UnitGetPosition(UnitGroupClosestToPoint(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), PlayerStartLocation(autoD61D1FF8_var)))));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "SwarmQueen", 0, autoD61D1FF8_var, PlayerStartLocation(autoD61D1FF8_var));
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            Wait(0.2, c_timeGame);
            libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), autoD61D1FF8_var);
            CreepModify(UnitGetPosition(UnitLastCreated()), 10.0, true, false);
            TriggerEnable(libBA400D1A_gt_BroodMotherSelect, true);
            TriggerEnable(libBA400D1A_gt_BroodMotherRally, true);
        }
        else {
        }
        UIDisplayMessage(PlayerGroupSingle(autoD61D1FF8_var), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_BA400D1A_2DA1BF97") + libBA400D1A_gv_version + StringExternal("Param/Value/lib_BA400D1A_2FAA1352")));
    }
    TriggerExecute(libBA400D1A_gt_BroodMotherSelectStart, true, false);
    TriggerExecute(libBA400D1A_gt_SetStartingResources, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RandomizeAndCreateUnits_Init () {
    libBA400D1A_gt_RandomizeAndCreateUnits = TriggerCreate("libBA400D1A_gt_RandomizeAndCreateUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: StartTheGame
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_SetStartingResources_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFE9C765E_g;
    int autoFE9C765E_var;

    // Actions
    if (!runActions) {
        return true;
    }

    GameSetSpeedValue(c_gameSpeedFaster);
    autoFE9C765E_g = PlayerGroupActive();
    autoFE9C765E_var = -1;
    while (true) {
        autoFE9C765E_var = PlayerGroupNextPlayer(autoFE9C765E_g, autoFE9C765E_var);
        if (autoFE9C765E_var < 0) { break; }
        MeleeSetOption(autoFE9C765E_var, c_meleeOptionReveal, true);
        MeleeSetOption(autoFE9C765E_var, c_meleeOptionStalemate, true);
        MeleeSetOption(autoFE9C765E_var, c_meleeOptionDefeat, true);
        CameraPan(autoFE9C765E_var, PlayerStartLocation(autoFE9C765E_var), 0.1, -1, 10.0, false);
        CameraSetValue(autoFE9C765E_var, c_cameraValueDistance, 36.0, 1.0, -1, 10.0);
        PlayerModifyPropertyInt(autoFE9C765E_var, c_playerPropMinerals, c_playerPropOperSetTo, 77);
        PlayerModifyPropertyInt(autoFE9C765E_var, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(autoFE9C765E_var, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(autoFE9C765E_var, c_playerPropSuppliesMade, c_playerPropOperSetTo, 11);
    }
    libNtve_gf_HideGameUI(true, PlayerGroupAll());
    TriggerEnable(libBA400D1A_gt_DialogueHotkeys, false);
    TriggerEnable(libBA400D1A_gt_NotificationsFlash, false);
    TriggerEnable(libBA400D1A_gt_PlayerPressReady, false);
    TriggerEnable(libBA400D1A_gt_AddTerrazine, true);
    TriggerEnable(libBA400D1A_gt_TutorialAdvancedInfoHotkey, true);
    TriggerExecute(libBA400D1A_gt_AllowCheatsAndReset, true, false);
    TriggerExecute(libBA400D1A_gt_TerrazineDialogue, true, false);
    TriggerExecute(libBA400D1A_gt_DayNightDialogue, true, false);
    GameSetMissionTimePaused(false);
    MeleeInitAI();
    libBA400D1A_gv_gameStarted = true;
    TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
    TimerStart(libBA400D1A_gv_daylightTimer, libBA400D1A_gv_dayNightCycleLenght, false, c_timeReal);
    TimerStart(libBA400D1A_gv_terrazineTimer, libBA400D1A_gv_terrazineDelay, false, c_timeReal);
    if (((libBA400D1A_gv_ladderSet[1] == true) && (libBA400D1A_gv_ladderSet[2] == true))) {
        TriggerExecute(libBA400D1A_gt_LadderGameStart, true, false);
        libBA400D1A_gv_ladderGame = true;
    }

    if ((PlayerGroupCount(PlayerGroupActive()) > 1)) {
        TriggerEnable(libBA400D1A_gt_Victory, true);
    }

    if ((PlayerGroupCount(PlayerGroupActive()) > 2)) {
        TriggerEnable(libBA400D1A_gt_Spectate, true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_BD9F9772"), libBA400D1A_gv_color_heptacraft_title));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_SetStartingResources_Init () {
    libBA400D1A_gt_SetStartingResources = TriggerCreate("libBA400D1A_gt_SetStartingResources_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DialogueHotkeys
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DialogueHotkeys_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoF3806CBA_val;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF3806CBA_val = EventKeyPressed();
    if (autoF3806CBA_val == c_keyF1) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_dominion, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_dominion, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_dominion, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF2) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_raiders, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_raiders, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_raiders, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF3) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_khala, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_khala, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_khala, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF4) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_nerazim, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_nerazim, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_nerazim, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF5) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_swarm, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_swarm, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_swarm, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF6) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_infested, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_infested, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_infested, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF7) {
        if ((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_covenant, EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_covenant, false, PlayerGroupSingle(EventPlayer()));
        }
        else {
            libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_covenant, true, PlayerGroupSingle(EventPlayer()));
        }
    }
    else if (autoF3806CBA_val == c_keyF8) {
        if (((libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_dominion, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_infested, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_khala, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_nerazim, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_raiders, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_swarm, EventPlayer()) == true) || (libNtve_gf_DialogItemIsChecked(libBA400D1A_gv_check_covenant, EventPlayer()) == true))) {
            TriggerExecute(libBA400D1A_gt_PlayerPressReady, false, false);
        }

    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DialogueHotkeys_Init () {
    libBA400D1A_gt_DialogueHotkeys = TriggerCreate("libBA400D1A_gt_DialogueHotkeys_Func");
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF1, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF2, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF3, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF4, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF5, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF6, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF7, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libBA400D1A_gt_DialogueHotkeys, c_playerAny, c_keyF8, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TitleDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TitleDialogue_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_totalX;
    fixed lv_introLenght;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_totalX = (libBA400D1A_gv_dialogeSideX);
    lv_introLenght = 3.2;

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("ChallengescombinedAdjutant00005", -1), c_maxPlayers, PlayerGroupAll(), 75.0, 0.0);
    DialogCreate(5555, 2323, c_anchorTopLeft, 0, 0, false);
    DialogSetImage(DialogLastCreated(), "HeptaCraft\\hepta_color_dark.dds");
    libBA400D1A_gv_background = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogCreate(2000, 5000, c_anchorTop, 1840, 0, false);
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libBA400D1A_gv_backgroundL = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogCreate(2000, 5000, c_anchorTop, -1840, 0, false);
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libBA400D1A_gv_backgroundR = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogCreate(5000, 5000, c_anchorTop, 0, (libBA400D1A_gv_dialogesOffsetYStart + libBA400D1A_gv_dialogesYtotal + 4), false);
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libBA400D1A_gv_backgroundB = DialogLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    DialogCreate(1670, 196, c_anchorTop, 0, 4, false);
    libBA400D1A_gv_titleDialogue = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 1544, 196, c_anchorCenter, 0, 0, StringToText(""), "HClogonew.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TitleDialogue_Init () {
    libBA400D1A_gt_TitleDialogue = TriggerCreate("libBA400D1A_gt_TitleDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FactionSelectionDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_FactionSelectionDialogue_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_y;
    int lv_buttonY;
    int lv_offsetY;
    int lv_offsetYBottom;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_y = 969;
    lv_buttonY = 69;
    lv_offsetY = 200;
    lv_offsetYBottom = 28;

    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(libBA400D1A_gv_dialogeMiddleX, libBA400D1A_gv_dialogesYtotal, c_anchorTop, 0, libBA400D1A_gv_dialogesOffsetYStart, true);
    libBA400D1A_gv_factionSelectionDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeMiddleX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, libBA400D1A_gv_underlineY, StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 700, 50, c_anchorTopLeft, 0, libBA400D1A_gv_titleOffset, StringExternal("Param/Value/lib_BA400D1A_D0C0A7FC"), libBA400D1A_gv_color_heptacraft_headers, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_factionSelectionDialogue, 640, 120, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, 50, StringExternal("Param/Value/lib_BA400D1A_7CFCE703"), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "CampaignPanelSelectionInfoCostHeading", PlayerGroupAll());
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 185, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_51BD0BBE"), libBA400D1A_gv_color_dominion), false);
    libBA400D1A_gv_check_dominion = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 285, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_7017F6BA"), libBA400D1A_gv_color_raiders), false);
    libBA400D1A_gv_check_raiders = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 385, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_CC6095C9"), libBA400D1A_gv_color_khala), false);
    libBA400D1A_gv_check_khala = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 485, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_99E9B059"), libBA400D1A_gv_color_nerazim), false);
    libBA400D1A_gv_check_nerazim = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 585, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_DADE489F"), libBA400D1A_gv_color_swarm), false);
    libBA400D1A_gv_check_swarm = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 685, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_361A17A2"), libBA400D1A_gv_color_infested), false);
    libBA400D1A_gv_check_infested = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemCheckBox(libBA400D1A_gv_factionSelectionDialogue, 0, 0, c_anchorTopRight, 50, 785, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_4EF8C78D"), libBA400D1A_gv_color_covenant), false);
    libBA400D1A_gv_check_covenant = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 155, StringExternal("Param/Value/lib_BA400D1A_13754861"), libBA400D1A_gv_color_dominion, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 255, StringExternal("Param/Value/lib_BA400D1A_C5A75E64"), libBA400D1A_gv_color_raiders, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 355, StringExternal("Param/Value/lib_BA400D1A_0D9E2A6E"), libBA400D1A_gv_color_khala, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 455, StringExternal("Param/Value/lib_BA400D1A_3DD7242A"), libBA400D1A_gv_color_nerazim, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 555, StringExternal("Param/Value/lib_BA400D1A_EE8B119D"), libBA400D1A_gv_color_swarm, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 655, StringExternal("Param/Value/lib_BA400D1A_4015A383"), libBA400D1A_gv_color_infested, false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 600, 100, c_anchorTopLeft, 170, 755, StringExternal("Param/Value/lib_BA400D1A_0D1590CB"), libBA400D1A_gv_color_covenant, false, 2.0);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 150, StringToText(""), "Assets\\Textures\\decal_terran_0056_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_dominion, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 250, StringToText(""), "Assets\\Textures\\decal_terran_0059_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_raiders, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 350, StringToText(""), "Assets\\Textures\\decal_terran_0012_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_khala, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 450, StringToText(""), "Assets\\Textures\\decal_terran_0016_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_nerazim, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 550, StringToText(""), "Assets\\Textures\\decal_terran_0022_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_swarm, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 650, StringToText(""), "Assets\\Textures\\decal_terran_0052_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_infested, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_factionSelectionDialogue, 100, 100, c_anchorTopLeft, 50, 750, StringToText(""), "Assets\\Textures\\decal_terran_0008_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_covenant, c_triggerBlendModeLighten);
    libNtve_gf_CreateDialogItemButton(libBA400D1A_gv_factionSelectionDialogue, 230, 69, c_anchorBottom, 0, lv_offsetYBottom, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_D68CC059"), libBA400D1A_gv_color_heptacraft_title), StringExternal("Param/Value/lib_BA400D1A_CA0255DD"), "");
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), libBA400D1A_gv_color_heptacraft_headers, PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\greydark.dds", PlayerGroupAll());
    libBA400D1A_gv_button_ready = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupActive(), true);
    DialogCreate(460, 69, c_anchorTop, 0, (lv_y + (lv_offsetY - (lv_buttonY + lv_offsetYBottom))), false);
    libBA400D1A_gv_factionSelectionDialogueSet = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 460, 69, c_anchorBottom, 0, 0, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_20395AFA"), libBA400D1A_gv_color_heptacraft_headers), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "PurchasePanelCredits", PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 380, 69, c_anchorBottom, 0, 0, StringToText(""), "Assets\\Textures\\ui_void_storybutton_corners_hover.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_heptacraft_headers, c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "PurchasePanelCredits", PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_factionSelectionDialogue, 180, 50, c_anchorBottomLeft, 36, lv_offsetYBottom, StringExternal("Param/Value/lib_BA400D1A_C2FD10BE"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libBA400D1A_gv_factionSelectionDialogueWarning = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_factionSelectionDialogue, 160, 50, c_anchorBottomRight, 50, 80, StringExternal("Param/Value/lib_BA400D1A_EE35CA59"), libBA400D1A_gv_color_heptacraft_title, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "PurchasePanelCredits", PlayerGroupAll());
    libBA400D1A_gv_factionSelectionDialogueCountdown = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_FactionSelectionDialogue_Init () {
    libBA400D1A_gt_FactionSelectionDialogue = TriggerCreate("libBA400D1A_gt_FactionSelectionDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: PressReady
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_PlayerPressReady_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == libBA400D1A_gv_button_ready))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(libBA400D1A_gv_button_ready, PlayerGroupSingle(EventPlayer()), false);
    DialogSetVisible(libBA400D1A_gv_factionSelectionDialogueSet, PlayerGroupSingle(EventPlayer()), true);
    DialogControlSetVisible(libBA400D1A_gv_factionSelectionDialogueWarning, PlayerGroupSingle(EventPlayer()), false);
    libBA400D1A_gv_playerReady[EventPlayer()] = true;
    TriggerExecute(libBA400D1A_gt_Countdown, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_PlayerPressReady_Init () {
    libBA400D1A_gt_PlayerPressReady = TriggerCreate("libBA400D1A_gt_PlayerPressReady_Func");
    TriggerAddEventDialogControl(libBA400D1A_gt_PlayerPressReady, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Countdown
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Countdown_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD7F219BC_g;
    int autoD7F219BC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_factionSelectionDialogue, 220, 100, c_anchorBottomRight, -40, 9, IntToText(libBA400D1A_gv_countdown), libBA400D1A_gv_color_heptacraft_title, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "MultiplayerLoadingPanelMapMode", PlayerGroupAll());
    DialogControlSetVisible(libBA400D1A_gv_factionSelectionDialogueCountdown, PlayerGroupAll(), true);
    while ((libBA400D1A_gv_countdown >= 0)) {
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), IntToText(libBA400D1A_gv_countdown), PlayerGroupAll());
        if ((libBA400D1A_gv_allPlayersReady == true)) {
            DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
            libBA400D1A_gv_countdown = 0;
        }
        else {
            libBA400D1A_gv_countdown = (libBA400D1A_gv_countdown - 1);
            SoundPlayForPlayer(SoundLink("AC_UI_Countdown01", -1), c_maxPlayers, PlayerGroupAll(), 123.0, 0.0);
        }
        Wait(1.0, c_timeReal);
    }
    autoD7F219BC_g = PlayerGroupActive();
    autoD7F219BC_var = -1;
    while (true) {
        autoD7F219BC_var = PlayerGroupNextPlayer(autoD7F219BC_g, autoD7F219BC_var);
        if (autoD7F219BC_var < 0) { break; }
        libBA400D1A_gv_playerReady[autoD7F219BC_var] = true;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Countdown_Init () {
    libBA400D1A_gt_Countdown = TriggerCreate("libBA400D1A_gt_Countdown_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: InformationDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_InformationDialogue_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_panelX;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_panelX = (libBA400D1A_gv_dialogeSideX - (libBA400D1A_gv_labelOffsetX + libBA400D1A_gv_labelOffsetX));

    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(libBA400D1A_gv_dialogeSideX, libBA400D1A_gv_dialogesYtotal, c_anchorTop, (libBA400D1A_gv_dialogeSideOffsetX * -1), libBA400D1A_gv_dialogesOffsetYStart, true);
    libBA400D1A_gv_informationDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, libBA400D1A_gv_underlineY, StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libBA400D1A_gv_underline_cc = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_titleOffset, TextWithColor(libBA400D1A_gv_information_Header, libBA400D1A_gv_color_heptacraft_headers), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libBA400D1A_gv_information_header0 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_panelX, libBA400D1A_gv_dialogesYtotal, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, (14 + libBA400D1A_gv_infoTextOffset), libBA400D1A_gv_information_Text0, ColorWithAlpha(0,0,0,0), false, 2.0);
    libBA400D1A_gv_information_text0 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_infoHeader1Offset, TextWithColor(libBA400D1A_gv_information_Header1Def, libBA400D1A_gv_color_heptacraft_headers), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libBA400D1A_gv_information_header1 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, (libBA400D1A_gv_underlineYI + libBA400D1A_gv_infoHeader1Offset), StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libBA400D1A_gv_underline_cc2 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_informationDialogue, lv_panelX, libBA400D1A_gv_dialogesYtotal, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, (libBA400D1A_gv_infoHeader1Offset + libBA400D1A_gv_infoTextOffset), libBA400D1A_gv_information_Text1, ColorWithAlpha(0,0,0,0), false, 2.0);
    libBA400D1A_gv_information_text1 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_infoHeader2Offset, TextWithColor(libBA400D1A_gv_information_Header2Def, libBA400D1A_gv_color_heptacraft_headers), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libBA400D1A_gv_information_header2 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, (libBA400D1A_gv_underlineYI + libBA400D1A_gv_infoHeader2Offset), StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libBA400D1A_gv_underline_cc3 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_informationDialogue, lv_panelX, libBA400D1A_gv_dialogesYtotal, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, (libBA400D1A_gv_infoHeader2Offset + libBA400D1A_gv_infoTextOffset), libBA400D1A_gv_information_Text2, ColorWithAlpha(0,0,0,0), false, 2.0);
    libBA400D1A_gv_information_text2 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_infoHeader3Offset, TextWithColor(libBA400D1A_gv_information_Header3Def, libBA400D1A_gv_color_heptacraft_headers), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libBA400D1A_gv_information_header3 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, (libBA400D1A_gv_underlineYI + libBA400D1A_gv_infoHeader3Offset), StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libBA400D1A_gv_underline_cc4 = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(libBA400D1A_gv_informationDialogue, lv_panelX, libBA400D1A_gv_dialogesYtotal, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, (libBA400D1A_gv_infoHeader3Offset + libBA400D1A_gv_infoTextOffset), libBA400D1A_gv_information_Text3, ColorWithAlpha(0,0,0,0), false, 2.0);
    libBA400D1A_gv_information_text3 = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupActive(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_InformationDialogue_Init () {
    libBA400D1A_gt_InformationDialogue = TriggerCreate("libBA400D1A_gt_InformationDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DisplayFactionInformation
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DisplayFactionInformation_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_panelX;

    // Automatic Variable Declarations
    int autoF83310A6_val;

    // Variable Initialization
    lv_panelX = (libBA400D1A_gv_dialogeSideX - (libBA400D1A_gv_labelOffsetX + libBA400D1A_gv_labelOffsetX));

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_DialogItemIsChecked(EventDialogControl(), EventPlayer()) == true)) {
        autoF83310A6_val = EventDialogControl();
        if (autoF83310A6_val == libBA400D1A_gv_check_dominion) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderDom, libBA400D1A_gv_color_dominion), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_dominion), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_dominion), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_dominion), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Dom, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Dom, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Dom, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Dom, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_dom.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_dom.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_dom.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_dom.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_raiders) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderRaid, libBA400D1A_gv_color_raiders), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_raiders), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_raiders), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_raiders), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Rai, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Rai, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Rai, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Rai, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_rai.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_rai.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_rai.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_rai.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_khala) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderKha, libBA400D1A_gv_color_khala), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_khala), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_khala), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_khala), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Kha, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Kha, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Kha, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Kha, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_kha.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_kha.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_kha.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_kha.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_nerazim) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderNzm, libBA400D1A_gv_color_nerazim), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_nerazim), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_nerazim), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_nerazim), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Nzm, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Nzm, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Nzm, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Nzm, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_ner.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_ner.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_ner.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_ner.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_swarm) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderSwa, libBA400D1A_gv_color_swarm), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_swarm), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_swarm), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_swarm), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Swa, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Swa, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Swa, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Swa, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_swa.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_swa.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_swa.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_swa.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_infested) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderInf, libBA400D1A_gv_color_infested), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_infested), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_infested), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_infested), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Inf, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Inf, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Inf, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Inf, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_inf.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_inf.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_inf.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_inf.dds", PlayerGroupSingle(EventPlayer()));
        }
        else if (autoF83310A6_val == libBA400D1A_gv_check_covenant) {
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_HeaderCov, libBA400D1A_gv_color_covenant), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Fac, libBA400D1A_gv_color_covenant), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Fac, libBA400D1A_gv_color_covenant), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Fac, libBA400D1A_gv_color_covenant), PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0Cov, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1Cov, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2Cov, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3Cov, PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_cov.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_cov.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_cov.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_cov.dds", PlayerGroupSingle(EventPlayer()));
        }
        else {
        }
    }
    else {
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header0, TextWithColor(libBA400D1A_gv_information_Header, libBA400D1A_gv_color_heptacraft_headers), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header1, TextWithColor(libBA400D1A_gv_information_Header1Def, libBA400D1A_gv_color_heptacraft_headers), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header2, TextWithColor(libBA400D1A_gv_information_Header2Def, libBA400D1A_gv_color_heptacraft_headers), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_header3, TextWithColor(libBA400D1A_gv_information_Header3Def, libBA400D1A_gv_color_heptacraft_headers), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text0, libBA400D1A_gv_information_Text0, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text1, libBA400D1A_gv_information_Text1, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text2, libBA400D1A_gv_information_Text2, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_information_text3, libBA400D1A_gv_information_Text3, PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc, "HeptaCraft\\hepta_color_light.dds", PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc2, "HeptaCraft\\hepta_color_light.dds", PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc3, "HeptaCraft\\hepta_color_light.dds", PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_underline_cc4, "HeptaCraft\\hepta_color_light.dds", PlayerGroupSingle(EventPlayer()));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DisplayFactionInformation_Init () {
    libBA400D1A_gt_DisplayFactionInformation = TriggerCreate("libBA400D1A_gt_DisplayFactionInformation_Func");
    TriggerAddEventDialogControl(libBA400D1A_gt_DisplayFactionInformation, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: NotificationsDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_NotificationsDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(libBA400D1A_gv_dialogeSideX, libBA400D1A_gv_dialogesYD1, c_anchorTop, libBA400D1A_gv_dialogeSideOffsetX, libBA400D1A_gv_dialogesOffsetYStart, true);
    libBA400D1A_gv_aboutDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, libBA400D1A_gv_underlineY, StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_titleOffset, StringExternal("Param/Value/lib_BA400D1A_8248D488"), libBA400D1A_gv_color_heptacraft_headers, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_labelWidth, 460, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, libBA400D1A_gv_labelOffsetY, libBA400D1A_gv_news, ColorWithAlpha(0,0,0,0), false, 2.0);
    if ((libBA400D1A_gv_newsFlash == true)) {
        libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 32, 32, c_anchorTopRight, 16, 68, StringToText(""), "Assets\\Textures\\ui-news-icon.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
        libBA400D1A_gv_notificationsFlash1 = DialogControlLastCreated();
        libNtve_gf_SetDialogItemTintColor(DialogControlLastCreated(), libBA400D1A_gv_color_khala, PlayerGroupAll());
    }

    DialogSetVisible(DialogLastCreated(), PlayerGroupActive(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_NotificationsDialogue_Init () {
    libBA400D1A_gt_NotificationsDialogue = TriggerCreate("libBA400D1A_gt_NotificationsDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: NotificationsFlash
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_NotificationsFlash_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto1962BACD_val;

    // Conditions
    if (testConds) {
        if (!((libBA400D1A_gv_newsFlash == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_notificationsColor = (libBA400D1A_gv_notificationsColor + 1);
    auto1962BACD_val = libBA400D1A_gv_notificationsColor;
    if (auto1962BACD_val == 1) {
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_notificationsFlash1, "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds", PlayerGroupAll());
    }
    else if (auto1962BACD_val == 2) {
        libNtve_gf_SetDialogItemImage(libBA400D1A_gv_notificationsFlash1, "Assets\\Textures\\ui-news-icon.dds", PlayerGroupAll());
        libBA400D1A_gv_notificationsColor = 0;
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_NotificationsFlash_Init () {
    libBA400D1A_gt_NotificationsFlash = TriggerCreate("libBA400D1A_gt_NotificationsFlash_Func");
    TriggerAddEventTimePeriodic(libBA400D1A_gt_NotificationsFlash, 0.8, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TutorialDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TutorialDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(libBA400D1A_gv_dialogeSideX, libBA400D1A_gv_dialogesYD3, c_anchorTop, libBA400D1A_gv_dialogeSideOffsetX, (libBA400D1A_gv_dialogesOffsetYStart + libBA400D1A_gv_dialogesYD1 + libBA400D1A_gv_dialogesYD2 + libBA400D1A_gv_dialogesOffsetBetween + libBA400D1A_gv_dialogesOffsetBetween), true);
    libBA400D1A_gv_tutorialDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, libBA400D1A_gv_underlineY, StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_titleOffset, StringExternal("Param/Value/lib_BA400D1A_5E5C4102"), libBA400D1A_gv_color_heptacraft_headers, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_labelWidth, 460, c_anchorTopLeft, libBA400D1A_gv_labelOffsetX, libBA400D1A_gv_labelOffsetY, StringExternal("Param/Value/lib_BA400D1A_CF8571B4"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 0, 0, c_anchorTopLeft, 50, 136, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_437145F8"), libBA400D1A_gv_color_heptacraft_title), false);
    libBA400D1A_gv_check_TutorialGeneral = DialogControlLastCreated();
    DialogSetVisible(libBA400D1A_gv_tutorialDialogue, PlayerGroupAll(), true);
    libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 0, 0, c_anchorTopLeft, 50, 173, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_D0EFB024"), libBA400D1A_gv_color_heptacraft_title), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupActive(), true);
    libBA400D1A_gv_check_TutorialContext = DialogControlLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TutorialDialogue_Init () {
    libBA400D1A_gt_TutorialDialogue = TriggerCreate("libBA400D1A_gt_TutorialDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: VersionDialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_VersionDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(libBA400D1A_gv_dialogeSideX, (libBA400D1A_gv_dialogesYtotal - (libBA400D1A_gv_dialogesYD1 + libBA400D1A_gv_dialogesYD2 + libBA400D1A_gv_dialogesYD3 + libBA400D1A_gv_dialogesOffsetBetween + libBA400D1A_gv_dialogesOffsetBetween + libBA400D1A_gv_dialogesOffsetBetween)), c_anchorTop, libBA400D1A_gv_dialogeSideOffsetX, (libBA400D1A_gv_dialogesOffsetYStart + libBA400D1A_gv_dialogesYD1 + libBA400D1A_gv_dialogesYD2 + libBA400D1A_gv_dialogesYD3 + libBA400D1A_gv_dialogesOffsetBetween + libBA400D1A_gv_dialogesOffsetBetween + libBA400D1A_gv_dialogesOffsetBetween), true);
    libBA400D1A_gv_versionDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), (libBA400D1A_gv_dialogeSideX - libBA400D1A_gv_underlineX), libBA400D1A_gv_dialogesOffsetBetween, c_anchorTop, 0, libBA400D1A_gv_underlineY, StringToText(""), "HeptaCraft\\hepta_color_light.dds", c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_dialogeSideX, 50, c_anchorTopLeft, 0, libBA400D1A_gv_titleOffset, StringExternal("Param/Value/lib_BA400D1A_AA382588"), libBA400D1A_gv_color_heptacraft_headers, false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "BattleReportPanelMissionsCompleted", PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), libBA400D1A_gv_labelWidth, 40, c_anchorBottomLeft, libBA400D1A_gv_labelOffsetX, 0, (StringExternal("Param/Value/lib_BA400D1A_B1118EB5") + libBA400D1A_gv_version), ColorWithAlpha(0,0,0,0), false, 2.0);
    DialogSetVisible(DialogLastCreated(), PlayerGroupActive(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_VersionDialogue_Init () {
    libBA400D1A_gt_VersionDialogue = TriggerCreate("libBA400D1A_gt_VersionDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: RestoreCamera
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RestoreCamera_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueClear(c_triggerQueueRetain);
    Wait(5.0, c_timeReal);
    CameraSetValue(EventPlayer(), c_cameraValueDistance, 36.0, 1.0, -1, 10.0);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RestoreCamera_Init () {
    libBA400D1A_gt_RestoreCamera = TriggerCreate("libBA400D1A_gt_RestoreCamera_Func");
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 1, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 2, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 3, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 4, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 5, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 6, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 7, c_cameraMoveReasonAny);
    TriggerAddEventCameraMove(libBA400D1A_gt_RestoreCamera, 8, c_cameraMoveReasonAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: HighGroundMechanics
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_HighGroundMechanics_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitFilterMatch(libNtve_gf_AcquiredTarget(), UnitGetOwner(EventUnitTarget()), UnitFilter((1 << c_targetFilterGround), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true) && ((UnitGetType(EventUnit()) == "Adept") || (UnitGetType(EventUnit()) == "ImmortalShakuras") || (UnitGetType(EventUnit()) == "Ravager") || (UnitGetType(EventUnit()) == "Archon") || (UnitGetType(EventUnit()) == "HighTemplarTaldarim") || (UnitGetType(EventUnit()) == "MercHellion") || (UnitGetType(EventUnit()) == "Dragoon") || (UnitGetType(EventUnit()) == "MarineWarfield") || (UnitGetType(EventUnit()) == "MurlocMarine") || (UnitGetType(EventUnit()) == "Goliath") || (UnitGetType(EventUnit()) == "ImmortalTaldarim") || (UnitGetType(EventUnit()) == "Marauder") || (UnitGetType(EventUnit()) == "HybridDestroyer") || (UnitGetType(EventUnit()) == "HybridDominatorVoid") || (UnitGetType(EventUnit()) == "Hydralisk") || (UnitGetType(EventUnit()) == "InfestedTerranCampaign") || (UnitGetType(EventUnit()) == "WarPig") || (UnitGetType(EventUnit()) == "Marine") || (UnitGetType(EventUnit()) == "Roach") || (UnitGetType(EventUnit()) == "SentryAiur") || (UnitGetType(EventUnit()) == "SiegeTankSieged") || (UnitGetType(EventUnit()) == "SiegeTank") || (UnitGetType(EventUnit()) == "SiegeBreakerSieged") || (UnitGetType(EventUnit()) == "SiegeBreaker") || (UnitGetType(EventUnit()) == "Spectre") || (UnitGetType(EventUnit()) == "Stalker") || (UnitGetType(EventUnit()) == "VikingAssault") || (UnitGetType(EventUnit()) == "VoidArchon") || (UnitGetType(EventUnit()) == "Vulture") || (UnitGetType(EventUnit()) == "UmojanLabMicrobot") || (UnitGetType(EventUnit()) == "PhotonCannon") || (UnitGetType(EventUnit()) == "PlasmaCannon") || (UnitGetType(EventUnit()) == "SpineCrawler") || (UnitGetType(EventUnit()) == "NydusCanalAttacker") || (UnitGetType(EventUnit()) == "MissileBattery") || (UnitGetType(EventUnit()) == "KerriganChar") || (UnitGetType(EventUnit()) == "LurkerMPBurrowed") || (UnitGetType(EventUnit()) == "Baneling") || (UnitGetType(EventUnit()) == "DarkTemplarAiur") || (UnitGetType(EventUnit()) == "Reaper") || (UnitGetType(EventUnit()) == "Replicant") || (UnitGetType(EventUnit()) == "Brutalisk") || (UnitGetType(EventUnit()) == "Odin"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((CliffLevel(UnitGetPosition(libNtve_gf_AcquiredTarget())) > CliffLevel(UnitGetPosition(EventUnit())))) {
        UnitBehaviorAdd(EventUnit(), "HighGroundAdvantage", EventUnit(), 1);
    }
    else {
        UnitBehaviorRemove(EventUnit(), "HighGroundAdvantage", 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_HighGroundMechanics_Init () {
    libBA400D1A_gt_HighGroundMechanics = TriggerCreate("libBA400D1A_gt_HighGroundMechanics_Func");
    TriggerAddEventUnitStartedAttack2(libBA400D1A_gt_HighGroundMechanics, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spectate
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Spectate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8EF1D54A_g;
    int auto8EF1D54A_var;
    unitgroup autoE027B271_g;
    int autoE027B271_u;
    unit autoE027B271_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + TextWithColor(StringExternal("Param/Value/lib_BA400D1A_6B278FB0"), libBA400D1A_gv_color_heptacraft_title)));
    MeleeSetOption(EventPlayer(), c_meleeOptionReveal, false);
    MeleeSetOption(EventPlayer(), c_meleeOptionVictory, false);
    MeleeSetOption(EventPlayer(), c_meleeOptionStalemate, false);
    MeleeSetOption(EventPlayer(), c_meleeOptionDefeat, false);
    auto8EF1D54A_g = PlayerGroupActive();
    auto8EF1D54A_var = -1;
    while (true) {
        auto8EF1D54A_var = PlayerGroupNextPlayer(auto8EF1D54A_g, auto8EF1D54A_var);
        if (auto8EF1D54A_var < 0) { break; }
        libNtve_gf_SetAlliance(EventPlayer(), auto8EF1D54A_var, libNtve_ge_AllianceSetting_Enemy);
    }
    autoE027B271_g = UnitGroup(null, EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE027B271_u = UnitGroupCount(autoE027B271_g, c_unitCountAll);
    for (;; autoE027B271_u -= 1) {
        autoE027B271_var = UnitGroupUnitFromEnd(autoE027B271_g, autoE027B271_u);
        if (autoE027B271_var == null) { break; }
        UnitRemove(autoE027B271_var);
    }
    VisRevealArea(EventPlayer(), RegionEntireMap(), 0.0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Spectate_Init () {
    libBA400D1A_gt_Spectate = TriggerCreate("libBA400D1A_gt_Spectate_Func");
    TriggerEnable(libBA400D1A_gt_Spectate, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_Spectate, c_playerAny, "-surrender", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RaiseSupply230
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RaiseSupply230_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_TriggeringProgressUpgrade() == "RaiseSupplyCapto230"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropSuppliesLimit, c_playerPropOperSetTo, 230);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RaiseSupply230_Init () {
    libBA400D1A_gt_RaiseSupply230 = TriggerCreate("libBA400D1A_gt_RaiseSupply230_Func");
    TriggerAddEventUnitResearchProgress(libBA400D1A_gt_RaiseSupply230, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RaiseSupply255
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RaiseSupply255_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_TriggeringProgressUpgrade() == "RaiseSupplyCapto255"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropSuppliesLimit, c_playerPropOperSetTo, 255);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RaiseSupply255_Init () {
    libBA400D1A_gt_RaiseSupply255 = TriggerCreate("libBA400D1A_gt_RaiseSupply255_Func");
    TriggerAddEventUnitResearchProgress(libBA400D1A_gt_RaiseSupply255, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RaiseSupply280
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RaiseSupply280_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_TriggeringProgressUpgrade() == "RaiseSupplyCapto280"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropSuppliesLimit, c_playerPropOperSetTo, 280);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RaiseSupply280_Init () {
    libBA400D1A_gt_RaiseSupply280 = TriggerCreate("libBA400D1A_gt_RaiseSupply280_Func");
    TriggerAddEventUnitResearchProgress(libBA400D1A_gt_RaiseSupply280, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Day/Night Dialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DayNightDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoDE863CBE_g;
    int autoDE863CBE_var;

    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(118, 28, c_anchorBottomLeft, 175, 310, true);
    libBA400D1A_gv_dayNightDialogue = DialogLastCreated();
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 80, 28, c_anchorTopLeft, 35, 4, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_1F1B0317"), libBA400D1A_gv_color_day), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "MissionTimePanel", PlayerGroupAll());
    libBA400D1A_gv_dayNightLabel = DialogControlLastCreated();
    libNtve_gf_SetDialogItemTooltip(libBA400D1A_gv_dayNightLabel, libBA400D1A_gv_daytimeTooltip, PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 28, 28, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\decal_terran_0011_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_day, c_triggerBlendModeLighten);
    libBA400D1A_gv_dayNightIcon = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    autoDE863CBE_g = PlayerGroupActive();
    autoDE863CBE_var = -1;
    while (true) {
        autoDE863CBE_var = PlayerGroupNextPlayer(autoDE863CBE_g, autoDE863CBE_var);
        if (autoDE863CBE_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(autoDE863CBE_var, "DaytimeBonus", 1);
        libNtve_gf_SetUpgradeLevelForPlayer(autoDE863CBE_var, "NighttimeBonus", 0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DayNightDialogue_Init () {
    libBA400D1A_gt_DayNightDialogue = TriggerCreate("libBA400D1A_gt_DayNightDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DayNightChange
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DayNightChange_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto85C5F3A0_g;
    int auto85C5F3A0_var;
    playergroup autoCC743ADB_g;
    int autoCC743ADB_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_daytime == false)) {
        libBA400D1A_gv_daytime = true;
        GameSetLighting("MarSaraCampaignDay", 5.5);
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_dayNightLabel, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_B26C564F"), libBA400D1A_gv_color_day), PlayerGroupAll());
        DialogControlDestroy(libBA400D1A_gv_dayNightIcon);
        libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_dayNightDialogue, 28, 28, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\decal_terran_0011_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_day, c_triggerBlendModeLighten);
        libBA400D1A_gv_dayNightIcon = DialogControlLastCreated();
        libNtve_gf_SetDialogItemTooltip(libBA400D1A_gv_dayNightLabel, libBA400D1A_gv_daytimeTooltip, PlayerGroupAll());
        auto85C5F3A0_g = PlayerGroupActive();
        auto85C5F3A0_var = -1;
        while (true) {
            auto85C5F3A0_var = PlayerGroupNextPlayer(auto85C5F3A0_g, auto85C5F3A0_var);
            if (auto85C5F3A0_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(auto85C5F3A0_var, "DaytimeBonus", 1);
            libNtve_gf_SetUpgradeLevelForPlayer(auto85C5F3A0_var, "NighttimeBonus", 0);
        }
    }
    else {
        libBA400D1A_gv_daytime = false;
        GameSetLighting("KorhalNight", 5.5);
        libNtve_gf_SetDialogItemText(libBA400D1A_gv_dayNightLabel, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_B51E5C35"), libBA400D1A_gv_color_night), PlayerGroupAll());
        DialogControlDestroy(libBA400D1A_gv_dayNightIcon);
        libNtve_gf_CreateDialogItemImage(libBA400D1A_gv_dayNightDialogue, 28, 28, c_anchorTopLeft, 0, 0, StringToText(""), "Assets\\Textures\\decal_terran_0011_01.dds", c_triggerImageTypeNormal, false, libBA400D1A_gv_color_night, c_triggerBlendModeLighten);
        libBA400D1A_gv_dayNightIcon = DialogControlLastCreated();
        libNtve_gf_SetDialogItemTooltip(libBA400D1A_gv_dayNightLabel, libBA400D1A_gv_nighttimeTooltip, PlayerGroupAll());
        autoCC743ADB_g = PlayerGroupActive();
        autoCC743ADB_var = -1;
        while (true) {
            autoCC743ADB_var = PlayerGroupNextPlayer(autoCC743ADB_g, autoCC743ADB_var);
            if (autoCC743ADB_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(autoCC743ADB_var, "DaytimeBonus", 0);
            libNtve_gf_SetUpgradeLevelForPlayer(autoCC743ADB_var, "NighttimeBonus", 1);
        }
    }
    TimerStart(libBA400D1A_gv_daylightTimer, libBA400D1A_gv_dayNightCycleLenght, false, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DayNightChange_Init () {
    libBA400D1A_gt_DayNightChange = TriggerCreate("libBA400D1A_gt_DayNightChange_Func");
    TriggerAddEventTimer(libBA400D1A_gt_DayNightChange, libBA400D1A_gv_daylightTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PatriotBomb
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_PatriotBomb_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointWithOffsetPolar(UnitGetPosition(EventUnit()), 30.0, UnitGetFacing(EventUnit()))), c_orderQueueAddToFront);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_PatriotBomb_Init () {
    libBA400D1A_gt_PatriotBomb = TriggerCreate("libBA400D1A_gt_PatriotBomb_Func");
    TriggerEnable(libBA400D1A_gt_PatriotBomb, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_PatriotBomb, null, AbilityCommand("CarpetBomb", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colossus
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Colossus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 2), EventUnitTargetPoint()), c_orderQueueAddToFront);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Colossus_Init () {
    libBA400D1A_gt_Colossus = TriggerCreate("libBA400D1A_gt_Colossus_Func");
    TriggerEnable(libBA400D1A_gt_Colossus, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_Colossus, null, AbilityCommand("Firestorm", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InstantReturn
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_InstantReturn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_energy;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((TechTreeUpgradeCount(EventPlayer(), "ImmortalRevive", c_techCountCompleteOnly) == 1) && (UnitGetType(EventUnit()) == "Zealot")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_energy = (UnitGetPropertyFixed(UnitGroupClosestToPoint(UnitGroup("CyberneticsCore", EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(EventUnit())), c_unitPropEnergy, c_unitPropCurrent) + 1.0);
    UnitSetPropertyFixed(UnitGroupClosestToPoint(UnitGroup("CyberneticsCore", EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(EventUnit())), c_unitPropEnergy, lv_energy);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_InstantReturn_Init () {
    libBA400D1A_gt_InstantReturn = TriggerCreate("libBA400D1A_gt_InstantReturn_Func");
    TriggerEnable(libBA400D1A_gt_InstantReturn, false);
    TriggerAddEventUnitDied(libBA400D1A_gt_InstantReturn, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zergling
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Zergling_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitProgressUnit()) == "Zergling"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_zergling[EventPlayer()] == true)) {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionSpineArmor", EventUnitProgressUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionAgility", EventUnitProgressUnit(), 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Zergling_Init () {
    libBA400D1A_gt_Zergling = TriggerCreate("libBA400D1A_gt_Zergling_Func");
    TriggerEnable(libBA400D1A_gt_Zergling, false);
    TriggerAddEventUnitTrainProgress(libBA400D1A_gt_Zergling, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hydra
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Hydra_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitProgressUnit()) == "Hydralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_hydra[EventPlayer()] == true)) {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionKiller", EventUnitProgressUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionHunter", EventUnitProgressUnit(), 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Hydra_Init () {
    libBA400D1A_gt_Hydra = TriggerCreate("libBA400D1A_gt_Hydra_Func");
    TriggerEnable(libBA400D1A_gt_Hydra, false);
    TriggerAddEventUnitTrainProgress(libBA400D1A_gt_Hydra, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lurker
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Lurker_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(EventUnit(), "AdaptionHunter", 1);
    UnitBehaviorRemove(EventUnit(), "AdaptionKiller", 1);
    if ((libBA400D1A_gv_lurker[EventPlayer()] == true)) {
        UnitBehaviorAdd(EventUnit(), "AdaptionImpale", EventUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnit(), "AdaptionSpines", EventUnit(), 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Lurker_Init () {
    libBA400D1A_gt_Lurker = TriggerCreate("libBA400D1A_gt_Lurker_Func");
    TriggerEnable(libBA400D1A_gt_Lurker, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_Lurker, null, AbilityCommand("MorphToLurker", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Muta
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Muta_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnitProgressUnit()) == "Mutalisk") || (UnitGetType(EventUnit()) == "Mutalisk") || (UnitGetType(EventUnit()) == "GuardianCocoonMP")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_muta[EventPlayer()] == true)) {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionCarapace", EventUnitProgressUnit(), 1);
        UnitBehaviorAdd(EventUnit(), "AdaptionCarapace", EventUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionGlaive", EventUnitProgressUnit(), 1);
        UnitBehaviorAdd(EventUnit(), "AdaptionGlaive", EventUnit(), 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Muta_Init () {
    libBA400D1A_gt_Muta = TriggerCreate("libBA400D1A_gt_Muta_Func");
    TriggerEnable(libBA400D1A_gt_Muta, false);
    TriggerAddEventUnitTrainProgress(libBA400D1A_gt_Muta, null, c_unitProgressStageComplete);
    TriggerAddEventUnitAbility(libBA400D1A_gt_Muta, null, AbilityCommand("MorphToDevourer", 1), c_unitAbilStageAll, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_Muta, null, AbilityCommand("MorphToGuardianMP", 1), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultra
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Ultra_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitProgressUnit()) == "Ultralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_ultra[EventPlayer()] == true)) {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionTorrasque", EventUnitProgressUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnitProgressUnit(), "AdaptionPygalisk", EventUnitProgressUnit(), 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Ultra_Init () {
    libBA400D1A_gt_Ultra = TriggerCreate("libBA400D1A_gt_Ultra_Func");
    TriggerEnable(libBA400D1A_gt_Ultra, false);
    TriggerAddEventUnitTrainProgress(libBA400D1A_gt_Ultra, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionAgility
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionAgility_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_zergling[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionAgility_Init () {
    libBA400D1A_gt_UseAdaptionAgility = TriggerCreate("libBA400D1A_gt_UseAdaptionAgility_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionAgility, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionAgility, null, AbilityCommand("AdaptAgility", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionSpineArmor
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionSpineArmor_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_zergling[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionSpineArmor_Init () {
    libBA400D1A_gt_UseAdaptionSpineArmor = TriggerCreate("libBA400D1A_gt_UseAdaptionSpineArmor_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionSpineArmor, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionSpineArmor, null, AbilityCommand("AdaptSpineArmor", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionCarapace
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionCarapace_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_muta[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionCarapace_Init () {
    libBA400D1A_gt_UseAdaptionCarapace = TriggerCreate("libBA400D1A_gt_UseAdaptionCarapace_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionCarapace, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionCarapace, null, AbilityCommand("AdaptCarapace", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionGlaive
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionGlaive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_muta[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionGlaive_Init () {
    libBA400D1A_gt_UseAdaptionGlaive = TriggerCreate("libBA400D1A_gt_UseAdaptionGlaive_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionGlaive, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionGlaive, null, AbilityCommand("AdaptGlaive", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionHunter
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionHunter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_hydra[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionHunter_Init () {
    libBA400D1A_gt_UseAdaptionHunter = TriggerCreate("libBA400D1A_gt_UseAdaptionHunter_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionHunter, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionHunter, null, AbilityCommand("AdaptHunter", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionSpines
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionSpines_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_lurker[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionSpines_Init () {
    libBA400D1A_gt_UseAdaptionSpines = TriggerCreate("libBA400D1A_gt_UseAdaptionSpines_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionSpines, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionSpines, null, AbilityCommand("AdaptPygalisk2", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionImpale
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionImpale_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_lurker[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionImpale_Init () {
    libBA400D1A_gt_UseAdaptionImpale = TriggerCreate("libBA400D1A_gt_UseAdaptionImpale_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionImpale, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionImpale, null, AbilityCommand("AdaptTorrasque2", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionKiller
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionKiller_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_hydra[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionKiller_Init () {
    libBA400D1A_gt_UseAdaptionKiller = TriggerCreate("libBA400D1A_gt_UseAdaptionKiller_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionKiller, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionKiller, null, AbilityCommand("AdaptKiller", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionPygalisk
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionPygalisk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_ultra[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionPygalisk_Init () {
    libBA400D1A_gt_UseAdaptionPygalisk = TriggerCreate("libBA400D1A_gt_UseAdaptionPygalisk_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionPygalisk, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionPygalisk, null, AbilityCommand("AdaptPygalisk", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UseAdaptionTorrasque
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_UseAdaptionTorrasque_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_ultra[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_UseAdaptionTorrasque_Init () {
    libBA400D1A_gt_UseAdaptionTorrasque = TriggerCreate("libBA400D1A_gt_UseAdaptionTorrasque_Func");
    TriggerEnable(libBA400D1A_gt_UseAdaptionTorrasque, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_UseAdaptionTorrasque, null, AbilityCommand("AdaptTorrasque", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TurnOnAdaptionTriggers
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TurnOnAdaptionTriggers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(libBA400D1A_gt_UseAdaptionAgility, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionCarapace, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionGlaive, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionHunter, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionKiller, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionImpale, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionSpines, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionPygalisk, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionSpineArmor, true);
    TriggerEnable(libBA400D1A_gt_UseAdaptionTorrasque, true);
    TriggerEnable(libBA400D1A_gt_Zergling, true);
    TriggerEnable(libBA400D1A_gt_Hydra, true);
    TriggerEnable(libBA400D1A_gt_Lurker, true);
    TriggerEnable(libBA400D1A_gt_Muta, true);
    TriggerEnable(libBA400D1A_gt_Ultra, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TurnOnAdaptionTriggers_Init () {
    libBA400D1A_gt_TurnOnAdaptionTriggers = TriggerCreate("libBA400D1A_gt_TurnOnAdaptionTriggers_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherSelectStart
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherSelectStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto33104C49_g;
    int auto33104C49_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto33104C49_g = PlayerGroupActive();
    auto33104C49_var = -1;
    while (true) {
        auto33104C49_var = PlayerGroupNextPlayer(auto33104C49_g, auto33104C49_var);
        if (auto33104C49_var < 0) { break; }
        if ((libBA400D1A_gv_player_faction[auto33104C49_var] == "infested")) {
            DialogCreate(76, 76, c_anchorTopLeft, 23, 23, true);
            libBA400D1A_gv_brood_mother_select_diag = DialogLastCreated();
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 76, 76, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/lib_BA400D1A_A7F77DA1"), StringToText(""), "");
            libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "HeptaCraft\\queenbutton.dds", PlayerGroupAll());
            libNtve_gf_SetDialogItemImage2(DialogControlLastCreated(), "HeptaCraft\\queenbutton.dds", PlayerGroupAll());
            libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
            libNtve_gf_SetDialogItemHotkey(DialogControlLastCreated(), c_hotkeyHeroSelect0, PlayerGroupSingle(auto33104C49_var));
            libBA400D1A_gv_brood_mother_select = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 40, 20, c_anchorBottomRight, 0, 0, StringExternal("Param/Value/lib_BA400D1A_5B09DEB1"), Color(100,100,100), false, 2.0);
            DialogSetVisible(DialogLastCreated(), PlayerGroupSingle(auto33104C49_var), true);
            DialogCreate(1, 1, c_anchorBottomLeft, 0, 0, true);
            libBA400D1A_gv_brood_mother_select_off_diag = DialogLastCreated();
            DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 1, 1, c_anchorTopLeft, 0, 0, StringToText(""), StringToText(""), "");
            libNtve_gf_SetDialogItemHotkey(DialogControlLastCreated(), c_hotkeyHeroSelect2, PlayerGroupSingle(auto33104C49_var));
            libBA400D1A_gv_brood_mother_select_off = DialogControlLastCreated();
            DialogSetVisible(DialogLastCreated(), PlayerGroupSingle(auto33104C49_var), true);
        }

    }
    TriggerEnable(libBA400D1A_gt_BroodMotherSelectHK, true);
    TriggerEnable(libBA400D1A_gt_BroodMotherSelectHKOff, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherSelectStart_Init () {
    libBA400D1A_gt_BroodMotherSelectStart = TriggerCreate("libBA400D1A_gt_BroodMotherSelectStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherRally
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherRally_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnitCreatedUnit(), OrderTargetingPoint(AbilityCommand("Rally", 0), UnitRallyPointTargetPoint(EventUnit(), 1, 1)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherRally_Init () {
    libBA400D1A_gt_BroodMotherRally = TriggerCreate("libBA400D1A_gt_BroodMotherRally_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherRally, false);
    TriggerAddEventUnitCreated(libBA400D1A_gt_BroodMotherRally, null, "SwarmQueenTrain", null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherSelectHK
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherSelectHK_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == libBA400D1A_gv_brood_mother_select))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(libBA400D1A_gt_BroodMotherSelect, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherSelectHK_Init () {
    libBA400D1A_gt_BroodMotherSelectHK = TriggerCreate("libBA400D1A_gt_BroodMotherSelectHK_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherSelectHK, false);
    TriggerAddEventDialogControl(libBA400D1A_gt_BroodMotherSelectHK, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeHotkeyPressed);
    TriggerAddEventDialogControl(libBA400D1A_gt_BroodMotherSelectHK, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherSelectHKOff
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherSelectHKOff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == libBA400D1A_gv_brood_mother_select_off))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogDestroy(libBA400D1A_gv_brood_mother_select_diag);
    DialogDestroy(libBA400D1A_gv_brood_mother_select_off_diag);
    TriggerEnable(libBA400D1A_gt_BroodMotherSelectHK, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherSelectHKOff_Init () {
    libBA400D1A_gt_BroodMotherSelectHKOff = TriggerCreate("libBA400D1A_gt_BroodMotherSelectHKOff_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherSelectHKOff, false);
    TriggerAddEventDialogControl(libBA400D1A_gt_BroodMotherSelectHKOff, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeHotkeyPressed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherSelect
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherSelect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_broodMothers;

    // Automatic Variable Declarations
    unitgroup autoA95EF541_g;
    int autoA95EF541_u;
    unit autoA95EF541_var;
    unitgroup auto50B3475E_g;
    int auto50B3475E_u;
    unit auto50B3475E_var;
    unitgroup autoEDD7D5AF_g;
    int autoEDD7D5AF_u;
    unit autoEDD7D5AF_var;
    unitgroup autoDDF8C01A_g;
    int autoDDF8C01A_u;
    unit autoDDF8C01A_var;
    unitgroup auto0FC6970E_g;
    int auto0FC6970E_u;
    unit auto0FC6970E_var;

    // Variable Initialization
    lv_broodMothers = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoA95EF541_g = lv_broodMothers;
    autoA95EF541_u = UnitGroupCount(autoA95EF541_g, c_unitCountAll);
    for (;; autoA95EF541_u -= 1) {
        autoA95EF541_var = UnitGroupUnitFromEnd(autoA95EF541_g, autoA95EF541_u);
        if (autoA95EF541_var == null) { break; }
        UnitGroupRemove(lv_broodMothers, autoA95EF541_var);
    }
    UnitClearSelection(EventPlayer());
    auto50B3475E_g = UnitGroup("KerriganChar", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto50B3475E_u = UnitGroupCount(auto50B3475E_g, c_unitCountAll);
    for (;; auto50B3475E_u -= 1) {
        auto50B3475E_var = UnitGroupUnitFromEnd(auto50B3475E_g, auto50B3475E_u);
        if (auto50B3475E_var == null) { break; }
        UnitGroupAdd(lv_broodMothers, auto50B3475E_var);
    }
    autoEDD7D5AF_g = UnitGroup("SwarmQueen", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEDD7D5AF_u = UnitGroupCount(autoEDD7D5AF_g, c_unitCountAll);
    for (;; autoEDD7D5AF_u -= 1) {
        autoEDD7D5AF_var = UnitGroupUnitFromEnd(autoEDD7D5AF_g, autoEDD7D5AF_u);
        if (autoEDD7D5AF_var == null) { break; }
        UnitGroupAdd(lv_broodMothers, autoEDD7D5AF_var);
    }
    autoDDF8C01A_g = UnitGroup("LargeSwarmQueen", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDDF8C01A_u = UnitGroupCount(autoDDF8C01A_g, c_unitCountAll);
    for (;; autoDDF8C01A_u -= 1) {
        autoDDF8C01A_var = UnitGroupUnitFromEnd(autoDDF8C01A_g, autoDDF8C01A_u);
        if (autoDDF8C01A_var == null) { break; }
        UnitGroupAdd(lv_broodMothers, autoDDF8C01A_var);
    }
    auto0FC6970E_g = UnitGroup("HugeSwarmQueen", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0FC6970E_u = UnitGroupCount(auto0FC6970E_g, c_unitCountAll);
    for (;; auto0FC6970E_u -= 1) {
        auto0FC6970E_var = UnitGroupUnitFromEnd(auto0FC6970E_g, auto0FC6970E_u);
        if (auto0FC6970E_var == null) { break; }
        UnitGroupAdd(lv_broodMothers, auto0FC6970E_var);
    }
    UnitClearSelection(EventPlayer());
    Wait(0.05, c_timeGame);
    UnitGroupSelect(lv_broodMothers, EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherSelect_Init () {
    libBA400D1A_gt_BroodMotherSelect = TriggerCreate("libBA400D1A_gt_BroodMotherSelect_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherSelect, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_BroodMotherSelect, null, AbilityCommand("SelectBroodMothers", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OrbitalUpdate
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_OrbitalUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    VisRevealArea(EventPlayer(), RegionEntireMap(), 1.0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_OrbitalUpdate_Init () {
    libBA400D1A_gt_OrbitalUpdate = TriggerCreate("libBA400D1A_gt_OrbitalUpdate_Func");
    TriggerEnable(libBA400D1A_gt_OrbitalUpdate, false);
    TriggerAddEventUnitAbility(libBA400D1A_gt_OrbitalUpdate, null, AbilityCommand("MoebiusOrbitalUpdate", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PredatorKidnap
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_PredatorKidnap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointWithOffsetPolar(UnitGetPosition(EventUnitDamageSourceUnit()), 1.2, UnitGetFacing(EventUnitDamageSourceUnit())), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_PredatorKidnap_Init () {
    libBA400D1A_gt_PredatorKidnap = TriggerCreate("libBA400D1A_gt_PredatorKidnap_Func");
    TriggerEnable(libBA400D1A_gt_PredatorKidnap, false);
    TriggerAddEventUnitDamaged(libBA400D1A_gt_PredatorKidnap, null, c_unitDamageTypeAny, c_unitDamageEither, "PredatorKidnapDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MothershipDevoteeSouls
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_MothershipDevoteeSouls_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_energy;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "ZealotAiur"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_energy = (UnitGetPropertyFixed(UnitGroupClosestToPoint(UnitGroup("Flagship", EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(EventUnit())), c_unitPropEnergy, c_unitPropCurrent) + 1.0);
    UnitSetPropertyFixed(UnitGroupClosestToPoint(UnitGroup("Flagship", EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(EventUnit())), c_unitPropEnergy, lv_energy);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_MothershipDevoteeSouls_Init () {
    libBA400D1A_gt_MothershipDevoteeSouls = TriggerCreate("libBA400D1A_gt_MothershipDevoteeSouls_Func");
    TriggerEnable(libBA400D1A_gt_MothershipDevoteeSouls, false);
    TriggerAddEventUnitDied(libBA400D1A_gt_MothershipDevoteeSouls, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MothershipTrainAnim
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_MothershipTrainAnim_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_energy;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Flagship"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitCreatedUnit()) == "HighTemplarTaldarim")) {
        UnitIssueOrder(EventUnitCreatedUnit(), OrderTargetingPoint(AbilityCommand("move", 0), UnitRallyPointTargetPoint(EventUnit(), 1, 1)), c_orderQueueReplace);
    }

    UnitBehaviorAdd(EventUnit(), "MothershipTrainingComplete", EventUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_MothershipTrainAnim_Init () {
    libBA400D1A_gt_MothershipTrainAnim = TriggerCreate("libBA400D1A_gt_MothershipTrainAnim_Func");
    TriggerEnable(libBA400D1A_gt_MothershipTrainAnim, false);
    TriggerAddEventUnitCreated(libBA400D1A_gt_MothershipTrainAnim, null, "RebirthAscendant", null);
    TriggerAddEventUnitTrainProgress(libBA400D1A_gt_MothershipTrainAnim, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MothershipRotation
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_MothershipRotation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2D6052AD_g;
    int auto2D6052AD_u;
    unit auto2D6052AD_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2D6052AD_g = UnitGroup("Flagship", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterRobotic) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2D6052AD_u = UnitGroupCount(auto2D6052AD_g, c_unitCountAll);
    for (;; auto2D6052AD_u -= 1) {
        auto2D6052AD_var = UnitGroupUnitFromEnd(auto2D6052AD_g, auto2D6052AD_u);
        if (auto2D6052AD_var == null) { break; }
        if ((UnitGetPropertyFixed(auto2D6052AD_var, c_unitPropMovementSpeedCurrent, c_unitPropCurrent) == 0.0)) {
            UnitSetFacing(auto2D6052AD_var, (UnitGetFacing(auto2D6052AD_var) + 2.0), 1.0);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_MothershipRotation_Init () {
    libBA400D1A_gt_MothershipRotation = TriggerCreate("libBA400D1A_gt_MothershipRotation_Func");
    TriggerEnable(libBA400D1A_gt_MothershipRotation, false);
    TriggerAddEventTimePeriodic(libBA400D1A_gt_MothershipRotation, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: PlanetaryFortressAttackPriority
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_PlanetaryFortressAttackPriority_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9F67DAD1_g;
    int auto9F67DAD1_u;
    unit auto9F67DAD1_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9F67DAD1_g = UnitGroup("PlanetaryFortress", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9F67DAD1_u = UnitGroupCount(auto9F67DAD1_g, c_unitCountAll);
    for (;; auto9F67DAD1_u -= 1) {
        auto9F67DAD1_var = UnitGroupUnitFromEnd(auto9F67DAD1_g, auto9F67DAD1_u);
        if (auto9F67DAD1_var == null) { break; }
        if ((UnitGroupCount(UnitGroup("SCV2", UnitGetOwner(auto9F67DAD1_var), RegionCircle(UnitGetPosition(auto9F67DAD1_var), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
        }
        else {
            UnitBehaviorAdd(auto9F67DAD1_var, "IncreaseAttackPriority", auto9F67DAD1_var, 1);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_PlanetaryFortressAttackPriority_Init () {
    libBA400D1A_gt_PlanetaryFortressAttackPriority = TriggerCreate("libBA400D1A_gt_PlanetaryFortressAttackPriority_Func");
    TriggerEnable(libBA400D1A_gt_PlanetaryFortressAttackPriority, false);
    TriggerAddEventTimePeriodic(libBA400D1A_gt_PlanetaryFortressAttackPriority, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: VoidRayLoseCharge
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_VoidRayLoseCharge_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(EventUnit(), "VoidRayChargeBeamRangePhase2", 1);
    UnitBehaviorRemove(EventUnit(), "VoidRayChargeBeamRangePhase3", 1);
    UnitBehaviorRemove(EventUnit(), "VoidRayChargeBeamRangeCounter", 30);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_VoidRayLoseCharge_Init () {
    libBA400D1A_gt_VoidRayLoseCharge = TriggerCreate("libBA400D1A_gt_VoidRayLoseCharge_Func");
    TriggerEnable(libBA400D1A_gt_VoidRayLoseCharge, false);
    TriggerAddEventUnitStartedAttack2(libBA400D1A_gt_VoidRayLoseCharge, null, "VoidRayChargeBeamRange");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Terrazine Dialogue
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TerrazineDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(32, 28, c_anchorBottomLeft, 350, 276, true);
    DialogSetImage(DialogLastCreated(), "Assets\\Textures\\void_pure_black_backgroundcolor_diff.dds");
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 32, 32, c_anchorCenter, 0, 0, StringExternal("Param/Value/lib_BA400D1A_CACF6280"), "Assets\\Textures\\btn-tips-droppedterrazine.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 32, 28, c_anchorTopLeft, 7, 4, IntToText(1), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "MissionTimePanel", PlayerGroupAll());
    libBA400D1A_gv_terrazineLabel = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TerrazineDialogue_Init () {
    libBA400D1A_gt_TerrazineDialogue = TriggerCreate("libBA400D1A_gt_TerrazineDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Terrazine
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_AddTerrazine_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8A500C92_g;
    int auto8A500C92_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libBA400D1A_gv_terrazineBonusCounter = (libBA400D1A_gv_terrazineBonusCounter + 1);
    auto8A500C92_g = PlayerGroupActive();
    auto8A500C92_var = -1;
    while (true) {
        auto8A500C92_var = PlayerGroupNextPlayer(auto8A500C92_g, auto8A500C92_var);
        if (auto8A500C92_var < 0) { break; }
        PlayerModifyPropertyInt(auto8A500C92_var, c_playerPropTerrazine, c_playerPropOperAdd, libBA400D1A_gv_terrazineBonus);
    }
    libBA400D1A_gv_terrazineBonus = MinI(libBA400D1A_gv_terrazineBonus, 7);
    if ((libBA400D1A_gv_terrazineBonusCounter == 3)) {
        libBA400D1A_gv_terrazineBonus = (libBA400D1A_gv_terrazineBonus + 1);
        libBA400D1A_gv_terrazineBonus = MinI(libBA400D1A_gv_terrazineBonus, 7);
        libBA400D1A_gv_terrazineBonusCounter = 0;
    }

    libNtve_gf_SetDialogItemText(libBA400D1A_gv_terrazineLabel, IntToText(libBA400D1A_gv_terrazineBonus), PlayerGroupAll());
    TimerStart(libBA400D1A_gv_terrazineTimer, libBA400D1A_gv_terrazineDelay, false, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_AddTerrazine_Init () {
    libBA400D1A_gt_AddTerrazine = TriggerCreate("libBA400D1A_gt_AddTerrazine_Func");
    TriggerAddEventTimer(libBA400D1A_gt_AddTerrazine, libBA400D1A_gv_terrazineTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TutorialOnOffHotkey
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TutorialOnOffHotkey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    bool auto94F77E68_val;

    // Actions
    if (!runActions) {
        return true;
    }

    auto94F77E68_val = libBA400D1A_gv_tutorialContextEnabled[0];
    if (auto94F77E68_val == false) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_F734FD68"), libBA400D1A_gv_color_heptacraft_title));
        libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_TutorialContext, true, PlayerGroupSingle(EventPlayer()));
        libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] = true;
    }
    else if (auto94F77E68_val == true) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_33186F3D"), libBA400D1A_gv_color_heptacraft_headers));
        libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] = false;
        libNtve_gf_SetDialogItemChecked(libBA400D1A_gv_check_TutorialContext, false, PlayerGroupSingle(EventPlayer()));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TutorialOnOffHotkey_Init () {
    libBA400D1A_gt_TutorialOnOffHotkey = TriggerCreate("libBA400D1A_gt_TutorialOnOffHotkey_Func");
    TriggerAddEventKeyPressed(libBA400D1A_gt_TutorialOnOffHotkey, c_playerAny, c_keyF12, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TutorialAdvancedInfoHotkey
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_TutorialAdvancedInfoHotkey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libBA400D1A_gv_tutorialGeneralEnabled[0] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(libBA400D1A_gv_moreInfo, libBA400D1A_gv_color_heptacraft_title));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_TutorialAdvancedInfoHotkey_Init () {
    libBA400D1A_gt_TutorialAdvancedInfoHotkey = TriggerCreate("libBA400D1A_gt_TutorialAdvancedInfoHotkey_Func");
    TriggerEnable(libBA400D1A_gt_TutorialAdvancedInfoHotkey, false);
    TriggerAddEventKeyPressed(libBA400D1A_gt_TutorialAdvancedInfoHotkey, c_playerAny, c_keyF8, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip0
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip0_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto09842529_g;
    int auto09842529_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto09842529_g = PlayerGroupActive();
    auto09842529_var = -1;
    while (true) {
        auto09842529_var = PlayerGroupNextPlayer(auto09842529_g, auto09842529_var);
        if (auto09842529_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto09842529_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_29BC3D45");
            UIDisplayMessage(PlayerGroupSingle(auto09842529_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_D7A7BEC0"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip0_Init () {
    libBA400D1A_gt_GeneralTip0 = TriggerCreate("libBA400D1A_gt_GeneralTip0_Func");
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip0, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip1
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1808EADD_g;
    int auto1808EADD_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1808EADD_g = PlayerGroupActive();
    auto1808EADD_var = -1;
    while (true) {
        auto1808EADD_var = PlayerGroupNextPlayer(auto1808EADD_g, auto1808EADD_var);
        if (auto1808EADD_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto1808EADD_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_2979E604");
            UIDisplayMessage(PlayerGroupSingle(auto1808EADD_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_51C3C088"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip1_Init () {
    libBA400D1A_gt_GeneralTip1 = TriggerCreate("libBA400D1A_gt_GeneralTip1_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip1, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip1, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip2
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto466509E3_g;
    int auto466509E3_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto466509E3_g = PlayerGroupActive();
    auto466509E3_var = -1;
    while (true) {
        auto466509E3_var = PlayerGroupNextPlayer(auto466509E3_g, auto466509E3_var);
        if (auto466509E3_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto466509E3_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_8F85276B");
            UIDisplayMessage(PlayerGroupSingle(auto466509E3_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_67EA8998"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip2_Init () {
    libBA400D1A_gt_GeneralTip2 = TriggerCreate("libBA400D1A_gt_GeneralTip2_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip2, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip2, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip3
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF50ECC37_g;
    int autoF50ECC37_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF50ECC37_g = PlayerGroupActive();
    autoF50ECC37_var = -1;
    while (true) {
        autoF50ECC37_var = PlayerGroupNextPlayer(autoF50ECC37_g, autoF50ECC37_var);
        if (autoF50ECC37_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[autoF50ECC37_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_AB637265");
            UIDisplayMessage(PlayerGroupSingle(autoF50ECC37_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_F7D85173"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip4, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip3_Init () {
    libBA400D1A_gt_GeneralTip3 = TriggerCreate("libBA400D1A_gt_GeneralTip3_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip3, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip3, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip4
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA222D842_g;
    int autoA222D842_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA222D842_g = PlayerGroupActive();
    autoA222D842_var = -1;
    while (true) {
        autoA222D842_var = PlayerGroupNextPlayer(autoA222D842_g, autoA222D842_var);
        if (autoA222D842_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[autoA222D842_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_DA121955");
            UIDisplayMessage(PlayerGroupSingle(autoA222D842_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_EEEE3199"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip5, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip4_Init () {
    libBA400D1A_gt_GeneralTip4 = TriggerCreate("libBA400D1A_gt_GeneralTip4_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip4, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip4, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip5
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto3BA91B99_g;
    int auto3BA91B99_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto3BA91B99_g = PlayerGroupActive();
    auto3BA91B99_var = -1;
    while (true) {
        auto3BA91B99_var = PlayerGroupNextPlayer(auto3BA91B99_g, auto3BA91B99_var);
        if (auto3BA91B99_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto3BA91B99_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_38F9AD98");
            UIDisplayMessage(PlayerGroupSingle(auto3BA91B99_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_4B3EBB7B"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip6, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip5_Init () {
    libBA400D1A_gt_GeneralTip5 = TriggerCreate("libBA400D1A_gt_GeneralTip5_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip5, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip5, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip6
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto30383F5F_g;
    int auto30383F5F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto30383F5F_g = PlayerGroupActive();
    auto30383F5F_var = -1;
    while (true) {
        auto30383F5F_var = PlayerGroupNextPlayer(auto30383F5F_g, auto30383F5F_var);
        if (auto30383F5F_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto30383F5F_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_DE1C4FA1");
            UIDisplayMessage(PlayerGroupSingle(auto30383F5F_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_0F219A2D"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip7, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip6_Init () {
    libBA400D1A_gt_GeneralTip6 = TriggerCreate("libBA400D1A_gt_GeneralTip6_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip6, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip6, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip7
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto18517410_g;
    int auto18517410_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto18517410_g = PlayerGroupActive();
    auto18517410_var = -1;
    while (true) {
        auto18517410_var = PlayerGroupNextPlayer(auto18517410_g, auto18517410_var);
        if (auto18517410_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto18517410_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_0F4B9367");
            UIDisplayMessage(PlayerGroupSingle(auto18517410_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_1F2223FA"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip8, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip7_Init () {
    libBA400D1A_gt_GeneralTip7 = TriggerCreate("libBA400D1A_gt_GeneralTip7_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip7, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip7, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip8
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCA34E859_g;
    int autoCA34E859_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCA34E859_g = PlayerGroupActive();
    autoCA34E859_var = -1;
    while (true) {
        autoCA34E859_var = PlayerGroupNextPlayer(autoCA34E859_g, autoCA34E859_var);
        if (autoCA34E859_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[autoCA34E859_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_C624FDF9");
            UIDisplayMessage(PlayerGroupSingle(autoCA34E859_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_3ABB5398"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip9, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip8_Init () {
    libBA400D1A_gt_GeneralTip8 = TriggerCreate("libBA400D1A_gt_GeneralTip8_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip8, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip8, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip9
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip9_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA05116D0_g;
    int autoA05116D0_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(libBA400D1A_gt_GeneralTip10, true);
    autoA05116D0_g = PlayerGroupActive();
    autoA05116D0_var = -1;
    while (true) {
        autoA05116D0_var = PlayerGroupNextPlayer(autoA05116D0_g, autoA05116D0_var);
        if (autoA05116D0_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[autoA05116D0_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_AEE14C0F");
            UIDisplayMessage(PlayerGroupSingle(autoA05116D0_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_B6DF9DF0"), libBA400D1A_gv_color_heptacraft_title));
            TimerStart(libBA400D1A_gv_tutorialTimer, libBA400D1A_gv_tutorialDelay, false, c_timeReal);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip9_Init () {
    libBA400D1A_gt_GeneralTip9 = TriggerCreate("libBA400D1A_gt_GeneralTip9_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip9, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip9, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GeneralTip10
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_GeneralTip10_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto86CBB0C9_g;
    int auto86CBB0C9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto86CBB0C9_g = PlayerGroupActive();
    auto86CBB0C9_var = -1;
    while (true) {
        auto86CBB0C9_var = PlayerGroupNextPlayer(auto86CBB0C9_g, auto86CBB0C9_var);
        if (auto86CBB0C9_var < 0) { break; }
        if ((libBA400D1A_gv_tutorialGeneralEnabled[auto86CBB0C9_var] == true)) {
            libBA400D1A_gv_moreInfo = StringExternal("Param/Value/lib_BA400D1A_F953A5FD");
            UIDisplayMessage(PlayerGroupSingle(auto86CBB0C9_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_771C890B"), libBA400D1A_gv_color_heptacraft_title));
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_GeneralTip10_Init () {
    libBA400D1A_gt_GeneralTip10 = TriggerCreate("libBA400D1A_gt_GeneralTip10_Func");
    TriggerEnable(libBA400D1A_gt_GeneralTip10, false);
    TriggerAddEventTimer(libBA400D1A_gt_GeneralTip10, libBA400D1A_gv_tutorialTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterSiegeTank
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterSiegeTank_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_BF7B4001");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterSiegeTank_Init () {
    libBA400D1A_gt_EncounterSiegeTank = TriggerCreate("libBA400D1A_gt_EncounterSiegeTank_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterSiegeTank, null, c_unitDamageTypeAny, c_unitDamageEither, "CrucioShockCannonBlast");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterSiegeTank, null, c_unitDamageTypeAny, c_unitDamageEither, "CrucioShockCannonBlast2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterGorgon
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterGorgon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_93EED45C");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterGorgon_Init () {
    libBA400D1A_gt_EncounterGorgon = TriggerCreate("libBA400D1A_gt_EncounterGorgon_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterGorgon, null, c_unitDamageTypeAny, c_unitDamageEither, "ArmageddonCannonR");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterGorgon, null, c_unitDamageTypeAny, c_unitDamageEither, "ArmageddonCannonL");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterThor
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterThor_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_1704A1BC");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterThor_Init () {
    libBA400D1A_gt_EncounterThor = TriggerCreate("libBA400D1A_gt_EncounterThor_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterThor, null, c_unitDamageTypeAny, c_unitDamageEither, "OdinAADamage");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterThor, null, c_unitDamageTypeAny, c_unitDamageEither, "BarrageDamage");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterThor, null, c_unitDamageTypeAny, c_unitDamageEither, "OdinDamageLeft");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterThor, null, c_unitDamageTypeAny, c_unitDamageEither, "OdinDamageRight");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterIrradiate
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterIrradiate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_C16B29DB");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterIrradiate_Init () {
    libBA400D1A_gt_EncounterIrradiate = TriggerCreate("libBA400D1A_gt_EncounterIrradiate_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterIrradiate, null, c_unitDamageTypeAny, c_unitDamageEither, "IrradiateInitialDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterValkyrie
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterValkyrie_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_C17D01D4");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterValkyrie_Init () {
    libBA400D1A_gt_EncounterValkyrie = TriggerCreate("libBA400D1A_gt_EncounterValkyrie_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterValkyrie, null, c_unitDamageTypeAny, c_unitDamageEither, "SJPirateCapitalShipLeftDamage");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterValkyrie, null, c_unitDamageTypeAny, c_unitDamageEither, "SJPirateCapitalShipRightDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterReaper
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterReaper_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_EF18E776");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterReaper_Init () {
    libBA400D1A_gt_EncounterReaper = TriggerCreate("libBA400D1A_gt_EncounterReaper_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterReaper, null, c_unitDamageTypeAny, c_unitDamageEither, "P38ScytheGuassPistol");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterSpectre
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterSpectre_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_43816D3C");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterSpectre_Init () {
    libBA400D1A_gt_EncounterSpectre = TriggerCreate("libBA400D1A_gt_EncounterSpectre_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterSpectre, null, c_unitDamageTypeAny, c_unitDamageEither, "SpecterU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterVultures
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterVultures_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_0DACB79F");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterVultures_Init () {
    libBA400D1A_gt_EncounterVultures = TriggerCreate("libBA400D1A_gt_EncounterVultures_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterVultures, null, c_unitDamageTypeAny, c_unitDamageEither, "VultureSpiderMinesDamage");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterVultures, null, c_unitDamageTypeAny, c_unitDamageEither, "VultureU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterColossus
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterColossus_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_FF155334");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterColossus_Init () {
    libBA400D1A_gt_EncounterColossus = TriggerCreate("libBA400D1A_gt_EncounterColossus_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterColossus, null, c_unitDamageTypeAny, c_unitDamageEither, "ThermalLancesFireBeamDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterVoidArchon
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterVoidArchon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_B8CC8102");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterVoidArchon_Init () {
    libBA400D1A_gt_EncounterVoidArchon = TriggerCreate("libBA400D1A_gt_EncounterVoidArchon_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterVoidArchon, null, c_unitDamageTypeAny, c_unitDamageEither, "DarkArchonWeaponDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterAnnihilator
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterAnnihilator_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_318E66B1");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterAnnihilator_Init () {
    libBA400D1A_gt_EncounterAnnihilator = TriggerCreate("libBA400D1A_gt_EncounterAnnihilator_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterAnnihilator, null, c_unitDamageTypeAny, c_unitDamageEither, "ImmortalShakurasShadowCannonDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterRaptor
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterRaptor_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_6FF4F324");

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitDamageSourceUnit()) == "HotSRaptor"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterRaptor_Init () {
    libBA400D1A_gt_EncounterRaptor = TriggerCreate("libBA400D1A_gt_EncounterRaptor_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterRaptor, null, c_unitDamageTypeAny, c_unitDamageEither, "Claws");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterDevourer
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterDevourer_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_E7A26244");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterDevourer_Init () {
    libBA400D1A_gt_EncounterDevourer = TriggerCreate("libBA400D1A_gt_EncounterDevourer_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterDevourer, null, c_unitDamageTypeAny, c_unitDamageEither, "DevourerDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterPredators
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterPredators_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_D4FF6BEF");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterPredators_Init () {
    libBA400D1A_gt_EncounterPredators = TriggerCreate("libBA400D1A_gt_EncounterPredators_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterPredators, null, c_unitDamageTypeAny, c_unitDamageEither, "Predator");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterHybridNemesis
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterHybridNemesis_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_2ACB3B3F");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterHybridNemesis_Init () {
    libBA400D1A_gt_EncounterHybridNemesis = TriggerCreate("libBA400D1A_gt_EncounterHybridNemesis_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterHybridNemesis, null, c_unitDamageTypeAny, c_unitDamageEither, "HybridNemesisWeaponDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterHybridBehemoth
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterHybridBehemoth_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_A6C924D1");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterHybridBehemoth_Init () {
    libBA400D1A_gt_EncounterHybridBehemoth = TriggerCreate("libBA400D1A_gt_EncounterHybridBehemoth_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterHybridBehemoth, null, c_unitDamageTypeAny, c_unitDamageEither, "HybridBehemothDamage");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterHybridBehemoth, null, c_unitDamageTypeAny, c_unitDamageEither, "KaiserWormScourgeMissileDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncounterChangeling
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncounterChangeling_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_tutorial_text;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_tutorial_text = StringExternal("Param/Value/lib_BA400D1A_5293BDDF");

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_tutorialContextEnabled[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, TextWithColor(lv_tutorial_text, libBA400D1A_gv_color_tutorial));
        TriggerEnable(TriggerGetCurrent(), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncounterChangeling_Init () {
    libBA400D1A_gt_EncounterChangeling = TriggerCreate("libBA400D1A_gt_EncounterChangeling_Func");
    TriggerAddEventUnitDamaged(libBA400D1A_gt_EncounterChangeling, null, c_unitDamageTypeAny, c_unitDamageEither, "ParasiticInfectionExpireDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DisplayCoordinates
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DisplayCoordinates_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (FixedToText(PointGetX(UnitGetPosition(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1))), c_fixedPrecisionAny) + StringExternal("Param/Value/lib_BA400D1A_99BFF447") + FixedToText(PointGetY(UnitGetPosition(UnitGroupUnit(UnitGroupSelected(EventPlayer()), 1))), c_fixedPrecisionAny)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DisplayCoordinates_Init () {
    libBA400D1A_gt_DisplayCoordinates = TriggerCreate("libBA400D1A_gt_DisplayCoordinates_Func");
    TriggerEnable(libBA400D1A_gt_DisplayCoordinates, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_DisplayCoordinates, c_playerAny, "xy", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AllowCheatsAndReset
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_AllowCheatsAndReset_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupCount(PlayerGroupActive()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(libBA400D1A_gt_RevealMap, true);
    TriggerEnable(libBA400D1A_gt_DisplayCoordinates, true);
    TriggerEnable(libBA400D1A_gt_ListCheats, true);
    TriggerEnable(libBA400D1A_gt_CreateTargets, true);
    TriggerEnable(libBA400D1A_gt_DominionAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_RaidersAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_KhalaAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_NerazimAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_SwarmAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_InfestedAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_CovenantAttackSquad, true);
    TriggerEnable(libBA400D1A_gt_SendAttack, true);
    TriggerEnable(libBA400D1A_gt_AddEnergy, true);
    TriggerEnable(libBA400D1A_gt_LadderReset, true);
    GameCheatAllow(c_gameCheatAny, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_A428C764"), libBA400D1A_gv_color_tutorial));
    PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperSetTo, 50000);
    PlayerModifyPropertyInt(1, c_playerPropVespene, c_playerPropOperSetTo, 50000);
    PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperSetTo, 5000);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_AllowCheatsAndReset_Init () {
    libBA400D1A_gt_AllowCheatsAndReset = TriggerCreate("libBA400D1A_gt_AllowCheatsAndReset_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ListCheats
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_ListCheats_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_C43EDF71"), libBA400D1A_gv_color_tutorial));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_ListCheats_Init () {
    libBA400D1A_gt_ListCheats = TriggerCreate("libBA400D1A_gt_ListCheats_Func");
    TriggerEnable(libBA400D1A_gt_ListCheats, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_ListCheats, c_playerAny, "h", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AddEnergy
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_AddEnergy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0C3736EF_g;
    int auto0C3736EF_u;
    unit auto0C3736EF_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0C3736EF_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0C3736EF_u = UnitGroupCount(auto0C3736EF_g, c_unitCountAll);
    for (;; auto0C3736EF_u -= 1) {
        auto0C3736EF_var = UnitGroupUnitFromEnd(auto0C3736EF_g, auto0C3736EF_u);
        if (auto0C3736EF_var == null) { break; }
        UnitSetPropertyFixed(auto0C3736EF_var, c_unitPropEnergy, 200.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_AddEnergy_Init () {
    libBA400D1A_gt_AddEnergy = TriggerCreate("libBA400D1A_gt_AddEnergy_Func");
    TriggerEnable(libBA400D1A_gt_AddEnergy, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_AddEnergy, c_playerAny, "e", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RevealMap
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RevealMap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    VisRevealArea(1, RegionEntireMap(), 300.0, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RevealMap_Init () {
    libBA400D1A_gt_RevealMap = TriggerCreate("libBA400D1A_gt_RevealMap_Func");
    TriggerEnable(libBA400D1A_gt_RevealMap, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_RevealMap, c_playerAny, "v", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CreateTargets
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_CreateTargets_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperSetTo, 50000);
    PlayerModifyPropertyInt(1, c_playerPropVespene, c_playerPropOperSetTo, 50000);
    PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperSetTo, 5000);
    UnitCreate(1, "LiberatorAG", 0, 2, PlayerStartLocation(1), 270.0);
    UnitCreate(1, "WarHound", 0, 2, PlayerStartLocation(1), 270.0);
    UnitCreate(1, "HugeSwarmQueen", 0, 1, PlayerStartLocation(1), 270.0);
    UnitCreate(1, "HighTemplarTaldarim", 0, 1, PlayerStartLocation(1), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_CreateTargets_Init () {
    libBA400D1A_gt_CreateTargets = TriggerCreate("libBA400D1A_gt_CreateTargets_Func");
    TriggerEnable(libBA400D1A_gt_CreateTargets, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_CreateTargets, c_playerAny, "t", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DominionAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_DominionAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(4, "WarPig", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(1, "Marauder", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(1, "Medic", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_DominionAttackSquad_Init () {
    libBA400D1A_gt_DominionAttackSquad = TriggerCreate("libBA400D1A_gt_DominionAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_DominionAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_DominionAttackSquad, c_playerAny, "d", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RaidersAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_RaidersAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(4, "OrbitalCommand", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_RaidersAttackSquad_Init () {
    libBA400D1A_gt_RaidersAttackSquad = TriggerCreate("libBA400D1A_gt_RaidersAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_RaidersAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_RaidersAttackSquad, c_playerAny, "r", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: KhalaAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_KhalaAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(4, "Dragoon", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(2, "SentryAiur", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(3, "Zealot", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_KhalaAttackSquad_Init () {
    libBA400D1A_gt_KhalaAttackSquad = TriggerCreate("libBA400D1A_gt_KhalaAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_KhalaAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_KhalaAttackSquad, c_playerAny, "k", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: NerazimAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_NerazimAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "VoidRay", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_NerazimAttackSquad_Init () {
    libBA400D1A_gt_NerazimAttackSquad = TriggerCreate("libBA400D1A_gt_NerazimAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_NerazimAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_NerazimAttackSquad, c_playerAny, "n", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SwarmAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_SwarmAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(12, "Zergling", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(6, "Hydralisk", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(1, "Mutalisk", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_SwarmAttackSquad_Init () {
    libBA400D1A_gt_SwarmAttackSquad = TriggerCreate("libBA400D1A_gt_SwarmAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_SwarmAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_SwarmAttackSquad, c_playerAny, "s", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InfestedAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_InfestedAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "PrimalLocustFlying", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    UnitCreate(1, "EvolutionChamber2", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_InfestedAttackSquad_Init () {
    libBA400D1A_gt_InfestedAttackSquad = TriggerCreate("libBA400D1A_gt_InfestedAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_InfestedAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_InfestedAttackSquad, c_playerAny, "i", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CovenantAttackSquad
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_CovenantAttackSquad_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(7, "SJGriffon", 0, 2, libNtve_gf_PointOffsetTowardsPoint(PlayerStartLocation(1), 23.0, RegionGetCenter(RegionEntireMap())), 270.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_CovenantAttackSquad_Init () {
    libBA400D1A_gt_CovenantAttackSquad = TriggerCreate("libBA400D1A_gt_CovenantAttackSquad_Func");
    TriggerEnable(libBA400D1A_gt_CovenantAttackSquad, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_CovenantAttackSquad, c_playerAny, "c", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SendAttack
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_SendAttack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupIssueOrder(UnitGroup(null, 2, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), OrderTargetingPoint(AbilityCommand("move", 3), PlayerStartLocation(1)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_SendAttack_Init () {
    libBA400D1A_gt_SendAttack = TriggerCreate("libBA400D1A_gt_SendAttack_Func");
    TriggerEnable(libBA400D1A_gt_SendAttack, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_SendAttack, c_playerAny, "a", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: LadderGameStart
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_LadderGameStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_p1UID;
    string lv_p2UID;
    text lv_p1Name;
    text lv_p2Name;

    // Automatic Variable Declarations
    playergroup auto0DF78C03_g;
    int auto0DF78C03_var;

    // Variable Initialization
    lv_p1UID = "";
    lv_p2UID = "";

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(5.0, c_timeGame);
    libBA400D1A_gv_ladderSet[0] = true;
    lv_p1Name = PlayerName(1);
    lv_p2Name = PlayerName(2);
    lv_p1UID = PlayerHandle(1);
    lv_p2UID = PlayerHandle(2);
    libBA400D1A_gv_gameKey1 = RandomInt(1111111, 9999999);
    libBA400D1A_gv_gameKey2 = RandomInt(1111111, 9999999);
    libBA400D1A_gv_ladderKeyP1 = RandomInt(23, 23555);
    libBA400D1A_gv_ladderKeyP2 = RandomInt(23, 23555);
    TriggerExecute(libBA400D1A_gt_EncryptGameKeys, true, true);
    auto0DF78C03_g = PlayerGroupActive();
    auto0DF78C03_var = -1;
    while (true) {
        auto0DF78C03_var = PlayerGroupNextPlayer(auto0DF78C03_g, auto0DF78C03_var);
        if (auto0DF78C03_var < 0) { break; }
        if ((auto0DF78C03_var == 1)) {
            BankLoad(("heptacraftbankladderstart" + IntToString(libBA400D1A_gv_gameKey1) + IntToString(libBA400D1A_gv_gameKey2) + PlayerHandle(1)), 1);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Ladderkey", libBA400D1A_gv_ladderKeyP1);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey1", libBA400D1A_gv_gameKey1);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey2", libBA400D1A_gv_gameKey2);
            BankValueSetFromText(BankLastCreated(), "Ladder", "playername", lv_p1Name);
            BankValueSetFromText(BankLastCreated(), "Ladder", "opponentname", lv_p2Name);
            BankValueSetFromString(BankLastCreated(), "Ladder", "playerUID", lv_p1UID);
            BankValueSetFromString(BankLastCreated(), "Ladder", "opponentUID", lv_p2UID);
            BankValueSetFromText(BankLastCreated(), "Factions", "faction", StringToText(libBA400D1A_gv_player_faction[1]));
        }
        else {
            BankLoad(("heptacraftbankladderstart" + IntToString(libBA400D1A_gv_gameKey1) + IntToString(libBA400D1A_gv_gameKey2) + PlayerHandle(2)), 2);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Ladderkey", libBA400D1A_gv_ladderKeyP2);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey1", libBA400D1A_gv_gameKey1);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey2", libBA400D1A_gv_gameKey2);
            BankValueSetFromText(BankLastCreated(), "Ladder", "playername", lv_p2Name);
            BankValueSetFromText(BankLastCreated(), "Ladder", "opponentname", lv_p1Name);
            BankValueSetFromString(BankLastCreated(), "Ladder", "playerUID", lv_p2UID);
            BankValueSetFromString(BankLastCreated(), "Ladder", "opponentUID", lv_p1UID);
            BankValueSetFromText(BankLastCreated(), "Factions", "faction", StringToText(libBA400D1A_gv_player_faction[2]));
        }
        BankSave(BankLastCreated());
    }
    Wait(14.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_99FCD3BF"), libBA400D1A_gv_color_heptacraft_title));
    Wait(5.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_799F1874"), libBA400D1A_gv_color_heptacraft_headers));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_LadderGameStart_Init () {
    libBA400D1A_gt_LadderGameStart = TriggerCreate("libBA400D1A_gt_LadderGameStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: LadderReset
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_LadderReset_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_p1UID;
    string lv_p2UID;
    text lv_p1Name;
    text lv_p2Name;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_p1UID = "";
    lv_p2UID = "";

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_p1Name = PlayerName(1);
    lv_p2Name = StringExternal("Param/Value/lib_BA400D1A_78D69F07");
    lv_p1UID = PlayerHandle(1);
    lv_p2UID = "7777777";
    libBA400D1A_gv_gameKey1 = RandomInt(1111111, 9999999);
    libBA400D1A_gv_gameKey2 = RandomInt(1111111, 9999999);
    TriggerExecute(libBA400D1A_gt_EncryptGameKeys, true, true);
    BankLoad(("heptacraftbankladderstart" + IntToString(libBA400D1A_gv_gameKey1) + IntToString(libBA400D1A_gv_gameKey2) + PlayerHandle(1)), 1);
    BankValueSetFromInt(BankLastCreated(), "Ladder", "Ladderkey", libBA400D1A_gv_ladderKeyP1);
    BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey1", libBA400D1A_gv_gameKey1);
    BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey2", libBA400D1A_gv_gameKey2);
    BankValueSetFromText(BankLastCreated(), "Ladder", "playername", lv_p1Name);
    BankValueSetFromText(BankLastCreated(), "Ladder", "opponentname", lv_p2Name);
    BankValueSetFromString(BankLastCreated(), "Ladder", "playerUID", lv_p1UID);
    BankValueSetFromString(BankLastCreated(), "Ladder", "opponentUID", lv_p2UID);
    BankValueSetFromText(BankLastCreated(), "Factions", "faction", StringToText(libBA400D1A_gv_player_faction[1]));
    BankSave(BankLastCreated());
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_42FEC51B"), libBA400D1A_gv_color_heptacraft_title));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_4BEEC523"), libBA400D1A_gv_color_heptacraft_headers));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_0E45B94C"), libBA400D1A_gv_color_heptacraft_headers));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_LadderReset_Init () {
    libBA400D1A_gt_LadderReset = TriggerCreate("libBA400D1A_gt_LadderReset_Func");
    TriggerEnable(libBA400D1A_gt_LadderReset, false);
    TriggerAddEventChatMessage(libBA400D1A_gt_LadderReset, c_playerAny, "reset ladder", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: EncryptGameKeys
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_EncryptGameKeys_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_lenght;
    int lv_position;
    int lv_sum;
    string lv_sumstring;
    string lv_keystring;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sumstring = "";
    lv_keystring = "";

    // Actions
    if (!runActions) {
        return true;
    }

    lv_sum = 0;
    lv_sumstring = "0";
    lv_keystring = IntToString(libBA400D1A_gv_gameKey1);
    lv_position = 1;
    lv_lenght = StringLength(IntToString(libBA400D1A_gv_gameKey1));
    while ((lv_position <= lv_lenght)) {
        lv_sumstring = StringSub(lv_keystring, lv_position, lv_position);
        lv_sum = (lv_sum + StringToInt(lv_sumstring));
        lv_position = (lv_position + 1);
    }
    libBA400D1A_gv_gameKeyE1 = (lv_sum + 10);
    libBA400D1A_gv_gameKey1 = StringToInt((IntToString(libBA400D1A_gv_gameKey1) + IntToString(libBA400D1A_gv_gameKeyE1)));
    lv_sum = 0;
    lv_sumstring = "0";
    lv_keystring = IntToString(libBA400D1A_gv_gameKey2);
    lv_position = 1;
    lv_lenght = StringLength(IntToString(libBA400D1A_gv_gameKey2));
    while ((lv_position <= lv_lenght)) {
        lv_sumstring = StringSub(lv_keystring, lv_position, lv_position);
        lv_sum = (lv_sum + StringToInt(lv_sumstring));
        lv_position = (lv_position + 1);
    }
    libBA400D1A_gv_gameKeyE2 = (lv_sum + 10);
    libBA400D1A_gv_gameKey2 = StringToInt((IntToString(libBA400D1A_gv_gameKey2) + IntToString(libBA400D1A_gv_gameKeyE2)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_EncryptGameKeys_Init () {
    libBA400D1A_gt_EncryptGameKeys = TriggerCreate("libBA400D1A_gt_EncryptGameKeys_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_Victory_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_winnerName;
    string lv_winnerUID;
    int lv_winnerP;

    // Automatic Variable Declarations
    playergroup auto794EA060_g;
    int auto794EA060_var;
    playergroup autoB647B967_g;
    int autoB647B967_var;

    // Variable Initialization
    lv_winnerUID = "";

    // Conditions
    if (testConds) {
        if (!((PlayerGroupCount(PlayerGroupActive()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libBA400D1A_gv_ladderGame == true)) {
        autoB647B967_g = PlayerGroupActive();
        autoB647B967_var = -1;
        while (true) {
            autoB647B967_var = PlayerGroupNextPlayer(autoB647B967_g, autoB647B967_var);
            if (autoB647B967_var < 0) { break; }
            lv_winnerName = PlayerName(autoB647B967_var);
            lv_winnerUID = PlayerHandle(autoB647B967_var);
            UIDisplayMessage(PlayerGroupSingle(autoB647B967_var), c_messageAreaSubtitle, TextWithColor(StringExternal("Param/Value/lib_BA400D1A_788219B2"), libBA400D1A_gv_color_heptacraft_headers));
            BankLoad(("heptacraftbankladderend" + IntToString(libBA400D1A_gv_gameKey1) + IntToString(libBA400D1A_gv_gameKey2) + "victory"), autoB647B967_var);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey1", libBA400D1A_gv_gameKey1);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Gamekey2", libBA400D1A_gv_gameKey2);
            BankValueSetFromInt(BankLastCreated(), "Ladder", "Victorykey", (libBA400D1A_gv_ladderKeyP1 * libBA400D1A_gv_ladderKeyP2));
            BankValueSetFromText(BankLastCreated(), "Ladder", "WinnerName", lv_winnerName);
            BankValueSetFromString(BankLastCreated(), "Ladder", "WinnerUID", lv_winnerUID);
            BankSave(BankLastCreated());
            Wait(2.0, c_timeGame);
            GameOver(autoB647B967_var, c_gameOverVictory, true, true);
        }
    }
    else {
        auto794EA060_g = PlayerGroupActive();
        auto794EA060_var = -1;
        while (true) {
            auto794EA060_var = PlayerGroupNextPlayer(auto794EA060_g, auto794EA060_var);
            if (auto794EA060_var < 0) { break; }
            GameOver(auto794EA060_var, c_gameOverVictory, true, true);
        }
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_Victory_Init () {
    libBA400D1A_gt_Victory = TriggerCreate("libBA400D1A_gt_Victory_Func");
    TriggerEnable(libBA400D1A_gt_Victory, false);
    TriggerAddEventPlayerLeft(libBA400D1A_gt_Victory, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherStop
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "SwarmQueen") || (UnitGetType(EventUnit()) == "LargeSwarmQueen") || (UnitGetType(EventUnit()) == "HugeSwarmQueen")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(EventUnit(), "BroodMotherStop2", 1);
    UnitBehaviorAdd(EventUnit(), "BroodMotherStop", EventUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherStop_Init () {
    libBA400D1A_gt_BroodMotherStop = TriggerCreate("libBA400D1A_gt_BroodMotherStop_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherStop, false);
    TriggerAddEventUnitBecomesIdle(libBA400D1A_gt_BroodMotherStop, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BroodMotherMove
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_gt_BroodMotherMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "SwarmQueen") || (UnitGetType(EventUnit()) == "LargeSwarmQueen") || (UnitGetType(EventUnit()) == "HugeSwarmQueen")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(EventUnit(), "BroodMotherStop", 1);
    UnitBehaviorAdd(EventUnit(), "BroodMotherStop2", EventUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBA400D1A_gt_BroodMotherMove_Init () {
    libBA400D1A_gt_BroodMotherMove = TriggerCreate("libBA400D1A_gt_BroodMotherMove_Func");
    TriggerEnable(libBA400D1A_gt_BroodMotherMove, false);
    TriggerAddEventUnitOrder(libBA400D1A_gt_BroodMotherMove, null, AbilityCommand("move", 0));
}

void libBA400D1A_InitTriggers () {
    libBA400D1A_gt_ClearDefaultMeleeUnits_Init();
    libBA400D1A_gt_MapInitializiation_Init();
    libBA400D1A_gt_SetResources_Init();
    libBA400D1A_gt_WaitForAllPlayersReady_Init();
    libBA400D1A_gt_RandomizeAndCreateUnits_Init();
    libBA400D1A_gt_SetStartingResources_Init();
    libBA400D1A_gt_DialogueHotkeys_Init();
    libBA400D1A_gt_TitleDialogue_Init();
    libBA400D1A_gt_FactionSelectionDialogue_Init();
    libBA400D1A_gt_PlayerPressReady_Init();
    libBA400D1A_gt_Countdown_Init();
    libBA400D1A_gt_InformationDialogue_Init();
    libBA400D1A_gt_DisplayFactionInformation_Init();
    libBA400D1A_gt_NotificationsDialogue_Init();
    libBA400D1A_gt_NotificationsFlash_Init();
    libBA400D1A_gt_TutorialDialogue_Init();
    libBA400D1A_gt_VersionDialogue_Init();
    libBA400D1A_gt_RestoreCamera_Init();
    libBA400D1A_gt_HighGroundMechanics_Init();
    libBA400D1A_gt_Spectate_Init();
    libBA400D1A_gt_RaiseSupply230_Init();
    libBA400D1A_gt_RaiseSupply255_Init();
    libBA400D1A_gt_RaiseSupply280_Init();
    libBA400D1A_gt_DayNightDialogue_Init();
    libBA400D1A_gt_DayNightChange_Init();
    libBA400D1A_gt_PatriotBomb_Init();
    libBA400D1A_gt_Colossus_Init();
    libBA400D1A_gt_InstantReturn_Init();
    libBA400D1A_gt_Zergling_Init();
    libBA400D1A_gt_Hydra_Init();
    libBA400D1A_gt_Lurker_Init();
    libBA400D1A_gt_Muta_Init();
    libBA400D1A_gt_Ultra_Init();
    libBA400D1A_gt_UseAdaptionAgility_Init();
    libBA400D1A_gt_UseAdaptionSpineArmor_Init();
    libBA400D1A_gt_UseAdaptionCarapace_Init();
    libBA400D1A_gt_UseAdaptionGlaive_Init();
    libBA400D1A_gt_UseAdaptionHunter_Init();
    libBA400D1A_gt_UseAdaptionSpines_Init();
    libBA400D1A_gt_UseAdaptionImpale_Init();
    libBA400D1A_gt_UseAdaptionKiller_Init();
    libBA400D1A_gt_UseAdaptionPygalisk_Init();
    libBA400D1A_gt_UseAdaptionTorrasque_Init();
    libBA400D1A_gt_TurnOnAdaptionTriggers_Init();
    libBA400D1A_gt_BroodMotherSelectStart_Init();
    libBA400D1A_gt_BroodMotherRally_Init();
    libBA400D1A_gt_BroodMotherSelectHK_Init();
    libBA400D1A_gt_BroodMotherSelectHKOff_Init();
    libBA400D1A_gt_BroodMotherSelect_Init();
    libBA400D1A_gt_OrbitalUpdate_Init();
    libBA400D1A_gt_PredatorKidnap_Init();
    libBA400D1A_gt_MothershipDevoteeSouls_Init();
    libBA400D1A_gt_MothershipTrainAnim_Init();
    libBA400D1A_gt_MothershipRotation_Init();
    libBA400D1A_gt_PlanetaryFortressAttackPriority_Init();
    libBA400D1A_gt_VoidRayLoseCharge_Init();
    libBA400D1A_gt_TerrazineDialogue_Init();
    libBA400D1A_gt_AddTerrazine_Init();
    libBA400D1A_gt_TutorialOnOffHotkey_Init();
    libBA400D1A_gt_TutorialAdvancedInfoHotkey_Init();
    libBA400D1A_gt_GeneralTip0_Init();
    libBA400D1A_gt_GeneralTip1_Init();
    libBA400D1A_gt_GeneralTip2_Init();
    libBA400D1A_gt_GeneralTip3_Init();
    libBA400D1A_gt_GeneralTip4_Init();
    libBA400D1A_gt_GeneralTip5_Init();
    libBA400D1A_gt_GeneralTip6_Init();
    libBA400D1A_gt_GeneralTip7_Init();
    libBA400D1A_gt_GeneralTip8_Init();
    libBA400D1A_gt_GeneralTip9_Init();
    libBA400D1A_gt_GeneralTip10_Init();
    libBA400D1A_gt_EncounterSiegeTank_Init();
    libBA400D1A_gt_EncounterGorgon_Init();
    libBA400D1A_gt_EncounterThor_Init();
    libBA400D1A_gt_EncounterIrradiate_Init();
    libBA400D1A_gt_EncounterValkyrie_Init();
    libBA400D1A_gt_EncounterReaper_Init();
    libBA400D1A_gt_EncounterSpectre_Init();
    libBA400D1A_gt_EncounterVultures_Init();
    libBA400D1A_gt_EncounterColossus_Init();
    libBA400D1A_gt_EncounterVoidArchon_Init();
    libBA400D1A_gt_EncounterAnnihilator_Init();
    libBA400D1A_gt_EncounterRaptor_Init();
    libBA400D1A_gt_EncounterDevourer_Init();
    libBA400D1A_gt_EncounterPredators_Init();
    libBA400D1A_gt_EncounterHybridNemesis_Init();
    libBA400D1A_gt_EncounterHybridBehemoth_Init();
    libBA400D1A_gt_EncounterChangeling_Init();
    libBA400D1A_gt_DisplayCoordinates_Init();
    libBA400D1A_gt_AllowCheatsAndReset_Init();
    libBA400D1A_gt_ListCheats_Init();
    libBA400D1A_gt_AddEnergy_Init();
    libBA400D1A_gt_RevealMap_Init();
    libBA400D1A_gt_CreateTargets_Init();
    libBA400D1A_gt_DominionAttackSquad_Init();
    libBA400D1A_gt_RaidersAttackSquad_Init();
    libBA400D1A_gt_KhalaAttackSquad_Init();
    libBA400D1A_gt_NerazimAttackSquad_Init();
    libBA400D1A_gt_SwarmAttackSquad_Init();
    libBA400D1A_gt_InfestedAttackSquad_Init();
    libBA400D1A_gt_CovenantAttackSquad_Init();
    libBA400D1A_gt_SendAttack_Init();
    libBA400D1A_gt_LadderGameStart_Init();
    libBA400D1A_gt_LadderReset_Init();
    libBA400D1A_gt_EncryptGameKeys_Init();
    libBA400D1A_gt_Victory_Init();
    libBA400D1A_gt_BroodMotherStop_Init();
    libBA400D1A_gt_BroodMotherMove_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libBA400D1A_InitLib_completed = false;

void libBA400D1A_InitLib () {
    if (libBA400D1A_InitLib_completed) {
        return;
    }

    libBA400D1A_InitLib_completed = true;

    libBA400D1A_InitLibraries();
    libBA400D1A_InitVariables();
    libBA400D1A_InitTriggers();
}

