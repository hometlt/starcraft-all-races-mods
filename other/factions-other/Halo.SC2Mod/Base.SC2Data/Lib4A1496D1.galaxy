include "TriggerLibs/NativeLib"

include "Lib4A1496D1_h"

//--------------------------------------------------------------------------------------------------
// Library: Race select
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib4A1496D1_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib4A1496D1_InitVariables_completed = false;

void lib4A1496D1_InitVariables () {
    if (lib4A1496D1_InitVariables_completed) {
        return;
    }

    lib4A1496D1_InitVariables_completed = true;

    lib4A1496D1_gv_kILLZEMALL = UnitGroupEmpty();
    lib4A1496D1_gv_uNSCFACTION = PlayerGroupEmpty();
    lib4A1496D1_gv_cOVENANTFACTION = PlayerGroupEmpty();
    lib4A1496D1_gv_attackWaveUNSC = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveUNSC2 = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveUNSC3 = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveCovenant = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveCovenant2 = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveCovenant3 = UnitGroupEmpty();
    lib4A1496D1_gv_attackWaveFlood = UnitGroupEmpty();
    lib4A1496D1_gv_techTreeFlood = UnitGroupEmpty();
    lib4A1496D1_gv_aIUNSCEasy = PlayerGroupEmpty();
    lib4A1496D1_gv_aIUNSCEasy2 = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovEasy = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovEasy2 = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovModerate = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovModerate2 = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovHard = PlayerGroupEmpty();
    lib4A1496D1_gv_aICovHard2 = PlayerGroupEmpty();
    lib4A1496D1_gv_aIUNSCModerate = PlayerGroupEmpty();
    lib4A1496D1_gv_aIUNSCModerate2 = PlayerGroupEmpty();
    lib4A1496D1_gv_aIUNSCHard = PlayerGroupEmpty();
    lib4A1496D1_gv_aIUNSCHard2 = PlayerGroupEmpty();
    lib4A1496D1_gv_fLOODAI = PlayerGroupEmpty();
    lib4A1496D1_gv_aIPlayers = PlayerGroupEmpty();
    lib4A1496D1_gv_covenantbuildExpandTimer = TimerCreate();
    lib4A1496D1_gv_covenantbuildExpandTimer2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildExpandTimer3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildattacktimer = TimerCreate();
    lib4A1496D1_gv_covenantbuildattacktimer2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildattacktimer3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildWarehouse = TimerCreate();
    lib4A1496D1_gv_covenantbuildWarehouse2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildWarehouse3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildbarrackstimer = TimerCreate();
    lib4A1496D1_gv_covenantbuildbarrackstimer2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildbarrackstimer3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildfactory = TimerCreate();
    lib4A1496D1_gv_covenantbuildfactory2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildfactory3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildshipyard = TimerCreate();
    lib4A1496D1_gv_covenantbuildshipyard2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildshipyard3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildChamberofReclamation = TimerCreate();
    lib4A1496D1_gv_covenantbuildChamberofReclamation2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildChamberofReclamation3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildTemple = TimerCreate();
    lib4A1496D1_gv_covenantbuildTemple2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildTemple3 = TimerCreate();
    lib4A1496D1_gv_covenantbuildMegaTurret = TimerCreate();
    lib4A1496D1_gv_covenantbuildMegaTurret2 = TimerCreate();
    lib4A1496D1_gv_covenantbuildMegaTurret3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBanshee = TimerCreate();
    lib4A1496D1_gv_covenantTrainBanshee2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBanshee3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBrute = TimerCreate();
    lib4A1496D1_gv_covenantTrainBrute2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBrute3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBruteChieftan = TimerCreate();
    lib4A1496D1_gv_covenantTrainBruteChieftan2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainBruteChieftan3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainCASClassSupercarrier = TimerCreate();
    lib4A1496D1_gv_covenantTrainCASClassSupercarrier2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainCASClassSupercarrier3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainElite = TimerCreate();
    lib4A1496D1_gv_covenantTrainElite2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainElite3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainGhost = TimerCreate();
    lib4A1496D1_gv_covenantTrainGhost2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainGhost3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainGrunt = TimerCreate();
    lib4A1496D1_gv_covenantTrainGrunt2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainGrunt3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainHunter = TimerCreate();
    lib4A1496D1_gv_covenantTrainHunter2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainHunter3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainHuragok = TimerCreate();
    lib4A1496D1_gv_covenantTrainHuragok2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainHuragok3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainLocust = TimerCreate();
    lib4A1496D1_gv_covenantTrainLocust2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainLocust3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSanShyuumPrelate = TimerCreate();
    lib4A1496D1_gv_covenantTrainSanShyuumPrelate2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSanShyuumPrelate3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainScarab = TimerCreate();
    lib4A1496D1_gv_covenantTrainScarab2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainScarab3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSniperJackal = TimerCreate();
    lib4A1496D1_gv_covenantTrainSniperJackal2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSniperJackal3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSuicideHuragok = TimerCreate();
    lib4A1496D1_gv_covenantTrainSuicideHuragok2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainSuicideHuragok3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainVampire = TimerCreate();
    lib4A1496D1_gv_covenantTrainVampire2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainVampire3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainWraith = TimerCreate();
    lib4A1496D1_gv_covenantTrainWraith2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainWraith3 = TimerCreate();
    lib4A1496D1_gv_covenantTrainAntiAirWraith = TimerCreate();
    lib4A1496D1_gv_covenantTrainAntiAirWraith2 = TimerCreate();
    lib4A1496D1_gv_covenantTrainAntiAirWraith3 = TimerCreate();
    lib4A1496D1_gv_easyExpandTimer = TimerCreate();
    lib4A1496D1_gv_easyExpandTimer2 = TimerCreate();
    lib4A1496D1_gv_easyExpandTimer3 = TimerCreate();
    lib4A1496D1_gv_easyattacktimer = TimerCreate();
    lib4A1496D1_gv_easyattacktimer2 = TimerCreate();
    lib4A1496D1_gv_easyattacktimer3 = TimerCreate();
    lib4A1496D1_gv_easybuildsupplytimer = TimerCreate();
    lib4A1496D1_gv_easybuildsupplytimer2 = TimerCreate();
    lib4A1496D1_gv_easybuildsupplytimer3 = TimerCreate();
    lib4A1496D1_gv_easybuildbarrackstimer = TimerCreate();
    lib4A1496D1_gv_easybuildbarrackstimer2 = TimerCreate();
    lib4A1496D1_gv_easybuildbarrackstimer3 = TimerCreate();
    lib4A1496D1_gv_easybuildfactory = TimerCreate();
    lib4A1496D1_gv_easybuildfactory2 = TimerCreate();
    lib4A1496D1_gv_easybuildfactory3 = TimerCreate();
    lib4A1496D1_gv_easybuildshipyard = TimerCreate();
    lib4A1496D1_gv_easybuildshipyard2 = TimerCreate();
    lib4A1496D1_gv_easybuildshipyard3 = TimerCreate();
    lib4A1496D1_gv_easybuildfowardopcenter = TimerCreate();
    lib4A1496D1_gv_easybuildfowardopcenter2 = TimerCreate();
    lib4A1496D1_gv_easybuildfowardopcenter3 = TimerCreate();
    lib4A1496D1_gv_easybuildadvancedcenter = TimerCreate();
    lib4A1496D1_gv_easybuildadvancedcenter2 = TimerCreate();
    lib4A1496D1_gv_easybuildadvancedcenter3 = TimerCreate();
    lib4A1496D1_gv_easybuildshiplabreactor = TimerCreate();
    lib4A1496D1_gv_easybuildshiplabreactor2 = TimerCreate();
    lib4A1496D1_gv_easybuildshiplabreactor3 = TimerCreate();
    lib4A1496D1_gv_easybuildmedicalcore = TimerCreate();
    lib4A1496D1_gv_easybuildmedicalcore2 = TimerCreate();
    lib4A1496D1_gv_easybuildmedicalcore3 = TimerCreate();
    lib4A1496D1_gv_cyclops = TimerCreate();
    lib4A1496D1_gv_cyclops2 = TimerCreate();
    lib4A1496D1_gv_cyclops3 = TimerCreate();
    lib4A1496D1_gv_combatMarine = TimerCreate();
    lib4A1496D1_gv_combatMarine2 = TimerCreate();
    lib4A1496D1_gv_combatMarine3 = TimerCreate();
    lib4A1496D1_gv_rocketMarine = TimerCreate();
    lib4A1496D1_gv_rocketMarine2 = TimerCreate();
    lib4A1496D1_gv_rocketMarine3 = TimerCreate();
    lib4A1496D1_gv_marksmanMarine = TimerCreate();
    lib4A1496D1_gv_marksmanMarine2 = TimerCreate();
    lib4A1496D1_gv_marksmanMarine3 = TimerCreate();
    lib4A1496D1_gv_medicalOperator = TimerCreate();
    lib4A1496D1_gv_medicalOperator2 = TimerCreate();
    lib4A1496D1_gv_medicalOperator3 = TimerCreate();
    lib4A1496D1_gv_hellbringer = TimerCreate();
    lib4A1496D1_gv_hellbringer2 = TimerCreate();
    lib4A1496D1_gv_hellbringer3 = TimerCreate();
    lib4A1496D1_gv_engineer = TimerCreate();
    lib4A1496D1_gv_engineer2 = TimerCreate();
    lib4A1496D1_gv_engineer3 = TimerCreate();
    lib4A1496D1_gv_spartanII = TimerCreate();
    lib4A1496D1_gv_spartanII2 = TimerCreate();
    lib4A1496D1_gv_spartanII3 = TimerCreate();
    lib4A1496D1_gv_warthog = TimerCreate();
    lib4A1496D1_gv_warthog2 = TimerCreate();
    lib4A1496D1_gv_warthog3 = TimerCreate();
    lib4A1496D1_gv_kodiak = TimerCreate();
    lib4A1496D1_gv_kodiak2 = TimerCreate();
    lib4A1496D1_gv_kodiak3 = TimerCreate();
    lib4A1496D1_gv_scorpion = TimerCreate();
    lib4A1496D1_gv_scorpion2 = TimerCreate();
    lib4A1496D1_gv_scorpion3 = TimerCreate();
    lib4A1496D1_gv_cobra = TimerCreate();
    lib4A1496D1_gv_cobra2 = TimerCreate();
    lib4A1496D1_gv_cobra3 = TimerCreate();
    lib4A1496D1_gv_wolverine = TimerCreate();
    lib4A1496D1_gv_wolverine2 = TimerCreate();
    lib4A1496D1_gv_wolverine3 = TimerCreate();
    lib4A1496D1_gv_mantis = TimerCreate();
    lib4A1496D1_gv_mantis2 = TimerCreate();
    lib4A1496D1_gv_mantis3 = TimerCreate();
    lib4A1496D1_gv_elephant = TimerCreate();
    lib4A1496D1_gv_elephant2 = TimerCreate();
    lib4A1496D1_gv_elephant3 = TimerCreate();
    lib4A1496D1_gv_hornet = TimerCreate();
    lib4A1496D1_gv_hornet2 = TimerCreate();
    lib4A1496D1_gv_hornet3 = TimerCreate();
    lib4A1496D1_gv_vulture = TimerCreate();
    lib4A1496D1_gv_vulture2 = TimerCreate();
    lib4A1496D1_gv_vulture3 = TimerCreate();
    lib4A1496D1_gv_frigate = TimerCreate();
    lib4A1496D1_gv_frigate2 = TimerCreate();
    lib4A1496D1_gv_frigate3 = TimerCreate();
    lib4A1496D1_gv_floodExpandTimer = TimerCreate();
    lib4A1496D1_gv_floodAttackTimer = TimerCreate();
    lib4A1496D1_gv_floodBuildAcidSpewer = TimerCreate();
    lib4A1496D1_gv_floodBuildBiomassConverter = TimerCreate();
    lib4A1496D1_gv_floodBuildBiomaterialDen = TimerCreate();
    lib4A1496D1_gv_floodBuildGravemind = TimerCreate();
    lib4A1496D1_gv_floodBuildKeymind = TimerCreate();
    lib4A1496D1_gv_floodBuildProtoGravemind = TimerCreate();
    lib4A1496D1_gv_floodBuildPureBiosporeFactory = TimerCreate();
    lib4A1496D1_gv_floodBuildSporeVent = TimerCreate();
    lib4A1496D1_gv_floodBuildSporeVentilator = TimerCreate();
    lib4A1496D1_gv_floodBuildBiomaterialMass = TimerCreate();
    lib4A1496D1_gv_floodBuildSynapticFungus = TimerCreate();
    lib4A1496D1_gv_floodBuildWhip = TimerCreate();
    lib4A1496D1_gv_floodTrainAbominationForm = TimerCreate();
    lib4A1496D1_gv_floodTrainBomberForm = TimerCreate();
    lib4A1496D1_gv_floodTrainCarrierForm = TimerCreate();
    lib4A1496D1_gv_floodTrainCombatForm = TimerCreate();
    lib4A1496D1_gv_floodTrainConstructorFormWorker = TimerCreate();
    lib4A1496D1_gv_floodTrainJuggernautForm = TimerCreate();
    lib4A1496D1_gv_floodTrainMalagorkorForm = TimerCreate();
    lib4A1496D1_gv_floodTrainPodForm = TimerCreate();
    lib4A1496D1_gv_floodTrainRangedCombatForm = TimerCreate();
    lib4A1496D1_gv_floodTrainRangedForm = TimerCreate();
    lib4A1496D1_gv_floodTrainSpawnerForm = TimerCreate();
    lib4A1496D1_gv_floodTrainSwarmForm = TimerCreate();
    lib4A1496D1_gv_floodTrainTankForm = TimerCreate();
    lib4A1496D1_gv_floodTrainTransportForm = TimerCreate();
    lib4A1496D1_gv_tIMETOSAYEASTEREGG = TimerCreate();
}

// Presets
// Functions
void lib4A1496D1_gf_AIThinkImmortalNerazim2 (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits) {
    // Variable Declarations
    unitgroup lv_targetGroup;
    aifilter lv_filter;
    int lv_abilityDamage;
    order lv_orderVariable;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_targetGroup = UnitGroupEmpty();
    lv_filter = AIFilter(lp_owner);
    lv_orderVariable = lib4A1496D1_gf_CreateOrderforAI(AbilityCommand("Yamato", 0), lp_owner);

    // Implementation
    if (((UnitGroupCount(lp_nearByUnits, c_unitCountAlive) <= 0) || (UnitOrderIsValid(lp_aIUnit, lv_orderVariable) == false) || (UnitAbilityGetCooldown(lp_aIUnit, "Yamato", "Abil/Yamato") > 0.0) || (UnitOrderHasAbil(lp_aIUnit, "Yamato") == true))) {
        return ;
    }

    lv_abilityDamage = CatalogFieldValueGetAsInt(c_gameCatalogEffect, "YamatoU", "Amount", lp_owner);
    AISetFilterAlliance(lv_filter, c_playerGroupEnemy);
    AISetFilterBits(lv_filter, UnitFilter(0, 0, (1 << c_targetFilterSelf) | (1 << c_targetFilterMissile), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))));
    AISetFilterLifePerMarker(lv_filter, 0.0, null);
    AISetFilterLifeSortReference(lv_filter, lv_abilityDamage, (lv_abilityDamage * lib4A1496D1_gv_tacticalDistanceFromDamage));
    lv_targetGroup = AIGetFilterGroup(lv_filter, lp_nearByUnits);
    lv_orderVariable = AIUnitGroupGetValidOrder(lv_targetGroup, lv_orderVariable, lp_aIUnit, false);
    if ((UnitOrderIsValid(lp_aIUnit, lv_orderVariable) == true)) {
        libNtve_gf_AICast(lp_aIUnit, lv_orderVariable);
    }

}

string lib4A1496D1_gf_unit_to_actorDataName (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    return ("tg_unit_to_actor." + (lp_unitType));
}

void lib4A1496D1_gf_InitUnitTypeToActorData () {
    // Variable Declarations
    string lv_u;
    string lv_a_name;
    string lv_a;

    // Automatic Variable Declarations
    int auto528EC2F8_catalog;
    int auto528EC2F8_i;
    int auto0FEA7C10_catalog;
    int auto0FEA7C10_i;

    // Variable Initialization
    lv_a_name = "";

    // Implementation
    if ((lib4A1496D1_gv_unitToActorInitDone == true)) {
        return ;
    }
    else {
        lib4A1496D1_gv_unitToActorInitDone = true;
    }
    auto528EC2F8_catalog = c_gameCatalogUnit;
    auto528EC2F8_i = 1;
    for ( ; auto528EC2F8_i <= CatalogEntryCount(c_gameCatalogUnit) ; auto528EC2F8_i += 1 ) {
        lv_u = CatalogEntryGet(auto528EC2F8_catalog, auto528EC2F8_i);
        if ((CatalogEntryIsValid(c_gameCatalogActor, lv_u) == true) && (CatalogEntryClass(c_gameCatalogActor, lv_u) == c_classIdCActorUnit)) {
            DataTableSetString(true, lib4A1496D1_gf_unit_to_actorDataName(lv_u), (lv_u));
        }
        else {
            auto0FEA7C10_catalog = c_gameCatalogActor;
            auto0FEA7C10_i = 1;
            for ( ; auto0FEA7C10_i <= CatalogEntryCount(c_gameCatalogActor) ; auto0FEA7C10_i += 1 ) {
                lv_a = CatalogEntryGet(auto0FEA7C10_catalog, auto0FEA7C10_i);
                if ((CatalogEntryClass(c_gameCatalogActor, lv_a) == c_classIdCActorUnit)) {
                    lv_a_name = CatalogFieldValueGet(c_gameCatalogActor, lv_a, "HighlightTooltip", c_playerAny);
                    if ((lv_a_name == ("Unit/Name/" + (lv_u)))) {
                        DataTableSetString(true, lib4A1496D1_gf_unit_to_actorDataName(lv_u), (lv_a));
                        break;
                    }

                }

            }
        }
    }
}

string lib4A1496D1_gf_GetMainActorofUnitType (string lp_unitType) {
    // Variable Declarations
    string lv_dataName;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dataName = lib4A1496D1_gf_unit_to_actorDataName(lp_unitType);

    // Implementation
    lib4A1496D1_gf_InitUnitTypeToActorData();
    if ((DataTableValueExists(true, lv_dataName) == true) && (DataTableValueType(true, lv_dataName) == c_dataTypeString)) {
        return (DataTableGetString(true, lv_dataName));
    }
    else {
        return null;
    }
}

string lib4A1496D1_gf_aliasDataCountName (string lp_alias) {
    // Automatic Variable Declarations
    // Implementation
    return ("tg_unit_alias_count." + lp_alias);
}

string lib4A1496D1_gf_aliasDataIndexName (string lp_alias, int lp_index) {
    // Automatic Variable Declarations
    // Implementation
    return ("tg_unit_alias." + lp_alias + "." + IntToString(lp_index));
}

void lib4A1496D1_gf_InitUnitAliasData () {
    // Variable Declarations
    string lv_u;
    string lv_data_name;
    string lv_alias;
    int lv_a_cnt;
    int lv_a_idx;

    // Automatic Variable Declarations
    int auto1654ED17_catalog;
    int auto1654ED17_i;
    int auto53E61F50_catalog;
    string auto53E61F50_entry;
    string auto53E61F50_fieldPath;
    int auto53E61F50_player;
    int auto53E61F50_i;

    // Variable Initialization
    lv_data_name = "";
    lv_alias = "";

    // Implementation
    if ((lib4A1496D1_gv_aliasDataInitDone == true)) {
        return ;
    }
    else {
        lib4A1496D1_gv_aliasDataInitDone = true;
    }
    auto1654ED17_catalog = c_gameCatalogUnit;
    auto1654ED17_i = 1;
    for ( ; auto1654ED17_i <= CatalogEntryCount(c_gameCatalogUnit) ; auto1654ED17_i += 1 ) {
        lv_u = CatalogEntryGet(auto1654ED17_catalog, auto1654ED17_i);
        auto53E61F50_catalog = c_gameCatalogUnit;
        auto53E61F50_entry = lv_u;
        auto53E61F50_fieldPath = "TechAliasArray";
        auto53E61F50_player = c_playerAny;
        auto53E61F50_i = 0;
        for ( ; auto53E61F50_i <= CatalogFieldValueCount(c_gameCatalogUnit,auto53E61F50_entry,auto53E61F50_fieldPath,auto53E61F50_player)-1 ; auto53E61F50_i += 1 ) {
            lv_alias = CatalogFieldValueGet(c_gameCatalogUnit,auto53E61F50_entry,auto53E61F50_fieldPath+"["+IntToString(auto53E61F50_i)+"]",auto53E61F50_player);
            lv_data_name = lib4A1496D1_gf_aliasDataCountName(lv_alias);
            if ((DataTableValueExists(true, lv_data_name) == true)) {
                lv_a_idx = DataTableGetInt(true, lv_data_name);
                lv_a_cnt = (lv_a_idx + 1);
            }
            else {
                lv_a_cnt = 1;
                lv_a_idx = 0;
            }
            DataTableSetInt(true, lv_data_name, lv_a_cnt);
            DataTableSetString(true, lib4A1496D1_gf_aliasDataIndexName(lv_alias, lv_a_idx), (lv_u));
        }
    }
}

int lib4A1496D1_gf_TechAliasCheck (string lp_aliasUnit, string lp_checkUnit) {
    // Variable Declarations
    string lv_alias;
    int lv_a_cnt;
    int lv_a_idx;

    // Automatic Variable Declarations
    int autoEE4B4105_catalog;
    string autoEE4B4105_entry;
    string autoEE4B4105_fieldPath;
    int autoEE4B4105_player;
    int autoEE4B4105_i;
    int autoFCCCD8CB_ae;
    const int autoFCCCD8CB_ai = 1;

    // Variable Initialization
    lv_alias = "";

    // Implementation
    if ((lib4A1496D1_gv_aliasDataInitDone == false)) {
        lib4A1496D1_gf_InitUnitAliasData();
    }

    autoEE4B4105_catalog = c_gameCatalogUnit;
    autoEE4B4105_entry = lp_aliasUnit;
    autoEE4B4105_fieldPath = "TechAliasArray";
    autoEE4B4105_player = c_playerAny;
    autoEE4B4105_i = 0;
    for ( ; autoEE4B4105_i <= CatalogFieldValueCount(c_gameCatalogUnit,autoEE4B4105_entry,autoEE4B4105_fieldPath,autoEE4B4105_player)-1 ; autoEE4B4105_i += 1 ) {
        lv_alias = CatalogFieldValueGet(c_gameCatalogUnit,autoEE4B4105_entry,autoEE4B4105_fieldPath+"["+IntToString(autoEE4B4105_i)+"]",autoEE4B4105_player);
        lv_a_cnt = DataTableGetInt(true, lib4A1496D1_gf_aliasDataCountName(lv_alias));
        autoFCCCD8CB_ae = (lv_a_cnt - 1);
        lv_a_idx = 0;
        for ( ; ( (autoFCCCD8CB_ai >= 0 && lv_a_idx <= autoFCCCD8CB_ae) || (autoFCCCD8CB_ai < 0 && lv_a_idx >= autoFCCCD8CB_ae) ) ; lv_a_idx += autoFCCCD8CB_ai ) {
            if (((DataTableGetString(true, lib4A1496D1_gf_aliasDataIndexName(lv_alias, lv_a_idx))) == lp_checkUnit)) {
                return 1;
            }

        }
    }
    return 0;
}

string lib4A1496D1_gf_GetUnitAlias (string lp_unittype, int lp_alias_index) {
    // Variable Declarations
    string lv_alias;
    int lv_count;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_alias = "";
    lv_count = CatalogFieldValueCount(c_gameCatalogUnit, lp_unittype, "TechAliasArray", c_playerAny);

    // Implementation
    if ((lv_count == 0)) {
        return (lp_unittype);
    }
    else {
        return CatalogFieldValueGet(c_gameCatalogUnit, lp_unittype, "TechAliasArray[" + IntToString(MinI((lv_count - 1), lp_alias_index)) + "]", c_playerAny);
    }
}

int lib4A1496D1_gf_GetNumberOfUnitsInGroupIncludeAlias (string lp_unitType, unitgroup lp_unitgroup) {
    // Variable Declarations
    int lv_count;
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup auto8BAEBA92_g;
    int auto8BAEBA92_u;

    // Variable Initialization

    // Implementation
    if ((lib4A1496D1_gv_aliasDataInitDone == false)) {
        lib4A1496D1_gf_InitUnitAliasData();
    }

    auto8BAEBA92_g = lp_unitgroup;
    auto8BAEBA92_u = UnitGroupCount(auto8BAEBA92_g, c_unitCountAll);
    for (;; auto8BAEBA92_u -= 1) {
        lv_u = UnitGroupUnitFromEnd(auto8BAEBA92_g, auto8BAEBA92_u);
        if (lv_u == null) { break; }
        if ((UnitGetType(lv_u) == lp_unitType)) {
            lv_count += 1;
        }
        else {
            lv_count += lib4A1496D1_gf_TechAliasCheck(lp_unitType, UnitGetType(lv_u));
        }
    }
    return lv_count;
}

unitgroup lib4A1496D1_gf_FilterUnitGroupIncludeAlias (string lp_unitType, unitgroup lp_unitgroup) {
    // Variable Declarations
    unitgroup lv_ret;
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup autoAA4B4679_g;
    int autoAA4B4679_u;

    // Variable Initialization
    lv_ret = UnitGroupEmpty();

    // Implementation
    if ((lib4A1496D1_gv_aliasDataInitDone == false)) {
        lib4A1496D1_gf_InitUnitAliasData();
    }

    autoAA4B4679_g = lp_unitgroup;
    autoAA4B4679_u = UnitGroupCount(autoAA4B4679_g, c_unitCountAll);
    for (;; autoAA4B4679_u -= 1) {
        lv_u = UnitGroupUnitFromEnd(autoAA4B4679_g, autoAA4B4679_u);
        if (lv_u == null) { break; }
        if (((UnitGetType(lv_u) == lp_unitType) || (lib4A1496D1_gf_TechAliasCheck(lp_unitType, UnitGetType(lv_u)) == 1))) {
            UnitGroupAdd(lv_ret, lv_u);
        }

    }
    return lv_ret;
}

bool lib4A1496D1_gf_TechExistsInUnitGroupIncludeAlias (string lp_unitType, unitgroup lp_unitgroup) {
    // Variable Declarations
    unit lv_u;

    // Automatic Variable Declarations
    unitgroup autoB8EF19D0_g;
    int autoB8EF19D0_u;

    // Variable Initialization

    // Implementation
    if ((lib4A1496D1_gv_aliasDataInitDone == false)) {
        lib4A1496D1_gf_InitUnitAliasData();
    }

    autoB8EF19D0_g = lp_unitgroup;
    autoB8EF19D0_u = UnitGroupCount(autoB8EF19D0_g, c_unitCountAll);
    for (;; autoB8EF19D0_u -= 1) {
        lv_u = UnitGroupUnitFromEnd(autoB8EF19D0_g, autoB8EF19D0_u);
        if (lv_u == null) { break; }
        if (((UnitGetType(lv_u) == lp_unitType) || (lib4A1496D1_gf_TechAliasCheck(lp_unitType, UnitGetType(lv_u)) == 1))) {
            return true;
        }

    }
    return false;
}

int lib4A1496D1_gf_ConstructBuildFlags (int lp_flags) {
    // Automatic Variable Declarations
    // Implementation
    return (lp_flags);
}

void lib4A1496D1_gf_KillUnitWithCustomDeath (int lp_killingplayer, unit lp_unit, string lp_deathtype) {
    // Automatic Variable Declarations
    // Implementation
    CatalogFieldValueSet(c_gameCatalogEffect, "CustomDeathEffectKill", "Death", lp_killingplayer, (lp_deathtype));
    PlayerCreateEffectUnit(lp_killingplayer, "CustomDeathEffectKill", lp_unit);
}

void lib4A1496D1_gf_TrainUnitIfNotInQueue (int lp_player, string lp_unitType, int lp_includeAlias, int lp_count, string lp_requiredTech, int lp_requiredTechAlias, int lp_town, int lp_maxqueue) {
    // Variable Declarations
    int lv_progressCount;

    // Automatic Variable Declarations
    int autoE48AD750_val;
    int auto7FD27F05_val;

    // Variable Initialization

    // Implementation
    autoE48AD750_val = lp_includeAlias;
    if (autoE48AD750_val == lib4A1496D1_ge_TgAIIncludeAlias_DontIncludeAlias) {
        lv_progressCount = AITechCount(lp_player, lp_unitType, c_techCountQueuedOrBetter);
    }
    else if (autoE48AD750_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeFirstAlias) {
    }
    else {
    }
    if ((lp_requiredTech != null)) {
        auto7FD27F05_val = lp_requiredTechAlias;
        if (auto7FD27F05_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeFirstAlias) {
        }
        else if (auto7FD27F05_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeLastAlias) {
        }
        else {
        }
    }

    if (((lp_requiredTech == null) || (AITechCount(lp_player, lp_requiredTech, c_techCountCompleteOnly) != 0)) && (lv_progressCount < lp_count)) {
        AITrain(lp_player, 2, lp_town, lp_unitType, MinI((lp_count - lv_progressCount), lp_maxqueue));
    }

}

void lib4A1496D1_gf_BuildIfNotInQueue (int lp_player, string lp_unitType, int lp_includeAlias, int lp_count, string lp_requiredTech, int lp_requiredTechAlias, int lp_town, int lp_buildFlags, int lp_maxqueue) {
    // Variable Declarations
    int lv_progressCount;

    // Automatic Variable Declarations
    int auto6D54C705_val;
    int autoA80BBBF2_val;

    // Variable Initialization

    // Implementation
    auto6D54C705_val = lp_includeAlias;
    if (auto6D54C705_val == lib4A1496D1_ge_TgAIIncludeAlias_DontIncludeAlias) {
        lv_progressCount = AITechCount(lp_player, lp_unitType, c_techCountQueuedOrBetter);
    }
    else if (auto6D54C705_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeFirstAlias) {
    }
    else {
    }
    if ((lp_requiredTech != null)) {
        autoA80BBBF2_val = lp_requiredTechAlias;
        if (autoA80BBBF2_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeFirstAlias) {
        }
        else if (autoA80BBBF2_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeLastAlias) {
        }
        else {
        }
    }

    if (((lp_requiredTech == null) || (AITechCount(lp_player, lp_requiredTech, c_techCountCompleteOnly) != 0)) && (lv_progressCount < lp_count)) {
        AIBuild(lp_player, 2, lp_town, lp_unitType, MinI((lp_count - lv_progressCount), lp_maxqueue), lp_buildFlags);
    }

}

void lib4A1496D1_gf_ResearchIfNotInQueue (int lp_player, string lp_upgrade, int lp_count, string lp_requiredTech, int lp_requiredTechAlias) {
    // Variable Declarations
    int lv_progressCount;

    // Automatic Variable Declarations
    int autoDC0F7952_val;

    // Variable Initialization
    lv_progressCount = TechTreeUpgradeCount(lp_player, lp_upgrade, c_techCountQueuedOrBetter);

    // Implementation
    if ((lp_requiredTech != null)) {
        autoDC0F7952_val = lp_requiredTechAlias;
        if (autoDC0F7952_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeFirstAlias) {
        }
        else if (autoDC0F7952_val == lib4A1496D1_ge_TgAIIncludeAlias_IncludeLastAlias) {
        }
        else {
        }
    }

    if (((lp_requiredTech == null) || (AITechCount(lp_player, lp_requiredTech, c_techCountCompleteOnly) != 0)) && (lv_progressCount < lp_count)) {
        AIResearch(lp_player, 0, -1, lp_upgrade);
    }

}

int lib4A1496D1_gf_GetTownInRegion (int lp_player, region lp_region) {
    // Variable Declarations
    int lv_i;
    int lv_i_max;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_i_max = AIGetNextUnusedTownSlot(lp_player);

    // Implementation
    while ((lv_i_max > lv_i)) {
        if ((RegionContainsPoint(lp_region, AIGetTownLocation(lp_player, lv_i)) == true)) {
            return lv_i;
        }
        else {
            lv_i += 1;
        }
    }
    AIDeclareTown(lp_player, lv_i_max, RegionGetCenter(lp_region));
    return lv_i_max;
}

void lib4A1496D1_gf_OrderUnitToAttackMove (unit lp_unit, point lp_target) {
    // Variable Declarations
    order lv_ord;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_ord = OrderTargetingPoint(AbilityCommand("attack", 0), lp_target);

    // Implementation
    if ((UnitOrderIsValid(lp_unit, lv_ord) == true)) {
        libNtve_gf_AICast(lp_unit, lv_ord);
        return ;
    }

    lv_ord = OrderTargetingPoint(AbilityCommand("move", 3), lp_target);
    if ((UnitOrderIsValid(lp_unit, lv_ord) == true)) {
        libNtve_gf_AICast(lp_unit, lv_ord);
        return ;
    }

    lv_ord = OrderTargetingPoint(AbilityCommand("move", 0), lp_target);
    if ((UnitOrderIsValid(lp_unit, lv_ord) == true)) {
        libNtve_gf_AICast(lp_unit, lv_ord);
        return ;
    }

}

order lib4A1496D1_gf_CreateOrderforAI (abilcmd lp_abilCmd, int lp_player) {
    // Variable Declarations
    order lv_ord;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_abilCmd == null)) {
        return null;
    }

    lv_ord = Order(lp_abilCmd);
    OrderSetPlayer(lv_ord, lp_player);
    return lv_ord;
}

void lib4A1496D1_gf_AddAttackWaveUnitType (int lp_count, string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    AIAttackWaveAddUnits(-1, lp_count, lp_unitType);
}

unitgroup lib4A1496D1_gf_CreateUnitsWithDefaultFacing (int lp_count, string lp_type, int lp_style, int lp_player, point lp_p) {
    // Variable Declarations
    fixed lv_angle;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((CatalogFieldValueGet(c_gameCatalogUnit, lp_type, "FlagArray", lp_player) == "1")) {
        lv_angle = libNtve_gf_RandomAngle();
    }
    else {
        lv_angle = StringToFixed(CatalogFieldValueGet(c_gameCatalogUnit, lp_type, "Facing", lp_player));
        lv_angle -= 90.0;
    }
    return UnitCreate(lp_count, lp_type, lp_style, lp_player, lp_p, lv_angle);
}

unitgroup lib4A1496D1_gf_CreateUnitsAtPoint2 (int lp_count, string lp_type, int lp_flags, int lp_player, point lp_p) {
    // Automatic Variable Declarations
    // Implementation
    return UnitCreate(lp_count, lp_type, lp_flags, lp_player, lp_p, PointGetFacing(lp_p));
}

unitgroup lib4A1496D1_gf_UnitCreateFacingPoint (int lp_count, string lp_type, int lp_flags, int lp_player, point lp_pos, point lp_facing) {
    // Automatic Variable Declarations
    // Implementation
    return UnitCreate(lp_count, lp_type, lp_flags, lp_player, lp_pos, AngleBetweenPoints(lp_pos, lp_facing));
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Choose your race trigger
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_Chooseyourracetrigger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto82BD9371_g;
    int auto82BD9371_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto82BD9371_g = PlayerGroupAll();
    auto82BD9371_var = -1;
    while (true) {
        auto82BD9371_var = PlayerGroupNextPlayer(auto82BD9371_g, auto82BD9371_var);
        if (auto82BD9371_var < 0) { break; }
        if ((PlayerType(auto82BD9371_var) == c_playerTypeComputer)) {
            PlayerGroupAdd(lib4A1496D1_gv_aIPlayers, auto82BD9371_var);
            Wait(5.0, c_timeGame);
            PlayerModifyPropertyInt(auto82BD9371_var, c_playerPropVespene, c_playerPropOperAdd, 80000);
        }

    }
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_4A1496D1_A3FF06A6"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_4A1496D1_C14700C3"), StringExternal("Param/Value/lib_4A1496D1_998EC048"), "Assets\\Textures\\ui_emoticons_rofl.dds");
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_4A1496D1_181B8F7D"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_4A1496D1_BE3B1270"), StringExternal("Param/Value/lib_4A1496D1_DBAD8455"), "Assets\\Textures\\ui_emoticons_rofl.dds");
    TimerStart(lib4A1496D1_gv_tIMETOSAYEASTEREGG, 2700.0, false, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_Chooseyourracetrigger_Init () {
    lib4A1496D1_gt_Chooseyourracetrigger = TriggerCreate("lib4A1496D1_gt_Chooseyourracetrigger_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_Chooseyourracetrigger);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Diffculty selected
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_Diffcultyselected_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFB1DCEEF_g;
    int autoFB1DCEEF_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFB1DCEEF_g = lib4A1496D1_gv_aIPlayers;
    autoFB1DCEEF_var = -1;
    while (true) {
        autoFB1DCEEF_var = PlayerGroupNextPlayer(autoFB1DCEEF_g, autoFB1DCEEF_var);
        if (autoFB1DCEEF_var < 0) { break; }
        if ((PlayerType(autoFB1DCEEF_var) == c_playerTypeComputer) && (GameAttributePlayerValue("[bnet:local/0.0/427317]2", autoFB1DCEEF_var) == "0001")) {
            if ((PlayerRace(autoFB1DCEEF_var) == "Terr")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCEasy, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCEasy2, autoFB1DCEEF_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_90785092", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_90785092"));
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYEXPANDTIMER, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAttackTimer, true);
            }

            if ((PlayerRace(autoFB1DCEEF_var) == "Prot")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aICovEasy, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aICovEasy2, autoFB1DCEEF_var);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_3F8B2FC4", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_3F8B2FC4"));
                TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse, true);
                TriggerEnable(lib4A1496D1_gt_COVEASYAttackTimer, true);
                TriggerEnable(lib4A1496D1_gt_COVEASYEXPANDTIMER, true);
            }

        }

        if ((PlayerType(autoFB1DCEEF_var) == c_playerTypeComputer) && (GameAttributePlayerValue("[bnet:local/0.0/427317]2", autoFB1DCEEF_var) == "0002")) {
            if ((PlayerRace(autoFB1DCEEF_var) == "Terr")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCModerate, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCModerate2, autoFB1DCEEF_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_ED73BE26", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_ED73BE26"));
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAttackTimer2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKoidak6, true);
            }

            if ((PlayerRace(autoFB1DCEEF_var) == "Prot")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                PlayerGroupAdd(lib4A1496D1_gv_aICovModerate, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aICovModerate2, autoFB1DCEEF_var);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_CE1D9429", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_CE1D9429"));
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateElite10, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter12, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust14, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal18, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith20, true);
                TriggerEnable(lib4A1496D1_gt_COVMODERATEAttackTimer2, true);
                TriggerEnable(lib4A1496D1_gt_COVMODERATEEXPANDTIMER2, true);
            }

        }

        if ((PlayerType(autoFB1DCEEF_var) == c_playerTypeComputer) && (GameAttributePlayerValue("[bnet:local/0.0/427317]2", autoFB1DCEEF_var) == "0003")) {
            if ((PlayerRace(autoFB1DCEEF_var) == "Terr")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCHard, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCHard2, autoFB1DCEEF_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_5CDB6AEA", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_5CDB6AEA"));
                TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDAttackTimer3, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDEXPANDTIMER3, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHardKoidak7, true);
            }

            if ((PlayerRace(autoFB1DCEEF_var) == "Prot")) {
                PlayerModifyPropertyInt(autoFB1DCEEF_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                PlayerGroupAdd(lib4A1496D1_gv_aICovHard, autoFB1DCEEF_var);
                PlayerGroupAdd(lib4A1496D1_gv_aICovHard2, autoFB1DCEEF_var);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(autoFB1DCEEF_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_22B57D53", "A", PlayerName(autoFB1DCEEF_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_22B57D53"));
                TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith24, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardBrute6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardLocust16, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardScarab6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardTemple6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardVampire8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardWraith22, true);
                TriggerEnable(lib4A1496D1_gt_COVHARDAttackTimer3, true);
                TriggerEnable(lib4A1496D1_gt_COVHARDEXPANDTIMER3, true);
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_Diffcultyselected_Init () {
    lib4A1496D1_gt_Diffcultyselected = TriggerCreate("lib4A1496D1_gt_Diffcultyselected_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_Diffcultyselected);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 002
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UntitledTrigger002_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2D615C79_g;
    int auto2D615C79_u;
    unit auto2D615C79_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitProgressUnit()) == "ShipyardProductionFacilityUNSC")) {
        UnitAbilityShow(EventUnitProgressUnit(), "BuildUNSCAirShipsUNSC2", false);
    }

    if ((TimerGetRemaining(lib4A1496D1_gv_tIMETOSAYEASTEREGG) <= 0.0)) {
        auto2D615C79_g = UnitGroup("ShipyardProductionFacilityUNSC", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto2D615C79_u = UnitGroupCount(auto2D615C79_g, c_unitCountAll);
        for (;; auto2D615C79_u -= 1) {
            auto2D615C79_var = UnitGroupUnitFromEnd(auto2D615C79_g, auto2D615C79_u);
            if (auto2D615C79_var == null) { break; }
            UnitAbilityShow(auto2D615C79_var, "BuildUNSCAirShipsUNSC2", true);
        }
        Wait(2.0, c_timeGame);
        TriggerEnable(lib4A1496D1_gt_UntitledTrigger002, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UntitledTrigger002_Init () {
    lib4A1496D1_gt_UntitledTrigger002 = TriggerCreate("lib4A1496D1_gt_UntitledTrigger002_Func");
    TriggerAddEventUnitConstructProgress(lib4A1496D1_gt_UntitledTrigger002, null, c_unitProgressStageComplete);
    TriggerAddEventTimer(lib4A1496D1_gt_UntitledTrigger002, lib4A1496D1_gv_tIMETOSAYEASTEREGG);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Murloc Named "Fish"
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_MurlocNamedFish_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoD8D06EF1_val;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitProgressUnit()) == "CombatMarineUNSC")) {
        autoD8D06EF1_val = RandomInt(1, 7);
        if (autoD8D06EF1_val == 1) {
        }
        else if (autoD8D06EF1_val == 2) {
        }
        else if (autoD8D06EF1_val == 3) {
        }
        else if (autoD8D06EF1_val == 4) {
        }
        else if (autoD8D06EF1_val == 5) {
        }
        else if (autoD8D06EF1_val == 6) {
        }
        else if (autoD8D06EF1_val == 7) {
            UnitKill(EventUnitProgressUnit());
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "FishCombatMarineAlt", c_unitCreateIgnoreBirth, UnitGetOwner(EventUnitProgressUnit()), UnitGetPosition(EventUnitProgressUnit()));
        }
        else {
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_MurlocNamedFish_Init () {
    lib4A1496D1_gt_MurlocNamedFish = TriggerCreate("lib4A1496D1_gt_MurlocNamedFish_Func");
    TriggerAddEventUnitTrainProgress(lib4A1496D1_gt_MurlocNamedFish, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI TIMERS
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_AITIMERS_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD0F5BAD5_g;
    int autoD0F5BAD5_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTeamResourceButton, false);
    autoD0F5BAD5_g = PlayerGroupAll();
    autoD0F5BAD5_var = -1;
    while (true) {
        autoD0F5BAD5_var = PlayerGroupNextPlayer(autoD0F5BAD5_g, autoD0F5BAD5_var);
        if (autoD0F5BAD5_var < 0) { break; }
        MeleeSetOption(autoD0F5BAD5_var, c_meleeOptionSplitResources, false);
    }
    TimerStart(lib4A1496D1_gv_easybuildsupplytimer, 34.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildbarrackstimer, 74.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfactory, 154.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfowardopcenter, 124.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildadvancedcenter, 229.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildmedicalcore, 200.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_cyclops, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_combatMarine, 106.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_medicalOperator, 227.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_warthog, 221.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_scorpion, 350.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_elephant, 314.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildsupplytimer2, 20.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildbarrackstimer2, 50.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfactory2, 88.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildadvancedcenter2, 155.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildshipyard2, 150.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildshiplabreactor2, 432.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfowardopcenter2, 92.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildmedicalcore2, 165.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_cyclops2, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_combatMarine2, 76.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_rocketMarine2, 175.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_marksmanMarine2, 179.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_medicalOperator2, 184.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_hellbringer2, 188.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_spartanII2, 550.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_warthog2, 150.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_scorpion2, 235.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_kodiak2, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_cobra2, 540.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_wolverine2, 132.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_elephant2, 255.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_hornet2, 265.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildsupplytimer3, 12.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildbarrackstimer3, 38.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfactory3, 70.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildadvancedcenter3, 137.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildshipyard3, 138.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildshiplabreactor3, 420.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_easybuildfowardopcenter3, 80.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_cyclops3, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_combatMarine3, 70.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_warthog3, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_scorpion3, 215.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_cobra3, 530.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_wolverine3, 120.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_mantis3, 550.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_hornet3, 240.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_kodiak3, 230.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_vulture3, 540.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_frigate3, 600.0, false, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_AITIMERS_Init () {
    lib4A1496D1_gt_AITIMERS = TriggerCreate("lib4A1496D1_gt_AITIMERS_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_AITIMERS);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Choose A.I. Difficulty 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_ChooseAIDifficulty2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFAFB09AA_g;
    int autoFAFB09AA_var;
    playergroup auto833C6EB8_g;
    int auto833C6EB8_var;
    int autoFF64E968_val;

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.625, c_timeGame);
    autoFAFB09AA_g = PlayerGroupAll();
    autoFAFB09AA_var = -1;
    while (true) {
        autoFAFB09AA_var = PlayerGroupNextPlayer(autoFAFB09AA_g, autoFAFB09AA_var);
        if (autoFAFB09AA_var < 0) { break; }
        if ((PlayerType(autoFAFB09AA_var) == c_playerTypeComputer)) {
            PlayerGroupAdd(lib4A1496D1_gv_aIPlayers, autoFAFB09AA_var);
        }

    }
    auto833C6EB8_g = lib4A1496D1_gv_aIPlayers;
    auto833C6EB8_var = -1;
    while (true) {
        auto833C6EB8_var = PlayerGroupNextPlayer(auto833C6EB8_g, auto833C6EB8_var);
        if (auto833C6EB8_var < 0) { break; }
        AIScout(auto833C6EB8_var);
        PlayerModifyPropertyInt(auto833C6EB8_var, c_playerPropVespene, c_playerPropOperAdd, 80000);
        if ((PlayerRace(auto833C6EB8_var) == "Terr") && ((PlayerGroupHasPlayer(lib4A1496D1_gv_aIUNSCEasy2, auto833C6EB8_var) == false) || (PlayerGroupHasPlayer(lib4A1496D1_gv_aIUNSCModerate2, auto833C6EB8_var) == false) || (PlayerGroupHasPlayer(lib4A1496D1_gv_aIUNSCHard2, auto833C6EB8_var) == false))) {
            autoFF64E968_val = RandomInt(1, 3);
            if (autoFF64E968_val == 1) {
                PlayerModifyPropertyInt(auto833C6EB8_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCEasy, auto833C6EB8_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_1897CE25", "A", PlayerName(auto833C6EB8_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_1897CE25"));
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYEXPANDTIMER, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAttackTimer, true);
            }
            else if (autoFF64E968_val == 2) {
                PlayerModifyPropertyInt(auto833C6EB8_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCModerate, auto833C6EB8_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_D2AE9BCB", "A", PlayerName(auto833C6EB8_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_D2AE9BCB"));
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAttackTimer2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2, true);
                TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKoidak6, true);
            }
            else if (autoFF64E968_val == 3) {
                PlayerModifyPropertyInt(auto833C6EB8_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCHard, auto833C6EB8_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_675ADB55", "A", PlayerName(auto833C6EB8_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_675ADB55"));
                TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDAttackTimer3, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDEXPANDTIMER3, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog6, true);
                TriggerEnable(lib4A1496D1_gt_UNSCHardKoidak7, true);
            }
            else {
                PlayerModifyPropertyInt(auto833C6EB8_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aIUNSCEasy, auto833C6EB8_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_CA409960", "A", PlayerName(auto833C6EB8_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_CA409960"));
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYEXPANDTIMER, true);
                TriggerEnable(lib4A1496D1_gt_UNSCEASYAttackTimer, true);
            }
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_ChooseAIDifficulty2_Init () {
    lib4A1496D1_gt_ChooseAIDifficulty2 = TriggerCreate("lib4A1496D1_gt_ChooseAIDifficulty2_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_ChooseAIDifficulty2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Logistics Hanger
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYLogisticsHanger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto63808769_g;
    int auto63808769_var;
    int autoF846B658_player;
    int autoF846B658_state;
    int autoF846B658_var;
    int autoF846B658_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto63808769_g = lib4A1496D1_gv_aIUNSCEasy;
    auto63808769_var = -1;
    while (true) {
        auto63808769_var = PlayerGroupNextPlayer(auto63808769_g, auto63808769_var);
        if (auto63808769_var < 0) { break; }
        autoF846B658_player = auto63808769_var;
        autoF846B658_state = lib4A1496D1_gv_townStateBuilding;
        autoF846B658_var = 0;
        for ( ; autoF846B658_var < c_townMax; autoF846B658_var += 1 ) {
            autoF846B658_statevar = AIGetTownState(autoF846B658_player,autoF846B658_var);
            if (autoF846B658_statevar >= autoF846B658_state) {
                if ((UnitCount("SupplyDepot2", auto63808769_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto63808769_var, 1, autoF846B658_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYLogisticsHanger_Init () {
    lib4A1496D1_gt_UNSCEASYLogisticsHanger = TriggerCreate("lib4A1496D1_gt_UNSCEASYLogisticsHanger_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYLogisticsHanger, lib4A1496D1_gv_easybuildsupplytimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Logistics Hanger 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYLogisticsHanger2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto775E5D6E_g;
    int auto775E5D6E_var;
    int auto3CE03B89_player;
    int auto3CE03B89_state;
    int auto3CE03B89_var;
    int auto3CE03B89_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto775E5D6E_g = lib4A1496D1_gv_aIUNSCEasy;
    auto775E5D6E_var = -1;
    while (true) {
        auto775E5D6E_var = PlayerGroupNextPlayer(auto775E5D6E_g, auto775E5D6E_var);
        if (auto775E5D6E_var < 0) { break; }
        auto3CE03B89_player = auto775E5D6E_var;
        auto3CE03B89_state = lib4A1496D1_gv_townStateBuilding;
        auto3CE03B89_var = 0;
        for ( ; auto3CE03B89_var < c_townMax; auto3CE03B89_var += 1 ) {
            auto3CE03B89_statevar = AIGetTownState(auto3CE03B89_player,auto3CE03B89_var);
            if (auto3CE03B89_statevar >= auto3CE03B89_state) {
                if ((UnitCount("SupplyDepot2", auto775E5D6E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto775E5D6E_var, 1, auto3CE03B89_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYLogisticsHanger2_Init () {
    lib4A1496D1_gt_UNSCEASYLogisticsHanger2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYLogisticsHanger2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYLogisticsHanger2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYLogisticsHanger2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Infantry Barracks
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYInfantryBarracks_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto2C0A3387_g;
    int auto2C0A3387_var;
    int autoCE93A3F3_player;
    int autoCE93A3F3_state;
    int autoCE93A3F3_var;
    int autoCE93A3F3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2C0A3387_g = lib4A1496D1_gv_aIUNSCEasy;
    auto2C0A3387_var = -1;
    while (true) {
        auto2C0A3387_var = PlayerGroupNextPlayer(auto2C0A3387_g, auto2C0A3387_var);
        if (auto2C0A3387_var < 0) { break; }
        autoCE93A3F3_player = auto2C0A3387_var;
        autoCE93A3F3_state = lib4A1496D1_gv_townStateBuilding;
        autoCE93A3F3_var = 0;
        for ( ; autoCE93A3F3_var < c_townMax; autoCE93A3F3_var += 1 ) {
            autoCE93A3F3_statevar = AIGetTownState(autoCE93A3F3_player,autoCE93A3F3_var);
            if (autoCE93A3F3_statevar >= autoCE93A3F3_state) {
                if ((UnitCount("InfantryBarracksUNSC", auto2C0A3387_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(auto2C0A3387_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto2C0A3387_var, 1, autoCE93A3F3_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYInfantryBarracks_Init () {
    lib4A1496D1_gt_UNSCEASYInfantryBarracks = TriggerCreate("lib4A1496D1_gt_UNSCEASYInfantryBarracks_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYInfantryBarracks, lib4A1496D1_gv_easybuildbarrackstimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Infantry Barracks 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYInfantryBarracks2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto147CAB38_g;
    int auto147CAB38_var;
    int auto3F549C9B_player;
    int auto3F549C9B_state;
    int auto3F549C9B_var;
    int auto3F549C9B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto147CAB38_g = lib4A1496D1_gv_aIUNSCEasy;
    auto147CAB38_var = -1;
    while (true) {
        auto147CAB38_var = PlayerGroupNextPlayer(auto147CAB38_g, auto147CAB38_var);
        if (auto147CAB38_var < 0) { break; }
        auto3F549C9B_player = auto147CAB38_var;
        auto3F549C9B_state = lib4A1496D1_gv_townStateBuilding;
        auto3F549C9B_var = 0;
        for ( ; auto3F549C9B_var < c_townMax; auto3F549C9B_var += 1 ) {
            auto3F549C9B_statevar = AIGetTownState(auto3F549C9B_player,auto3F549C9B_var);
            if (auto3F549C9B_statevar >= auto3F549C9B_state) {
                if ((UnitCount("InfantryBarracksUNSC", auto147CAB38_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(auto147CAB38_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto147CAB38_var, 1, auto3F549C9B_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYInfantryBarracks2_Init () {
    lib4A1496D1_gt_UNSCEASYInfantryBarracks2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYInfantryBarracks2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYInfantryBarracks2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYInfantryBarracks2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Motorized Vehicle Factory
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto21AAFBC1_g;
    int auto21AAFBC1_var;
    int auto1BE9A2E5_player;
    int auto1BE9A2E5_state;
    int auto1BE9A2E5_var;
    int auto1BE9A2E5_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto21AAFBC1_g = lib4A1496D1_gv_aIUNSCEasy;
    auto21AAFBC1_var = -1;
    while (true) {
        auto21AAFBC1_var = PlayerGroupNextPlayer(auto21AAFBC1_g, auto21AAFBC1_var);
        if (auto21AAFBC1_var < 0) { break; }
        auto1BE9A2E5_player = auto21AAFBC1_var;
        auto1BE9A2E5_state = lib4A1496D1_gv_townStateBuilding;
        auto1BE9A2E5_var = 0;
        for ( ; auto1BE9A2E5_var < c_townMax; auto1BE9A2E5_var += 1 ) {
            auto1BE9A2E5_statevar = AIGetTownState(auto1BE9A2E5_player,auto1BE9A2E5_var);
            if (auto1BE9A2E5_statevar >= auto1BE9A2E5_state) {
                if ((UnitCount("Factory2", auto21AAFBC1_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4) && (PlayerGetPropertyInt(auto21AAFBC1_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto21AAFBC1_var, 0, auto1BE9A2E5_var, "Factory2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory_Init () {
    lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory = TriggerCreate("lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory, lib4A1496D1_gv_easybuildfactory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Motorized Vehicle Factory 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto01669D96_g;
    int auto01669D96_var;
    int auto6D7D83E4_player;
    int auto6D7D83E4_state;
    int auto6D7D83E4_var;
    int auto6D7D83E4_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto01669D96_g = lib4A1496D1_gv_aIUNSCEasy;
    auto01669D96_var = -1;
    while (true) {
        auto01669D96_var = PlayerGroupNextPlayer(auto01669D96_g, auto01669D96_var);
        if (auto01669D96_var < 0) { break; }
        auto6D7D83E4_player = auto01669D96_var;
        auto6D7D83E4_state = lib4A1496D1_gv_townStateBuilding;
        auto6D7D83E4_var = 0;
        for ( ; auto6D7D83E4_var < c_townMax; auto6D7D83E4_var += 1 ) {
            auto6D7D83E4_statevar = AIGetTownState(auto6D7D83E4_player,auto6D7D83E4_var);
            if (auto6D7D83E4_statevar >= auto6D7D83E4_state) {
                if ((UnitCount("Factory2", auto01669D96_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4) && (PlayerGetPropertyInt(auto01669D96_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto01669D96_var, 0, auto6D7D83E4_var, "Factory2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2_Init () {
    lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Foward Operating Research Center
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA29C37FD_g;
    int autoA29C37FD_var;
    int auto458A7573_player;
    int auto458A7573_state;
    int auto458A7573_var;
    int auto458A7573_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA29C37FD_g = lib4A1496D1_gv_aIUNSCEasy;
    autoA29C37FD_var = -1;
    while (true) {
        autoA29C37FD_var = PlayerGroupNextPlayer(autoA29C37FD_g, autoA29C37FD_var);
        if (autoA29C37FD_var < 0) { break; }
        auto458A7573_player = autoA29C37FD_var;
        auto458A7573_state = lib4A1496D1_gv_townStateBuilding;
        auto458A7573_var = 0;
        for ( ; auto458A7573_var < c_townMax; auto458A7573_var += 1 ) {
            auto458A7573_statevar = AIGetTownState(auto458A7573_player,auto458A7573_var);
            if (auto458A7573_statevar >= auto458A7573_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", autoA29C37FD_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoA29C37FD_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoA29C37FD_var, 2, auto458A7573_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter_Init () {
    lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter = TriggerCreate("lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter, lib4A1496D1_gv_easybuildfowardopcenter);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Foward Operating Research Center 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCC2D16B3_g;
    int autoCC2D16B3_var;
    int auto4CFDCD82_player;
    int auto4CFDCD82_state;
    int auto4CFDCD82_var;
    int auto4CFDCD82_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCC2D16B3_g = lib4A1496D1_gv_aIUNSCEasy;
    autoCC2D16B3_var = -1;
    while (true) {
        autoCC2D16B3_var = PlayerGroupNextPlayer(autoCC2D16B3_g, autoCC2D16B3_var);
        if (autoCC2D16B3_var < 0) { break; }
        auto4CFDCD82_player = autoCC2D16B3_var;
        auto4CFDCD82_state = lib4A1496D1_gv_townStateBuilding;
        auto4CFDCD82_var = 0;
        for ( ; auto4CFDCD82_var < c_townMax; auto4CFDCD82_var += 1 ) {
            auto4CFDCD82_statevar = AIGetTownState(auto4CFDCD82_player,auto4CFDCD82_var);
            if (auto4CFDCD82_statevar >= auto4CFDCD82_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", autoCC2D16B3_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoCC2D16B3_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoCC2D16B3_var, 2, auto4CFDCD82_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2_Init () {
    lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Advanced Research Center
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8835AD67_g;
    int auto8835AD67_var;
    int auto3A0F2A6D_player;
    int auto3A0F2A6D_state;
    int auto3A0F2A6D_var;
    int auto3A0F2A6D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8835AD67_g = lib4A1496D1_gv_aIUNSCEasy;
    auto8835AD67_var = -1;
    while (true) {
        auto8835AD67_var = PlayerGroupNextPlayer(auto8835AD67_g, auto8835AD67_var);
        if (auto8835AD67_var < 0) { break; }
        auto3A0F2A6D_player = auto8835AD67_var;
        auto3A0F2A6D_state = lib4A1496D1_gv_townStateBuilding;
        auto3A0F2A6D_var = 0;
        for ( ; auto3A0F2A6D_var < c_townMax; auto3A0F2A6D_var += 1 ) {
            auto3A0F2A6D_statevar = AIGetTownState(auto3A0F2A6D_player,auto3A0F2A6D_var);
            if (auto3A0F2A6D_statevar >= auto3A0F2A6D_state) {
                if ((UnitCount("AdvancedResearchFacility", auto8835AD67_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto8835AD67_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto8835AD67_var, 2, auto3A0F2A6D_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter_Init () {
    lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter = TriggerCreate("lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter, lib4A1496D1_gv_easybuildadvancedcenter);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Advanced Research Center 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC3418D16_g;
    int autoC3418D16_var;
    int auto0EC07328_player;
    int auto0EC07328_state;
    int auto0EC07328_var;
    int auto0EC07328_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC3418D16_g = lib4A1496D1_gv_aIUNSCEasy;
    autoC3418D16_var = -1;
    while (true) {
        autoC3418D16_var = PlayerGroupNextPlayer(autoC3418D16_g, autoC3418D16_var);
        if (autoC3418D16_var < 0) { break; }
        auto0EC07328_player = autoC3418D16_var;
        auto0EC07328_state = lib4A1496D1_gv_townStateBuilding;
        auto0EC07328_var = 0;
        for ( ; auto0EC07328_var < c_townMax; auto0EC07328_var += 1 ) {
            auto0EC07328_statevar = AIGetTownState(auto0EC07328_player,auto0EC07328_var);
            if (auto0EC07328_statevar >= auto0EC07328_state) {
                if ((UnitCount("AdvancedResearchFacility", autoC3418D16_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoC3418D16_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoC3418D16_var, 2, auto0EC07328_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2_Init () {
    lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2, 85.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Medical Core
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMedicalCore_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6DD7A4ED_g;
    int auto6DD7A4ED_var;
    int autoC02014FD_player;
    int autoC02014FD_state;
    int autoC02014FD_var;
    int autoC02014FD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6DD7A4ED_g = lib4A1496D1_gv_aIUNSCEasy;
    auto6DD7A4ED_var = -1;
    while (true) {
        auto6DD7A4ED_var = PlayerGroupNextPlayer(auto6DD7A4ED_g, auto6DD7A4ED_var);
        if (auto6DD7A4ED_var < 0) { break; }
        autoC02014FD_player = auto6DD7A4ED_var;
        autoC02014FD_state = lib4A1496D1_gv_townStateBuilding;
        autoC02014FD_var = 0;
        for ( ; autoC02014FD_var < c_townMax; autoC02014FD_var += 1 ) {
            autoC02014FD_statevar = AIGetTownState(autoC02014FD_player,autoC02014FD_var);
            if (autoC02014FD_statevar >= autoC02014FD_state) {
                AIBuild(auto6DD7A4ED_var, 0, autoC02014FD_var, "MedicalCore", 1, -1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMedicalCore_Init () {
    lib4A1496D1_gt_UNSCEASYMedicalCore = TriggerCreate("lib4A1496D1_gt_UNSCEASYMedicalCore_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYMedicalCore, lib4A1496D1_gv_easybuildmedicalcore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Medical Core 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMedicalCore2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB36286B2_g;
    int autoB36286B2_var;
    int autoA85EA123_player;
    int autoA85EA123_state;
    int autoA85EA123_var;
    int autoA85EA123_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB36286B2_g = lib4A1496D1_gv_aIUNSCEasy;
    autoB36286B2_var = -1;
    while (true) {
        autoB36286B2_var = PlayerGroupNextPlayer(autoB36286B2_g, autoB36286B2_var);
        if (autoB36286B2_var < 0) { break; }
        autoA85EA123_player = autoB36286B2_var;
        autoA85EA123_state = lib4A1496D1_gv_townStateBuilding;
        autoA85EA123_var = 0;
        for ( ; autoA85EA123_var < c_townMax; autoA85EA123_var += 1 ) {
            autoA85EA123_statevar = AIGetTownState(autoA85EA123_player,autoA85EA123_var);
            if (autoA85EA123_statevar >= autoA85EA123_state) {
                AIBuild(autoB36286B2_var, 0, autoA85EA123_var, "MedicalCore", 1, -1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMedicalCore2_Init () {
    lib4A1496D1_gt_UNSCEASYMedicalCore2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYMedicalCore2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalCore2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYMedicalCore2, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Cyclops
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYCyclops_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD050CDCD_g;
    int autoD050CDCD_var;
    int auto25193C05_player;
    int auto25193C05_state;
    int auto25193C05_var;
    int auto25193C05_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD050CDCD_g = lib4A1496D1_gv_aIUNSCEasy;
    autoD050CDCD_var = -1;
    while (true) {
        autoD050CDCD_var = PlayerGroupNextPlayer(autoD050CDCD_g, autoD050CDCD_var);
        if (autoD050CDCD_var < 0) { break; }
        auto25193C05_player = autoD050CDCD_var;
        auto25193C05_state = lib4A1496D1_gv_townStateBuilding;
        auto25193C05_var = 0;
        for ( ; auto25193C05_var < c_townMax; auto25193C05_var += 1 ) {
            auto25193C05_statevar = AIGetTownState(auto25193C05_player,auto25193C05_var);
            if (auto25193C05_statevar >= auto25193C05_state) {
                if ((UnitCount("CyclopsUNSC", autoD050CDCD_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoD050CDCD_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoD050CDCD_var, 7, auto25193C05_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYCyclops_Init () {
    lib4A1496D1_gt_UNSCEASYCyclops = TriggerCreate("lib4A1496D1_gt_UNSCEASYCyclops_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYCyclops, lib4A1496D1_gv_cyclops);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Cyclops 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYCyclops2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF10CBE46_g;
    int autoF10CBE46_var;
    int auto59701FD0_player;
    int auto59701FD0_state;
    int auto59701FD0_var;
    int auto59701FD0_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF10CBE46_g = lib4A1496D1_gv_aIUNSCEasy;
    autoF10CBE46_var = -1;
    while (true) {
        autoF10CBE46_var = PlayerGroupNextPlayer(autoF10CBE46_g, autoF10CBE46_var);
        if (autoF10CBE46_var < 0) { break; }
        auto59701FD0_player = autoF10CBE46_var;
        auto59701FD0_state = lib4A1496D1_gv_townStateBuilding;
        auto59701FD0_var = 0;
        for ( ; auto59701FD0_var < c_townMax; auto59701FD0_var += 1 ) {
            auto59701FD0_statevar = AIGetTownState(auto59701FD0_player,auto59701FD0_var);
            if (auto59701FD0_statevar >= auto59701FD0_state) {
                if ((UnitCount("CyclopsUNSC", autoF10CBE46_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoF10CBE46_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoF10CBE46_var, 7, auto59701FD0_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYCyclops2_Init () {
    lib4A1496D1_gt_UNSCEASYCyclops2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYCyclops2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCyclops2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYCyclops2, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Combat Marine
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYCombatMarine_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0AD3B025_g;
    int auto0AD3B025_var;
    int autoD1FA830E_player;
    int autoD1FA830E_state;
    int autoD1FA830E_var;
    int autoD1FA830E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0AD3B025_g = lib4A1496D1_gv_aIUNSCEasy;
    auto0AD3B025_var = -1;
    while (true) {
        auto0AD3B025_var = PlayerGroupNextPlayer(auto0AD3B025_g, auto0AD3B025_var);
        if (auto0AD3B025_var < 0) { break; }
        autoD1FA830E_player = auto0AD3B025_var;
        autoD1FA830E_state = lib4A1496D1_gv_townStateBuilding;
        autoD1FA830E_var = 0;
        for ( ; autoD1FA830E_var < c_townMax; autoD1FA830E_var += 1 ) {
            autoD1FA830E_statevar = AIGetTownState(autoD1FA830E_player,autoD1FA830E_var);
            if (autoD1FA830E_statevar >= autoD1FA830E_state) {
                AITrain(auto0AD3B025_var, 6, autoD1FA830E_var, "CombatMarineUNSC", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYCombatMarine_Init () {
    lib4A1496D1_gt_UNSCEASYCombatMarine = TriggerCreate("lib4A1496D1_gt_UNSCEASYCombatMarine_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYCombatMarine, lib4A1496D1_gv_combatMarine);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Combat Marine 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYCombatMarine2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0AC57EF0_g;
    int auto0AC57EF0_var;
    int autoAB0BBCEF_player;
    int autoAB0BBCEF_state;
    int autoAB0BBCEF_var;
    int autoAB0BBCEF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0AC57EF0_g = lib4A1496D1_gv_aIUNSCEasy;
    auto0AC57EF0_var = -1;
    while (true) {
        auto0AC57EF0_var = PlayerGroupNextPlayer(auto0AC57EF0_g, auto0AC57EF0_var);
        if (auto0AC57EF0_var < 0) { break; }
        autoAB0BBCEF_player = auto0AC57EF0_var;
        autoAB0BBCEF_state = lib4A1496D1_gv_townStateBuilding;
        autoAB0BBCEF_var = 0;
        for ( ; autoAB0BBCEF_var < c_townMax; autoAB0BBCEF_var += 1 ) {
            autoAB0BBCEF_statevar = AIGetTownState(autoAB0BBCEF_player,autoAB0BBCEF_var);
            if (autoAB0BBCEF_statevar >= autoAB0BBCEF_state) {
                AITrain(auto0AC57EF0_var, 6, autoAB0BBCEF_var, "CombatMarineUNSC", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYCombatMarine2_Init () {
    lib4A1496D1_gt_UNSCEASYCombatMarine2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYCombatMarine2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYCombatMarine2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYCombatMarine2, 20.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Medical Operator
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMedicalOperator_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE8168D47_g;
    int autoE8168D47_var;
    int autoAC3237DF_player;
    int autoAC3237DF_state;
    int autoAC3237DF_var;
    int autoAC3237DF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE8168D47_g = lib4A1496D1_gv_aIUNSCEasy;
    autoE8168D47_var = -1;
    while (true) {
        autoE8168D47_var = PlayerGroupNextPlayer(autoE8168D47_g, autoE8168D47_var);
        if (autoE8168D47_var < 0) { break; }
        autoAC3237DF_player = autoE8168D47_var;
        autoAC3237DF_state = lib4A1496D1_gv_townStateBuilding;
        autoAC3237DF_var = 0;
        for ( ; autoAC3237DF_var < c_townMax; autoAC3237DF_var += 1 ) {
            autoAC3237DF_statevar = AIGetTownState(autoAC3237DF_player,autoAC3237DF_var);
            if (autoAC3237DF_statevar >= autoAC3237DF_state) {
                AITrain(autoE8168D47_var, 5, autoAC3237DF_var, "MedicalOperatorUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMedicalOperator_Init () {
    lib4A1496D1_gt_UNSCEASYMedicalOperator = TriggerCreate("lib4A1496D1_gt_UNSCEASYMedicalOperator_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYMedicalOperator, lib4A1496D1_gv_medicalOperator);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Medical Operator 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYMedicalOperator2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto78B870F4_g;
    int auto78B870F4_var;
    int auto81A26AD2_player;
    int auto81A26AD2_state;
    int auto81A26AD2_var;
    int auto81A26AD2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto78B870F4_g = lib4A1496D1_gv_aIUNSCEasy;
    auto78B870F4_var = -1;
    while (true) {
        auto78B870F4_var = PlayerGroupNextPlayer(auto78B870F4_g, auto78B870F4_var);
        if (auto78B870F4_var < 0) { break; }
        auto81A26AD2_player = auto78B870F4_var;
        auto81A26AD2_state = lib4A1496D1_gv_townStateBuilding;
        auto81A26AD2_var = 0;
        for ( ; auto81A26AD2_var < c_townMax; auto81A26AD2_var += 1 ) {
            auto81A26AD2_statevar = AIGetTownState(auto81A26AD2_player,auto81A26AD2_var);
            if (auto81A26AD2_statevar >= auto81A26AD2_state) {
                AITrain(auto78B870F4_var, 5, auto81A26AD2_var, "MedicalOperatorUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYMedicalOperator2_Init () {
    lib4A1496D1_gt_UNSCEASYMedicalOperator2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYMedicalOperator2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYMedicalOperator2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYMedicalOperator2, 20.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Warthog
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYWarthog_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto284E603A_g;
    int auto284E603A_var;
    int autoB4D86649_player;
    int autoB4D86649_state;
    int autoB4D86649_var;
    int autoB4D86649_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto284E603A_g = lib4A1496D1_gv_aIUNSCEasy;
    auto284E603A_var = -1;
    while (true) {
        auto284E603A_var = PlayerGroupNextPlayer(auto284E603A_g, auto284E603A_var);
        if (auto284E603A_var < 0) { break; }
        autoB4D86649_player = auto284E603A_var;
        autoB4D86649_state = lib4A1496D1_gv_townStateBuilding;
        autoB4D86649_var = 0;
        for ( ; autoB4D86649_var < c_townMax; autoB4D86649_var += 1 ) {
            autoB4D86649_statevar = AIGetTownState(autoB4D86649_player,autoB4D86649_var);
            if (autoB4D86649_statevar >= autoB4D86649_state) {
                AITrain(auto284E603A_var, 4, autoB4D86649_var, "WarthogUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYWarthog_Init () {
    lib4A1496D1_gt_UNSCEASYWarthog = TriggerCreate("lib4A1496D1_gt_UNSCEASYWarthog_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYWarthog, lib4A1496D1_gv_warthog);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Warthog 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYWarthog2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7C6EDA69_g;
    int auto7C6EDA69_var;
    int auto1B633059_player;
    int auto1B633059_state;
    int auto1B633059_var;
    int auto1B633059_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7C6EDA69_g = lib4A1496D1_gv_aIUNSCEasy;
    auto7C6EDA69_var = -1;
    while (true) {
        auto7C6EDA69_var = PlayerGroupNextPlayer(auto7C6EDA69_g, auto7C6EDA69_var);
        if (auto7C6EDA69_var < 0) { break; }
        auto1B633059_player = auto7C6EDA69_var;
        auto1B633059_state = lib4A1496D1_gv_townStateBuilding;
        auto1B633059_var = 0;
        for ( ; auto1B633059_var < c_townMax; auto1B633059_var += 1 ) {
            auto1B633059_statevar = AIGetTownState(auto1B633059_player,auto1B633059_var);
            if (auto1B633059_statevar >= auto1B633059_state) {
                AITrain(auto7C6EDA69_var, 4, auto1B633059_var, "WarthogUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYWarthog2_Init () {
    lib4A1496D1_gt_UNSCEASYWarthog2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYWarthog2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYWarthog2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYWarthog2, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Elephant
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYElephant_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto2B787BDB_g;
    int auto2B787BDB_var;
    int auto1C9274EA_player;
    int auto1C9274EA_state;
    int auto1C9274EA_var;
    int auto1C9274EA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2B787BDB_g = lib4A1496D1_gv_aIUNSCEasy;
    auto2B787BDB_var = -1;
    while (true) {
        auto2B787BDB_var = PlayerGroupNextPlayer(auto2B787BDB_g, auto2B787BDB_var);
        if (auto2B787BDB_var < 0) { break; }
        auto1C9274EA_player = auto2B787BDB_var;
        auto1C9274EA_state = lib4A1496D1_gv_townStateBuilding;
        auto1C9274EA_var = 0;
        for ( ; auto1C9274EA_var < c_townMax; auto1C9274EA_var += 1 ) {
            auto1C9274EA_statevar = AIGetTownState(auto1C9274EA_player,auto1C9274EA_var);
            if (auto1C9274EA_statevar >= auto1C9274EA_state) {
                AITrain(auto2B787BDB_var, 4, auto1C9274EA_var, "ElephantUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYElephant_Init () {
    lib4A1496D1_gt_UNSCEASYElephant = TriggerCreate("lib4A1496D1_gt_UNSCEASYElephant_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYElephant, lib4A1496D1_gv_elephant);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Elephant 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYElephant2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD541B2D8_g;
    int autoD541B2D8_var;
    int auto3875D72D_player;
    int auto3875D72D_state;
    int auto3875D72D_var;
    int auto3875D72D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD541B2D8_g = lib4A1496D1_gv_aIUNSCEasy;
    autoD541B2D8_var = -1;
    while (true) {
        autoD541B2D8_var = PlayerGroupNextPlayer(autoD541B2D8_g, autoD541B2D8_var);
        if (autoD541B2D8_var < 0) { break; }
        auto3875D72D_player = autoD541B2D8_var;
        auto3875D72D_state = lib4A1496D1_gv_townStateBuilding;
        auto3875D72D_var = 0;
        for ( ; auto3875D72D_var < c_townMax; auto3875D72D_var += 1 ) {
            auto3875D72D_statevar = AIGetTownState(auto3875D72D_player,auto3875D72D_var);
            if (auto3875D72D_statevar >= auto3875D72D_state) {
                AITrain(autoD541B2D8_var, 4, auto3875D72D_var, "ElephantUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYElephant2_Init () {
    lib4A1496D1_gt_UNSCEASYElephant2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYElephant2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYElephant2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYElephant2, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Scorpion
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYScorpion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF3181531_g;
    int autoF3181531_var;
    int autoA50D735F_player;
    int autoA50D735F_state;
    int autoA50D735F_var;
    int autoA50D735F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF3181531_g = lib4A1496D1_gv_aIUNSCEasy;
    autoF3181531_var = -1;
    while (true) {
        autoF3181531_var = PlayerGroupNextPlayer(autoF3181531_g, autoF3181531_var);
        if (autoF3181531_var < 0) { break; }
        autoA50D735F_player = autoF3181531_var;
        autoA50D735F_state = lib4A1496D1_gv_townStateBuilding;
        autoA50D735F_var = 0;
        for ( ; autoA50D735F_var < c_townMax; autoA50D735F_var += 1 ) {
            autoA50D735F_statevar = AIGetTownState(autoA50D735F_player,autoA50D735F_var);
            if (autoA50D735F_statevar >= autoA50D735F_state) {
                AITrain(autoF3181531_var, 4, autoA50D735F_var, "ScorpionUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYScorpion_Init () {
    lib4A1496D1_gt_UNSCEASYScorpion = TriggerCreate("lib4A1496D1_gt_UNSCEASYScorpion_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCEASYScorpion, lib4A1496D1_gv_scorpion);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Scorpion 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYScorpion2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5F9BDC56_g;
    int auto5F9BDC56_var;
    int autoCBE55BDB_player;
    int autoCBE55BDB_state;
    int autoCBE55BDB_var;
    int autoCBE55BDB_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5F9BDC56_g = lib4A1496D1_gv_aIUNSCEasy;
    auto5F9BDC56_var = -1;
    while (true) {
        auto5F9BDC56_var = PlayerGroupNextPlayer(auto5F9BDC56_g, auto5F9BDC56_var);
        if (auto5F9BDC56_var < 0) { break; }
        autoCBE55BDB_player = auto5F9BDC56_var;
        autoCBE55BDB_state = lib4A1496D1_gv_townStateBuilding;
        autoCBE55BDB_var = 0;
        for ( ; autoCBE55BDB_var < c_townMax; autoCBE55BDB_var += 1 ) {
            autoCBE55BDB_statevar = AIGetTownState(autoCBE55BDB_player,autoCBE55BDB_var);
            if (autoCBE55BDB_statevar >= autoCBE55BDB_state) {
                AITrain(auto5F9BDC56_var, 4, autoCBE55BDB_var, "ScorpionUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYScorpion2_Init () {
    lib4A1496D1_gt_UNSCEASYScorpion2 = TriggerCreate("lib4A1496D1_gt_UNSCEASYScorpion2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYScorpion2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYScorpion2, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY EXPAND TIMER
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYEXPANDTIMER_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_town1;

    // Automatic Variable Declarations
    playergroup auto2180D25B_g;
    int auto2180D25B_var;
    int autoA710E966_player;
    int autoA710E966_state;
    int autoA710E966_var;
    int autoA710E966_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto2180D25B_g = lib4A1496D1_gv_aIUNSCEasy;
    auto2180D25B_var = -1;
    while (true) {
        auto2180D25B_var = PlayerGroupNextPlayer(auto2180D25B_g, auto2180D25B_var);
        if (auto2180D25B_var < 0) { break; }
        autoA710E966_player = auto2180D25B_var;
        autoA710E966_state = lib4A1496D1_gv_townStateBuilding;
        autoA710E966_var = 0;
        for ( ; autoA710E966_var < c_townMax; autoA710E966_var += 1 ) {
            autoA710E966_statevar = AIGetTownState(autoA710E966_player,autoA710E966_var);
            if (autoA710E966_statevar >= autoA710E966_state) {
                lv_town1 = (lv_town1 + UnitGroupCount(UnitGroup("Firebase", auto2180D25B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_town1 < 4)) {
                    PlayerModifyPropertyInt(auto2180D25B_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(auto2180D25B_var, PlayerStartLocation(auto2180D25B_var), "Firebase");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYEXPANDTIMER_Init () {
    lib4A1496D1_gt_UNSCEASYEXPANDTIMER = TriggerCreate("lib4A1496D1_gt_UNSCEASYEXPANDTIMER_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYEXPANDTIMER, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYEXPANDTIMER, 360.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC EASY Attack Timer
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCEASYAttackTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFD1F55A9_g;
    int autoFD1F55A9_var;
    unitgroup auto924163CE_g;
    int auto924163CE_u;
    unit auto924163CE_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFD1F55A9_g = lib4A1496D1_gv_aIUNSCEasy;
    autoFD1F55A9_var = -1;
    while (true) {
        autoFD1F55A9_var = PlayerGroupNextPlayer(autoFD1F55A9_g, autoFD1F55A9_var);
        if (autoFD1F55A9_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(autoFD1F55A9_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto924163CE_g = UnitGroup(null, autoFD1F55A9_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto924163CE_u = UnitGroupCount(auto924163CE_g, c_unitCountAll);
        for (;; auto924163CE_u -= 1) {
            auto924163CE_var = UnitGroupUnitFromEnd(auto924163CE_g, auto924163CE_u);
            if (auto924163CE_var == null) { break; }
            UnitIssueOrder(auto924163CE_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCEASYAttackTimer_Init () {
    lib4A1496D1_gt_UNSCEASYAttackTimer = TriggerCreate("lib4A1496D1_gt_UNSCEASYAttackTimer_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCEASYAttackTimer, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCEASYAttackTimer, 300.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Logistics Hanger 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATELogisticsHanger4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto930A68A4_g;
    int auto930A68A4_var;
    int autoE5BA6F32_player;
    int autoE5BA6F32_state;
    int autoE5BA6F32_var;
    int autoE5BA6F32_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto930A68A4_g = lib4A1496D1_gv_aIUNSCModerate;
    auto930A68A4_var = -1;
    while (true) {
        auto930A68A4_var = PlayerGroupNextPlayer(auto930A68A4_g, auto930A68A4_var);
        if (auto930A68A4_var < 0) { break; }
        autoE5BA6F32_player = auto930A68A4_var;
        autoE5BA6F32_state = lib4A1496D1_gv_townStateBuilding;
        autoE5BA6F32_var = 0;
        for ( ; autoE5BA6F32_var < c_townMax; autoE5BA6F32_var += 1 ) {
            autoE5BA6F32_statevar = AIGetTownState(autoE5BA6F32_player,autoE5BA6F32_var);
            if (autoE5BA6F32_statevar >= autoE5BA6F32_state) {
                if ((UnitCount("SupplyDepot2", auto930A68A4_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto930A68A4_var, 1, autoE5BA6F32_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATELogisticsHanger4_Init () {
    lib4A1496D1_gt_UNSCMODERATELogisticsHanger4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATELogisticsHanger4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATELogisticsHanger4, lib4A1496D1_gv_easybuildsupplytimer2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Logistics Hanger 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATELogisticsHanger3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1802590D_g;
    int auto1802590D_var;
    int auto770764AF_player;
    int auto770764AF_state;
    int auto770764AF_var;
    int auto770764AF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1802590D_g = lib4A1496D1_gv_aIUNSCModerate;
    auto1802590D_var = -1;
    while (true) {
        auto1802590D_var = PlayerGroupNextPlayer(auto1802590D_g, auto1802590D_var);
        if (auto1802590D_var < 0) { break; }
        auto770764AF_player = auto1802590D_var;
        auto770764AF_state = lib4A1496D1_gv_townStateBuilding;
        auto770764AF_var = 0;
        for ( ; auto770764AF_var < c_townMax; auto770764AF_var += 1 ) {
            auto770764AF_statevar = AIGetTownState(auto770764AF_player,auto770764AF_var);
            if (auto770764AF_statevar >= auto770764AF_state) {
                if ((UnitCount("SupplyDepot2", auto1802590D_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto1802590D_var, 1, auto770764AF_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATELogisticsHanger3_Init () {
    lib4A1496D1_gt_UNSCMODERATELogisticsHanger3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATELogisticsHanger3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATELogisticsHanger3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATELogisticsHanger3, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Infantry Barracks 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEC19A9D7_g;
    int autoEC19A9D7_var;
    int auto6C9F2337_player;
    int auto6C9F2337_state;
    int auto6C9F2337_var;
    int auto6C9F2337_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEC19A9D7_g = lib4A1496D1_gv_aIUNSCModerate;
    autoEC19A9D7_var = -1;
    while (true) {
        autoEC19A9D7_var = PlayerGroupNextPlayer(autoEC19A9D7_g, autoEC19A9D7_var);
        if (autoEC19A9D7_var < 0) { break; }
        auto6C9F2337_player = autoEC19A9D7_var;
        auto6C9F2337_state = lib4A1496D1_gv_townStateBuilding;
        auto6C9F2337_var = 0;
        for ( ; auto6C9F2337_var < c_townMax; auto6C9F2337_var += 1 ) {
            auto6C9F2337_statevar = AIGetTownState(auto6C9F2337_player,auto6C9F2337_var);
            if (auto6C9F2337_statevar >= auto6C9F2337_state) {
                if ((UnitCount("InfantryBarracksUNSC", autoEC19A9D7_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(autoEC19A9D7_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(autoEC19A9D7_var, 1, auto6C9F2337_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4_Init () {
    lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4, lib4A1496D1_gv_easybuildbarrackstimer2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Infantry Barracks 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto15C172C1_g;
    int auto15C172C1_var;
    int auto97DB1004_player;
    int auto97DB1004_state;
    int auto97DB1004_var;
    int auto97DB1004_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto15C172C1_g = lib4A1496D1_gv_aIUNSCModerate;
    auto15C172C1_var = -1;
    while (true) {
        auto15C172C1_var = PlayerGroupNextPlayer(auto15C172C1_g, auto15C172C1_var);
        if (auto15C172C1_var < 0) { break; }
        auto97DB1004_player = auto15C172C1_var;
        auto97DB1004_state = lib4A1496D1_gv_townStateBuilding;
        auto97DB1004_var = 0;
        for ( ; auto97DB1004_var < c_townMax; auto97DB1004_var += 1 ) {
            auto97DB1004_statevar = AIGetTownState(auto97DB1004_player,auto97DB1004_var);
            if (auto97DB1004_statevar >= auto97DB1004_state) {
                if ((UnitCount("InfantryBarracksUNSC", auto15C172C1_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(auto15C172C1_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto15C172C1_var, 1, auto97DB1004_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3_Init () {
    lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Motorized Vehicle Factory 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8ED0E590_g;
    int auto8ED0E590_var;
    int auto718E0038_player;
    int auto718E0038_state;
    int auto718E0038_var;
    int auto718E0038_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8ED0E590_g = lib4A1496D1_gv_aIUNSCModerate;
    auto8ED0E590_var = -1;
    while (true) {
        auto8ED0E590_var = PlayerGroupNextPlayer(auto8ED0E590_g, auto8ED0E590_var);
        if (auto8ED0E590_var < 0) { break; }
        auto718E0038_player = auto8ED0E590_var;
        auto718E0038_state = lib4A1496D1_gv_townStateBuilding;
        auto718E0038_var = 0;
        for ( ; auto718E0038_var < c_townMax; auto718E0038_var += 1 ) {
            auto718E0038_statevar = AIGetTownState(auto718E0038_player,auto718E0038_var);
            if (auto718E0038_statevar >= auto718E0038_state) {
                if ((UnitCount("Factory2", auto8ED0E590_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4) && (PlayerGetPropertyInt(auto8ED0E590_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto8ED0E590_var, 0, auto718E0038_var, "Factory2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4_Init () {
    lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4, lib4A1496D1_gv_easybuildfactory2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Motorized Vehicle Factory 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto24DE7D76_g;
    int auto24DE7D76_var;
    int auto4554F72E_player;
    int auto4554F72E_state;
    int auto4554F72E_var;
    int auto4554F72E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto24DE7D76_g = lib4A1496D1_gv_aIUNSCModerate;
    auto24DE7D76_var = -1;
    while (true) {
        auto24DE7D76_var = PlayerGroupNextPlayer(auto24DE7D76_g, auto24DE7D76_var);
        if (auto24DE7D76_var < 0) { break; }
        auto4554F72E_player = auto24DE7D76_var;
        auto4554F72E_state = lib4A1496D1_gv_townStateBuilding;
        auto4554F72E_var = 0;
        for ( ; auto4554F72E_var < c_townMax; auto4554F72E_var += 1 ) {
            auto4554F72E_statevar = AIGetTownState(auto4554F72E_player,auto4554F72E_var);
            if (auto4554F72E_statevar >= auto4554F72E_state) {
                if ((UnitCount("Factory2", auto24DE7D76_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4) && (PlayerGetPropertyInt(auto24DE7D76_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto24DE7D76_var, 0, auto4554F72E_var, "Factory2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3_Init () {
    lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Shipyard Production Facility
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8A479095_g;
    int auto8A479095_var;
    int auto1A2060F7_player;
    int auto1A2060F7_state;
    int auto1A2060F7_var;
    int auto1A2060F7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8A479095_g = lib4A1496D1_gv_aIUNSCModerate;
    auto8A479095_var = -1;
    while (true) {
        auto8A479095_var = PlayerGroupNextPlayer(auto8A479095_g, auto8A479095_var);
        if (auto8A479095_var < 0) { break; }
        auto1A2060F7_player = auto8A479095_var;
        auto1A2060F7_state = lib4A1496D1_gv_townStateBuilding;
        auto1A2060F7_var = 0;
        for ( ; auto1A2060F7_var < c_townMax; auto1A2060F7_var += 1 ) {
            auto1A2060F7_statevar = AIGetTownState(auto1A2060F7_player,auto1A2060F7_var);
            if (auto1A2060F7_statevar >= auto1A2060F7_state) {
                if ((UnitCount("ShipyardProductionFacilityUNSC", auto8A479095_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto8A479095_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto8A479095_var, 0, auto1A2060F7_var, "ShipyardProductionFacilityUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility_Init () {
    lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility, lib4A1496D1_gv_easybuildshipyard2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Shipyard Production Facility 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0D2C3E1F_g;
    int auto0D2C3E1F_var;
    int autoE6FF4DC7_player;
    int autoE6FF4DC7_state;
    int autoE6FF4DC7_var;
    int autoE6FF4DC7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0D2C3E1F_g = lib4A1496D1_gv_aIUNSCModerate;
    auto0D2C3E1F_var = -1;
    while (true) {
        auto0D2C3E1F_var = PlayerGroupNextPlayer(auto0D2C3E1F_g, auto0D2C3E1F_var);
        if (auto0D2C3E1F_var < 0) { break; }
        autoE6FF4DC7_player = auto0D2C3E1F_var;
        autoE6FF4DC7_state = lib4A1496D1_gv_townStateBuilding;
        autoE6FF4DC7_var = 0;
        for ( ; autoE6FF4DC7_var < c_townMax; autoE6FF4DC7_var += 1 ) {
            autoE6FF4DC7_statevar = AIGetTownState(autoE6FF4DC7_player,autoE6FF4DC7_var);
            if (autoE6FF4DC7_statevar >= autoE6FF4DC7_state) {
                if ((UnitCount("ShipyardProductionFacilityUNSC", auto0D2C3E1F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto0D2C3E1F_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto0D2C3E1F_var, 0, autoE6FF4DC7_var, "ShipyardProductionFacilityUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2_Init () {
    lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2, 100.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Foward Operating Research Center 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC1FAADE6_g;
    int autoC1FAADE6_var;
    int autoCEA84500_player;
    int autoCEA84500_state;
    int autoCEA84500_var;
    int autoCEA84500_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC1FAADE6_g = lib4A1496D1_gv_aIUNSCModerate;
    autoC1FAADE6_var = -1;
    while (true) {
        autoC1FAADE6_var = PlayerGroupNextPlayer(autoC1FAADE6_g, autoC1FAADE6_var);
        if (autoC1FAADE6_var < 0) { break; }
        autoCEA84500_player = autoC1FAADE6_var;
        autoCEA84500_state = lib4A1496D1_gv_townStateBuilding;
        autoCEA84500_var = 0;
        for ( ; autoCEA84500_var < c_townMax; autoCEA84500_var += 1 ) {
            autoCEA84500_statevar = AIGetTownState(autoCEA84500_player,autoCEA84500_var);
            if (autoCEA84500_statevar >= autoCEA84500_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", autoC1FAADE6_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoC1FAADE6_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoC1FAADE6_var, 2, autoCEA84500_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4_Init () {
    lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4, lib4A1496D1_gv_easybuildfowardopcenter2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Foward Operating Research Center 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA65A928E_g;
    int autoA65A928E_var;
    int auto72A61585_player;
    int auto72A61585_state;
    int auto72A61585_var;
    int auto72A61585_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA65A928E_g = lib4A1496D1_gv_aIUNSCModerate;
    autoA65A928E_var = -1;
    while (true) {
        autoA65A928E_var = PlayerGroupNextPlayer(autoA65A928E_g, autoA65A928E_var);
        if (autoA65A928E_var < 0) { break; }
        auto72A61585_player = autoA65A928E_var;
        auto72A61585_state = lib4A1496D1_gv_townStateBuilding;
        auto72A61585_var = 0;
        for ( ; auto72A61585_var < c_townMax; auto72A61585_var += 1 ) {
            auto72A61585_statevar = AIGetTownState(auto72A61585_player,auto72A61585_var);
            if (auto72A61585_statevar >= auto72A61585_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", autoA65A928E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoA65A928E_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoA65A928E_var, 2, auto72A61585_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3_Init () {
    lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Advanced Research Center 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto39A03C05_g;
    int auto39A03C05_var;
    int autoE70EE85D_player;
    int autoE70EE85D_state;
    int autoE70EE85D_var;
    int autoE70EE85D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto39A03C05_g = lib4A1496D1_gv_aIUNSCModerate;
    auto39A03C05_var = -1;
    while (true) {
        auto39A03C05_var = PlayerGroupNextPlayer(auto39A03C05_g, auto39A03C05_var);
        if (auto39A03C05_var < 0) { break; }
        autoE70EE85D_player = auto39A03C05_var;
        autoE70EE85D_state = lib4A1496D1_gv_townStateBuilding;
        autoE70EE85D_var = 0;
        for ( ; autoE70EE85D_var < c_townMax; autoE70EE85D_var += 1 ) {
            autoE70EE85D_statevar = AIGetTownState(autoE70EE85D_player,autoE70EE85D_var);
            if (autoE70EE85D_statevar >= autoE70EE85D_state) {
                if ((UnitCount("AdvancedResearchFacility", auto39A03C05_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto39A03C05_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto39A03C05_var, 2, autoE70EE85D_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4_Init () {
    lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4, lib4A1496D1_gv_easybuildadvancedcenter2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Advanced Research Center 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8B513EAC_g;
    int auto8B513EAC_var;
    int auto6D27E379_player;
    int auto6D27E379_state;
    int auto6D27E379_var;
    int auto6D27E379_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8B513EAC_g = lib4A1496D1_gv_aIUNSCModerate;
    auto8B513EAC_var = -1;
    while (true) {
        auto8B513EAC_var = PlayerGroupNextPlayer(auto8B513EAC_g, auto8B513EAC_var);
        if (auto8B513EAC_var < 0) { break; }
        auto6D27E379_player = auto8B513EAC_var;
        auto6D27E379_state = lib4A1496D1_gv_townStateBuilding;
        auto6D27E379_var = 0;
        for ( ; auto6D27E379_var < c_townMax; auto6D27E379_var += 1 ) {
            auto6D27E379_statevar = AIGetTownState(auto6D27E379_player,auto6D27E379_var);
            if (auto6D27E379_statevar >= auto6D27E379_state) {
                if ((UnitCount("AdvancedResearchFacility", auto8B513EAC_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto8B513EAC_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto8B513EAC_var, 2, auto6D27E379_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3_Init () {
    lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3, 85.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Medical Core 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMedicalCore4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto19074042_g;
    int auto19074042_var;
    int auto6C04642B_player;
    int auto6C04642B_state;
    int auto6C04642B_var;
    int auto6C04642B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto19074042_g = lib4A1496D1_gv_aIUNSCModerate;
    auto19074042_var = -1;
    while (true) {
        auto19074042_var = PlayerGroupNextPlayer(auto19074042_g, auto19074042_var);
        if (auto19074042_var < 0) { break; }
        auto6C04642B_player = auto19074042_var;
        auto6C04642B_state = lib4A1496D1_gv_townStateBuilding;
        auto6C04642B_var = 0;
        for ( ; auto6C04642B_var < c_townMax; auto6C04642B_var += 1 ) {
            auto6C04642B_statevar = AIGetTownState(auto6C04642B_player,auto6C04642B_var);
            if (auto6C04642B_statevar >= auto6C04642B_state) {
                AIBuild(auto19074042_var, 1, auto6C04642B_var, "MedicalCore", 1, -1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMedicalCore4_Init () {
    lib4A1496D1_gt_UNSCMODERATEMedicalCore4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMedicalCore4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEMedicalCore4, lib4A1496D1_gv_easybuildmedicalcore2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Medical Core 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMedicalCore3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAC638904_g;
    int autoAC638904_var;
    int autoB45EDFF2_player;
    int autoB45EDFF2_state;
    int autoB45EDFF2_var;
    int autoB45EDFF2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAC638904_g = lib4A1496D1_gv_aIUNSCModerate;
    autoAC638904_var = -1;
    while (true) {
        autoAC638904_var = PlayerGroupNextPlayer(autoAC638904_g, autoAC638904_var);
        if (autoAC638904_var < 0) { break; }
        autoB45EDFF2_player = autoAC638904_var;
        autoB45EDFF2_state = lib4A1496D1_gv_townStateBuilding;
        autoB45EDFF2_var = 0;
        for ( ; autoB45EDFF2_var < c_townMax; autoB45EDFF2_var += 1 ) {
            autoB45EDFF2_statevar = AIGetTownState(autoB45EDFF2_player,autoB45EDFF2_var);
            if (autoB45EDFF2_statevar >= autoB45EDFF2_state) {
                AIBuild(autoAC638904_var, 1, autoB45EDFF2_var, "MedicalCore", 1, -1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMedicalCore3_Init () {
    lib4A1496D1_gt_UNSCMODERATEMedicalCore3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMedicalCore3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalCore3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEMedicalCore3, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Ship Reactor Lab
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEShipReactorLab_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoDCBB944F_g;
    int autoDCBB944F_var;
    int auto6DEA3AB3_player;
    int auto6DEA3AB3_state;
    int auto6DEA3AB3_var;
    int auto6DEA3AB3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDCBB944F_g = lib4A1496D1_gv_aIUNSCModerate;
    autoDCBB944F_var = -1;
    while (true) {
        autoDCBB944F_var = PlayerGroupNextPlayer(autoDCBB944F_g, autoDCBB944F_var);
        if (autoDCBB944F_var < 0) { break; }
        auto6DEA3AB3_player = autoDCBB944F_var;
        auto6DEA3AB3_state = lib4A1496D1_gv_townStateBuilding;
        auto6DEA3AB3_var = 0;
        for ( ; auto6DEA3AB3_var < c_townMax; auto6DEA3AB3_var += 1 ) {
            auto6DEA3AB3_statevar = AIGetTownState(auto6DEA3AB3_player,auto6DEA3AB3_var);
            if (auto6DEA3AB3_statevar >= auto6DEA3AB3_state) {
                if ((UnitCount("ShipReactorLab", autoDCBB944F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (PlayerGetPropertyInt(autoDCBB944F_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoDCBB944F_var, 2, auto6DEA3AB3_var, "ShipReactorLab", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEShipReactorLab_Init () {
    lib4A1496D1_gt_UNSCMODERATEShipReactorLab = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEShipReactorLab_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEShipReactorLab, lib4A1496D1_gv_easybuildshiplabreactor2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Ship Reactor Lab 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEShipReactorLab2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto97DFC22A_g;
    int auto97DFC22A_var;
    int autoD220FE86_player;
    int autoD220FE86_state;
    int autoD220FE86_var;
    int autoD220FE86_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto97DFC22A_g = lib4A1496D1_gv_aIUNSCModerate;
    auto97DFC22A_var = -1;
    while (true) {
        auto97DFC22A_var = PlayerGroupNextPlayer(auto97DFC22A_g, auto97DFC22A_var);
        if (auto97DFC22A_var < 0) { break; }
        autoD220FE86_player = auto97DFC22A_var;
        autoD220FE86_state = lib4A1496D1_gv_townStateBuilding;
        autoD220FE86_var = 0;
        for ( ; autoD220FE86_var < c_townMax; autoD220FE86_var += 1 ) {
            autoD220FE86_statevar = AIGetTownState(autoD220FE86_player,autoD220FE86_var);
            if (autoD220FE86_statevar >= autoD220FE86_state) {
                if ((UnitCount("ShipReactorLab", auto97DFC22A_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (PlayerGetPropertyInt(auto97DFC22A_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto97DFC22A_var, 2, autoD220FE86_var, "ShipReactorLab", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEShipReactorLab2_Init () {
    lib4A1496D1_gt_UNSCMODERATEShipReactorLab2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEShipReactorLab2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEShipReactorLab2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEShipReactorLab2, 105.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Cyclops 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECyclops4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB9797C47_g;
    int autoB9797C47_var;
    int auto59D68E89_player;
    int auto59D68E89_state;
    int auto59D68E89_var;
    int auto59D68E89_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB9797C47_g = lib4A1496D1_gv_aIUNSCModerate;
    autoB9797C47_var = -1;
    while (true) {
        autoB9797C47_var = PlayerGroupNextPlayer(autoB9797C47_g, autoB9797C47_var);
        if (autoB9797C47_var < 0) { break; }
        auto59D68E89_player = autoB9797C47_var;
        auto59D68E89_state = lib4A1496D1_gv_townStateBuilding;
        auto59D68E89_var = 0;
        for ( ; auto59D68E89_var < c_townMax; auto59D68E89_var += 1 ) {
            auto59D68E89_statevar = AIGetTownState(auto59D68E89_player,auto59D68E89_var);
            if (auto59D68E89_statevar >= auto59D68E89_state) {
                if ((UnitCount("CyclopsUNSC", autoB9797C47_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoB9797C47_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoB9797C47_var, 8, auto59D68E89_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECyclops4_Init () {
    lib4A1496D1_gt_UNSCMODERATECyclops4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECyclops4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATECyclops4, lib4A1496D1_gv_cyclops2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Cyclops 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECyclops3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCC4BE8DA_g;
    int autoCC4BE8DA_var;
    int autoA62F6A6A_player;
    int autoA62F6A6A_state;
    int autoA62F6A6A_var;
    int autoA62F6A6A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCC4BE8DA_g = lib4A1496D1_gv_aIUNSCModerate;
    autoCC4BE8DA_var = -1;
    while (true) {
        autoCC4BE8DA_var = PlayerGroupNextPlayer(autoCC4BE8DA_g, autoCC4BE8DA_var);
        if (autoCC4BE8DA_var < 0) { break; }
        autoA62F6A6A_player = autoCC4BE8DA_var;
        autoA62F6A6A_state = lib4A1496D1_gv_townStateBuilding;
        autoA62F6A6A_var = 0;
        for ( ; autoA62F6A6A_var < c_townMax; autoA62F6A6A_var += 1 ) {
            autoA62F6A6A_statevar = AIGetTownState(autoA62F6A6A_player,autoA62F6A6A_var);
            if (autoA62F6A6A_statevar >= autoA62F6A6A_state) {
                if ((UnitCount("CyclopsUNSC", autoCC4BE8DA_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoCC4BE8DA_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoCC4BE8DA_var, 8, autoA62F6A6A_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECyclops3_Init () {
    lib4A1496D1_gt_UNSCMODERATECyclops3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECyclops3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECyclops3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATECyclops3, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Combat Marine 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECombatMarine4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8D16DECF_g;
    int auto8D16DECF_var;
    int auto6D707C17_player;
    int auto6D707C17_state;
    int auto6D707C17_var;
    int auto6D707C17_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8D16DECF_g = lib4A1496D1_gv_aIUNSCModerate;
    auto8D16DECF_var = -1;
    while (true) {
        auto8D16DECF_var = PlayerGroupNextPlayer(auto8D16DECF_g, auto8D16DECF_var);
        if (auto8D16DECF_var < 0) { break; }
        auto6D707C17_player = auto8D16DECF_var;
        auto6D707C17_state = lib4A1496D1_gv_townStateBuilding;
        auto6D707C17_var = 0;
        for ( ; auto6D707C17_var < c_townMax; auto6D707C17_var += 1 ) {
            auto6D707C17_statevar = AIGetTownState(auto6D707C17_player,auto6D707C17_var);
            if (auto6D707C17_statevar >= auto6D707C17_state) {
                AITrain(auto8D16DECF_var, 7, auto6D707C17_var, "CombatMarineUNSC", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECombatMarine4_Init () {
    lib4A1496D1_gt_UNSCMODERATECombatMarine4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECombatMarine4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATECombatMarine4, lib4A1496D1_gv_combatMarine2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Combat Marine 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECombatMarine3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0AAFBF23_g;
    int auto0AAFBF23_var;
    int auto805734DA_player;
    int auto805734DA_state;
    int auto805734DA_var;
    int auto805734DA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0AAFBF23_g = lib4A1496D1_gv_aIUNSCModerate;
    auto0AAFBF23_var = -1;
    while (true) {
        auto0AAFBF23_var = PlayerGroupNextPlayer(auto0AAFBF23_g, auto0AAFBF23_var);
        if (auto0AAFBF23_var < 0) { break; }
        auto805734DA_player = auto0AAFBF23_var;
        auto805734DA_state = lib4A1496D1_gv_townStateBuilding;
        auto805734DA_var = 0;
        for ( ; auto805734DA_var < c_townMax; auto805734DA_var += 1 ) {
            auto805734DA_statevar = AIGetTownState(auto805734DA_player,auto805734DA_var);
            if (auto805734DA_statevar >= auto805734DA_state) {
                AITrain(auto0AAFBF23_var, 7, auto805734DA_var, "CombatMarineUNSC", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECombatMarine3_Init () {
    lib4A1496D1_gt_UNSCMODERATECombatMarine3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECombatMarine3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECombatMarine3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATECombatMarine3, 20.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Rocket Marine
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATERocketMarine_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6F91C608_g;
    int auto6F91C608_var;
    int auto229289B6_player;
    int auto229289B6_state;
    int auto229289B6_var;
    int auto229289B6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6F91C608_g = lib4A1496D1_gv_aIUNSCModerate;
    auto6F91C608_var = -1;
    while (true) {
        auto6F91C608_var = PlayerGroupNextPlayer(auto6F91C608_g, auto6F91C608_var);
        if (auto6F91C608_var < 0) { break; }
        auto229289B6_player = auto6F91C608_var;
        auto229289B6_state = lib4A1496D1_gv_townStateBuilding;
        auto229289B6_var = 0;
        for ( ; auto229289B6_var < c_townMax; auto229289B6_var += 1 ) {
            auto229289B6_statevar = AIGetTownState(auto229289B6_player,auto229289B6_var);
            if (auto229289B6_statevar >= auto229289B6_state) {
                AITrain(auto6F91C608_var, 7, auto229289B6_var, "RocketMarineUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATERocketMarine_Init () {
    lib4A1496D1_gt_UNSCMODERATERocketMarine = TriggerCreate("lib4A1496D1_gt_UNSCMODERATERocketMarine_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATERocketMarine, lib4A1496D1_gv_rocketMarine2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Rocket Marine 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATERocketMarine2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFA45325C_g;
    int autoFA45325C_var;
    int auto3F892361_player;
    int auto3F892361_state;
    int auto3F892361_var;
    int auto3F892361_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFA45325C_g = lib4A1496D1_gv_aIUNSCModerate;
    autoFA45325C_var = -1;
    while (true) {
        autoFA45325C_var = PlayerGroupNextPlayer(autoFA45325C_g, autoFA45325C_var);
        if (autoFA45325C_var < 0) { break; }
        auto3F892361_player = autoFA45325C_var;
        auto3F892361_state = lib4A1496D1_gv_townStateBuilding;
        auto3F892361_var = 0;
        for ( ; auto3F892361_var < c_townMax; auto3F892361_var += 1 ) {
            auto3F892361_statevar = AIGetTownState(auto3F892361_player,auto3F892361_var);
            if (auto3F892361_statevar >= auto3F892361_state) {
                AITrain(autoFA45325C_var, 7, auto3F892361_var, "RocketMarineUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATERocketMarine2_Init () {
    lib4A1496D1_gt_UNSCMODERATERocketMarine2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATERocketMarine2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATERocketMarine2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATERocketMarine2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Marksman Marine
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMarksmanMarine_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1FACC954_g;
    int auto1FACC954_var;
    int autoF40EBD7F_player;
    int autoF40EBD7F_state;
    int autoF40EBD7F_var;
    int autoF40EBD7F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1FACC954_g = lib4A1496D1_gv_aIUNSCModerate;
    auto1FACC954_var = -1;
    while (true) {
        auto1FACC954_var = PlayerGroupNextPlayer(auto1FACC954_g, auto1FACC954_var);
        if (auto1FACC954_var < 0) { break; }
        autoF40EBD7F_player = auto1FACC954_var;
        autoF40EBD7F_state = lib4A1496D1_gv_townStateBuilding;
        autoF40EBD7F_var = 0;
        for ( ; autoF40EBD7F_var < c_townMax; autoF40EBD7F_var += 1 ) {
            autoF40EBD7F_statevar = AIGetTownState(autoF40EBD7F_player,autoF40EBD7F_var);
            if (autoF40EBD7F_statevar >= autoF40EBD7F_state) {
                AITrain(auto1FACC954_var, 7, autoF40EBD7F_var, "MarksmanMarineUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMarksmanMarine_Init () {
    lib4A1496D1_gt_UNSCMODERATEMarksmanMarine = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMarksmanMarine_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine, lib4A1496D1_gv_marksmanMarine2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Marksman Marine 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto71199E51_g;
    int auto71199E51_var;
    int auto2DB96E13_player;
    int auto2DB96E13_state;
    int auto2DB96E13_var;
    int auto2DB96E13_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto71199E51_g = lib4A1496D1_gv_aIUNSCModerate;
    auto71199E51_var = -1;
    while (true) {
        auto71199E51_var = PlayerGroupNextPlayer(auto71199E51_g, auto71199E51_var);
        if (auto71199E51_var < 0) { break; }
        auto2DB96E13_player = auto71199E51_var;
        auto2DB96E13_state = lib4A1496D1_gv_townStateBuilding;
        auto2DB96E13_var = 0;
        for ( ; auto2DB96E13_var < c_townMax; auto2DB96E13_var += 1 ) {
            auto2DB96E13_statevar = AIGetTownState(auto2DB96E13_player,auto2DB96E13_var);
            if (auto2DB96E13_statevar >= auto2DB96E13_state) {
                AITrain(auto71199E51_var, 7, auto2DB96E13_var, "MarksmanMarineUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2_Init () {
    lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Hellbringer
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEHellbringer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB22982A2_g;
    int autoB22982A2_var;
    int autoC8BE2FF9_player;
    int autoC8BE2FF9_state;
    int autoC8BE2FF9_var;
    int autoC8BE2FF9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB22982A2_g = lib4A1496D1_gv_aIUNSCModerate;
    autoB22982A2_var = -1;
    while (true) {
        autoB22982A2_var = PlayerGroupNextPlayer(autoB22982A2_g, autoB22982A2_var);
        if (autoB22982A2_var < 0) { break; }
        autoC8BE2FF9_player = autoB22982A2_var;
        autoC8BE2FF9_state = lib4A1496D1_gv_townStateBuilding;
        autoC8BE2FF9_var = 0;
        for ( ; autoC8BE2FF9_var < c_townMax; autoC8BE2FF9_var += 1 ) {
            autoC8BE2FF9_statevar = AIGetTownState(autoC8BE2FF9_player,autoC8BE2FF9_var);
            if (autoC8BE2FF9_statevar >= autoC8BE2FF9_state) {
                AITrain(autoB22982A2_var, 7, autoC8BE2FF9_var, "HellbringerUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEHellbringer_Init () {
    lib4A1496D1_gt_UNSCMODERATEHellbringer = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEHellbringer_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEHellbringer, lib4A1496D1_gv_hellbringer2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Hellbringer 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEHellbringer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8571515C_g;
    int auto8571515C_var;
    int autoEA5A5DA2_player;
    int autoEA5A5DA2_state;
    int autoEA5A5DA2_var;
    int autoEA5A5DA2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8571515C_g = lib4A1496D1_gv_aIUNSCModerate;
    auto8571515C_var = -1;
    while (true) {
        auto8571515C_var = PlayerGroupNextPlayer(auto8571515C_g, auto8571515C_var);
        if (auto8571515C_var < 0) { break; }
        autoEA5A5DA2_player = auto8571515C_var;
        autoEA5A5DA2_state = lib4A1496D1_gv_townStateBuilding;
        autoEA5A5DA2_var = 0;
        for ( ; autoEA5A5DA2_var < c_townMax; autoEA5A5DA2_var += 1 ) {
            autoEA5A5DA2_statevar = AIGetTownState(autoEA5A5DA2_player,autoEA5A5DA2_var);
            if (autoEA5A5DA2_statevar >= autoEA5A5DA2_state) {
                AITrain(auto8571515C_var, 7, autoEA5A5DA2_var, "HellbringerUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEHellbringer2_Init () {
    lib4A1496D1_gt_UNSCMODERATEHellbringer2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEHellbringer2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHellbringer2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEHellbringer2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Medical Operator 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMedicalOperator4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto74DA41B6_g;
    int auto74DA41B6_var;
    int auto39B7B723_player;
    int auto39B7B723_state;
    int auto39B7B723_var;
    int auto39B7B723_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto74DA41B6_g = lib4A1496D1_gv_aIUNSCModerate;
    auto74DA41B6_var = -1;
    while (true) {
        auto74DA41B6_var = PlayerGroupNextPlayer(auto74DA41B6_g, auto74DA41B6_var);
        if (auto74DA41B6_var < 0) { break; }
        auto39B7B723_player = auto74DA41B6_var;
        auto39B7B723_state = lib4A1496D1_gv_townStateBuilding;
        auto39B7B723_var = 0;
        for ( ; auto39B7B723_var < c_townMax; auto39B7B723_var += 1 ) {
            auto39B7B723_statevar = AIGetTownState(auto39B7B723_player,auto39B7B723_var);
            if (auto39B7B723_statevar >= auto39B7B723_state) {
                AITrain(auto74DA41B6_var, 6, auto39B7B723_var, "MedicalOperatorUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalOperator3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalOperator4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMedicalOperator4_Init () {
    lib4A1496D1_gt_UNSCMODERATEMedicalOperator4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMedicalOperator4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalOperator4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEMedicalOperator4, lib4A1496D1_gv_medicalOperator2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Medical Operator 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEMedicalOperator3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0D928153_g;
    int auto0D928153_var;
    int autoA6E79042_player;
    int autoA6E79042_state;
    int autoA6E79042_var;
    int autoA6E79042_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0D928153_g = lib4A1496D1_gv_aIUNSCModerate;
    auto0D928153_var = -1;
    while (true) {
        auto0D928153_var = PlayerGroupNextPlayer(auto0D928153_g, auto0D928153_var);
        if (auto0D928153_var < 0) { break; }
        autoA6E79042_player = auto0D928153_var;
        autoA6E79042_state = lib4A1496D1_gv_townStateBuilding;
        autoA6E79042_var = 0;
        for ( ; autoA6E79042_var < c_townMax; autoA6E79042_var += 1 ) {
            autoA6E79042_statevar = AIGetTownState(autoA6E79042_player,autoA6E79042_var);
            if (autoA6E79042_statevar >= autoA6E79042_state) {
                AITrain(auto0D928153_var, 6, autoA6E79042_var, "MedicalOperatorUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEMedicalOperator3_Init () {
    lib4A1496D1_gt_UNSCMODERATEMedicalOperator3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEMedicalOperator3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEMedicalOperator3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEMedicalOperator3, 20.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Spartan II
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATESpartanII_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto23FD7E08_g;
    int auto23FD7E08_var;
    int autoDAA2CE57_player;
    int autoDAA2CE57_state;
    int autoDAA2CE57_var;
    int autoDAA2CE57_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto23FD7E08_g = lib4A1496D1_gv_aIUNSCModerate;
    auto23FD7E08_var = -1;
    while (true) {
        auto23FD7E08_var = PlayerGroupNextPlayer(auto23FD7E08_g, auto23FD7E08_var);
        if (auto23FD7E08_var < 0) { break; }
        autoDAA2CE57_player = auto23FD7E08_var;
        autoDAA2CE57_state = lib4A1496D1_gv_townStateBuilding;
        autoDAA2CE57_var = 0;
        for ( ; autoDAA2CE57_var < c_townMax; autoDAA2CE57_var += 1 ) {
            autoDAA2CE57_statevar = AIGetTownState(autoDAA2CE57_player,autoDAA2CE57_var);
            if (autoDAA2CE57_statevar >= autoDAA2CE57_state) {
                AITrain(auto23FD7E08_var, 6, autoDAA2CE57_var, "SpartanIIUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATESpartanII_Init () {
    lib4A1496D1_gt_UNSCMODERATESpartanII = TriggerCreate("lib4A1496D1_gt_UNSCMODERATESpartanII_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATESpartanII, lib4A1496D1_gv_spartanII2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Spartan II 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATESpartanII2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto818F20EE_g;
    int auto818F20EE_var;
    int autoA5370941_player;
    int autoA5370941_state;
    int autoA5370941_var;
    int autoA5370941_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto818F20EE_g = lib4A1496D1_gv_aIUNSCModerate;
    auto818F20EE_var = -1;
    while (true) {
        auto818F20EE_var = PlayerGroupNextPlayer(auto818F20EE_g, auto818F20EE_var);
        if (auto818F20EE_var < 0) { break; }
        autoA5370941_player = auto818F20EE_var;
        autoA5370941_state = lib4A1496D1_gv_townStateBuilding;
        autoA5370941_var = 0;
        for ( ; autoA5370941_var < c_townMax; autoA5370941_var += 1 ) {
            autoA5370941_statevar = AIGetTownState(autoA5370941_player,autoA5370941_var);
            if (autoA5370941_statevar >= autoA5370941_state) {
                AITrain(auto818F20EE_var, 6, autoA5370941_var, "SpartanIIUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATESpartanII2_Init () {
    lib4A1496D1_gt_UNSCMODERATESpartanII2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATESpartanII2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATESpartanII2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATESpartanII2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Warthog 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEWarthog4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE4BBA07C_g;
    int autoE4BBA07C_var;
    int auto08628A73_player;
    int auto08628A73_state;
    int auto08628A73_var;
    int auto08628A73_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE4BBA07C_g = lib4A1496D1_gv_aIUNSCModerate;
    autoE4BBA07C_var = -1;
    while (true) {
        autoE4BBA07C_var = PlayerGroupNextPlayer(autoE4BBA07C_g, autoE4BBA07C_var);
        if (autoE4BBA07C_var < 0) { break; }
        auto08628A73_player = autoE4BBA07C_var;
        auto08628A73_state = lib4A1496D1_gv_townStateBuilding;
        auto08628A73_var = 0;
        for ( ; auto08628A73_var < c_townMax; auto08628A73_var += 1 ) {
            auto08628A73_statevar = AIGetTownState(auto08628A73_player,auto08628A73_var);
            if (auto08628A73_statevar >= auto08628A73_state) {
                AITrain(autoE4BBA07C_var, 4, auto08628A73_var, "WarthogUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEWarthog4_Init () {
    lib4A1496D1_gt_UNSCMODERATEWarthog4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEWarthog4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEWarthog4, lib4A1496D1_gv_warthog2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Warthog 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEWarthog3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0EA97221_g;
    int auto0EA97221_var;
    int autoE4EEB57F_player;
    int autoE4EEB57F_state;
    int autoE4EEB57F_var;
    int autoE4EEB57F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0EA97221_g = lib4A1496D1_gv_aIUNSCModerate;
    auto0EA97221_var = -1;
    while (true) {
        auto0EA97221_var = PlayerGroupNextPlayer(auto0EA97221_g, auto0EA97221_var);
        if (auto0EA97221_var < 0) { break; }
        autoE4EEB57F_player = auto0EA97221_var;
        autoE4EEB57F_state = lib4A1496D1_gv_townStateBuilding;
        autoE4EEB57F_var = 0;
        for ( ; autoE4EEB57F_var < c_townMax; autoE4EEB57F_var += 1 ) {
            autoE4EEB57F_statevar = AIGetTownState(autoE4EEB57F_player,autoE4EEB57F_var);
            if (autoE4EEB57F_statevar >= autoE4EEB57F_state) {
                AITrain(auto0EA97221_var, 4, autoE4EEB57F_var, "WarthogUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEWarthog3_Init () {
    lib4A1496D1_gt_UNSCMODERATEWarthog3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEWarthog3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEWarthog3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEWarthog3, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Elephant 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEElephant4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5349C2ED_g;
    int auto5349C2ED_var;
    int auto131DEC7D_player;
    int auto131DEC7D_state;
    int auto131DEC7D_var;
    int auto131DEC7D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5349C2ED_g = lib4A1496D1_gv_aIUNSCModerate;
    auto5349C2ED_var = -1;
    while (true) {
        auto5349C2ED_var = PlayerGroupNextPlayer(auto5349C2ED_g, auto5349C2ED_var);
        if (auto5349C2ED_var < 0) { break; }
        auto131DEC7D_player = auto5349C2ED_var;
        auto131DEC7D_state = lib4A1496D1_gv_townStateBuilding;
        auto131DEC7D_var = 0;
        for ( ; auto131DEC7D_var < c_townMax; auto131DEC7D_var += 1 ) {
            auto131DEC7D_statevar = AIGetTownState(auto131DEC7D_player,auto131DEC7D_var);
            if (auto131DEC7D_statevar >= auto131DEC7D_state) {
                AITrain(auto5349C2ED_var, 4, auto131DEC7D_var, "ElephantUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEElephant4_Init () {
    lib4A1496D1_gt_UNSCMODERATEElephant4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEElephant4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEElephant4, lib4A1496D1_gv_elephant2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Elephant 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEElephant3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBD38ECCB_g;
    int autoBD38ECCB_var;
    int auto2E4F8BDF_player;
    int auto2E4F8BDF_state;
    int auto2E4F8BDF_var;
    int auto2E4F8BDF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBD38ECCB_g = lib4A1496D1_gv_aIUNSCModerate;
    autoBD38ECCB_var = -1;
    while (true) {
        autoBD38ECCB_var = PlayerGroupNextPlayer(autoBD38ECCB_g, autoBD38ECCB_var);
        if (autoBD38ECCB_var < 0) { break; }
        auto2E4F8BDF_player = autoBD38ECCB_var;
        auto2E4F8BDF_state = lib4A1496D1_gv_townStateBuilding;
        auto2E4F8BDF_var = 0;
        for ( ; auto2E4F8BDF_var < c_townMax; auto2E4F8BDF_var += 1 ) {
            auto2E4F8BDF_statevar = AIGetTownState(auto2E4F8BDF_player,auto2E4F8BDF_var);
            if (auto2E4F8BDF_statevar >= auto2E4F8BDF_state) {
                AITrain(autoBD38ECCB_var, 4, auto2E4F8BDF_var, "ElephantUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEElephant3_Init () {
    lib4A1496D1_gt_UNSCMODERATEElephant3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEElephant3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEElephant3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEElephant3, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Koidak 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEKoidak6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6567FB94_g;
    int auto6567FB94_var;
    int auto993349C3_player;
    int auto993349C3_state;
    int auto993349C3_var;
    int auto993349C3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6567FB94_g = lib4A1496D1_gv_aIUNSCModerate;
    auto6567FB94_var = -1;
    while (true) {
        auto6567FB94_var = PlayerGroupNextPlayer(auto6567FB94_g, auto6567FB94_var);
        if (auto6567FB94_var < 0) { break; }
        auto993349C3_player = auto6567FB94_var;
        auto993349C3_state = lib4A1496D1_gv_townStateBuilding;
        auto993349C3_var = 0;
        for ( ; auto993349C3_var < c_townMax; auto993349C3_var += 1 ) {
            auto993349C3_statevar = AIGetTownState(auto993349C3_player,auto993349C3_var);
            if (auto993349C3_statevar >= auto993349C3_state) {
                AITrain(auto6567FB94_var, 4, auto993349C3_var, "KodiakUnsieged", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKodiak5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKoidak6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEKoidak6_Init () {
    lib4A1496D1_gt_UNSCMODERATEKoidak6 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEKoidak6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKoidak6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEKoidak6, lib4A1496D1_gv_kodiak2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Kodiak 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEKodiak5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA32953D6_g;
    int autoA32953D6_var;
    int auto49396FC1_player;
    int auto49396FC1_state;
    int auto49396FC1_var;
    int auto49396FC1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA32953D6_g = lib4A1496D1_gv_aIUNSCModerate;
    autoA32953D6_var = -1;
    while (true) {
        autoA32953D6_var = PlayerGroupNextPlayer(autoA32953D6_g, autoA32953D6_var);
        if (autoA32953D6_var < 0) { break; }
        auto49396FC1_player = autoA32953D6_var;
        auto49396FC1_state = lib4A1496D1_gv_townStateBuilding;
        auto49396FC1_var = 0;
        for ( ; auto49396FC1_var < c_townMax; auto49396FC1_var += 1 ) {
            auto49396FC1_statevar = AIGetTownState(auto49396FC1_player,auto49396FC1_var);
            if (auto49396FC1_statevar >= auto49396FC1_state) {
                AITrain(autoA32953D6_var, 4, auto49396FC1_var, "KodiakUnsieged", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEKodiak5_Init () {
    lib4A1496D1_gt_UNSCMODERATEKodiak5 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEKodiak5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEKodiak5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEKodiak5, 55.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Hornet
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEHornet_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto92C993CA_g;
    int auto92C993CA_var;
    int auto3544FF36_player;
    int auto3544FF36_state;
    int auto3544FF36_var;
    int auto3544FF36_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto92C993CA_g = lib4A1496D1_gv_aIUNSCModerate;
    auto92C993CA_var = -1;
    while (true) {
        auto92C993CA_var = PlayerGroupNextPlayer(auto92C993CA_g, auto92C993CA_var);
        if (auto92C993CA_var < 0) { break; }
        auto3544FF36_player = auto92C993CA_var;
        auto3544FF36_state = lib4A1496D1_gv_townStateBuilding;
        auto3544FF36_var = 0;
        for ( ; auto3544FF36_var < c_townMax; auto3544FF36_var += 1 ) {
            auto3544FF36_statevar = AIGetTownState(auto3544FF36_player,auto3544FF36_var);
            if (auto3544FF36_statevar >= auto3544FF36_state) {
                AITrain(auto92C993CA_var, 5, auto3544FF36_var, "HornetUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEHornet_Init () {
    lib4A1496D1_gt_UNSCMODERATEHornet = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEHornet_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEHornet, lib4A1496D1_gv_hornet2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Hornet 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEHornet2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF40D7209_g;
    int autoF40D7209_var;
    int autoDAD6483E_player;
    int autoDAD6483E_state;
    int autoDAD6483E_var;
    int autoDAD6483E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF40D7209_g = lib4A1496D1_gv_aIUNSCModerate;
    autoF40D7209_var = -1;
    while (true) {
        autoF40D7209_var = PlayerGroupNextPlayer(autoF40D7209_g, autoF40D7209_var);
        if (autoF40D7209_var < 0) { break; }
        autoDAD6483E_player = autoF40D7209_var;
        autoDAD6483E_state = lib4A1496D1_gv_townStateBuilding;
        autoDAD6483E_var = 0;
        for ( ; autoDAD6483E_var < c_townMax; autoDAD6483E_var += 1 ) {
            autoDAD6483E_statevar = AIGetTownState(autoDAD6483E_player,autoDAD6483E_var);
            if (autoDAD6483E_statevar >= autoDAD6483E_state) {
                AITrain(autoF40D7209_var, 5, autoDAD6483E_var, "HornetUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEHornet2_Init () {
    lib4A1496D1_gt_UNSCMODERATEHornet2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEHornet2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEHornet2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEHornet2, 22.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Scorpion 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEScorpion4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0D1284E1_g;
    int auto0D1284E1_var;
    int autoB34837BE_player;
    int autoB34837BE_state;
    int autoB34837BE_var;
    int autoB34837BE_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0D1284E1_g = lib4A1496D1_gv_aIUNSCModerate;
    auto0D1284E1_var = -1;
    while (true) {
        auto0D1284E1_var = PlayerGroupNextPlayer(auto0D1284E1_g, auto0D1284E1_var);
        if (auto0D1284E1_var < 0) { break; }
        autoB34837BE_player = auto0D1284E1_var;
        autoB34837BE_state = lib4A1496D1_gv_townStateBuilding;
        autoB34837BE_var = 0;
        for ( ; autoB34837BE_var < c_townMax; autoB34837BE_var += 1 ) {
            autoB34837BE_statevar = AIGetTownState(autoB34837BE_player,autoB34837BE_var);
            if (autoB34837BE_statevar >= autoB34837BE_state) {
                AITrain(auto0D1284E1_var, 4, autoB34837BE_var, "ScorpionUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEScorpion4_Init () {
    lib4A1496D1_gt_UNSCMODERATEScorpion4 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEScorpion4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATEScorpion4, lib4A1496D1_gv_scorpion2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Scorpion 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEScorpion3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7575E560_g;
    int auto7575E560_var;
    int autoBEF76B6E_player;
    int autoBEF76B6E_state;
    int autoBEF76B6E_var;
    int autoBEF76B6E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7575E560_g = lib4A1496D1_gv_aIUNSCModerate;
    auto7575E560_var = -1;
    while (true) {
        auto7575E560_var = PlayerGroupNextPlayer(auto7575E560_g, auto7575E560_var);
        if (auto7575E560_var < 0) { break; }
        autoBEF76B6E_player = auto7575E560_var;
        autoBEF76B6E_state = lib4A1496D1_gv_townStateBuilding;
        autoBEF76B6E_var = 0;
        for ( ; autoBEF76B6E_var < c_townMax; autoBEF76B6E_var += 1 ) {
            autoBEF76B6E_statevar = AIGetTownState(autoBEF76B6E_player,autoBEF76B6E_var);
            if (autoBEF76B6E_statevar >= autoBEF76B6E_state) {
                AITrain(auto7575E560_var, 4, autoBEF76B6E_var, "ScorpionUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEScorpion3_Init () {
    lib4A1496D1_gt_UNSCMODERATEScorpion3 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEScorpion3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEScorpion3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEScorpion3, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Cobra
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECobra_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC1E58EB6_g;
    int autoC1E58EB6_var;
    int auto0A781F6B_player;
    int auto0A781F6B_state;
    int auto0A781F6B_var;
    int auto0A781F6B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC1E58EB6_g = lib4A1496D1_gv_aIUNSCModerate;
    autoC1E58EB6_var = -1;
    while (true) {
        autoC1E58EB6_var = PlayerGroupNextPlayer(autoC1E58EB6_g, autoC1E58EB6_var);
        if (autoC1E58EB6_var < 0) { break; }
        auto0A781F6B_player = autoC1E58EB6_var;
        auto0A781F6B_state = lib4A1496D1_gv_townStateBuilding;
        auto0A781F6B_var = 0;
        for ( ; auto0A781F6B_var < c_townMax; auto0A781F6B_var += 1 ) {
            auto0A781F6B_statevar = AIGetTownState(auto0A781F6B_player,auto0A781F6B_var);
            if (auto0A781F6B_statevar >= auto0A781F6B_state) {
                AITrain(autoC1E58EB6_var, 4, auto0A781F6B_var, "CobraUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECobra_Init () {
    lib4A1496D1_gt_UNSCMODERATECobra = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECobra_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCMODERATECobra, lib4A1496D1_gv_cobra2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC MODERATE Cobra 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATECobra2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6CF0B407_g;
    int auto6CF0B407_var;
    int auto57CC1E5D_player;
    int auto57CC1E5D_state;
    int auto57CC1E5D_var;
    int auto57CC1E5D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6CF0B407_g = lib4A1496D1_gv_aIUNSCModerate;
    auto6CF0B407_var = -1;
    while (true) {
        auto6CF0B407_var = PlayerGroupNextPlayer(auto6CF0B407_g, auto6CF0B407_var);
        if (auto6CF0B407_var < 0) { break; }
        auto57CC1E5D_player = auto6CF0B407_var;
        auto57CC1E5D_state = lib4A1496D1_gv_townStateBuilding;
        auto57CC1E5D_var = 0;
        for ( ; auto57CC1E5D_var < c_townMax; auto57CC1E5D_var += 1 ) {
            auto57CC1E5D_statevar = AIGetTownState(auto57CC1E5D_player,auto57CC1E5D_var);
            if (auto57CC1E5D_statevar >= auto57CC1E5D_state) {
                AITrain(auto6CF0B407_var, 4, auto57CC1E5D_var, "CobraUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATECobra2_Init () {
    lib4A1496D1_gt_UNSCMODERATECobra2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATECobra2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATECobra2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATECobra2, 32.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UNSC MODERATE EXPAND TIMER 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_town2;

    // Automatic Variable Declarations
    playergroup auto955B1559_g;
    int auto955B1559_var;
    int auto8F92E77D_player;
    int auto8F92E77D_state;
    int auto8F92E77D_var;
    int auto8F92E77D_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto955B1559_g = lib4A1496D1_gv_aIUNSCModerate;
    auto955B1559_var = -1;
    while (true) {
        auto955B1559_var = PlayerGroupNextPlayer(auto955B1559_g, auto955B1559_var);
        if (auto955B1559_var < 0) { break; }
        auto8F92E77D_player = auto955B1559_var;
        auto8F92E77D_state = lib4A1496D1_gv_townStateBuilding;
        auto8F92E77D_var = 0;
        for ( ; auto8F92E77D_var < c_townMax; auto8F92E77D_var += 1 ) {
            auto8F92E77D_statevar = AIGetTownState(auto8F92E77D_player,auto8F92E77D_var);
            if (auto8F92E77D_statevar >= auto8F92E77D_state) {
                lv_town2 = (lv_town2 + UnitGroupCount(UnitGroup("Firebase", auto955B1559_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_town2 < 6)) {
                    PlayerModifyPropertyInt(auto955B1559_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(auto955B1559_var, PlayerStartLocation(auto955B1559_var), "Firebase");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2_Init () {
    lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2, 300.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UNSC MODERATE Attack Timer 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCMODERATEAttackTimer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto55285B0F_g;
    int auto55285B0F_var;
    unitgroup auto226EB831_g;
    int auto226EB831_u;
    unit auto226EB831_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto55285B0F_g = lib4A1496D1_gv_aIUNSCModerate;
    auto55285B0F_var = -1;
    while (true) {
        auto55285B0F_var = PlayerGroupNextPlayer(auto55285B0F_g, auto55285B0F_var);
        if (auto55285B0F_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(auto55285B0F_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto226EB831_g = UnitGroup(null, auto55285B0F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto226EB831_u = UnitGroupCount(auto226EB831_g, c_unitCountAll);
        for (;; auto226EB831_u -= 1) {
            auto226EB831_var = UnitGroupUnitFromEnd(auto226EB831_g, auto226EB831_u);
            if (auto226EB831_var == null) { break; }
            UnitIssueOrder(auto226EB831_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCMODERATEAttackTimer2_Init () {
    lib4A1496D1_gt_UNSCMODERATEAttackTimer2 = TriggerCreate("lib4A1496D1_gt_UNSCMODERATEAttackTimer2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCMODERATEAttackTimer2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCMODERATEAttackTimer2, 360.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Logistics Hanger 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDLogisticsHanger6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto2C383078_g;
    int auto2C383078_var;
    int auto79A13B16_player;
    int auto79A13B16_state;
    int auto79A13B16_var;
    int auto79A13B16_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2C383078_g = lib4A1496D1_gv_aIUNSCHard;
    auto2C383078_var = -1;
    while (true) {
        auto2C383078_var = PlayerGroupNextPlayer(auto2C383078_g, auto2C383078_var);
        if (auto2C383078_var < 0) { break; }
        auto79A13B16_player = auto2C383078_var;
        auto79A13B16_state = lib4A1496D1_gv_townStateBuilding;
        auto79A13B16_var = 0;
        for ( ; auto79A13B16_var < c_townMax; auto79A13B16_var += 1 ) {
            auto79A13B16_statevar = AIGetTownState(auto79A13B16_player,auto79A13B16_var);
            if (auto79A13B16_statevar >= auto79A13B16_state) {
                if ((UnitCount("SupplyDepot2", auto2C383078_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto2C383078_var, 1, auto79A13B16_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDLogisticsHanger6_Init () {
    lib4A1496D1_gt_UNSCHARDLogisticsHanger6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDLogisticsHanger6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDLogisticsHanger6, lib4A1496D1_gv_easybuildsupplytimer3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Logistics Hanger 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDLogisticsHanger5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF294F04B_g;
    int autoF294F04B_var;
    int autoD93C5B1A_player;
    int autoD93C5B1A_state;
    int autoD93C5B1A_var;
    int autoD93C5B1A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF294F04B_g = lib4A1496D1_gv_aIUNSCHard;
    autoF294F04B_var = -1;
    while (true) {
        autoF294F04B_var = PlayerGroupNextPlayer(autoF294F04B_g, autoF294F04B_var);
        if (autoF294F04B_var < 0) { break; }
        autoD93C5B1A_player = autoF294F04B_var;
        autoD93C5B1A_state = lib4A1496D1_gv_townStateBuilding;
        autoD93C5B1A_var = 0;
        for ( ; autoD93C5B1A_var < c_townMax; autoD93C5B1A_var += 1 ) {
            autoD93C5B1A_statevar = AIGetTownState(autoD93C5B1A_player,autoD93C5B1A_var);
            if (autoD93C5B1A_statevar >= autoD93C5B1A_state) {
                if ((UnitCount("SupplyDepot2", autoF294F04B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(autoF294F04B_var, 1, autoD93C5B1A_var, "SupplyDepot2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDLogisticsHanger5_Init () {
    lib4A1496D1_gt_UNSCHARDLogisticsHanger5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDLogisticsHanger5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDLogisticsHanger5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDLogisticsHanger5, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Infantry Barracks 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDInfantryBarracks6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB3EB0D8B_g;
    int autoB3EB0D8B_var;
    int auto8BE67AE6_player;
    int auto8BE67AE6_state;
    int auto8BE67AE6_var;
    int auto8BE67AE6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB3EB0D8B_g = lib4A1496D1_gv_aIUNSCHard;
    autoB3EB0D8B_var = -1;
    while (true) {
        autoB3EB0D8B_var = PlayerGroupNextPlayer(autoB3EB0D8B_g, autoB3EB0D8B_var);
        if (autoB3EB0D8B_var < 0) { break; }
        auto8BE67AE6_player = autoB3EB0D8B_var;
        auto8BE67AE6_state = lib4A1496D1_gv_townStateBuilding;
        auto8BE67AE6_var = 0;
        for ( ; auto8BE67AE6_var < c_townMax; auto8BE67AE6_var += 1 ) {
            auto8BE67AE6_statevar = AIGetTownState(auto8BE67AE6_player,auto8BE67AE6_var);
            if (auto8BE67AE6_statevar >= auto8BE67AE6_state) {
                if ((UnitCount("InfantryBarracksUNSC", autoB3EB0D8B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 3) && (PlayerGetPropertyInt(autoB3EB0D8B_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(autoB3EB0D8B_var, 0, auto8BE67AE6_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDInfantryBarracks6_Init () {
    lib4A1496D1_gt_UNSCHARDInfantryBarracks6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDInfantryBarracks6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDInfantryBarracks6, lib4A1496D1_gv_easybuildbarrackstimer3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Infantry Barracks 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDInfantryBarracks5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto06E96A92_g;
    int auto06E96A92_var;
    int auto911675A2_player;
    int auto911675A2_state;
    int auto911675A2_var;
    int auto911675A2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto06E96A92_g = lib4A1496D1_gv_aIUNSCHard;
    auto06E96A92_var = -1;
    while (true) {
        auto06E96A92_var = PlayerGroupNextPlayer(auto06E96A92_g, auto06E96A92_var);
        if (auto06E96A92_var < 0) { break; }
        auto911675A2_player = auto06E96A92_var;
        auto911675A2_state = lib4A1496D1_gv_townStateBuilding;
        auto911675A2_var = 0;
        for ( ; auto911675A2_var < c_townMax; auto911675A2_var += 1 ) {
            auto911675A2_statevar = AIGetTownState(auto911675A2_player,auto911675A2_var);
            if (auto911675A2_statevar >= auto911675A2_state) {
                if ((UnitCount("InfantryBarracksUNSC", auto06E96A92_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 3) && (PlayerGetPropertyInt(auto06E96A92_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto06E96A92_var, 0, auto911675A2_var, "InfantryBarracksUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDInfantryBarracks5_Init () {
    lib4A1496D1_gt_UNSCHARDInfantryBarracks5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDInfantryBarracks5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDInfantryBarracks5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDInfantryBarracks5, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Motorized Vehicle Factory 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto06323A9B_g;
    int auto06323A9B_var;
    int auto31E38281_player;
    int auto31E38281_state;
    int auto31E38281_var;
    int auto31E38281_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto06323A9B_g = lib4A1496D1_gv_aIUNSCHard;
    auto06323A9B_var = -1;
    while (true) {
        auto06323A9B_var = PlayerGroupNextPlayer(auto06323A9B_g, auto06323A9B_var);
        if (auto06323A9B_var < 0) { break; }
        auto31E38281_player = auto06323A9B_var;
        auto31E38281_state = lib4A1496D1_gv_townStateBuilding;
        auto31E38281_var = 0;
        for ( ; auto31E38281_var < c_townMax; auto31E38281_var += 1 ) {
            auto31E38281_statevar = AIGetTownState(auto31E38281_player,auto31E38281_var);
            if (auto31E38281_statevar >= auto31E38281_state) {
                if ((UnitCount("Factory2", auto06323A9B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(auto06323A9B_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto06323A9B_var, 1, auto31E38281_var, "Factory2", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6_Init () {
    lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6, lib4A1496D1_gv_easybuildfactory3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Motorized Vehicle Factory 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBAF7E5FC_g;
    int autoBAF7E5FC_var;
    int autoC3F96856_player;
    int autoC3F96856_state;
    int autoC3F96856_var;
    int autoC3F96856_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBAF7E5FC_g = lib4A1496D1_gv_aIUNSCHard;
    autoBAF7E5FC_var = -1;
    while (true) {
        autoBAF7E5FC_var = PlayerGroupNextPlayer(autoBAF7E5FC_g, autoBAF7E5FC_var);
        if (autoBAF7E5FC_var < 0) { break; }
        autoC3F96856_player = autoBAF7E5FC_var;
        autoC3F96856_state = lib4A1496D1_gv_townStateBuilding;
        autoC3F96856_var = 0;
        for ( ; autoC3F96856_var < c_townMax; autoC3F96856_var += 1 ) {
            autoC3F96856_statevar = AIGetTownState(autoC3F96856_player,autoC3F96856_var);
            if (autoC3F96856_statevar >= autoC3F96856_state) {
                if ((UnitCount("Factory2", autoBAF7E5FC_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5) && (PlayerGetPropertyInt(autoBAF7E5FC_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(autoBAF7E5FC_var, 1, autoC3F96856_var, "Factory2", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5_Init () {
    lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Shipyard Production Facility 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCABB94A9_g;
    int autoCABB94A9_var;
    int auto841DF7C5_player;
    int auto841DF7C5_state;
    int auto841DF7C5_var;
    int auto841DF7C5_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCABB94A9_g = lib4A1496D1_gv_aIUNSCHard;
    autoCABB94A9_var = -1;
    while (true) {
        autoCABB94A9_var = PlayerGroupNextPlayer(autoCABB94A9_g, autoCABB94A9_var);
        if (autoCABB94A9_var < 0) { break; }
        auto841DF7C5_player = autoCABB94A9_var;
        auto841DF7C5_state = lib4A1496D1_gv_townStateBuilding;
        auto841DF7C5_var = 0;
        for ( ; auto841DF7C5_var < c_townMax; auto841DF7C5_var += 1 ) {
            auto841DF7C5_statevar = AIGetTownState(auto841DF7C5_player,auto841DF7C5_var);
            if (auto841DF7C5_statevar >= auto841DF7C5_state) {
                if ((UnitCount("ShipyardProductionFacilityUNSC", autoCABB94A9_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 3) && (PlayerGetPropertyInt(autoCABB94A9_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(autoCABB94A9_var, 1, auto841DF7C5_var, "ShipyardProductionFacilityUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4_Init () {
    lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4 = TriggerCreate("lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4, lib4A1496D1_gv_easybuildshipyard3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Shipyard Production Facility 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto420CD0BA_g;
    int auto420CD0BA_var;
    int auto21DE04A7_player;
    int auto21DE04A7_state;
    int auto21DE04A7_var;
    int auto21DE04A7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto420CD0BA_g = lib4A1496D1_gv_aIUNSCHard;
    auto420CD0BA_var = -1;
    while (true) {
        auto420CD0BA_var = PlayerGroupNextPlayer(auto420CD0BA_g, auto420CD0BA_var);
        if (auto420CD0BA_var < 0) { break; }
        auto21DE04A7_player = auto420CD0BA_var;
        auto21DE04A7_state = lib4A1496D1_gv_townStateBuilding;
        auto21DE04A7_var = 0;
        for ( ; auto21DE04A7_var < c_townMax; auto21DE04A7_var += 1 ) {
            auto21DE04A7_statevar = AIGetTownState(auto21DE04A7_player,auto21DE04A7_var);
            if (auto21DE04A7_statevar >= auto21DE04A7_state) {
                if ((UnitCount("ShipyardProductionFacilityUNSC", auto420CD0BA_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 3) && (PlayerGetPropertyInt(auto420CD0BA_var, c_playerPropMinerals) >= 200)) {
                    AIBuild(auto420CD0BA_var, 1, auto21DE04A7_var, "ShipyardProductionFacilityUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3_Init () {
    lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3, 100.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Foward Operating Research Center 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto08630DA0_g;
    int auto08630DA0_var;
    int auto34910734_player;
    int auto34910734_state;
    int auto34910734_var;
    int auto34910734_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto08630DA0_g = lib4A1496D1_gv_aIUNSCHard;
    auto08630DA0_var = -1;
    while (true) {
        auto08630DA0_var = PlayerGroupNextPlayer(auto08630DA0_g, auto08630DA0_var);
        if (auto08630DA0_var < 0) { break; }
        auto34910734_player = auto08630DA0_var;
        auto34910734_state = lib4A1496D1_gv_townStateBuilding;
        auto34910734_var = 0;
        for ( ; auto34910734_var < c_townMax; auto34910734_var += 1 ) {
            auto34910734_statevar = AIGetTownState(auto34910734_player,auto34910734_var);
            if (auto34910734_statevar >= auto34910734_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", auto08630DA0_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto08630DA0_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto08630DA0_var, 2, auto34910734_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6_Init () {
    lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6, lib4A1496D1_gv_easybuildfowardopcenter3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Foward Operating Research Center 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto39E6BAC0_g;
    int auto39E6BAC0_var;
    int auto3619AA78_player;
    int auto3619AA78_state;
    int auto3619AA78_var;
    int auto3619AA78_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto39E6BAC0_g = lib4A1496D1_gv_aIUNSCHard;
    auto39E6BAC0_var = -1;
    while (true) {
        auto39E6BAC0_var = PlayerGroupNextPlayer(auto39E6BAC0_g, auto39E6BAC0_var);
        if (auto39E6BAC0_var < 0) { break; }
        auto3619AA78_player = auto39E6BAC0_var;
        auto3619AA78_state = lib4A1496D1_gv_townStateBuilding;
        auto3619AA78_var = 0;
        for ( ; auto3619AA78_var < c_townMax; auto3619AA78_var += 1 ) {
            auto3619AA78_statevar = AIGetTownState(auto3619AA78_player,auto3619AA78_var);
            if (auto3619AA78_statevar >= auto3619AA78_state) {
                if ((UnitCount("ForwardOperatingResearchCenterUNSC", auto39E6BAC0_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto39E6BAC0_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto39E6BAC0_var, 2, auto3619AA78_var, "ForwardOperatingResearchCenterUNSC", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5_Init () {
    lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Advanced Research Center 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto711F22BF_g;
    int auto711F22BF_var;
    int auto1A0F4FFD_player;
    int auto1A0F4FFD_state;
    int auto1A0F4FFD_var;
    int auto1A0F4FFD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto711F22BF_g = lib4A1496D1_gv_aIUNSCHard;
    auto711F22BF_var = -1;
    while (true) {
        auto711F22BF_var = PlayerGroupNextPlayer(auto711F22BF_g, auto711F22BF_var);
        if (auto711F22BF_var < 0) { break; }
        auto1A0F4FFD_player = auto711F22BF_var;
        auto1A0F4FFD_state = lib4A1496D1_gv_townStateBuilding;
        auto1A0F4FFD_var = 0;
        for ( ; auto1A0F4FFD_var < c_townMax; auto1A0F4FFD_var += 1 ) {
            auto1A0F4FFD_statevar = AIGetTownState(auto1A0F4FFD_player,auto1A0F4FFD_var);
            if (auto1A0F4FFD_statevar >= auto1A0F4FFD_state) {
                if ((UnitCount("AdvancedResearchFacility", auto711F22BF_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(auto711F22BF_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto711F22BF_var, 2, auto1A0F4FFD_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6_Init () {
    lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6, lib4A1496D1_gv_easybuildadvancedcenter3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Advanced Research Center 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD888DB02_g;
    int autoD888DB02_var;
    int auto2A70C87B_player;
    int auto2A70C87B_state;
    int auto2A70C87B_var;
    int auto2A70C87B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD888DB02_g = lib4A1496D1_gv_aIUNSCHard;
    autoD888DB02_var = -1;
    while (true) {
        autoD888DB02_var = PlayerGroupNextPlayer(autoD888DB02_g, autoD888DB02_var);
        if (autoD888DB02_var < 0) { break; }
        auto2A70C87B_player = autoD888DB02_var;
        auto2A70C87B_state = lib4A1496D1_gv_townStateBuilding;
        auto2A70C87B_var = 0;
        for ( ; auto2A70C87B_var < c_townMax; auto2A70C87B_var += 1 ) {
            auto2A70C87B_statevar = AIGetTownState(auto2A70C87B_player,auto2A70C87B_var);
            if (auto2A70C87B_statevar >= auto2A70C87B_state) {
                if ((UnitCount("AdvancedResearchFacility", autoD888DB02_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2) && (PlayerGetPropertyInt(autoD888DB02_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(autoD888DB02_var, 2, auto2A70C87B_var, "AdvancedResearchFacility", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5_Init () {
    lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5, 85.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Ship Reactor Lab 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDShipReactorLab4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto74CEF515_g;
    int auto74CEF515_var;
    int autoA378CB4B_player;
    int autoA378CB4B_state;
    int autoA378CB4B_var;
    int autoA378CB4B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto74CEF515_g = lib4A1496D1_gv_aIUNSCHard;
    auto74CEF515_var = -1;
    while (true) {
        auto74CEF515_var = PlayerGroupNextPlayer(auto74CEF515_g, auto74CEF515_var);
        if (auto74CEF515_var < 0) { break; }
        autoA378CB4B_player = auto74CEF515_var;
        autoA378CB4B_state = lib4A1496D1_gv_townStateBuilding;
        autoA378CB4B_var = 0;
        for ( ; autoA378CB4B_var < c_townMax; autoA378CB4B_var += 1 ) {
            autoA378CB4B_statevar = AIGetTownState(autoA378CB4B_player,autoA378CB4B_var);
            if (autoA378CB4B_statevar >= autoA378CB4B_state) {
                if ((UnitCount("ShipReactorLab", auto74CEF515_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (PlayerGetPropertyInt(auto74CEF515_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto74CEF515_var, 2, autoA378CB4B_var, "ShipReactorLab", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDShipReactorLab4_Init () {
    lib4A1496D1_gt_UNSCHARDShipReactorLab4 = TriggerCreate("lib4A1496D1_gt_UNSCHARDShipReactorLab4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDShipReactorLab4, lib4A1496D1_gv_easybuildshiplabreactor3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Ship Reactor Lab 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDShipReactorLab3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto3A04A4C5_g;
    int auto3A04A4C5_var;
    int autoED58ED83_player;
    int autoED58ED83_state;
    int autoED58ED83_var;
    int autoED58ED83_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto3A04A4C5_g = lib4A1496D1_gv_aIUNSCHard;
    auto3A04A4C5_var = -1;
    while (true) {
        auto3A04A4C5_var = PlayerGroupNextPlayer(auto3A04A4C5_g, auto3A04A4C5_var);
        if (auto3A04A4C5_var < 0) { break; }
        autoED58ED83_player = auto3A04A4C5_var;
        autoED58ED83_state = lib4A1496D1_gv_townStateBuilding;
        autoED58ED83_var = 0;
        for ( ; autoED58ED83_var < c_townMax; autoED58ED83_var += 1 ) {
            autoED58ED83_statevar = AIGetTownState(autoED58ED83_player,autoED58ED83_var);
            if (autoED58ED83_statevar >= autoED58ED83_state) {
                if ((UnitCount("ShipReactorLab", auto3A04A4C5_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (PlayerGetPropertyInt(auto3A04A4C5_var, c_playerPropMinerals) >= 350)) {
                    AIBuild(auto3A04A4C5_var, 2, autoED58ED83_var, "ShipReactorLab", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDShipReactorLab3_Init () {
    lib4A1496D1_gt_UNSCHARDShipReactorLab3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDShipReactorLab3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDShipReactorLab3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDShipReactorLab3, 105.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Cyclops 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCyclops6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD130E4D4_g;
    int autoD130E4D4_var;
    int auto080A300F_player;
    int auto080A300F_state;
    int auto080A300F_var;
    int auto080A300F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD130E4D4_g = lib4A1496D1_gv_aIUNSCHard;
    autoD130E4D4_var = -1;
    while (true) {
        autoD130E4D4_var = PlayerGroupNextPlayer(autoD130E4D4_g, autoD130E4D4_var);
        if (autoD130E4D4_var < 0) { break; }
        auto080A300F_player = autoD130E4D4_var;
        auto080A300F_state = lib4A1496D1_gv_townStateBuilding;
        auto080A300F_var = 0;
        for ( ; auto080A300F_var < c_townMax; auto080A300F_var += 1 ) {
            auto080A300F_statevar = AIGetTownState(auto080A300F_player,auto080A300F_var);
            if (auto080A300F_statevar >= auto080A300F_state) {
                if ((UnitCount("CyclopsUNSC", autoD130E4D4_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoD130E4D4_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoD130E4D4_var, 7, auto080A300F_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCyclops6_Init () {
    lib4A1496D1_gt_UNSCHARDCyclops6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCyclops6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDCyclops6, lib4A1496D1_gv_cyclops3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Cyclops 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCyclops5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAD70F82B_g;
    int autoAD70F82B_var;
    int autoD03DD166_player;
    int autoD03DD166_state;
    int autoD03DD166_var;
    int autoD03DD166_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAD70F82B_g = lib4A1496D1_gv_aIUNSCHard;
    autoAD70F82B_var = -1;
    while (true) {
        autoAD70F82B_var = PlayerGroupNextPlayer(autoAD70F82B_g, autoAD70F82B_var);
        if (autoAD70F82B_var < 0) { break; }
        autoD03DD166_player = autoAD70F82B_var;
        autoD03DD166_state = lib4A1496D1_gv_townStateBuilding;
        autoD03DD166_var = 0;
        for ( ; autoD03DD166_var < c_townMax; autoD03DD166_var += 1 ) {
            autoD03DD166_statevar = AIGetTownState(autoD03DD166_player,autoD03DD166_var);
            if (autoD03DD166_statevar >= autoD03DD166_state) {
                if ((UnitCount("CyclopsUNSC", autoAD70F82B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoAD70F82B_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoAD70F82B_var, 7, autoD03DD166_var, "CyclopsUNSC", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCyclops5_Init () {
    lib4A1496D1_gt_UNSCHARDCyclops5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCyclops5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCyclops5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDCyclops5, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Combat Marine 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCombatMarine6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto40B4E274_g;
    int auto40B4E274_var;
    int autoF0BCCEDE_player;
    int autoF0BCCEDE_state;
    int autoF0BCCEDE_var;
    int autoF0BCCEDE_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto40B4E274_g = lib4A1496D1_gv_aIUNSCHard;
    auto40B4E274_var = -1;
    while (true) {
        auto40B4E274_var = PlayerGroupNextPlayer(auto40B4E274_g, auto40B4E274_var);
        if (auto40B4E274_var < 0) { break; }
        autoF0BCCEDE_player = auto40B4E274_var;
        autoF0BCCEDE_state = lib4A1496D1_gv_townStateBuilding;
        autoF0BCCEDE_var = 0;
        for ( ; autoF0BCCEDE_var < c_townMax; autoF0BCCEDE_var += 1 ) {
            autoF0BCCEDE_statevar = AIGetTownState(autoF0BCCEDE_player,autoF0BCCEDE_var);
            if (autoF0BCCEDE_statevar >= autoF0BCCEDE_state) {
                AITrain(auto40B4E274_var, 4, autoF0BCCEDE_var, "CombatMarineUNSC", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCombatMarine6_Init () {
    lib4A1496D1_gt_UNSCHARDCombatMarine6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCombatMarine6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDCombatMarine6, lib4A1496D1_gv_combatMarine3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Combat Marine 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCombatMarine5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto638C7E7E_g;
    int auto638C7E7E_var;
    int autoE22C98B3_player;
    int autoE22C98B3_state;
    int autoE22C98B3_var;
    int autoE22C98B3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto638C7E7E_g = lib4A1496D1_gv_aIUNSCHard;
    auto638C7E7E_var = -1;
    while (true) {
        auto638C7E7E_var = PlayerGroupNextPlayer(auto638C7E7E_g, auto638C7E7E_var);
        if (auto638C7E7E_var < 0) { break; }
        autoE22C98B3_player = auto638C7E7E_var;
        autoE22C98B3_state = lib4A1496D1_gv_townStateBuilding;
        autoE22C98B3_var = 0;
        for ( ; autoE22C98B3_var < c_townMax; autoE22C98B3_var += 1 ) {
            autoE22C98B3_statevar = AIGetTownState(autoE22C98B3_player,autoE22C98B3_var);
            if (autoE22C98B3_statevar >= autoE22C98B3_state) {
                AITrain(auto638C7E7E_var, 4, autoE22C98B3_var, "CombatMarineUNSC", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCombatMarine5_Init () {
    lib4A1496D1_gt_UNSCHARDCombatMarine5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCombatMarine5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCombatMarine5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDCombatMarine5, 20.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Warthog 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDWarthog6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto027A8F21_g;
    int auto027A8F21_var;
    int autoEE6B365F_player;
    int autoEE6B365F_state;
    int autoEE6B365F_var;
    int autoEE6B365F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto027A8F21_g = lib4A1496D1_gv_aIUNSCHard;
    auto027A8F21_var = -1;
    while (true) {
        auto027A8F21_var = PlayerGroupNextPlayer(auto027A8F21_g, auto027A8F21_var);
        if (auto027A8F21_var < 0) { break; }
        autoEE6B365F_player = auto027A8F21_var;
        autoEE6B365F_state = lib4A1496D1_gv_townStateBuilding;
        autoEE6B365F_var = 0;
        for ( ; autoEE6B365F_var < c_townMax; autoEE6B365F_var += 1 ) {
            autoEE6B365F_statevar = AIGetTownState(autoEE6B365F_player,autoEE6B365F_var);
            if (autoEE6B365F_statevar >= autoEE6B365F_state) {
                AITrain(auto027A8F21_var, 6, autoEE6B365F_var, "WarthogUNSC", 1);
                TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog5, true);
            }
        }
    }
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDWarthog6_Init () {
    lib4A1496D1_gt_UNSCHARDWarthog6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDWarthog6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDWarthog6, lib4A1496D1_gv_warthog3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Warthog 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDWarthog5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto57354478_g;
    int auto57354478_var;
    int autoDBC0322B_player;
    int autoDBC0322B_state;
    int autoDBC0322B_var;
    int autoDBC0322B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto57354478_g = lib4A1496D1_gv_aIUNSCHard;
    auto57354478_var = -1;
    while (true) {
        auto57354478_var = PlayerGroupNextPlayer(auto57354478_g, auto57354478_var);
        if (auto57354478_var < 0) { break; }
        autoDBC0322B_player = auto57354478_var;
        autoDBC0322B_state = lib4A1496D1_gv_townStateBuilding;
        autoDBC0322B_var = 0;
        for ( ; autoDBC0322B_var < c_townMax; autoDBC0322B_var += 1 ) {
            autoDBC0322B_statevar = AIGetTownState(autoDBC0322B_player,autoDBC0322B_var);
            if (autoDBC0322B_statevar >= autoDBC0322B_state) {
                AITrain(auto57354478_var, 6, autoDBC0322B_var, "WarthogUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDWarthog5_Init () {
    lib4A1496D1_gt_UNSCHARDWarthog5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDWarthog5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDWarthog5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDWarthog5, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Hornet 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDHornet4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto269963A9_g;
    int auto269963A9_var;
    int auto11EC5BF9_player;
    int auto11EC5BF9_state;
    int auto11EC5BF9_var;
    int auto11EC5BF9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto269963A9_g = lib4A1496D1_gv_aIUNSCHard;
    auto269963A9_var = -1;
    while (true) {
        auto269963A9_var = PlayerGroupNextPlayer(auto269963A9_g, auto269963A9_var);
        if (auto269963A9_var < 0) { break; }
        auto11EC5BF9_player = auto269963A9_var;
        auto11EC5BF9_state = lib4A1496D1_gv_townStateBuilding;
        auto11EC5BF9_var = 0;
        for ( ; auto11EC5BF9_var < c_townMax; auto11EC5BF9_var += 1 ) {
            auto11EC5BF9_statevar = AIGetTownState(auto11EC5BF9_player,auto11EC5BF9_var);
            if (auto11EC5BF9_statevar >= auto11EC5BF9_state) {
                AITrain(auto269963A9_var, 5, auto11EC5BF9_var, "HornetUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDHornet4_Init () {
    lib4A1496D1_gt_UNSCHARDHornet4 = TriggerCreate("lib4A1496D1_gt_UNSCHARDHornet4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDHornet4, lib4A1496D1_gv_hornet3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Hornet 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDHornet3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8ECC52AE_g;
    int auto8ECC52AE_var;
    int auto68E1A723_player;
    int auto68E1A723_state;
    int auto68E1A723_var;
    int auto68E1A723_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8ECC52AE_g = lib4A1496D1_gv_aIUNSCHard;
    auto8ECC52AE_var = -1;
    while (true) {
        auto8ECC52AE_var = PlayerGroupNextPlayer(auto8ECC52AE_g, auto8ECC52AE_var);
        if (auto8ECC52AE_var < 0) { break; }
        auto68E1A723_player = auto8ECC52AE_var;
        auto68E1A723_state = lib4A1496D1_gv_townStateBuilding;
        auto68E1A723_var = 0;
        for ( ; auto68E1A723_var < c_townMax; auto68E1A723_var += 1 ) {
            auto68E1A723_statevar = AIGetTownState(auto68E1A723_player,auto68E1A723_var);
            if (auto68E1A723_statevar >= auto68E1A723_state) {
                AITrain(auto8ECC52AE_var, 5, auto68E1A723_var, "HornetUNSC", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDHornet3_Init () {
    lib4A1496D1_gt_UNSCHARDHornet3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDHornet3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDHornet3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDHornet3, 22.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Scorpion 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDScorpion6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB3BF5CD6_g;
    int autoB3BF5CD6_var;
    int auto92BCE33A_player;
    int auto92BCE33A_state;
    int auto92BCE33A_var;
    int auto92BCE33A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB3BF5CD6_g = lib4A1496D1_gv_aIUNSCHard;
    autoB3BF5CD6_var = -1;
    while (true) {
        autoB3BF5CD6_var = PlayerGroupNextPlayer(autoB3BF5CD6_g, autoB3BF5CD6_var);
        if (autoB3BF5CD6_var < 0) { break; }
        auto92BCE33A_player = autoB3BF5CD6_var;
        auto92BCE33A_state = lib4A1496D1_gv_townStateBuilding;
        auto92BCE33A_var = 0;
        for ( ; auto92BCE33A_var < c_townMax; auto92BCE33A_var += 1 ) {
            auto92BCE33A_statevar = AIGetTownState(auto92BCE33A_player,auto92BCE33A_var);
            if (auto92BCE33A_statevar >= auto92BCE33A_state) {
                AITrain(autoB3BF5CD6_var, 6, auto92BCE33A_var, "ScorpionUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDScorpion6_Init () {
    lib4A1496D1_gt_UNSCHARDScorpion6 = TriggerCreate("lib4A1496D1_gt_UNSCHARDScorpion6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDScorpion6, lib4A1496D1_gv_scorpion3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Scorpion 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDScorpion5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD192059B_g;
    int autoD192059B_var;
    int auto83116FEC_player;
    int auto83116FEC_state;
    int auto83116FEC_var;
    int auto83116FEC_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD192059B_g = lib4A1496D1_gv_aIUNSCHard;
    autoD192059B_var = -1;
    while (true) {
        autoD192059B_var = PlayerGroupNextPlayer(autoD192059B_g, autoD192059B_var);
        if (autoD192059B_var < 0) { break; }
        auto83116FEC_player = autoD192059B_var;
        auto83116FEC_state = lib4A1496D1_gv_townStateBuilding;
        auto83116FEC_var = 0;
        for ( ; auto83116FEC_var < c_townMax; auto83116FEC_var += 1 ) {
            auto83116FEC_statevar = AIGetTownState(auto83116FEC_player,auto83116FEC_var);
            if (auto83116FEC_statevar >= auto83116FEC_state) {
                AITrain(autoD192059B_var, 6, auto83116FEC_var, "ScorpionUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDScorpion5_Init () {
    lib4A1496D1_gt_UNSCHARDScorpion5 = TriggerCreate("lib4A1496D1_gt_UNSCHARDScorpion5_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDScorpion5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDScorpion5, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC Hard Koidak 7
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHardKoidak7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6D1E29B4_g;
    int auto6D1E29B4_var;
    int auto726E3E77_player;
    int auto726E3E77_state;
    int auto726E3E77_var;
    int auto726E3E77_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6D1E29B4_g = lib4A1496D1_gv_aIUNSCHard;
    auto6D1E29B4_var = -1;
    while (true) {
        auto6D1E29B4_var = PlayerGroupNextPlayer(auto6D1E29B4_g, auto6D1E29B4_var);
        if (auto6D1E29B4_var < 0) { break; }
        auto726E3E77_player = auto6D1E29B4_var;
        auto726E3E77_state = lib4A1496D1_gv_townStateBuilding;
        auto726E3E77_var = 0;
        for ( ; auto726E3E77_var < c_townMax; auto726E3E77_var += 1 ) {
            auto726E3E77_statevar = AIGetTownState(auto726E3E77_player,auto726E3E77_var);
            if (auto726E3E77_statevar >= auto726E3E77_state) {
                AITrain(auto6D1E29B4_var, 6, auto726E3E77_var, "KodiakUnsieged", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHardKodiak6, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHardKoidak7, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHardKoidak7_Init () {
    lib4A1496D1_gt_UNSCHardKoidak7 = TriggerCreate("lib4A1496D1_gt_UNSCHardKoidak7_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHardKoidak7, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHardKoidak7, lib4A1496D1_gv_kodiak3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC Hard Kodiak 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHardKodiak6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto60751AE6_g;
    int auto60751AE6_var;
    int auto47AB3D2C_player;
    int auto47AB3D2C_state;
    int auto47AB3D2C_var;
    int auto47AB3D2C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto60751AE6_g = lib4A1496D1_gv_aIUNSCHard;
    auto60751AE6_var = -1;
    while (true) {
        auto60751AE6_var = PlayerGroupNextPlayer(auto60751AE6_g, auto60751AE6_var);
        if (auto60751AE6_var < 0) { break; }
        auto47AB3D2C_player = auto60751AE6_var;
        auto47AB3D2C_state = lib4A1496D1_gv_townStateBuilding;
        auto47AB3D2C_var = 0;
        for ( ; auto47AB3D2C_var < c_townMax; auto47AB3D2C_var += 1 ) {
            auto47AB3D2C_statevar = AIGetTownState(auto47AB3D2C_player,auto47AB3D2C_var);
            if (auto47AB3D2C_statevar >= auto47AB3D2C_state) {
                AITrain(auto60751AE6_var, 6, auto47AB3D2C_var, "KodiakUnsieged", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHardKodiak6_Init () {
    lib4A1496D1_gt_UNSCHardKodiak6 = TriggerCreate("lib4A1496D1_gt_UNSCHardKodiak6_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHardKodiak6, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHardKodiak6, 55.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Cobra 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCobra4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF14F3E99_g;
    int autoF14F3E99_var;
    int auto3288934E_player;
    int auto3288934E_state;
    int auto3288934E_var;
    int auto3288934E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF14F3E99_g = lib4A1496D1_gv_aIUNSCHard;
    autoF14F3E99_var = -1;
    while (true) {
        autoF14F3E99_var = PlayerGroupNextPlayer(autoF14F3E99_g, autoF14F3E99_var);
        if (autoF14F3E99_var < 0) { break; }
        auto3288934E_player = autoF14F3E99_var;
        auto3288934E_state = lib4A1496D1_gv_townStateBuilding;
        auto3288934E_var = 0;
        for ( ; auto3288934E_var < c_townMax; auto3288934E_var += 1 ) {
            auto3288934E_statevar = AIGetTownState(auto3288934E_player,auto3288934E_var);
            if (auto3288934E_statevar >= auto3288934E_state) {
                AITrain(autoF14F3E99_var, 6, auto3288934E_var, "CobraUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCobra4_Init () {
    lib4A1496D1_gt_UNSCHARDCobra4 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCobra4_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDCobra4, lib4A1496D1_gv_cobra3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Cobra 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDCobra3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoECFD892D_g;
    int autoECFD892D_var;
    int auto478B6042_player;
    int auto478B6042_state;
    int auto478B6042_var;
    int auto478B6042_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoECFD892D_g = lib4A1496D1_gv_aIUNSCHard;
    autoECFD892D_var = -1;
    while (true) {
        autoECFD892D_var = PlayerGroupNextPlayer(autoECFD892D_g, autoECFD892D_var);
        if (autoECFD892D_var < 0) { break; }
        auto478B6042_player = autoECFD892D_var;
        auto478B6042_state = lib4A1496D1_gv_townStateBuilding;
        auto478B6042_var = 0;
        for ( ; auto478B6042_var < c_townMax; auto478B6042_var += 1 ) {
            auto478B6042_statevar = AIGetTownState(auto478B6042_player,auto478B6042_var);
            if (auto478B6042_statevar >= auto478B6042_state) {
                AITrain(autoECFD892D_var, 6, auto478B6042_var, "CobraUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDCobra3_Init () {
    lib4A1496D1_gt_UNSCHARDCobra3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDCobra3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDCobra3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDCobra3, 32.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Mantis
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDMantis_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAE644CAD_g;
    int autoAE644CAD_var;
    int auto14D9BBE8_player;
    int auto14D9BBE8_state;
    int auto14D9BBE8_var;
    int auto14D9BBE8_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAE644CAD_g = lib4A1496D1_gv_aIUNSCHard;
    autoAE644CAD_var = -1;
    while (true) {
        autoAE644CAD_var = PlayerGroupNextPlayer(autoAE644CAD_g, autoAE644CAD_var);
        if (autoAE644CAD_var < 0) { break; }
        auto14D9BBE8_player = autoAE644CAD_var;
        auto14D9BBE8_state = lib4A1496D1_gv_townStateBuilding;
        auto14D9BBE8_var = 0;
        for ( ; auto14D9BBE8_var < c_townMax; auto14D9BBE8_var += 1 ) {
            auto14D9BBE8_statevar = AIGetTownState(auto14D9BBE8_player,auto14D9BBE8_var);
            if (auto14D9BBE8_statevar >= auto14D9BBE8_state) {
                AITrain(autoAE644CAD_var, 6, auto14D9BBE8_var, "MantisUNSC", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDMantis_Init () {
    lib4A1496D1_gt_UNSCHARDMantis = TriggerCreate("lib4A1496D1_gt_UNSCHARDMantis_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDMantis, lib4A1496D1_gv_mantis3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Mantis 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDMantis2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto11761250_g;
    int auto11761250_var;
    int auto4A186BB3_player;
    int auto4A186BB3_state;
    int auto4A186BB3_var;
    int auto4A186BB3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto11761250_g = lib4A1496D1_gv_aIUNSCHard;
    auto11761250_var = -1;
    while (true) {
        auto11761250_var = PlayerGroupNextPlayer(auto11761250_g, auto11761250_var);
        if (auto11761250_var < 0) { break; }
        auto4A186BB3_player = auto11761250_var;
        auto4A186BB3_state = lib4A1496D1_gv_townStateBuilding;
        auto4A186BB3_var = 0;
        for ( ; auto4A186BB3_var < c_townMax; auto4A186BB3_var += 1 ) {
            auto4A186BB3_statevar = AIGetTownState(auto4A186BB3_player,auto4A186BB3_var);
            if (auto4A186BB3_statevar >= auto4A186BB3_state) {
                AITrain(auto11761250_var, 6, auto4A186BB3_var, "MantisUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDMantis2_Init () {
    lib4A1496D1_gt_UNSCHARDMantis2 = TriggerCreate("lib4A1496D1_gt_UNSCHARDMantis2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDMantis2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDMantis2, 45.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Vulture
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDVulture_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC7E515D2_g;
    int autoC7E515D2_var;
    int auto6E1B5BA5_player;
    int auto6E1B5BA5_state;
    int auto6E1B5BA5_var;
    int auto6E1B5BA5_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC7E515D2_g = lib4A1496D1_gv_aIUNSCHard;
    autoC7E515D2_var = -1;
    while (true) {
        autoC7E515D2_var = PlayerGroupNextPlayer(autoC7E515D2_g, autoC7E515D2_var);
        if (autoC7E515D2_var < 0) { break; }
        auto6E1B5BA5_player = autoC7E515D2_var;
        auto6E1B5BA5_state = lib4A1496D1_gv_townStateBuilding;
        auto6E1B5BA5_var = 0;
        for ( ; auto6E1B5BA5_var < c_townMax; auto6E1B5BA5_var += 1 ) {
            auto6E1B5BA5_statevar = AIGetTownState(auto6E1B5BA5_player,auto6E1B5BA5_var);
            if (auto6E1B5BA5_statevar >= auto6E1B5BA5_state) {
                AITrain(autoC7E515D2_var, 5, auto6E1B5BA5_var, "VultureUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDVulture_Init () {
    lib4A1496D1_gt_UNSCHARDVulture = TriggerCreate("lib4A1496D1_gt_UNSCHARDVulture_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDVulture, lib4A1496D1_gv_vulture3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Vulture 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDVulture2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8C8BA2BC_g;
    int auto8C8BA2BC_var;
    int auto4CE2D08D_player;
    int auto4CE2D08D_state;
    int auto4CE2D08D_var;
    int auto4CE2D08D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8C8BA2BC_g = lib4A1496D1_gv_aIUNSCHard;
    auto8C8BA2BC_var = -1;
    while (true) {
        auto8C8BA2BC_var = PlayerGroupNextPlayer(auto8C8BA2BC_g, auto8C8BA2BC_var);
        if (auto8C8BA2BC_var < 0) { break; }
        auto4CE2D08D_player = auto8C8BA2BC_var;
        auto4CE2D08D_state = lib4A1496D1_gv_townStateBuilding;
        auto4CE2D08D_var = 0;
        for ( ; auto4CE2D08D_var < c_townMax; auto4CE2D08D_var += 1 ) {
            auto4CE2D08D_statevar = AIGetTownState(auto4CE2D08D_player,auto4CE2D08D_var);
            if (auto4CE2D08D_statevar >= auto4CE2D08D_state) {
                AITrain(auto8C8BA2BC_var, 5, auto4CE2D08D_var, "VultureUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDVulture2_Init () {
    lib4A1496D1_gt_UNSCHARDVulture2 = TriggerCreate("lib4A1496D1_gt_UNSCHARDVulture2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDVulture2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDVulture2, 95.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Frigate
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDFrigate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoDAA7D3E5_g;
    int autoDAA7D3E5_var;
    int auto1D7DB1EE_player;
    int auto1D7DB1EE_state;
    int auto1D7DB1EE_var;
    int auto1D7DB1EE_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDAA7D3E5_g = lib4A1496D1_gv_aIUNSCHard;
    autoDAA7D3E5_var = -1;
    while (true) {
        autoDAA7D3E5_var = PlayerGroupNextPlayer(autoDAA7D3E5_g, autoDAA7D3E5_var);
        if (autoDAA7D3E5_var < 0) { break; }
        auto1D7DB1EE_player = autoDAA7D3E5_var;
        auto1D7DB1EE_state = lib4A1496D1_gv_townStateBuilding;
        auto1D7DB1EE_var = 0;
        for ( ; auto1D7DB1EE_var < c_townMax; auto1D7DB1EE_var += 1 ) {
            auto1D7DB1EE_statevar = AIGetTownState(auto1D7DB1EE_player,auto1D7DB1EE_var);
            if (auto1D7DB1EE_statevar >= auto1D7DB1EE_state) {
                AITrain(autoDAA7D3E5_var, 5, auto1D7DB1EE_var, "FrigateUNSC", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDFrigate_Init () {
    lib4A1496D1_gt_UNSCHARDFrigate = TriggerCreate("lib4A1496D1_gt_UNSCHARDFrigate_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate, false);
    TriggerAddEventTimer(lib4A1496D1_gt_UNSCHARDFrigate, lib4A1496D1_gv_frigate3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Frigate 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDFrigate2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto2C8051A7_g;
    int auto2C8051A7_var;
    int autoB1087C36_player;
    int autoB1087C36_state;
    int autoB1087C36_var;
    int autoB1087C36_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2C8051A7_g = lib4A1496D1_gv_aIUNSCHard;
    auto2C8051A7_var = -1;
    while (true) {
        auto2C8051A7_var = PlayerGroupNextPlayer(auto2C8051A7_g, auto2C8051A7_var);
        if (auto2C8051A7_var < 0) { break; }
        autoB1087C36_player = auto2C8051A7_var;
        autoB1087C36_state = lib4A1496D1_gv_townStateBuilding;
        autoB1087C36_var = 0;
        for ( ; autoB1087C36_var < c_townMax; autoB1087C36_var += 1 ) {
            autoB1087C36_statevar = AIGetTownState(autoB1087C36_player,autoB1087C36_var);
            if (autoB1087C36_statevar >= autoB1087C36_state) {
                AITrain(auto2C8051A7_var, 5, autoB1087C36_var, "FrigateUNSC", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDFrigate2_Init () {
    lib4A1496D1_gt_UNSCHARDFrigate2 = TriggerCreate("lib4A1496D1_gt_UNSCHARDFrigate2_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDFrigate2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDFrigate2, 110.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD EXPAND TIMER 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDEXPANDTIMER3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_town3;

    // Automatic Variable Declarations
    playergroup auto45A48F00_g;
    int auto45A48F00_var;
    int auto3CC6151B_player;
    int auto3CC6151B_state;
    int auto3CC6151B_var;
    int auto3CC6151B_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto45A48F00_g = lib4A1496D1_gv_aIUNSCHard;
    auto45A48F00_var = -1;
    while (true) {
        auto45A48F00_var = PlayerGroupNextPlayer(auto45A48F00_g, auto45A48F00_var);
        if (auto45A48F00_var < 0) { break; }
        auto3CC6151B_player = auto45A48F00_var;
        auto3CC6151B_state = lib4A1496D1_gv_townStateBuilding;
        auto3CC6151B_var = 0;
        for ( ; auto3CC6151B_var < c_townMax; auto3CC6151B_var += 1 ) {
            auto3CC6151B_statevar = AIGetTownState(auto3CC6151B_player,auto3CC6151B_var);
            if (auto3CC6151B_statevar >= auto3CC6151B_state) {
                lv_town3 = (lv_town3 + UnitGroupCount(UnitGroup("Firebase", auto45A48F00_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_town3 < 8)) {
                    PlayerModifyPropertyInt(auto45A48F00_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(auto45A48F00_var, PlayerStartLocation(auto45A48F00_var), "Firebase");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDEXPANDTIMER3_Init () {
    lib4A1496D1_gt_UNSCHARDEXPANDTIMER3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDEXPANDTIMER3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDEXPANDTIMER3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDEXPANDTIMER3, 240.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -UNSC HARD Attack Timer 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_UNSCHARDAttackTimer3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFD7AFD2D_g;
    int autoFD7AFD2D_var;
    unitgroup auto1978DFFF_g;
    int auto1978DFFF_u;
    unit auto1978DFFF_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFD7AFD2D_g = lib4A1496D1_gv_aIUNSCHard;
    autoFD7AFD2D_var = -1;
    while (true) {
        autoFD7AFD2D_var = PlayerGroupNextPlayer(autoFD7AFD2D_g, autoFD7AFD2D_var);
        if (autoFD7AFD2D_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(autoFD7AFD2D_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto1978DFFF_g = UnitGroup(null, autoFD7AFD2D_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto1978DFFF_u = UnitGroupCount(auto1978DFFF_g, c_unitCountAll);
        for (;; auto1978DFFF_u -= 1) {
            auto1978DFFF_var = UnitGroupUnitFromEnd(auto1978DFFF_g, auto1978DFFF_u);
            if (auto1978DFFF_var == null) { break; }
            UnitIssueOrder(auto1978DFFF_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_UNSCHARDAttackTimer3_Init () {
    lib4A1496D1_gt_UNSCHARDAttackTimer3 = TriggerCreate("lib4A1496D1_gt_UNSCHARDAttackTimer3_Func");
    TriggerEnable(lib4A1496D1_gt_UNSCHARDAttackTimer3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_UNSCHARDAttackTimer3, 420.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI TIMERS 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_AITIMERS2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(lib4A1496D1_gv_covenantbuildWarehouse, 17.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildbarrackstimer, 51.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildfactory, 102.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildChamberofReclamation, 125.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildTemple, 164.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainHuragok, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBrute, 105.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainGrunt, 121.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainGhost, 155.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainSuicideHuragok, 185.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildWarehouse2, 15.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildbarrackstimer2, 45.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildChamberofReclamation2, 90.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildfactory2, 85.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildshipyard2, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildTemple2, 160.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildMegaTurret2, 520.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainHuragok2, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBrute2, 80.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainGhost2, 150.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainSuicideHuragok2, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBanshee2, 220.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBruteChieftan2, 245.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainHunter2, 255.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainElite2, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainLocust2, 265.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainSanShyuumPrelate2, 520.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainSniperJackal2, 247.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainWraith2, 275.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainAntiAirWraith2, 260.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildWarehouse3, 12.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildbarrackstimer3, 38.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildChamberofReclamation3, 75.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildfactory3, 78.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildshipyard3, 130.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildMegaTurret3, 480.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantbuildTemple3, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainHuragok3, 5.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBrute3, 77.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainGhost3, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainSuicideHuragok3, 240.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainBanshee3, 210.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainLocust3, 245.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainWraith3, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainAntiAirWraith3, 252.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainCASClassSupercarrier3, 540.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainScarab3, 530.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_covenantTrainVampire3, 280.0, false, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_AITIMERS2_Init () {
    lib4A1496D1_gt_AITIMERS2 = TriggerCreate("lib4A1496D1_gt_AITIMERS2_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_AITIMERS2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Choose A.I. Difficulty 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_ChooseAIDifficulty3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto012E00E6_g;
    int auto012E00E6_var;
    playergroup auto51E31622_g;
    int auto51E31622_var;
    int auto1DACF2BA_val;

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.625, c_timeGame);
    auto012E00E6_g = PlayerGroupAll();
    auto012E00E6_var = -1;
    while (true) {
        auto012E00E6_var = PlayerGroupNextPlayer(auto012E00E6_g, auto012E00E6_var);
        if (auto012E00E6_var < 0) { break; }
        if ((PlayerType(auto012E00E6_var) == c_playerTypeComputer)) {
            PlayerGroupAdd(lib4A1496D1_gv_aIPlayers, auto012E00E6_var);
        }

    }
    auto51E31622_g = lib4A1496D1_gv_aIPlayers;
    auto51E31622_var = -1;
    while (true) {
        auto51E31622_var = PlayerGroupNextPlayer(auto51E31622_g, auto51E31622_var);
        if (auto51E31622_var < 0) { break; }
        AIScout(auto51E31622_var);
        PlayerModifyPropertyInt(auto51E31622_var, c_playerPropVespene, c_playerPropOperAdd, 80000);
        if ((PlayerRace(auto51E31622_var) == "Prot") && ((PlayerGroupHasPlayer(lib4A1496D1_gv_aICovEasy2, auto51E31622_var) == false) || (PlayerGroupHasPlayer(lib4A1496D1_gv_aICovModerate2, auto51E31622_var) == false) || (PlayerGroupHasPlayer(lib4A1496D1_gv_aICovHard2, auto51E31622_var) == false))) {
            auto1DACF2BA_val = RandomInt(1, 3);
            if (auto1DACF2BA_val == 1) {
                PlayerModifyPropertyInt(auto51E31622_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aICovEasy, auto51E31622_var);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_1812B19F", "A", PlayerName(auto51E31622_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_1812B19F"));
                TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse, true);
            }
            else if (auto1DACF2BA_val == 2) {
                PlayerModifyPropertyInt(auto51E31622_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                PlayerGroupAdd(lib4A1496D1_gv_aICovModerate, auto51E31622_var);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_706F80EE", "A", PlayerName(auto51E31622_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_706F80EE"));
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateElite10, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter12, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust14, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal18, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith20, true);
                TriggerEnable(lib4A1496D1_gt_COVMODERATEAttackTimer2, true);
                TriggerEnable(lib4A1496D1_gt_COVMODERATEEXPANDTIMER2, true);
            }
            else if (auto1DACF2BA_val == 3) {
                PlayerModifyPropertyInt(auto51E31622_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                PlayerGroupAdd(lib4A1496D1_gv_aICovHard, auto51E31622_var);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeOfDoubt", 1);
                TechTreeUpgradeAddLevel(auto51E31622_var, "CovenantAgeofReclamation", 1);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_B6188E28", "A", PlayerName(auto51E31622_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_B6188E28"));
                TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith24, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardBrute6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier4, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardLocust16, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardScarab6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardTemple6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardVampire8, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse6, true);
                TriggerEnable(lib4A1496D1_gt_CovenantHardWraith22, true);
                TriggerEnable(lib4A1496D1_gt_COVHARDAttackTimer3, true);
                TriggerEnable(lib4A1496D1_gt_COVHARDEXPANDTIMER3, true);
            }
            else {
                PlayerModifyPropertyInt(auto51E31622_var, c_playerPropMinerals, c_playerPropOperAdd, 500);
                PlayerGroupAdd(lib4A1496D1_gv_aICovEasy, auto51E31622_var);
                TextExpressionSetToken("Param/Expression/lib_4A1496D1_816DB74F", "A", PlayerName(auto51E31622_var));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_816DB74F"));
                TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple, true);
                TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse, true);
                TriggerEnable(lib4A1496D1_gt_COVEASYAttackTimer, true);
                TriggerEnable(lib4A1496D1_gt_COVEASYEXPANDTIMER, true);
            }
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_ChooseAIDifficulty3_Init () {
    lib4A1496D1_gt_ChooseAIDifficulty3 = TriggerCreate("lib4A1496D1_gt_ChooseAIDifficulty3_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_ChooseAIDifficulty3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Warehouse
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyWarehouse_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0C31774B_g;
    int auto0C31774B_var;
    int auto28D1A6B7_player;
    int auto28D1A6B7_state;
    int auto28D1A6B7_var;
    int auto28D1A6B7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0C31774B_g = lib4A1496D1_gv_aICovEasy;
    auto0C31774B_var = -1;
    while (true) {
        auto0C31774B_var = PlayerGroupNextPlayer(auto0C31774B_g, auto0C31774B_var);
        if (auto0C31774B_var < 0) { break; }
        auto28D1A6B7_player = auto0C31774B_var;
        auto28D1A6B7_state = lib4A1496D1_gv_townStateBuilding;
        auto28D1A6B7_var = 0;
        for ( ; auto28D1A6B7_var < c_townMax; auto28D1A6B7_var += 1 ) {
            auto28D1A6B7_statevar = AIGetTownState(auto28D1A6B7_player,auto28D1A6B7_var);
            if (auto28D1A6B7_statevar >= auto28D1A6B7_state) {
                if ((UnitCount("WarehouseCovenant", auto0C31774B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(auto0C31774B_var, 1, auto28D1A6B7_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyWarehouse_Init () {
    lib4A1496D1_gt_CovenantEasyWarehouse = TriggerCreate("lib4A1496D1_gt_CovenantEasyWarehouse_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyWarehouse, lib4A1496D1_gv_covenantbuildWarehouse);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Warehouse 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyWarehouse2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEFACE666_g;
    int autoEFACE666_var;
    int auto130A4BA1_player;
    int auto130A4BA1_state;
    int auto130A4BA1_var;
    int auto130A4BA1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEFACE666_g = lib4A1496D1_gv_aICovEasy;
    autoEFACE666_var = -1;
    while (true) {
        autoEFACE666_var = PlayerGroupNextPlayer(autoEFACE666_g, autoEFACE666_var);
        if (autoEFACE666_var < 0) { break; }
        auto130A4BA1_player = autoEFACE666_var;
        auto130A4BA1_state = lib4A1496D1_gv_townStateBuilding;
        auto130A4BA1_var = 0;
        for ( ; auto130A4BA1_var < c_townMax; auto130A4BA1_var += 1 ) {
            auto130A4BA1_statevar = AIGetTownState(auto130A4BA1_player,auto130A4BA1_var);
            if (auto130A4BA1_statevar >= auto130A4BA1_state) {
                if ((UnitCount("WarehouseCovenant", autoEFACE666_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(autoEFACE666_var, 1, auto130A4BA1_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyWarehouse2_Init () {
    lib4A1496D1_gt_CovenantEasyWarehouse2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyWarehouse2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyWarehouse2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyWarehouse2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Infantry Hall
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyInfantryHall_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA844FE08_g;
    int autoA844FE08_var;
    int autoD9FFA85E_player;
    int autoD9FFA85E_state;
    int autoD9FFA85E_var;
    int autoD9FFA85E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA844FE08_g = lib4A1496D1_gv_aICovEasy;
    autoA844FE08_var = -1;
    while (true) {
        autoA844FE08_var = PlayerGroupNextPlayer(autoA844FE08_g, autoA844FE08_var);
        if (autoA844FE08_var < 0) { break; }
        autoD9FFA85E_player = autoA844FE08_var;
        autoD9FFA85E_state = lib4A1496D1_gv_townStateBuilding;
        autoD9FFA85E_var = 0;
        for ( ; autoD9FFA85E_var < c_townMax; autoD9FFA85E_var += 1 ) {
            autoD9FFA85E_statevar = AIGetTownState(autoD9FFA85E_player,autoD9FFA85E_var);
            if (autoD9FFA85E_statevar >= autoD9FFA85E_state) {
                if ((UnitCount("InfantryHallCovenant", autoA844FE08_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(autoA844FE08_var, 1, autoD9FFA85E_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyInfantryHall_Init () {
    lib4A1496D1_gt_CovenantEasyInfantryHall = TriggerCreate("lib4A1496D1_gt_CovenantEasyInfantryHall_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyInfantryHall, lib4A1496D1_gv_covenantbuildbarrackstimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Infantry Hall 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyInfantryHall2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8245880C_g;
    int auto8245880C_var;
    int auto7CE85331_player;
    int auto7CE85331_state;
    int auto7CE85331_var;
    int auto7CE85331_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8245880C_g = lib4A1496D1_gv_aICovEasy;
    auto8245880C_var = -1;
    while (true) {
        auto8245880C_var = PlayerGroupNextPlayer(auto8245880C_g, auto8245880C_var);
        if (auto8245880C_var < 0) { break; }
        auto7CE85331_player = auto8245880C_var;
        auto7CE85331_state = lib4A1496D1_gv_townStateBuilding;
        auto7CE85331_var = 0;
        for ( ; auto7CE85331_var < c_townMax; auto7CE85331_var += 1 ) {
            auto7CE85331_statevar = AIGetTownState(auto7CE85331_player,auto7CE85331_var);
            if (auto7CE85331_statevar >= auto7CE85331_state) {
                if ((UnitCount("InfantryHallCovenant", auto8245880C_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(auto8245880C_var, 1, auto7CE85331_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyInfantryHall2_Init () {
    lib4A1496D1_gt_CovenantEasyInfantryHall2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyInfantryHall2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyInfantryHall2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyInfantryHall2, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Propolusion Vehicle Factory
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB4F3C774_g;
    int autoB4F3C774_var;
    int auto801056A2_player;
    int auto801056A2_state;
    int auto801056A2_var;
    int auto801056A2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB4F3C774_g = lib4A1496D1_gv_aICovEasy;
    autoB4F3C774_var = -1;
    while (true) {
        autoB4F3C774_var = PlayerGroupNextPlayer(autoB4F3C774_g, autoB4F3C774_var);
        if (autoB4F3C774_var < 0) { break; }
        auto801056A2_player = autoB4F3C774_var;
        auto801056A2_state = lib4A1496D1_gv_townStateBuilding;
        auto801056A2_var = 0;
        for ( ; auto801056A2_var < c_townMax; auto801056A2_var += 1 ) {
            auto801056A2_statevar = AIGetTownState(auto801056A2_player,auto801056A2_var);
            if (auto801056A2_statevar >= auto801056A2_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", autoB4F3C774_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoB4F3C774_var, 0, auto801056A2_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory_Init () {
    lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory = TriggerCreate("lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory, lib4A1496D1_gv_covenantbuildfactory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Propolusion Vehicle Factory 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto3F93D34F_g;
    int auto3F93D34F_var;
    int auto51078CCC_player;
    int auto51078CCC_state;
    int auto51078CCC_var;
    int auto51078CCC_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto3F93D34F_g = lib4A1496D1_gv_aICovEasy;
    auto3F93D34F_var = -1;
    while (true) {
        auto3F93D34F_var = PlayerGroupNextPlayer(auto3F93D34F_g, auto3F93D34F_var);
        if (auto3F93D34F_var < 0) { break; }
        auto51078CCC_player = auto3F93D34F_var;
        auto51078CCC_state = lib4A1496D1_gv_townStateBuilding;
        auto51078CCC_var = 0;
        for ( ; auto51078CCC_var < c_townMax; auto51078CCC_var += 1 ) {
            auto51078CCC_statevar = AIGetTownState(auto51078CCC_player,auto51078CCC_var);
            if (auto51078CCC_statevar >= auto51078CCC_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", auto3F93D34F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto3F93D34F_var, 0, auto51078CCC_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2_Init () {
    lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Chamber Of Reclimation
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyChamberOfReclimation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBE2F2895_g;
    int autoBE2F2895_var;
    int auto74B62788_player;
    int auto74B62788_state;
    int auto74B62788_var;
    int auto74B62788_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBE2F2895_g = lib4A1496D1_gv_aICovEasy;
    autoBE2F2895_var = -1;
    while (true) {
        autoBE2F2895_var = PlayerGroupNextPlayer(autoBE2F2895_g, autoBE2F2895_var);
        if (autoBE2F2895_var < 0) { break; }
        auto74B62788_player = autoBE2F2895_var;
        auto74B62788_state = lib4A1496D1_gv_townStateBuilding;
        auto74B62788_var = 0;
        for ( ; auto74B62788_var < c_townMax; auto74B62788_var += 1 ) {
            auto74B62788_statevar = AIGetTownState(auto74B62788_player,auto74B62788_var);
            if (auto74B62788_statevar >= auto74B62788_state) {
                if ((UnitCount("ChamberofReclmation", autoBE2F2895_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoBE2F2895_var, 2, auto74B62788_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyChamberOfReclimation_Init () {
    lib4A1496D1_gt_CovenantEasyChamberOfReclimation = TriggerCreate("lib4A1496D1_gt_CovenantEasyChamberOfReclimation_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyChamberOfReclimation, lib4A1496D1_gv_covenantbuildChamberofReclamation);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Chamber Of Reclimation 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyChamberOfReclimation2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCD7F6B11_g;
    int autoCD7F6B11_var;
    int auto61C2ACCA_player;
    int auto61C2ACCA_state;
    int auto61C2ACCA_var;
    int auto61C2ACCA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCD7F6B11_g = lib4A1496D1_gv_aICovEasy;
    autoCD7F6B11_var = -1;
    while (true) {
        autoCD7F6B11_var = PlayerGroupNextPlayer(autoCD7F6B11_g, autoCD7F6B11_var);
        if (autoCD7F6B11_var < 0) { break; }
        auto61C2ACCA_player = autoCD7F6B11_var;
        auto61C2ACCA_state = lib4A1496D1_gv_townStateBuilding;
        auto61C2ACCA_var = 0;
        for ( ; auto61C2ACCA_var < c_townMax; auto61C2ACCA_var += 1 ) {
            auto61C2ACCA_statevar = AIGetTownState(auto61C2ACCA_player,auto61C2ACCA_var);
            if (auto61C2ACCA_statevar >= auto61C2ACCA_state) {
                if ((UnitCount("ChamberofReclmation", autoCD7F6B11_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoCD7F6B11_var, 2, auto61C2ACCA_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyChamberOfReclimation2_Init () {
    lib4A1496D1_gt_CovenantEasyChamberOfReclimation2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyChamberOfReclimation2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyChamberOfReclimation2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyChamberOfReclimation2, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Temple
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyTemple_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto71632CA9_g;
    int auto71632CA9_var;
    int auto7455B418_player;
    int auto7455B418_state;
    int auto7455B418_var;
    int auto7455B418_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto71632CA9_g = lib4A1496D1_gv_aICovEasy;
    auto71632CA9_var = -1;
    while (true) {
        auto71632CA9_var = PlayerGroupNextPlayer(auto71632CA9_g, auto71632CA9_var);
        if (auto71632CA9_var < 0) { break; }
        auto7455B418_player = auto71632CA9_var;
        auto7455B418_state = lib4A1496D1_gv_townStateBuilding;
        auto7455B418_var = 0;
        for ( ; auto7455B418_var < c_townMax; auto7455B418_var += 1 ) {
            auto7455B418_statevar = AIGetTownState(auto7455B418_player,auto7455B418_var);
            if (auto7455B418_statevar >= auto7455B418_state) {
                if ((UnitCount("TempleCovenant", auto71632CA9_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto71632CA9_var, 2, auto7455B418_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyTemple_Init () {
    lib4A1496D1_gt_CovenantEasyTemple = TriggerCreate("lib4A1496D1_gt_CovenantEasyTemple_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyTemple, lib4A1496D1_gv_covenantbuildTemple);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Temple 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyTemple2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEE8CA2C4_g;
    int autoEE8CA2C4_var;
    int auto8F2FB361_player;
    int auto8F2FB361_state;
    int auto8F2FB361_var;
    int auto8F2FB361_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEE8CA2C4_g = lib4A1496D1_gv_aICovEasy;
    autoEE8CA2C4_var = -1;
    while (true) {
        autoEE8CA2C4_var = PlayerGroupNextPlayer(autoEE8CA2C4_g, autoEE8CA2C4_var);
        if (autoEE8CA2C4_var < 0) { break; }
        auto8F2FB361_player = autoEE8CA2C4_var;
        auto8F2FB361_state = lib4A1496D1_gv_townStateBuilding;
        auto8F2FB361_var = 0;
        for ( ; auto8F2FB361_var < c_townMax; auto8F2FB361_var += 1 ) {
            auto8F2FB361_statevar = AIGetTownState(auto8F2FB361_player,auto8F2FB361_var);
            if (auto8F2FB361_statevar >= auto8F2FB361_state) {
                if ((UnitCount("TempleCovenant", autoEE8CA2C4_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoEE8CA2C4_var, 2, auto8F2FB361_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyTemple2_Init () {
    lib4A1496D1_gt_CovenantEasyTemple2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyTemple2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyTemple2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyTemple2, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Huragok
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyHuragok_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFC7DF420_g;
    int autoFC7DF420_var;
    int auto901103E6_player;
    int auto901103E6_state;
    int auto901103E6_var;
    int auto901103E6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFC7DF420_g = lib4A1496D1_gv_aICovEasy;
    autoFC7DF420_var = -1;
    while (true) {
        autoFC7DF420_var = PlayerGroupNextPlayer(autoFC7DF420_g, autoFC7DF420_var);
        if (autoFC7DF420_var < 0) { break; }
        auto901103E6_player = autoFC7DF420_var;
        auto901103E6_state = lib4A1496D1_gv_townStateBuilding;
        auto901103E6_var = 0;
        for ( ; auto901103E6_var < c_townMax; auto901103E6_var += 1 ) {
            auto901103E6_statevar = AIGetTownState(auto901103E6_player,auto901103E6_var);
            if (auto901103E6_statevar >= auto901103E6_state) {
                if ((UnitCount("HuragokCovenant", autoFC7DF420_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoFC7DF420_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoFC7DF420_var, 7, auto901103E6_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyHuragok_Init () {
    lib4A1496D1_gt_CovenantEasyHuragok = TriggerCreate("lib4A1496D1_gt_CovenantEasyHuragok_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyHuragok, lib4A1496D1_gv_covenantTrainHuragok);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Huragok 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyHuragok2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAB119BD6_g;
    int autoAB119BD6_var;
    int autoA3F3C36F_player;
    int autoA3F3C36F_state;
    int autoA3F3C36F_var;
    int autoA3F3C36F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAB119BD6_g = lib4A1496D1_gv_aICovEasy;
    autoAB119BD6_var = -1;
    while (true) {
        autoAB119BD6_var = PlayerGroupNextPlayer(autoAB119BD6_g, autoAB119BD6_var);
        if (autoAB119BD6_var < 0) { break; }
        autoA3F3C36F_player = autoAB119BD6_var;
        autoA3F3C36F_state = lib4A1496D1_gv_townStateBuilding;
        autoA3F3C36F_var = 0;
        for ( ; autoA3F3C36F_var < c_townMax; autoA3F3C36F_var += 1 ) {
            autoA3F3C36F_statevar = AIGetTownState(autoA3F3C36F_player,autoA3F3C36F_var);
            if (autoA3F3C36F_statevar >= autoA3F3C36F_state) {
                if ((UnitCount("HuragokCovenant", autoAB119BD6_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoAB119BD6_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoAB119BD6_var, 7, autoA3F3C36F_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyHuragok2_Init () {
    lib4A1496D1_gt_CovenantEasyHuragok2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyHuragok2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyHuragok2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyHuragok2, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Brute
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyBrute_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto50CE30FA_g;
    int auto50CE30FA_var;
    int autoB74831BA_player;
    int autoB74831BA_state;
    int autoB74831BA_var;
    int autoB74831BA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto50CE30FA_g = lib4A1496D1_gv_aICovEasy;
    auto50CE30FA_var = -1;
    while (true) {
        auto50CE30FA_var = PlayerGroupNextPlayer(auto50CE30FA_g, auto50CE30FA_var);
        if (auto50CE30FA_var < 0) { break; }
        autoB74831BA_player = auto50CE30FA_var;
        autoB74831BA_state = lib4A1496D1_gv_townStateBuilding;
        autoB74831BA_var = 0;
        for ( ; autoB74831BA_var < c_townMax; autoB74831BA_var += 1 ) {
            autoB74831BA_statevar = AIGetTownState(autoB74831BA_player,autoB74831BA_var);
            if (autoB74831BA_statevar >= autoB74831BA_state) {
                AITrain(auto50CE30FA_var, 6, autoB74831BA_var, "BruteCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyBrute_Init () {
    lib4A1496D1_gt_CovenantEasyBrute = TriggerCreate("lib4A1496D1_gt_CovenantEasyBrute_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyBrute, lib4A1496D1_gv_covenantTrainBrute);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Brute 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyBrute2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEC09C072_g;
    int autoEC09C072_var;
    int auto8285CD00_player;
    int auto8285CD00_state;
    int auto8285CD00_var;
    int auto8285CD00_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEC09C072_g = lib4A1496D1_gv_aICovEasy;
    autoEC09C072_var = -1;
    while (true) {
        autoEC09C072_var = PlayerGroupNextPlayer(autoEC09C072_g, autoEC09C072_var);
        if (autoEC09C072_var < 0) { break; }
        auto8285CD00_player = autoEC09C072_var;
        auto8285CD00_state = lib4A1496D1_gv_townStateBuilding;
        auto8285CD00_var = 0;
        for ( ; auto8285CD00_var < c_townMax; auto8285CD00_var += 1 ) {
            auto8285CD00_statevar = AIGetTownState(auto8285CD00_player,auto8285CD00_var);
            if (auto8285CD00_statevar >= auto8285CD00_state) {
                AITrain(autoEC09C072_var, 6, auto8285CD00_var, "BruteCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyBrute2_Init () {
    lib4A1496D1_gt_CovenantEasyBrute2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyBrute2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyBrute2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyBrute2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Ghost
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyGhost_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF0C16607_g;
    int autoF0C16607_var;
    int auto6620E7BD_player;
    int auto6620E7BD_state;
    int auto6620E7BD_var;
    int auto6620E7BD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF0C16607_g = lib4A1496D1_gv_aICovEasy;
    autoF0C16607_var = -1;
    while (true) {
        autoF0C16607_var = PlayerGroupNextPlayer(autoF0C16607_g, autoF0C16607_var);
        if (autoF0C16607_var < 0) { break; }
        auto6620E7BD_player = autoF0C16607_var;
        auto6620E7BD_state = lib4A1496D1_gv_townStateBuilding;
        auto6620E7BD_var = 0;
        for ( ; auto6620E7BD_var < c_townMax; auto6620E7BD_var += 1 ) {
            auto6620E7BD_statevar = AIGetTownState(auto6620E7BD_player,auto6620E7BD_var);
            if (auto6620E7BD_statevar >= auto6620E7BD_state) {
                AITrain(autoF0C16607_var, 4, auto6620E7BD_var, "GhostCovenant", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyGhost_Init () {
    lib4A1496D1_gt_CovenantEasyGhost = TriggerCreate("lib4A1496D1_gt_CovenantEasyGhost_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyGhost, lib4A1496D1_gv_covenantTrainGhost);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Ghost 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyGhost2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBFF6B2AC_g;
    int autoBFF6B2AC_var;
    int auto03E24D48_player;
    int auto03E24D48_state;
    int auto03E24D48_var;
    int auto03E24D48_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBFF6B2AC_g = lib4A1496D1_gv_aICovEasy;
    autoBFF6B2AC_var = -1;
    while (true) {
        autoBFF6B2AC_var = PlayerGroupNextPlayer(autoBFF6B2AC_g, autoBFF6B2AC_var);
        if (autoBFF6B2AC_var < 0) { break; }
        auto03E24D48_player = autoBFF6B2AC_var;
        auto03E24D48_state = lib4A1496D1_gv_townStateBuilding;
        auto03E24D48_var = 0;
        for ( ; auto03E24D48_var < c_townMax; auto03E24D48_var += 1 ) {
            auto03E24D48_statevar = AIGetTownState(auto03E24D48_player,auto03E24D48_var);
            if (auto03E24D48_statevar >= auto03E24D48_state) {
                AITrain(autoBFF6B2AC_var, 4, auto03E24D48_var, "GhostCovenant", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyGhost2_Init () {
    lib4A1496D1_gt_CovenantEasyGhost2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyGhost2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGhost2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyGhost2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Grunt
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyGrunt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto219246C9_g;
    int auto219246C9_var;
    int auto9FE4D775_player;
    int auto9FE4D775_state;
    int auto9FE4D775_var;
    int auto9FE4D775_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto219246C9_g = lib4A1496D1_gv_aICovEasy;
    auto219246C9_var = -1;
    while (true) {
        auto219246C9_var = PlayerGroupNextPlayer(auto219246C9_g, auto219246C9_var);
        if (auto219246C9_var < 0) { break; }
        auto9FE4D775_player = auto219246C9_var;
        auto9FE4D775_state = lib4A1496D1_gv_townStateBuilding;
        auto9FE4D775_var = 0;
        for ( ; auto9FE4D775_var < c_townMax; auto9FE4D775_var += 1 ) {
            auto9FE4D775_statevar = AIGetTownState(auto9FE4D775_player,auto9FE4D775_var);
            if (auto9FE4D775_statevar >= auto9FE4D775_state) {
                AITrain(auto219246C9_var, 5, auto9FE4D775_var, "GruntCovenant", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyGrunt_Init () {
    lib4A1496D1_gt_CovenantEasyGrunt = TriggerCreate("lib4A1496D1_gt_CovenantEasyGrunt_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasyGrunt, lib4A1496D1_gv_covenantTrainGrunt);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Grunt 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasyGrunt2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto61F4BA5F_g;
    int auto61F4BA5F_var;
    int auto91039D07_player;
    int auto91039D07_state;
    int auto91039D07_var;
    int auto91039D07_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto61F4BA5F_g = lib4A1496D1_gv_aICovEasy;
    auto61F4BA5F_var = -1;
    while (true) {
        auto61F4BA5F_var = PlayerGroupNextPlayer(auto61F4BA5F_g, auto61F4BA5F_var);
        if (auto61F4BA5F_var < 0) { break; }
        auto91039D07_player = auto61F4BA5F_var;
        auto91039D07_state = lib4A1496D1_gv_townStateBuilding;
        auto91039D07_var = 0;
        for ( ; auto91039D07_var < c_townMax; auto91039D07_var += 1 ) {
            auto91039D07_statevar = AIGetTownState(auto91039D07_player,auto91039D07_var);
            if (auto91039D07_statevar >= auto91039D07_state) {
                AITrain(auto61F4BA5F_var, 5, auto91039D07_var, "GruntCovenant", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasyGrunt2_Init () {
    lib4A1496D1_gt_CovenantEasyGrunt2 = TriggerCreate("lib4A1496D1_gt_CovenantEasyGrunt2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasyGrunt2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasyGrunt2, 18.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Suicide Huragok
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasySuicideHuragok_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9B200A42_g;
    int auto9B200A42_var;
    int autoEAA5671E_player;
    int autoEAA5671E_state;
    int autoEAA5671E_var;
    int autoEAA5671E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9B200A42_g = lib4A1496D1_gv_aICovEasy;
    auto9B200A42_var = -1;
    while (true) {
        auto9B200A42_var = PlayerGroupNextPlayer(auto9B200A42_g, auto9B200A42_var);
        if (auto9B200A42_var < 0) { break; }
        autoEAA5671E_player = auto9B200A42_var;
        autoEAA5671E_state = lib4A1496D1_gv_townStateBuilding;
        autoEAA5671E_var = 0;
        for ( ; autoEAA5671E_var < c_townMax; autoEAA5671E_var += 1 ) {
            autoEAA5671E_statevar = AIGetTownState(autoEAA5671E_player,autoEAA5671E_var);
            if (autoEAA5671E_statevar >= autoEAA5671E_state) {
                AITrain(auto9B200A42_var, 3, autoEAA5671E_var, "SuicideHuragokCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasySuicideHuragok_Init () {
    lib4A1496D1_gt_CovenantEasySuicideHuragok = TriggerCreate("lib4A1496D1_gt_CovenantEasySuicideHuragok_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantEasySuicideHuragok, lib4A1496D1_gv_covenantTrainSuicideHuragok);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Easy Suicide Huragok 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantEasySuicideHuragok2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto54A1540C_g;
    int auto54A1540C_var;
    int auto07485215_player;
    int auto07485215_state;
    int auto07485215_var;
    int auto07485215_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto54A1540C_g = lib4A1496D1_gv_aICovEasy;
    auto54A1540C_var = -1;
    while (true) {
        auto54A1540C_var = PlayerGroupNextPlayer(auto54A1540C_g, auto54A1540C_var);
        if (auto54A1540C_var < 0) { break; }
        auto07485215_player = auto54A1540C_var;
        auto07485215_state = lib4A1496D1_gv_townStateBuilding;
        auto07485215_var = 0;
        for ( ; auto07485215_var < c_townMax; auto07485215_var += 1 ) {
            auto07485215_statevar = AIGetTownState(auto07485215_player,auto07485215_var);
            if (auto07485215_statevar >= auto07485215_state) {
                AITrain(auto54A1540C_var, 3, auto07485215_var, "SuicideHuragokCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantEasySuicideHuragok2_Init () {
    lib4A1496D1_gt_CovenantEasySuicideHuragok2 = TriggerCreate("lib4A1496D1_gt_CovenantEasySuicideHuragok2_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantEasySuicideHuragok2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantEasySuicideHuragok2, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV EASY EXPAND TIMER
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVEASYEXPANDTIMER_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bazinga;

    // Automatic Variable Declarations
    playergroup autoC43F94C7_g;
    int autoC43F94C7_var;
    int autoB8931BBC_player;
    int autoB8931BBC_state;
    int autoB8931BBC_var;
    int autoB8931BBC_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoC43F94C7_g = lib4A1496D1_gv_aICovEasy;
    autoC43F94C7_var = -1;
    while (true) {
        autoC43F94C7_var = PlayerGroupNextPlayer(autoC43F94C7_g, autoC43F94C7_var);
        if (autoC43F94C7_var < 0) { break; }
        autoB8931BBC_player = autoC43F94C7_var;
        autoB8931BBC_state = lib4A1496D1_gv_townStateBuilding;
        autoB8931BBC_var = 0;
        for ( ; autoB8931BBC_var < c_townMax; autoB8931BBC_var += 1 ) {
            autoB8931BBC_statevar = AIGetTownState(autoB8931BBC_player,autoB8931BBC_var);
            if (autoB8931BBC_statevar >= autoB8931BBC_state) {
                lv_bazinga = (lv_bazinga + UnitGroupCount(UnitGroup("CitadelCovenant", autoC43F94C7_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_bazinga < 4)) {
                    PlayerModifyPropertyInt(autoC43F94C7_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(autoC43F94C7_var, PlayerStartLocation(autoC43F94C7_var), "CitadelCovenant");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVEASYEXPANDTIMER_Init () {
    lib4A1496D1_gt_COVEASYEXPANDTIMER = TriggerCreate("lib4A1496D1_gt_COVEASYEXPANDTIMER_Func");
    TriggerEnable(lib4A1496D1_gt_COVEASYEXPANDTIMER, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVEASYEXPANDTIMER, 360.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV EASY Attack Timer
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVEASYAttackTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto05D4E5EB_g;
    int auto05D4E5EB_var;
    unitgroup auto462BEE7F_g;
    int auto462BEE7F_u;
    unit auto462BEE7F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto05D4E5EB_g = lib4A1496D1_gv_aICovEasy;
    auto05D4E5EB_var = -1;
    while (true) {
        auto05D4E5EB_var = PlayerGroupNextPlayer(auto05D4E5EB_g, auto05D4E5EB_var);
        if (auto05D4E5EB_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(auto05D4E5EB_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto462BEE7F_g = UnitGroup(null, auto05D4E5EB_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto462BEE7F_u = UnitGroupCount(auto462BEE7F_g, c_unitCountAll);
        for (;; auto462BEE7F_u -= 1) {
            auto462BEE7F_var = UnitGroupUnitFromEnd(auto462BEE7F_g, auto462BEE7F_u);
            if (auto462BEE7F_var == null) { break; }
            UnitIssueOrder(auto462BEE7F_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVEASYAttackTimer_Init () {
    lib4A1496D1_gt_COVEASYAttackTimer = TriggerCreate("lib4A1496D1_gt_COVEASYAttackTimer_Func");
    TriggerEnable(lib4A1496D1_gt_COVEASYAttackTimer, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVEASYAttackTimer, 300.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Warehouse 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateWarehouse4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7A08AF82_g;
    int auto7A08AF82_var;
    int auto712785E7_player;
    int auto712785E7_state;
    int auto712785E7_var;
    int auto712785E7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7A08AF82_g = lib4A1496D1_gv_aICovModerate;
    auto7A08AF82_var = -1;
    while (true) {
        auto7A08AF82_var = PlayerGroupNextPlayer(auto7A08AF82_g, auto7A08AF82_var);
        if (auto7A08AF82_var < 0) { break; }
        auto712785E7_player = auto7A08AF82_var;
        auto712785E7_state = lib4A1496D1_gv_townStateBuilding;
        auto712785E7_var = 0;
        for ( ; auto712785E7_var < c_townMax; auto712785E7_var += 1 ) {
            auto712785E7_statevar = AIGetTownState(auto712785E7_player,auto712785E7_var);
            if (auto712785E7_statevar >= auto712785E7_state) {
                if ((UnitCount("WarehouseCovenant", auto7A08AF82_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(auto7A08AF82_var, 1, auto712785E7_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateWarehouse4_Init () {
    lib4A1496D1_gt_CovenantModerateWarehouse4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateWarehouse4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateWarehouse4, lib4A1496D1_gv_covenantbuildWarehouse2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Warehouse 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateWarehouse3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5A3C154E_g;
    int auto5A3C154E_var;
    int auto93A35FED_player;
    int auto93A35FED_state;
    int auto93A35FED_var;
    int auto93A35FED_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5A3C154E_g = lib4A1496D1_gv_aICovModerate;
    auto5A3C154E_var = -1;
    while (true) {
        auto5A3C154E_var = PlayerGroupNextPlayer(auto5A3C154E_g, auto5A3C154E_var);
        if (auto5A3C154E_var < 0) { break; }
        auto93A35FED_player = auto5A3C154E_var;
        auto93A35FED_state = lib4A1496D1_gv_townStateBuilding;
        auto93A35FED_var = 0;
        for ( ; auto93A35FED_var < c_townMax; auto93A35FED_var += 1 ) {
            auto93A35FED_statevar = AIGetTownState(auto93A35FED_player,auto93A35FED_var);
            if (auto93A35FED_statevar >= auto93A35FED_state) {
                if ((UnitCount("WarehouseCovenant", auto5A3C154E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(auto5A3C154E_var, 1, auto93A35FED_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateWarehouse3_Init () {
    lib4A1496D1_gt_CovenantModerateWarehouse3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateWarehouse3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWarehouse3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateWarehouse3, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Infantry Hall 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateInfantryHall4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC237B86F_g;
    int autoC237B86F_var;
    int auto935BBF14_player;
    int auto935BBF14_state;
    int auto935BBF14_var;
    int auto935BBF14_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC237B86F_g = lib4A1496D1_gv_aICovModerate;
    autoC237B86F_var = -1;
    while (true) {
        autoC237B86F_var = PlayerGroupNextPlayer(autoC237B86F_g, autoC237B86F_var);
        if (autoC237B86F_var < 0) { break; }
        auto935BBF14_player = autoC237B86F_var;
        auto935BBF14_state = lib4A1496D1_gv_townStateBuilding;
        auto935BBF14_var = 0;
        for ( ; auto935BBF14_var < c_townMax; auto935BBF14_var += 1 ) {
            auto935BBF14_statevar = AIGetTownState(auto935BBF14_player,auto935BBF14_var);
            if (auto935BBF14_statevar >= auto935BBF14_state) {
                if ((UnitCount("InfantryHallCovenant", autoC237B86F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(autoC237B86F_var, 1, auto935BBF14_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateInfantryHall4_Init () {
    lib4A1496D1_gt_CovenantModerateInfantryHall4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateInfantryHall4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateInfantryHall4, lib4A1496D1_gv_covenantbuildbarrackstimer2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Infantry Hall 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateInfantryHall3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9FCA49F4_g;
    int auto9FCA49F4_var;
    int auto714E34BF_player;
    int auto714E34BF_state;
    int auto714E34BF_var;
    int auto714E34BF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9FCA49F4_g = lib4A1496D1_gv_aICovModerate;
    auto9FCA49F4_var = -1;
    while (true) {
        auto9FCA49F4_var = PlayerGroupNextPlayer(auto9FCA49F4_g, auto9FCA49F4_var);
        if (auto9FCA49F4_var < 0) { break; }
        auto714E34BF_player = auto9FCA49F4_var;
        auto714E34BF_state = lib4A1496D1_gv_townStateBuilding;
        auto714E34BF_var = 0;
        for ( ; auto714E34BF_var < c_townMax; auto714E34BF_var += 1 ) {
            auto714E34BF_statevar = AIGetTownState(auto714E34BF_player,auto714E34BF_var);
            if (auto714E34BF_statevar >= auto714E34BF_state) {
                if ((UnitCount("InfantryHallCovenant", auto9FCA49F4_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(auto9FCA49F4_var, 1, auto714E34BF_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateInfantryHall3_Init () {
    lib4A1496D1_gt_CovenantModerateInfantryHall3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateInfantryHall3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateInfantryHall3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateInfantryHall3, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Propolusion Vehicle Factory 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto43C2726E_g;
    int auto43C2726E_var;
    int auto03BAC423_player;
    int auto03BAC423_state;
    int auto03BAC423_var;
    int auto03BAC423_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto43C2726E_g = lib4A1496D1_gv_aICovModerate;
    auto43C2726E_var = -1;
    while (true) {
        auto43C2726E_var = PlayerGroupNextPlayer(auto43C2726E_g, auto43C2726E_var);
        if (auto43C2726E_var < 0) { break; }
        auto03BAC423_player = auto43C2726E_var;
        auto03BAC423_state = lib4A1496D1_gv_townStateBuilding;
        auto03BAC423_var = 0;
        for ( ; auto03BAC423_var < c_townMax; auto03BAC423_var += 1 ) {
            auto03BAC423_statevar = AIGetTownState(auto03BAC423_player,auto03BAC423_var);
            if (auto03BAC423_statevar >= auto03BAC423_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", auto43C2726E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto43C2726E_var, 0, auto03BAC423_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4_Init () {
    lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4 = TriggerCreate("lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4, lib4A1496D1_gv_covenantbuildfactory2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Propolusion Vehicle Factory 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto18E184FA_g;
    int auto18E184FA_var;
    int autoF416DB36_player;
    int autoF416DB36_state;
    int autoF416DB36_var;
    int autoF416DB36_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto18E184FA_g = lib4A1496D1_gv_aICovModerate;
    auto18E184FA_var = -1;
    while (true) {
        auto18E184FA_var = PlayerGroupNextPlayer(auto18E184FA_g, auto18E184FA_var);
        if (auto18E184FA_var < 0) { break; }
        autoF416DB36_player = auto18E184FA_var;
        autoF416DB36_state = lib4A1496D1_gv_townStateBuilding;
        autoF416DB36_var = 0;
        for ( ; autoF416DB36_var < c_townMax; autoF416DB36_var += 1 ) {
            autoF416DB36_statevar = AIGetTownState(autoF416DB36_player,autoF416DB36_var);
            if (autoF416DB36_statevar >= autoF416DB36_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", auto18E184FA_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto18E184FA_var, 0, autoF416DB36_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3_Init () {
    lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3 = TriggerCreate("lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Atmospheric Shipyard Production Facility 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC0508CB6_g;
    int autoC0508CB6_var;
    int autoA1A0AC9D_player;
    int autoA1A0AC9D_state;
    int autoA1A0AC9D_var;
    int autoA1A0AC9D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC0508CB6_g = lib4A1496D1_gv_aICovModerate;
    autoC0508CB6_var = -1;
    while (true) {
        autoC0508CB6_var = PlayerGroupNextPlayer(autoC0508CB6_g, autoC0508CB6_var);
        if (autoC0508CB6_var < 0) { break; }
        autoA1A0AC9D_player = autoC0508CB6_var;
        autoA1A0AC9D_state = lib4A1496D1_gv_townStateBuilding;
        autoA1A0AC9D_var = 0;
        for ( ; autoA1A0AC9D_var < c_townMax; autoA1A0AC9D_var += 1 ) {
            autoA1A0AC9D_statevar = AIGetTownState(autoA1A0AC9D_player,autoA1A0AC9D_var);
            if (autoA1A0AC9D_statevar >= autoA1A0AC9D_state) {
                if ((UnitCount("AtmosphericShipayrdProductionCenterCovenant", autoC0508CB6_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoC0508CB6_var, 0, autoA1A0AC9D_var, "AtmosphericShipayrdProductionCenterCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4_Init () {
    lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4, lib4A1496D1_gv_covenantbuildshipyard2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Atmospheric Shipyard Production Facility 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto883C0135_g;
    int auto883C0135_var;
    int autoB8204CDB_player;
    int autoB8204CDB_state;
    int autoB8204CDB_var;
    int autoB8204CDB_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto883C0135_g = lib4A1496D1_gv_aICovModerate;
    auto883C0135_var = -1;
    while (true) {
        auto883C0135_var = PlayerGroupNextPlayer(auto883C0135_g, auto883C0135_var);
        if (auto883C0135_var < 0) { break; }
        autoB8204CDB_player = auto883C0135_var;
        autoB8204CDB_state = lib4A1496D1_gv_townStateBuilding;
        autoB8204CDB_var = 0;
        for ( ; autoB8204CDB_var < c_townMax; autoB8204CDB_var += 1 ) {
            autoB8204CDB_statevar = AIGetTownState(autoB8204CDB_player,autoB8204CDB_var);
            if (autoB8204CDB_statevar >= autoB8204CDB_state) {
                if ((UnitCount("AtmosphericShipayrdProductionCenterCovenant", auto883C0135_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto883C0135_var, 0, autoB8204CDB_var, "AtmosphericShipayrdProductionCenterCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3_Init () {
    lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3, 75.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Chamber Of Reclimation 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateChamberOfReclimation4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto182E2145_g;
    int auto182E2145_var;
    int auto04F2B461_player;
    int auto04F2B461_state;
    int auto04F2B461_var;
    int auto04F2B461_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto182E2145_g = lib4A1496D1_gv_aICovModerate;
    auto182E2145_var = -1;
    while (true) {
        auto182E2145_var = PlayerGroupNextPlayer(auto182E2145_g, auto182E2145_var);
        if (auto182E2145_var < 0) { break; }
        auto04F2B461_player = auto182E2145_var;
        auto04F2B461_state = lib4A1496D1_gv_townStateBuilding;
        auto04F2B461_var = 0;
        for ( ; auto04F2B461_var < c_townMax; auto04F2B461_var += 1 ) {
            auto04F2B461_statevar = AIGetTownState(auto04F2B461_player,auto04F2B461_var);
            if (auto04F2B461_statevar >= auto04F2B461_state) {
                if ((UnitCount("ChamberofReclmation", auto182E2145_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto182E2145_var, 2, auto04F2B461_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateChamberOfReclimation4_Init () {
    lib4A1496D1_gt_CovenantModerateChamberOfReclimation4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateChamberOfReclimation4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateChamberOfReclimation4, lib4A1496D1_gv_covenantbuildChamberofReclamation2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Chamber Of Reclimation 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateChamberOfReclimation3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE2862CBF_g;
    int autoE2862CBF_var;
    int autoACAD70F2_player;
    int autoACAD70F2_state;
    int autoACAD70F2_var;
    int autoACAD70F2_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE2862CBF_g = lib4A1496D1_gv_aICovModerate;
    autoE2862CBF_var = -1;
    while (true) {
        autoE2862CBF_var = PlayerGroupNextPlayer(autoE2862CBF_g, autoE2862CBF_var);
        if (autoE2862CBF_var < 0) { break; }
        autoACAD70F2_player = autoE2862CBF_var;
        autoACAD70F2_state = lib4A1496D1_gv_townStateBuilding;
        autoACAD70F2_var = 0;
        for ( ; autoACAD70F2_var < c_townMax; autoACAD70F2_var += 1 ) {
            autoACAD70F2_statevar = AIGetTownState(autoACAD70F2_player,autoACAD70F2_var);
            if (autoACAD70F2_statevar >= autoACAD70F2_state) {
                if ((UnitCount("ChamberofReclmation", autoE2862CBF_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoE2862CBF_var, 2, autoACAD70F2_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateChamberOfReclimation3_Init () {
    lib4A1496D1_gt_CovenantModerateChamberOfReclimation3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateChamberOfReclimation3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateChamberOfReclimation3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateChamberOfReclimation3, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Temple 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateTemple4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA556E394_g;
    int autoA556E394_var;
    int autoE9ED61BD_player;
    int autoE9ED61BD_state;
    int autoE9ED61BD_var;
    int autoE9ED61BD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA556E394_g = lib4A1496D1_gv_aICovModerate;
    autoA556E394_var = -1;
    while (true) {
        autoA556E394_var = PlayerGroupNextPlayer(autoA556E394_g, autoA556E394_var);
        if (autoA556E394_var < 0) { break; }
        autoE9ED61BD_player = autoA556E394_var;
        autoE9ED61BD_state = lib4A1496D1_gv_townStateBuilding;
        autoE9ED61BD_var = 0;
        for ( ; autoE9ED61BD_var < c_townMax; autoE9ED61BD_var += 1 ) {
            autoE9ED61BD_statevar = AIGetTownState(autoE9ED61BD_player,autoE9ED61BD_var);
            if (autoE9ED61BD_statevar >= autoE9ED61BD_state) {
                if ((UnitCount("TempleCovenant", autoA556E394_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoA556E394_var, 2, autoE9ED61BD_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateTemple4_Init () {
    lib4A1496D1_gt_CovenantModerateTemple4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateTemple4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateTemple4, lib4A1496D1_gv_covenantbuildTemple2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Temple 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateTemple3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD91E6864_g;
    int autoD91E6864_var;
    int autoB638ABC3_player;
    int autoB638ABC3_state;
    int autoB638ABC3_var;
    int autoB638ABC3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD91E6864_g = lib4A1496D1_gv_aICovModerate;
    autoD91E6864_var = -1;
    while (true) {
        autoD91E6864_var = PlayerGroupNextPlayer(autoD91E6864_g, autoD91E6864_var);
        if (autoD91E6864_var < 0) { break; }
        autoB638ABC3_player = autoD91E6864_var;
        autoB638ABC3_state = lib4A1496D1_gv_townStateBuilding;
        autoB638ABC3_var = 0;
        for ( ; autoB638ABC3_var < c_townMax; autoB638ABC3_var += 1 ) {
            autoB638ABC3_statevar = AIGetTownState(autoB638ABC3_player,autoB638ABC3_var);
            if (autoB638ABC3_statevar >= autoB638ABC3_state) {
                if ((UnitCount("TempleCovenant", autoD91E6864_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoD91E6864_var, 2, autoB638ABC3_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateTemple3_Init () {
    lib4A1496D1_gt_CovenantModerateTemple3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateTemple3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateTemple3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateTemple3, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Mega Turret 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateMegaTurret6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto51E73BE0_g;
    int auto51E73BE0_var;
    int auto3F1FE520_player;
    int auto3F1FE520_state;
    int auto3F1FE520_var;
    int auto3F1FE520_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto51E73BE0_g = lib4A1496D1_gv_aICovModerate;
    auto51E73BE0_var = -1;
    while (true) {
        auto51E73BE0_var = PlayerGroupNextPlayer(auto51E73BE0_g, auto51E73BE0_var);
        if (auto51E73BE0_var < 0) { break; }
        auto3F1FE520_player = auto51E73BE0_var;
        auto3F1FE520_state = lib4A1496D1_gv_townStateBuilding;
        auto3F1FE520_var = 0;
        for ( ; auto3F1FE520_var < c_townMax; auto3F1FE520_var += 1 ) {
            auto3F1FE520_statevar = AIGetTownState(auto3F1FE520_player,auto3F1FE520_var);
            if (auto3F1FE520_statevar >= auto3F1FE520_state) {
                if ((UnitCount("MegaTurretRealCovenant", auto51E73BE0_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1)) {
                    AIBuild(auto51E73BE0_var, 0, auto3F1FE520_var, "MegaTurretRealCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateMegaTurret6_Init () {
    lib4A1496D1_gt_CovenantModerateMegaTurret6 = TriggerCreate("lib4A1496D1_gt_CovenantModerateMegaTurret6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateMegaTurret6, lib4A1496D1_gv_covenantbuildMegaTurret2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Mega Turret 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateMegaTurret5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto93174955_g;
    int auto93174955_var;
    int auto67B85178_player;
    int auto67B85178_state;
    int auto67B85178_var;
    int auto67B85178_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto93174955_g = lib4A1496D1_gv_aICovModerate;
    auto93174955_var = -1;
    while (true) {
        auto93174955_var = PlayerGroupNextPlayer(auto93174955_g, auto93174955_var);
        if (auto93174955_var < 0) { break; }
        auto67B85178_player = auto93174955_var;
        auto67B85178_state = lib4A1496D1_gv_townStateBuilding;
        auto67B85178_var = 0;
        for ( ; auto67B85178_var < c_townMax; auto67B85178_var += 1 ) {
            auto67B85178_statevar = AIGetTownState(auto67B85178_player,auto67B85178_var);
            if (auto67B85178_statevar >= auto67B85178_state) {
                if ((UnitCount("MegaTurretRealCovenant", auto93174955_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1)) {
                    AIBuild(auto93174955_var, 0, auto67B85178_var, "MegaTurretRealCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateMegaTurret5_Init () {
    lib4A1496D1_gt_CovenantModerateMegaTurret5 = TriggerCreate("lib4A1496D1_gt_CovenantModerateMegaTurret5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateMegaTurret5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateMegaTurret5, 80.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Huragok 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateHuragok4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto68C20A58_g;
    int auto68C20A58_var;
    int auto32FC62DA_player;
    int auto32FC62DA_state;
    int auto32FC62DA_var;
    int auto32FC62DA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto68C20A58_g = lib4A1496D1_gv_aICovModerate;
    auto68C20A58_var = -1;
    while (true) {
        auto68C20A58_var = PlayerGroupNextPlayer(auto68C20A58_g, auto68C20A58_var);
        if (auto68C20A58_var < 0) { break; }
        auto32FC62DA_player = auto68C20A58_var;
        auto32FC62DA_state = lib4A1496D1_gv_townStateBuilding;
        auto32FC62DA_var = 0;
        for ( ; auto32FC62DA_var < c_townMax; auto32FC62DA_var += 1 ) {
            auto32FC62DA_statevar = AIGetTownState(auto32FC62DA_player,auto32FC62DA_var);
            if (auto32FC62DA_statevar >= auto32FC62DA_state) {
                if ((UnitCount("HuragokCovenant", auto68C20A58_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(auto68C20A58_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(auto68C20A58_var, 8, auto32FC62DA_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateHuragok4_Init () {
    lib4A1496D1_gt_CovenantModerateHuragok4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateHuragok4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateHuragok4, lib4A1496D1_gv_covenantTrainHuragok2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Huragok 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateHuragok3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC84D6D1E_g;
    int autoC84D6D1E_var;
    int auto9CE4BCDA_player;
    int auto9CE4BCDA_state;
    int auto9CE4BCDA_var;
    int auto9CE4BCDA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC84D6D1E_g = lib4A1496D1_gv_aICovModerate;
    autoC84D6D1E_var = -1;
    while (true) {
        autoC84D6D1E_var = PlayerGroupNextPlayer(autoC84D6D1E_g, autoC84D6D1E_var);
        if (autoC84D6D1E_var < 0) { break; }
        auto9CE4BCDA_player = autoC84D6D1E_var;
        auto9CE4BCDA_state = lib4A1496D1_gv_townStateBuilding;
        auto9CE4BCDA_var = 0;
        for ( ; auto9CE4BCDA_var < c_townMax; auto9CE4BCDA_var += 1 ) {
            auto9CE4BCDA_statevar = AIGetTownState(auto9CE4BCDA_player,auto9CE4BCDA_var);
            if (auto9CE4BCDA_statevar >= auto9CE4BCDA_state) {
                if ((UnitCount("HuragokCovenant", autoC84D6D1E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoC84D6D1E_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoC84D6D1E_var, 8, auto9CE4BCDA_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateHuragok3_Init () {
    lib4A1496D1_gt_CovenantModerateHuragok3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateHuragok3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHuragok3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateHuragok3, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Brute 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBrute4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto815F451D_g;
    int auto815F451D_var;
    int auto3420A35E_player;
    int auto3420A35E_state;
    int auto3420A35E_var;
    int auto3420A35E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto815F451D_g = lib4A1496D1_gv_aICovModerate;
    auto815F451D_var = -1;
    while (true) {
        auto815F451D_var = PlayerGroupNextPlayer(auto815F451D_g, auto815F451D_var);
        if (auto815F451D_var < 0) { break; }
        auto3420A35E_player = auto815F451D_var;
        auto3420A35E_state = lib4A1496D1_gv_townStateBuilding;
        auto3420A35E_var = 0;
        for ( ; auto3420A35E_var < c_townMax; auto3420A35E_var += 1 ) {
            auto3420A35E_statevar = AIGetTownState(auto3420A35E_player,auto3420A35E_var);
            if (auto3420A35E_statevar >= auto3420A35E_state) {
                AITrain(auto815F451D_var, 7, auto3420A35E_var, "BruteCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBrute4_Init () {
    lib4A1496D1_gt_CovenantModerateBrute4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBrute4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateBrute4, lib4A1496D1_gv_covenantTrainBrute2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Brute 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBrute3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA75015F2_g;
    int autoA75015F2_var;
    int auto41CD752C_player;
    int auto41CD752C_state;
    int auto41CD752C_var;
    int auto41CD752C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA75015F2_g = lib4A1496D1_gv_aICovModerate;
    autoA75015F2_var = -1;
    while (true) {
        autoA75015F2_var = PlayerGroupNextPlayer(autoA75015F2_g, autoA75015F2_var);
        if (autoA75015F2_var < 0) { break; }
        auto41CD752C_player = autoA75015F2_var;
        auto41CD752C_state = lib4A1496D1_gv_townStateBuilding;
        auto41CD752C_var = 0;
        for ( ; auto41CD752C_var < c_townMax; auto41CD752C_var += 1 ) {
            auto41CD752C_statevar = AIGetTownState(auto41CD752C_player,auto41CD752C_var);
            if (auto41CD752C_statevar >= auto41CD752C_state) {
                AITrain(autoA75015F2_var, 7, auto41CD752C_var, "BruteCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBrute3_Init () {
    lib4A1496D1_gt_CovenantModerateBrute3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBrute3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBrute3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateBrute3, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Ghost 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateGhost4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA76C405A_g;
    int autoA76C405A_var;
    int auto17893BBD_player;
    int auto17893BBD_state;
    int auto17893BBD_var;
    int auto17893BBD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA76C405A_g = lib4A1496D1_gv_aICovModerate;
    autoA76C405A_var = -1;
    while (true) {
        autoA76C405A_var = PlayerGroupNextPlayer(autoA76C405A_g, autoA76C405A_var);
        if (autoA76C405A_var < 0) { break; }
        auto17893BBD_player = autoA76C405A_var;
        auto17893BBD_state = lib4A1496D1_gv_townStateBuilding;
        auto17893BBD_var = 0;
        for ( ; auto17893BBD_var < c_townMax; auto17893BBD_var += 1 ) {
            auto17893BBD_statevar = AIGetTownState(auto17893BBD_player,auto17893BBD_var);
            if (auto17893BBD_statevar >= auto17893BBD_state) {
                AITrain(autoA76C405A_var, 4, auto17893BBD_var, "GhostCovenant", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateGhost4_Init () {
    lib4A1496D1_gt_CovenantModerateGhost4 = TriggerCreate("lib4A1496D1_gt_CovenantModerateGhost4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateGhost4, lib4A1496D1_gv_covenantTrainGhost2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Ghost 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateGhost3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoDD8516E3_g;
    int autoDD8516E3_var;
    int auto90297318_player;
    int auto90297318_state;
    int auto90297318_var;
    int auto90297318_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDD8516E3_g = lib4A1496D1_gv_aICovModerate;
    autoDD8516E3_var = -1;
    while (true) {
        autoDD8516E3_var = PlayerGroupNextPlayer(autoDD8516E3_g, autoDD8516E3_var);
        if (autoDD8516E3_var < 0) { break; }
        auto90297318_player = autoDD8516E3_var;
        auto90297318_state = lib4A1496D1_gv_townStateBuilding;
        auto90297318_var = 0;
        for ( ; auto90297318_var < c_townMax; auto90297318_var += 1 ) {
            auto90297318_statevar = AIGetTownState(auto90297318_player,auto90297318_var);
            if (auto90297318_statevar >= auto90297318_state) {
                AITrain(autoDD8516E3_var, 4, auto90297318_var, "GhostCovenant", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateGhost3_Init () {
    lib4A1496D1_gt_CovenantModerateGhost3 = TriggerCreate("lib4A1496D1_gt_CovenantModerateGhost3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateGhost3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateGhost3, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Banshee 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBanshee6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto16C396FD_g;
    int auto16C396FD_var;
    int autoA60E2C5C_player;
    int autoA60E2C5C_state;
    int autoA60E2C5C_var;
    int autoA60E2C5C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto16C396FD_g = lib4A1496D1_gv_aICovModerate;
    auto16C396FD_var = -1;
    while (true) {
        auto16C396FD_var = PlayerGroupNextPlayer(auto16C396FD_g, auto16C396FD_var);
        if (auto16C396FD_var < 0) { break; }
        autoA60E2C5C_player = auto16C396FD_var;
        autoA60E2C5C_state = lib4A1496D1_gv_townStateBuilding;
        autoA60E2C5C_var = 0;
        for ( ; autoA60E2C5C_var < c_townMax; autoA60E2C5C_var += 1 ) {
            autoA60E2C5C_statevar = AIGetTownState(autoA60E2C5C_player,autoA60E2C5C_var);
            if (autoA60E2C5C_statevar >= autoA60E2C5C_state) {
                AITrain(auto16C396FD_var, 5, autoA60E2C5C_var, "BansheeCovenant", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBanshee6_Init () {
    lib4A1496D1_gt_CovenantModerateBanshee6 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBanshee6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateBanshee6, lib4A1496D1_gv_covenantTrainBanshee2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Banshee 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBanshee5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC65546A2_g;
    int autoC65546A2_var;
    int autoD8BAFE6A_player;
    int autoD8BAFE6A_state;
    int autoD8BAFE6A_var;
    int autoD8BAFE6A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC65546A2_g = lib4A1496D1_gv_aICovModerate;
    autoC65546A2_var = -1;
    while (true) {
        autoC65546A2_var = PlayerGroupNextPlayer(autoC65546A2_g, autoC65546A2_var);
        if (autoC65546A2_var < 0) { break; }
        autoD8BAFE6A_player = autoC65546A2_var;
        autoD8BAFE6A_state = lib4A1496D1_gv_townStateBuilding;
        autoD8BAFE6A_var = 0;
        for ( ; autoD8BAFE6A_var < c_townMax; autoD8BAFE6A_var += 1 ) {
            autoD8BAFE6A_statevar = AIGetTownState(autoD8BAFE6A_player,autoD8BAFE6A_var);
            if (autoD8BAFE6A_statevar >= autoD8BAFE6A_state) {
                AITrain(autoC65546A2_var, 5, autoD8BAFE6A_var, "BansheeCovenant", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBanshee5_Init () {
    lib4A1496D1_gt_CovenantModerateBanshee5 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBanshee5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBanshee5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateBanshee5, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Brute Chieftan 8
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBruteChieftan8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto46EED77A_g;
    int auto46EED77A_var;
    int auto99B87254_player;
    int auto99B87254_state;
    int auto99B87254_var;
    int auto99B87254_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto46EED77A_g = lib4A1496D1_gv_aICovModerate;
    auto46EED77A_var = -1;
    while (true) {
        auto46EED77A_var = PlayerGroupNextPlayer(auto46EED77A_g, auto46EED77A_var);
        if (auto46EED77A_var < 0) { break; }
        auto99B87254_player = auto46EED77A_var;
        auto99B87254_state = lib4A1496D1_gv_townStateBuilding;
        auto99B87254_var = 0;
        for ( ; auto99B87254_var < c_townMax; auto99B87254_var += 1 ) {
            auto99B87254_statevar = AIGetTownState(auto99B87254_player,auto99B87254_var);
            if (auto99B87254_statevar >= auto99B87254_state) {
                AITrain(auto46EED77A_var, 6, auto99B87254_var, "BruteChieftianCov", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBruteChieftan7, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBruteChieftan8, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBruteChieftan8_Init () {
    lib4A1496D1_gt_CovenantModerateBruteChieftan8 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBruteChieftan8_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBruteChieftan8, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateBruteChieftan8, lib4A1496D1_gv_covenantTrainBruteChieftan2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Brute Chieftan 7
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateBruteChieftan7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE570A39A_g;
    int autoE570A39A_var;
    int auto83EACB25_player;
    int auto83EACB25_state;
    int auto83EACB25_var;
    int auto83EACB25_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE570A39A_g = lib4A1496D1_gv_aICovModerate;
    autoE570A39A_var = -1;
    while (true) {
        autoE570A39A_var = PlayerGroupNextPlayer(autoE570A39A_g, autoE570A39A_var);
        if (autoE570A39A_var < 0) { break; }
        auto83EACB25_player = autoE570A39A_var;
        auto83EACB25_state = lib4A1496D1_gv_townStateBuilding;
        auto83EACB25_var = 0;
        for ( ; auto83EACB25_var < c_townMax; auto83EACB25_var += 1 ) {
            auto83EACB25_statevar = AIGetTownState(auto83EACB25_player,auto83EACB25_var);
            if (auto83EACB25_statevar >= auto83EACB25_state) {
                AITrain(autoE570A39A_var, 6, auto83EACB25_var, "BruteChieftianCov", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateBruteChieftan7_Init () {
    lib4A1496D1_gt_CovenantModerateBruteChieftan7 = TriggerCreate("lib4A1496D1_gt_CovenantModerateBruteChieftan7_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateBruteChieftan7, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateBruteChieftan7, 33.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Elite 10
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateElite10_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto848D9E25_g;
    int auto848D9E25_var;
    int auto2458336A_player;
    int auto2458336A_state;
    int auto2458336A_var;
    int auto2458336A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto848D9E25_g = lib4A1496D1_gv_aICovModerate;
    auto848D9E25_var = -1;
    while (true) {
        auto848D9E25_var = PlayerGroupNextPlayer(auto848D9E25_g, auto848D9E25_var);
        if (auto848D9E25_var < 0) { break; }
        auto2458336A_player = auto848D9E25_var;
        auto2458336A_state = lib4A1496D1_gv_townStateBuilding;
        auto2458336A_var = 0;
        for ( ; auto2458336A_var < c_townMax; auto2458336A_var += 1 ) {
            auto2458336A_statevar = AIGetTownState(auto2458336A_player,auto2458336A_var);
            if (auto2458336A_statevar >= auto2458336A_state) {
                AITrain(auto848D9E25_var, 6, auto2458336A_var, "EliteCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateElite9, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateElite10, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateElite10_Init () {
    lib4A1496D1_gt_CovenantModerateElite10 = TriggerCreate("lib4A1496D1_gt_CovenantModerateElite10_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateElite10, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateElite10, lib4A1496D1_gv_covenantTrainElite2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Elite 9
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateElite9_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBEEC50BD_g;
    int autoBEEC50BD_var;
    int auto30D9D5FF_player;
    int auto30D9D5FF_state;
    int auto30D9D5FF_var;
    int auto30D9D5FF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBEEC50BD_g = lib4A1496D1_gv_aICovModerate;
    autoBEEC50BD_var = -1;
    while (true) {
        autoBEEC50BD_var = PlayerGroupNextPlayer(autoBEEC50BD_g, autoBEEC50BD_var);
        if (autoBEEC50BD_var < 0) { break; }
        auto30D9D5FF_player = autoBEEC50BD_var;
        auto30D9D5FF_state = lib4A1496D1_gv_townStateBuilding;
        auto30D9D5FF_var = 0;
        for ( ; auto30D9D5FF_var < c_townMax; auto30D9D5FF_var += 1 ) {
            auto30D9D5FF_statevar = AIGetTownState(auto30D9D5FF_player,auto30D9D5FF_var);
            if (auto30D9D5FF_statevar >= auto30D9D5FF_state) {
                AITrain(autoBEEC50BD_var, 6, auto30D9D5FF_var, "EliteCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateElite9_Init () {
    lib4A1496D1_gt_CovenantModerateElite9 = TriggerCreate("lib4A1496D1_gt_CovenantModerateElite9_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateElite9, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateElite9, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Hunter 12
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateHunter12_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto168C4D09_g;
    int auto168C4D09_var;
    int auto868CDC39_player;
    int auto868CDC39_state;
    int auto868CDC39_var;
    int auto868CDC39_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto168C4D09_g = lib4A1496D1_gv_aICovModerate;
    auto168C4D09_var = -1;
    while (true) {
        auto168C4D09_var = PlayerGroupNextPlayer(auto168C4D09_g, auto168C4D09_var);
        if (auto168C4D09_var < 0) { break; }
        auto868CDC39_player = auto168C4D09_var;
        auto868CDC39_state = lib4A1496D1_gv_townStateBuilding;
        auto868CDC39_var = 0;
        for ( ; auto868CDC39_var < c_townMax; auto868CDC39_var += 1 ) {
            auto868CDC39_statevar = AIGetTownState(auto868CDC39_player,auto868CDC39_var);
            if (auto868CDC39_statevar >= auto868CDC39_state) {
                AITrain(auto168C4D09_var, 6, auto868CDC39_var, "HunterCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter11, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter12, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateHunter12_Init () {
    lib4A1496D1_gt_CovenantModerateHunter12 = TriggerCreate("lib4A1496D1_gt_CovenantModerateHunter12_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter12, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateHunter12, lib4A1496D1_gv_covenantTrainHunter2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Hunter 11
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateHunter11_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoD6CF5B87_g;
    int autoD6CF5B87_var;
    int auto42C2A6C5_player;
    int auto42C2A6C5_state;
    int auto42C2A6C5_var;
    int auto42C2A6C5_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoD6CF5B87_g = lib4A1496D1_gv_aICovModerate;
    autoD6CF5B87_var = -1;
    while (true) {
        autoD6CF5B87_var = PlayerGroupNextPlayer(autoD6CF5B87_g, autoD6CF5B87_var);
        if (autoD6CF5B87_var < 0) { break; }
        auto42C2A6C5_player = autoD6CF5B87_var;
        auto42C2A6C5_state = lib4A1496D1_gv_townStateBuilding;
        auto42C2A6C5_var = 0;
        for ( ; auto42C2A6C5_var < c_townMax; auto42C2A6C5_var += 1 ) {
            auto42C2A6C5_statevar = AIGetTownState(auto42C2A6C5_player,auto42C2A6C5_var);
            if (auto42C2A6C5_statevar >= auto42C2A6C5_state) {
                AITrain(autoD6CF5B87_var, 6, auto42C2A6C5_var, "HunterCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateHunter11_Init () {
    lib4A1496D1_gt_CovenantModerateHunter11 = TriggerCreate("lib4A1496D1_gt_CovenantModerateHunter11_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateHunter11, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateHunter11, 42.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Locust 14
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateLocust14_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCCC86C03_g;
    int autoCCC86C03_var;
    int auto9EAC6E24_player;
    int auto9EAC6E24_state;
    int auto9EAC6E24_var;
    int auto9EAC6E24_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCCC86C03_g = lib4A1496D1_gv_aICovModerate;
    autoCCC86C03_var = -1;
    while (true) {
        autoCCC86C03_var = PlayerGroupNextPlayer(autoCCC86C03_g, autoCCC86C03_var);
        if (autoCCC86C03_var < 0) { break; }
        auto9EAC6E24_player = autoCCC86C03_var;
        auto9EAC6E24_state = lib4A1496D1_gv_townStateBuilding;
        auto9EAC6E24_var = 0;
        for ( ; auto9EAC6E24_var < c_townMax; auto9EAC6E24_var += 1 ) {
            auto9EAC6E24_statevar = AIGetTownState(auto9EAC6E24_player,auto9EAC6E24_var);
            if (auto9EAC6E24_statevar >= auto9EAC6E24_state) {
                AITrain(autoCCC86C03_var, 4, auto9EAC6E24_var, "LocustCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust13, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust14, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateLocust14_Init () {
    lib4A1496D1_gt_CovenantModerateLocust14 = TriggerCreate("lib4A1496D1_gt_CovenantModerateLocust14_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust14, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateLocust14, lib4A1496D1_gv_covenantTrainLocust2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Locust 13
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateLocust13_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5F13AB97_g;
    int auto5F13AB97_var;
    int autoCCCACDA7_player;
    int autoCCCACDA7_state;
    int autoCCCACDA7_var;
    int autoCCCACDA7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5F13AB97_g = lib4A1496D1_gv_aICovModerate;
    auto5F13AB97_var = -1;
    while (true) {
        auto5F13AB97_var = PlayerGroupNextPlayer(auto5F13AB97_g, auto5F13AB97_var);
        if (auto5F13AB97_var < 0) { break; }
        autoCCCACDA7_player = auto5F13AB97_var;
        autoCCCACDA7_state = lib4A1496D1_gv_townStateBuilding;
        autoCCCACDA7_var = 0;
        for ( ; autoCCCACDA7_var < c_townMax; autoCCCACDA7_var += 1 ) {
            autoCCCACDA7_statevar = AIGetTownState(autoCCCACDA7_player,autoCCCACDA7_var);
            if (autoCCCACDA7_statevar >= autoCCCACDA7_state) {
                AITrain(auto5F13AB97_var, 4, autoCCCACDA7_var, "LocustCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateLocust13_Init () {
    lib4A1496D1_gt_CovenantModerateLocust13 = TriggerCreate("lib4A1496D1_gt_CovenantModerateLocust13_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateLocust13, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateLocust13, 48.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Sniper Jackal 18
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateSniperJackal18_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto3ECB60DB_g;
    int auto3ECB60DB_var;
    int autoA78FBF33_player;
    int autoA78FBF33_state;
    int autoA78FBF33_var;
    int autoA78FBF33_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto3ECB60DB_g = lib4A1496D1_gv_aICovModerate;
    auto3ECB60DB_var = -1;
    while (true) {
        auto3ECB60DB_var = PlayerGroupNextPlayer(auto3ECB60DB_g, auto3ECB60DB_var);
        if (auto3ECB60DB_var < 0) { break; }
        autoA78FBF33_player = auto3ECB60DB_var;
        autoA78FBF33_state = lib4A1496D1_gv_townStateBuilding;
        autoA78FBF33_var = 0;
        for ( ; autoA78FBF33_var < c_townMax; autoA78FBF33_var += 1 ) {
            autoA78FBF33_statevar = AIGetTownState(autoA78FBF33_player,autoA78FBF33_var);
            if (autoA78FBF33_statevar >= autoA78FBF33_state) {
                AITrain(auto3ECB60DB_var, 6, autoA78FBF33_var, "SniperJackalCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal17, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal18, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateSniperJackal18_Init () {
    lib4A1496D1_gt_CovenantModerateSniperJackal18 = TriggerCreate("lib4A1496D1_gt_CovenantModerateSniperJackal18_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal18, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateSniperJackal18, lib4A1496D1_gv_covenantTrainSniperJackal2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Sniper Jackal 17
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateSniperJackal17_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5522E558_g;
    int auto5522E558_var;
    int autoAA9C6F84_player;
    int autoAA9C6F84_state;
    int autoAA9C6F84_var;
    int autoAA9C6F84_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5522E558_g = lib4A1496D1_gv_aICovModerate;
    auto5522E558_var = -1;
    while (true) {
        auto5522E558_var = PlayerGroupNextPlayer(auto5522E558_g, auto5522E558_var);
        if (auto5522E558_var < 0) { break; }
        autoAA9C6F84_player = auto5522E558_var;
        autoAA9C6F84_state = lib4A1496D1_gv_townStateBuilding;
        autoAA9C6F84_var = 0;
        for ( ; autoAA9C6F84_var < c_townMax; autoAA9C6F84_var += 1 ) {
            autoAA9C6F84_statevar = AIGetTownState(autoAA9C6F84_player,autoAA9C6F84_var);
            if (autoAA9C6F84_statevar >= autoAA9C6F84_state) {
                AITrain(auto5522E558_var, 6, autoAA9C6F84_var, "SniperJackalCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateSniperJackal17_Init () {
    lib4A1496D1_gt_CovenantModerateSniperJackal17 = TriggerCreate("lib4A1496D1_gt_CovenantModerateSniperJackal17_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateSniperJackal17, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateSniperJackal17, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Wraith 20
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateWraith20_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBAF57ECD_g;
    int autoBAF57ECD_var;
    int autoE0B5E6C9_player;
    int autoE0B5E6C9_state;
    int autoE0B5E6C9_var;
    int autoE0B5E6C9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBAF57ECD_g = lib4A1496D1_gv_aICovModerate;
    autoBAF57ECD_var = -1;
    while (true) {
        autoBAF57ECD_var = PlayerGroupNextPlayer(autoBAF57ECD_g, autoBAF57ECD_var);
        if (autoBAF57ECD_var < 0) { break; }
        autoE0B5E6C9_player = autoBAF57ECD_var;
        autoE0B5E6C9_state = lib4A1496D1_gv_townStateBuilding;
        autoE0B5E6C9_var = 0;
        for ( ; autoE0B5E6C9_var < c_townMax; autoE0B5E6C9_var += 1 ) {
            autoE0B5E6C9_statevar = AIGetTownState(autoE0B5E6C9_player,autoE0B5E6C9_var);
            if (autoE0B5E6C9_statevar >= autoE0B5E6C9_state) {
                AITrain(autoBAF57ECD_var, 4, autoE0B5E6C9_var, "WraithCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith19, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith20, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateWraith20_Init () {
    lib4A1496D1_gt_CovenantModerateWraith20 = TriggerCreate("lib4A1496D1_gt_CovenantModerateWraith20_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith20, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateWraith20, lib4A1496D1_gv_covenantTrainWraith2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Wraith 19
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateWraith19_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC7F55B37_g;
    int autoC7F55B37_var;
    int auto25454DCE_player;
    int auto25454DCE_state;
    int auto25454DCE_var;
    int auto25454DCE_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC7F55B37_g = lib4A1496D1_gv_aICovModerate;
    autoC7F55B37_var = -1;
    while (true) {
        autoC7F55B37_var = PlayerGroupNextPlayer(autoC7F55B37_g, autoC7F55B37_var);
        if (autoC7F55B37_var < 0) { break; }
        auto25454DCE_player = autoC7F55B37_var;
        auto25454DCE_state = lib4A1496D1_gv_townStateBuilding;
        auto25454DCE_var = 0;
        for ( ; auto25454DCE_var < c_townMax; auto25454DCE_var += 1 ) {
            auto25454DCE_statevar = AIGetTownState(auto25454DCE_player,auto25454DCE_var);
            if (auto25454DCE_statevar >= auto25454DCE_state) {
                AITrain(autoC7F55B37_var, 4, auto25454DCE_var, "WraithCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateWraith19_Init () {
    lib4A1496D1_gt_CovenantModerateWraith19 = TriggerCreate("lib4A1496D1_gt_CovenantModerateWraith19_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateWraith19, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateWraith19, 55.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Anti-Air Wraith 22
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateAntiAirWraith22_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto927B54D6_g;
    int auto927B54D6_var;
    int autoAA32E401_player;
    int autoAA32E401_state;
    int autoAA32E401_var;
    int autoAA32E401_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto927B54D6_g = lib4A1496D1_gv_aICovModerate;
    auto927B54D6_var = -1;
    while (true) {
        auto927B54D6_var = PlayerGroupNextPlayer(auto927B54D6_g, auto927B54D6_var);
        if (auto927B54D6_var < 0) { break; }
        autoAA32E401_player = auto927B54D6_var;
        autoAA32E401_state = lib4A1496D1_gv_townStateBuilding;
        autoAA32E401_var = 0;
        for ( ; autoAA32E401_var < c_townMax; autoAA32E401_var += 1 ) {
            autoAA32E401_statevar = AIGetTownState(autoAA32E401_player,autoAA32E401_var);
            if (autoAA32E401_statevar >= autoAA32E401_state) {
                AITrain(auto927B54D6_var, 4, autoAA32E401_var, "AntiAirWraith", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith21, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateAntiAirWraith22_Init () {
    lib4A1496D1_gt_CovenantModerateAntiAirWraith22 = TriggerCreate("lib4A1496D1_gt_CovenantModerateAntiAirWraith22_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantModerateAntiAirWraith22, lib4A1496D1_gv_covenantTrainAntiAirWraith2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Moderate Anti-Air Wraith 21
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantModerateAntiAirWraith21_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1F35F86D_g;
    int auto1F35F86D_var;
    int autoA6DDE3DF_player;
    int autoA6DDE3DF_state;
    int autoA6DDE3DF_var;
    int autoA6DDE3DF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1F35F86D_g = lib4A1496D1_gv_aICovModerate;
    auto1F35F86D_var = -1;
    while (true) {
        auto1F35F86D_var = PlayerGroupNextPlayer(auto1F35F86D_g, auto1F35F86D_var);
        if (auto1F35F86D_var < 0) { break; }
        autoA6DDE3DF_player = auto1F35F86D_var;
        autoA6DDE3DF_state = lib4A1496D1_gv_townStateBuilding;
        autoA6DDE3DF_var = 0;
        for ( ; autoA6DDE3DF_var < c_townMax; autoA6DDE3DF_var += 1 ) {
            autoA6DDE3DF_statevar = AIGetTownState(autoA6DDE3DF_player,autoA6DDE3DF_var);
            if (autoA6DDE3DF_statevar >= autoA6DDE3DF_state) {
                AITrain(auto1F35F86D_var, 4, autoA6DDE3DF_var, "AntiAirWraith", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantModerateAntiAirWraith21_Init () {
    lib4A1496D1_gt_CovenantModerateAntiAirWraith21 = TriggerCreate("lib4A1496D1_gt_CovenantModerateAntiAirWraith21_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantModerateAntiAirWraith21, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantModerateAntiAirWraith21, 60.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV MODERATE EXPAND TIMER 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVMODERATEEXPANDTIMER2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bazinga2;

    // Automatic Variable Declarations
    playergroup autoE0462526_g;
    int autoE0462526_var;
    int auto0D52AD95_player;
    int auto0D52AD95_state;
    int auto0D52AD95_var;
    int auto0D52AD95_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoE0462526_g = lib4A1496D1_gv_aICovModerate;
    autoE0462526_var = -1;
    while (true) {
        autoE0462526_var = PlayerGroupNextPlayer(autoE0462526_g, autoE0462526_var);
        if (autoE0462526_var < 0) { break; }
        auto0D52AD95_player = autoE0462526_var;
        auto0D52AD95_state = lib4A1496D1_gv_townStateBuilding;
        auto0D52AD95_var = 0;
        for ( ; auto0D52AD95_var < c_townMax; auto0D52AD95_var += 1 ) {
            auto0D52AD95_statevar = AIGetTownState(auto0D52AD95_player,auto0D52AD95_var);
            if (auto0D52AD95_statevar >= auto0D52AD95_state) {
                lv_bazinga2 = (lv_bazinga2 + UnitGroupCount(UnitGroup("CitadelCovenant", autoE0462526_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_bazinga2 < 6)) {
                    PlayerModifyPropertyInt(autoE0462526_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(autoE0462526_var, PlayerStartLocation(autoE0462526_var), "CitadelCovenant");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVMODERATEEXPANDTIMER2_Init () {
    lib4A1496D1_gt_COVMODERATEEXPANDTIMER2 = TriggerCreate("lib4A1496D1_gt_COVMODERATEEXPANDTIMER2_Func");
    TriggerEnable(lib4A1496D1_gt_COVMODERATEEXPANDTIMER2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVMODERATEEXPANDTIMER2, 300.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV MODERATE Attack Timer 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVMODERATEAttackTimer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8D3C5B32_g;
    int auto8D3C5B32_var;
    unitgroup auto01D44AF8_g;
    int auto01D44AF8_u;
    unit auto01D44AF8_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8D3C5B32_g = lib4A1496D1_gv_aICovModerate;
    auto8D3C5B32_var = -1;
    while (true) {
        auto8D3C5B32_var = PlayerGroupNextPlayer(auto8D3C5B32_g, auto8D3C5B32_var);
        if (auto8D3C5B32_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(auto8D3C5B32_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto01D44AF8_g = UnitGroup(null, auto8D3C5B32_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto01D44AF8_u = UnitGroupCount(auto01D44AF8_g, c_unitCountAll);
        for (;; auto01D44AF8_u -= 1) {
            auto01D44AF8_var = UnitGroupUnitFromEnd(auto01D44AF8_g, auto01D44AF8_u);
            if (auto01D44AF8_var == null) { break; }
            UnitIssueOrder(auto01D44AF8_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVMODERATEAttackTimer2_Init () {
    lib4A1496D1_gt_COVMODERATEAttackTimer2 = TriggerCreate("lib4A1496D1_gt_COVMODERATEAttackTimer2_Func");
    TriggerEnable(lib4A1496D1_gt_COVMODERATEAttackTimer2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVMODERATEAttackTimer2, 360.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Warehouse 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardWarehouse6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB924466F_g;
    int autoB924466F_var;
    int autoA094D58F_player;
    int autoA094D58F_state;
    int autoA094D58F_var;
    int autoA094D58F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB924466F_g = lib4A1496D1_gv_aICovHard;
    autoB924466F_var = -1;
    while (true) {
        autoB924466F_var = PlayerGroupNextPlayer(autoB924466F_g, autoB924466F_var);
        if (autoB924466F_var < 0) { break; }
        autoA094D58F_player = autoB924466F_var;
        autoA094D58F_state = lib4A1496D1_gv_townStateBuilding;
        autoA094D58F_var = 0;
        for ( ; autoA094D58F_var < c_townMax; autoA094D58F_var += 1 ) {
            autoA094D58F_statevar = AIGetTownState(autoA094D58F_player,autoA094D58F_var);
            if (autoA094D58F_statevar >= autoA094D58F_state) {
                if ((UnitCount("WarehouseCovenant", autoB924466F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(autoB924466F_var, 1, autoA094D58F_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardWarehouse6_Init () {
    lib4A1496D1_gt_CovenantHardWarehouse6 = TriggerCreate("lib4A1496D1_gt_CovenantHardWarehouse6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardWarehouse6, lib4A1496D1_gv_covenantbuildWarehouse3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Warehouse 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardWarehouse5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoDAB70B1B_g;
    int autoDAB70B1B_var;
    int auto87BF669F_player;
    int auto87BF669F_state;
    int auto87BF669F_var;
    int auto87BF669F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDAB70B1B_g = lib4A1496D1_gv_aICovHard;
    autoDAB70B1B_var = -1;
    while (true) {
        autoDAB70B1B_var = PlayerGroupNextPlayer(autoDAB70B1B_g, autoDAB70B1B_var);
        if (autoDAB70B1B_var < 0) { break; }
        auto87BF669F_player = autoDAB70B1B_var;
        auto87BF669F_state = lib4A1496D1_gv_townStateBuilding;
        auto87BF669F_var = 0;
        for ( ; auto87BF669F_var < c_townMax; auto87BF669F_var += 1 ) {
            auto87BF669F_statevar = AIGetTownState(auto87BF669F_player,auto87BF669F_var);
            if (auto87BF669F_statevar >= auto87BF669F_state) {
                if ((UnitCount("WarehouseCovenant", autoDAB70B1B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 16)) {
                    AIBuild(autoDAB70B1B_var, 1, auto87BF669F_var, "WarehouseCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardWarehouse5_Init () {
    lib4A1496D1_gt_CovenantHardWarehouse5 = TriggerCreate("lib4A1496D1_gt_CovenantHardWarehouse5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardWarehouse5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardWarehouse5, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Infantry Hall 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardInfantryHall6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBE0C612F_g;
    int autoBE0C612F_var;
    int auto1A14F948_player;
    int auto1A14F948_state;
    int auto1A14F948_var;
    int auto1A14F948_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBE0C612F_g = lib4A1496D1_gv_aICovHard;
    autoBE0C612F_var = -1;
    while (true) {
        autoBE0C612F_var = PlayerGroupNextPlayer(autoBE0C612F_g, autoBE0C612F_var);
        if (autoBE0C612F_var < 0) { break; }
        auto1A14F948_player = autoBE0C612F_var;
        auto1A14F948_state = lib4A1496D1_gv_townStateBuilding;
        auto1A14F948_var = 0;
        for ( ; auto1A14F948_var < c_townMax; auto1A14F948_var += 1 ) {
            auto1A14F948_statevar = AIGetTownState(auto1A14F948_player,auto1A14F948_var);
            if (auto1A14F948_statevar >= auto1A14F948_state) {
                if ((UnitCount("InfantryHallCovenant", autoBE0C612F_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(autoBE0C612F_var, 0, auto1A14F948_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardInfantryHall6_Init () {
    lib4A1496D1_gt_CovenantHardInfantryHall6 = TriggerCreate("lib4A1496D1_gt_CovenantHardInfantryHall6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardInfantryHall6, lib4A1496D1_gv_covenantbuildbarrackstimer3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Infantry Hall 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardInfantryHall5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto955B84A8_g;
    int auto955B84A8_var;
    int auto8FFCB001_player;
    int auto8FFCB001_state;
    int auto8FFCB001_var;
    int auto8FFCB001_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto955B84A8_g = lib4A1496D1_gv_aICovHard;
    auto955B84A8_var = -1;
    while (true) {
        auto955B84A8_var = PlayerGroupNextPlayer(auto955B84A8_g, auto955B84A8_var);
        if (auto955B84A8_var < 0) { break; }
        auto8FFCB001_player = auto955B84A8_var;
        auto8FFCB001_state = lib4A1496D1_gv_townStateBuilding;
        auto8FFCB001_var = 0;
        for ( ; auto8FFCB001_var < c_townMax; auto8FFCB001_var += 1 ) {
            auto8FFCB001_statevar = AIGetTownState(auto8FFCB001_player,auto8FFCB001_var);
            if (auto8FFCB001_statevar >= auto8FFCB001_state) {
                if ((UnitCount("InfantryHallCovenant", auto955B84A8_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(auto955B84A8_var, 0, auto8FFCB001_var, "InfantryHallCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardInfantryHall5_Init () {
    lib4A1496D1_gt_CovenantHardInfantryHall5 = TriggerCreate("lib4A1496D1_gt_CovenantHardInfantryHall5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardInfantryHall5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardInfantryHall5, 35.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Propolusion Vehicle Factory 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB86E235D_g;
    int autoB86E235D_var;
    int autoB110799A_player;
    int autoB110799A_state;
    int autoB110799A_var;
    int autoB110799A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB86E235D_g = lib4A1496D1_gv_aICovHard;
    autoB86E235D_var = -1;
    while (true) {
        autoB86E235D_var = PlayerGroupNextPlayer(autoB86E235D_g, autoB86E235D_var);
        if (autoB86E235D_var < 0) { break; }
        autoB110799A_player = autoB86E235D_var;
        autoB110799A_state = lib4A1496D1_gv_townStateBuilding;
        autoB110799A_var = 0;
        for ( ; autoB110799A_var < c_townMax; autoB110799A_var += 1 ) {
            autoB110799A_statevar = AIGetTownState(autoB110799A_player,autoB110799A_var);
            if (autoB110799A_statevar >= autoB110799A_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", autoB86E235D_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoB86E235D_var, 1, autoB110799A_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6_Init () {
    lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6 = TriggerCreate("lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6, lib4A1496D1_gv_covenantbuildfactory3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Propolusion Vehicle Factory 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7C523987_g;
    int auto7C523987_var;
    int autoB85E444A_player;
    int autoB85E444A_state;
    int autoB85E444A_var;
    int autoB85E444A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7C523987_g = lib4A1496D1_gv_aICovHard;
    auto7C523987_var = -1;
    while (true) {
        auto7C523987_var = PlayerGroupNextPlayer(auto7C523987_g, auto7C523987_var);
        if (auto7C523987_var < 0) { break; }
        autoB85E444A_player = auto7C523987_var;
        autoB85E444A_state = lib4A1496D1_gv_townStateBuilding;
        autoB85E444A_var = 0;
        for ( ; autoB85E444A_var < c_townMax; autoB85E444A_var += 1 ) {
            autoB85E444A_statevar = AIGetTownState(autoB85E444A_player,autoB85E444A_var);
            if (autoB85E444A_statevar >= autoB85E444A_state) {
                if ((UnitCount("PropulsionVehicleFactoryCovenant", auto7C523987_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto7C523987_var, 1, autoB85E444A_var, "PropulsionVehicleFactoryCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5_Init () {
    lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5 = TriggerCreate("lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Atmospheric Shipyard Production Facility 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1283154B_g;
    int auto1283154B_var;
    int auto75587C40_player;
    int auto75587C40_state;
    int auto75587C40_var;
    int auto75587C40_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1283154B_g = lib4A1496D1_gv_aICovHard;
    auto1283154B_var = -1;
    while (true) {
        auto1283154B_var = PlayerGroupNextPlayer(auto1283154B_g, auto1283154B_var);
        if (auto1283154B_var < 0) { break; }
        auto75587C40_player = auto1283154B_var;
        auto75587C40_state = lib4A1496D1_gv_townStateBuilding;
        auto75587C40_var = 0;
        for ( ; auto75587C40_var < c_townMax; auto75587C40_var += 1 ) {
            auto75587C40_statevar = AIGetTownState(auto75587C40_player,auto75587C40_var);
            if (auto75587C40_statevar >= auto75587C40_state) {
                if ((UnitCount("AtmosphericShipayrdProductionCenterCovenant", auto1283154B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto1283154B_var, 1, auto75587C40_var, "AtmosphericShipayrdProductionCenterCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6_Init () {
    lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6 = TriggerCreate("lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6, lib4A1496D1_gv_covenantbuildshipyard3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Atmospheric Shipyard Production Facility 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto07EE7427_g;
    int auto07EE7427_var;
    int auto053B1EA3_player;
    int auto053B1EA3_state;
    int auto053B1EA3_var;
    int auto053B1EA3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto07EE7427_g = lib4A1496D1_gv_aICovHard;
    auto07EE7427_var = -1;
    while (true) {
        auto07EE7427_var = PlayerGroupNextPlayer(auto07EE7427_g, auto07EE7427_var);
        if (auto07EE7427_var < 0) { break; }
        auto053B1EA3_player = auto07EE7427_var;
        auto053B1EA3_state = lib4A1496D1_gv_townStateBuilding;
        auto053B1EA3_var = 0;
        for ( ; auto053B1EA3_var < c_townMax; auto053B1EA3_var += 1 ) {
            auto053B1EA3_statevar = AIGetTownState(auto053B1EA3_player,auto053B1EA3_var);
            if (auto053B1EA3_statevar >= auto053B1EA3_state) {
                if ((UnitCount("AtmosphericShipayrdProductionCenterCovenant", auto07EE7427_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto07EE7427_var, 1, auto053B1EA3_var, "AtmosphericShipayrdProductionCenterCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5_Init () {
    lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5 = TriggerCreate("lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5, 75.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Chamber Of Reclimation 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardChamberOfReclimation6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto02486224_g;
    int auto02486224_var;
    int autoB159B395_player;
    int autoB159B395_state;
    int autoB159B395_var;
    int autoB159B395_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto02486224_g = lib4A1496D1_gv_aICovHard;
    auto02486224_var = -1;
    while (true) {
        auto02486224_var = PlayerGroupNextPlayer(auto02486224_g, auto02486224_var);
        if (auto02486224_var < 0) { break; }
        autoB159B395_player = auto02486224_var;
        autoB159B395_state = lib4A1496D1_gv_townStateBuilding;
        autoB159B395_var = 0;
        for ( ; autoB159B395_var < c_townMax; autoB159B395_var += 1 ) {
            autoB159B395_statevar = AIGetTownState(autoB159B395_player,autoB159B395_var);
            if (autoB159B395_statevar >= autoB159B395_state) {
                if ((UnitCount("ChamberofReclmation", auto02486224_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto02486224_var, 2, autoB159B395_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardChamberOfReclimation6_Init () {
    lib4A1496D1_gt_CovenantHardChamberOfReclimation6 = TriggerCreate("lib4A1496D1_gt_CovenantHardChamberOfReclimation6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardChamberOfReclimation6, lib4A1496D1_gv_covenantbuildChamberofReclamation3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Chamber Of Reclimation 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardChamberOfReclimation5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6345F7F9_g;
    int auto6345F7F9_var;
    int auto3A0225F1_player;
    int auto3A0225F1_state;
    int auto3A0225F1_var;
    int auto3A0225F1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6345F7F9_g = lib4A1496D1_gv_aICovHard;
    auto6345F7F9_var = -1;
    while (true) {
        auto6345F7F9_var = PlayerGroupNextPlayer(auto6345F7F9_g, auto6345F7F9_var);
        if (auto6345F7F9_var < 0) { break; }
        auto3A0225F1_player = auto6345F7F9_var;
        auto3A0225F1_state = lib4A1496D1_gv_townStateBuilding;
        auto3A0225F1_var = 0;
        for ( ; auto3A0225F1_var < c_townMax; auto3A0225F1_var += 1 ) {
            auto3A0225F1_statevar = AIGetTownState(auto3A0225F1_player,auto3A0225F1_var);
            if (auto3A0225F1_statevar >= auto3A0225F1_state) {
                if ((UnitCount("ChamberofReclmation", auto6345F7F9_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto6345F7F9_var, 2, auto3A0225F1_var, "ChamberofReclmation", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardChamberOfReclimation5_Init () {
    lib4A1496D1_gt_CovenantHardChamberOfReclimation5 = TriggerCreate("lib4A1496D1_gt_CovenantHardChamberOfReclimation5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardChamberOfReclimation5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardChamberOfReclimation5, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Temple 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardTemple6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto005922E8_g;
    int auto005922E8_var;
    int auto7021D3B0_player;
    int auto7021D3B0_state;
    int auto7021D3B0_var;
    int auto7021D3B0_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto005922E8_g = lib4A1496D1_gv_aICovHard;
    auto005922E8_var = -1;
    while (true) {
        auto005922E8_var = PlayerGroupNextPlayer(auto005922E8_g, auto005922E8_var);
        if (auto005922E8_var < 0) { break; }
        auto7021D3B0_player = auto005922E8_var;
        auto7021D3B0_state = lib4A1496D1_gv_townStateBuilding;
        auto7021D3B0_var = 0;
        for ( ; auto7021D3B0_var < c_townMax; auto7021D3B0_var += 1 ) {
            auto7021D3B0_statevar = AIGetTownState(auto7021D3B0_player,auto7021D3B0_var);
            if (auto7021D3B0_statevar >= auto7021D3B0_state) {
                if ((UnitCount("TempleCovenant", auto005922E8_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto005922E8_var, 2, auto7021D3B0_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardTemple5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardTemple6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardTemple6_Init () {
    lib4A1496D1_gt_CovenantHardTemple6 = TriggerCreate("lib4A1496D1_gt_CovenantHardTemple6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardTemple6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardTemple6, lib4A1496D1_gv_covenantbuildTemple3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Temple 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardTemple5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto26BA7C71_g;
    int auto26BA7C71_var;
    int autoEB2D8BE9_player;
    int autoEB2D8BE9_state;
    int autoEB2D8BE9_var;
    int autoEB2D8BE9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto26BA7C71_g = lib4A1496D1_gv_aICovHard;
    auto26BA7C71_var = -1;
    while (true) {
        auto26BA7C71_var = PlayerGroupNextPlayer(auto26BA7C71_g, auto26BA7C71_var);
        if (auto26BA7C71_var < 0) { break; }
        autoEB2D8BE9_player = auto26BA7C71_var;
        autoEB2D8BE9_state = lib4A1496D1_gv_townStateBuilding;
        autoEB2D8BE9_var = 0;
        for ( ; autoEB2D8BE9_var < c_townMax; autoEB2D8BE9_var += 1 ) {
            autoEB2D8BE9_statevar = AIGetTownState(autoEB2D8BE9_player,autoEB2D8BE9_var);
            if (autoEB2D8BE9_statevar >= autoEB2D8BE9_state) {
                if ((UnitCount("TempleCovenant", auto26BA7C71_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto26BA7C71_var, 2, autoEB2D8BE9_var, "TempleCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardTemple5_Init () {
    lib4A1496D1_gt_CovenantHardTemple5 = TriggerCreate("lib4A1496D1_gt_CovenantHardTemple5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardTemple5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardTemple5, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Mega Turret 8
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardMegaTurret8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto09447763_g;
    int auto09447763_var;
    int auto8CE1E60D_player;
    int auto8CE1E60D_state;
    int auto8CE1E60D_var;
    int auto8CE1E60D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto09447763_g = lib4A1496D1_gv_aICovHard;
    auto09447763_var = -1;
    while (true) {
        auto09447763_var = PlayerGroupNextPlayer(auto09447763_g, auto09447763_var);
        if (auto09447763_var < 0) { break; }
        auto8CE1E60D_player = auto09447763_var;
        auto8CE1E60D_state = lib4A1496D1_gv_townStateBuilding;
        auto8CE1E60D_var = 0;
        for ( ; auto8CE1E60D_var < c_townMax; auto8CE1E60D_var += 1 ) {
            auto8CE1E60D_statevar = AIGetTownState(auto8CE1E60D_player,auto8CE1E60D_var);
            if (auto8CE1E60D_statevar >= auto8CE1E60D_state) {
                if ((UnitCount("MegaTurretRealCovenant", auto09447763_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1)) {
                    AIBuild(auto09447763_var, 1, auto8CE1E60D_var, "MegaTurretRealCovenant", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret7, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret8, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardMegaTurret8_Init () {
    lib4A1496D1_gt_CovenantHardMegaTurret8 = TriggerCreate("lib4A1496D1_gt_CovenantHardMegaTurret8_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret8, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardMegaTurret8, lib4A1496D1_gv_covenantbuildMegaTurret3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Mega Turret 7
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardMegaTurret7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto901021D9_g;
    int auto901021D9_var;
    int autoA5FA9A78_player;
    int autoA5FA9A78_state;
    int autoA5FA9A78_var;
    int autoA5FA9A78_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto901021D9_g = lib4A1496D1_gv_aICovHard;
    auto901021D9_var = -1;
    while (true) {
        auto901021D9_var = PlayerGroupNextPlayer(auto901021D9_g, auto901021D9_var);
        if (auto901021D9_var < 0) { break; }
        autoA5FA9A78_player = auto901021D9_var;
        autoA5FA9A78_state = lib4A1496D1_gv_townStateBuilding;
        autoA5FA9A78_var = 0;
        for ( ; autoA5FA9A78_var < c_townMax; autoA5FA9A78_var += 1 ) {
            autoA5FA9A78_statevar = AIGetTownState(autoA5FA9A78_player,autoA5FA9A78_var);
            if (autoA5FA9A78_statevar >= autoA5FA9A78_state) {
                if ((UnitCount("MegaTurretRealCovenant", auto901021D9_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1)) {
                    AIBuild(auto901021D9_var, 1, autoA5FA9A78_var, "MegaTurretRealCovenant", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardMegaTurret7_Init () {
    lib4A1496D1_gt_CovenantHardMegaTurret7 = TriggerCreate("lib4A1496D1_gt_CovenantHardMegaTurret7_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardMegaTurret7, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardMegaTurret7, 80.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Huragok 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardHuragok6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB08BCE94_g;
    int autoB08BCE94_var;
    int auto814EA16C_player;
    int auto814EA16C_state;
    int auto814EA16C_var;
    int auto814EA16C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB08BCE94_g = lib4A1496D1_gv_aICovHard;
    autoB08BCE94_var = -1;
    while (true) {
        autoB08BCE94_var = PlayerGroupNextPlayer(autoB08BCE94_g, autoB08BCE94_var);
        if (autoB08BCE94_var < 0) { break; }
        auto814EA16C_player = autoB08BCE94_var;
        auto814EA16C_state = lib4A1496D1_gv_townStateBuilding;
        auto814EA16C_var = 0;
        for ( ; auto814EA16C_var < c_townMax; auto814EA16C_var += 1 ) {
            auto814EA16C_statevar = AIGetTownState(auto814EA16C_player,auto814EA16C_var);
            if (auto814EA16C_statevar >= auto814EA16C_state) {
                if ((UnitCount("HuragokCovenant", autoB08BCE94_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(autoB08BCE94_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(autoB08BCE94_var, 7, auto814EA16C_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardHuragok6_Init () {
    lib4A1496D1_gt_CovenantHardHuragok6 = TriggerCreate("lib4A1496D1_gt_CovenantHardHuragok6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardHuragok6, lib4A1496D1_gv_covenantTrainHuragok3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Huragok 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardHuragok5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9DADAE75_g;
    int auto9DADAE75_var;
    int auto00FC47E6_player;
    int auto00FC47E6_state;
    int auto00FC47E6_var;
    int auto00FC47E6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9DADAE75_g = lib4A1496D1_gv_aICovHard;
    auto9DADAE75_var = -1;
    while (true) {
        auto9DADAE75_var = PlayerGroupNextPlayer(auto9DADAE75_g, auto9DADAE75_var);
        if (auto9DADAE75_var < 0) { break; }
        auto00FC47E6_player = auto9DADAE75_var;
        auto00FC47E6_state = lib4A1496D1_gv_townStateBuilding;
        auto00FC47E6_var = 0;
        for ( ; auto00FC47E6_var < c_townMax; auto00FC47E6_var += 1 ) {
            auto00FC47E6_statevar = AIGetTownState(auto00FC47E6_player,auto00FC47E6_var);
            if (auto00FC47E6_statevar >= auto00FC47E6_state) {
                if ((UnitCount("HuragokCovenant", auto9DADAE75_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 24)) {
                    PlayerModifyPropertyInt(auto9DADAE75_var, c_playerPropMinerals, c_playerPropOperAdd, 50);
                    AITrain(auto9DADAE75_var, 7, auto00FC47E6_var, "HuragokCovenant", 1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardHuragok5_Init () {
    lib4A1496D1_gt_CovenantHardHuragok5 = TriggerCreate("lib4A1496D1_gt_CovenantHardHuragok5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardHuragok5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardHuragok5, 12.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Brute 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardBrute6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0D89F0EA_g;
    int auto0D89F0EA_var;
    int autoFD67735D_player;
    int autoFD67735D_state;
    int autoFD67735D_var;
    int autoFD67735D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0D89F0EA_g = lib4A1496D1_gv_aICovHard;
    auto0D89F0EA_var = -1;
    while (true) {
        auto0D89F0EA_var = PlayerGroupNextPlayer(auto0D89F0EA_g, auto0D89F0EA_var);
        if (auto0D89F0EA_var < 0) { break; }
        autoFD67735D_player = auto0D89F0EA_var;
        autoFD67735D_state = lib4A1496D1_gv_townStateBuilding;
        autoFD67735D_var = 0;
        for ( ; autoFD67735D_var < c_townMax; autoFD67735D_var += 1 ) {
            autoFD67735D_statevar = AIGetTownState(autoFD67735D_player,autoFD67735D_var);
            if (autoFD67735D_statevar >= autoFD67735D_state) {
                AITrain(auto0D89F0EA_var, 3, autoFD67735D_var, "BruteCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardBrute5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardBrute6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardBrute6_Init () {
    lib4A1496D1_gt_CovenantHardBrute6 = TriggerCreate("lib4A1496D1_gt_CovenantHardBrute6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardBrute6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardBrute6, lib4A1496D1_gv_covenantTrainBrute3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Brute 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardBrute5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE3C81FA2_g;
    int autoE3C81FA2_var;
    int autoD6592173_player;
    int autoD6592173_state;
    int autoD6592173_var;
    int autoD6592173_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE3C81FA2_g = lib4A1496D1_gv_aICovHard;
    autoE3C81FA2_var = -1;
    while (true) {
        autoE3C81FA2_var = PlayerGroupNextPlayer(autoE3C81FA2_g, autoE3C81FA2_var);
        if (autoE3C81FA2_var < 0) { break; }
        autoD6592173_player = autoE3C81FA2_var;
        autoD6592173_state = lib4A1496D1_gv_townStateBuilding;
        autoD6592173_var = 0;
        for ( ; autoD6592173_var < c_townMax; autoD6592173_var += 1 ) {
            autoD6592173_statevar = AIGetTownState(autoD6592173_player,autoD6592173_var);
            if (autoD6592173_statevar >= autoD6592173_state) {
                AITrain(autoE3C81FA2_var, 3, autoD6592173_var, "BruteCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardBrute5_Init () {
    lib4A1496D1_gt_CovenantHardBrute5 = TriggerCreate("lib4A1496D1_gt_CovenantHardBrute5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardBrute5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardBrute5, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Banshee 8
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardBanshee8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE9725764_g;
    int autoE9725764_var;
    int autoB687EB92_player;
    int autoB687EB92_state;
    int autoB687EB92_var;
    int autoB687EB92_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE9725764_g = lib4A1496D1_gv_aICovHard;
    autoE9725764_var = -1;
    while (true) {
        autoE9725764_var = PlayerGroupNextPlayer(autoE9725764_g, autoE9725764_var);
        if (autoE9725764_var < 0) { break; }
        autoB687EB92_player = autoE9725764_var;
        autoB687EB92_state = lib4A1496D1_gv_townStateBuilding;
        autoB687EB92_var = 0;
        for ( ; autoB687EB92_var < c_townMax; autoB687EB92_var += 1 ) {
            autoB687EB92_statevar = AIGetTownState(autoB687EB92_player,autoB687EB92_var);
            if (autoB687EB92_statevar >= autoB687EB92_state) {
                AITrain(autoE9725764_var, 4, autoB687EB92_var, "BansheeCovenant", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee7, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee8, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardBanshee8_Init () {
    lib4A1496D1_gt_CovenantHardBanshee8 = TriggerCreate("lib4A1496D1_gt_CovenantHardBanshee8_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee8, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardBanshee8, lib4A1496D1_gv_covenantTrainBanshee3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Banshee 7
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardBanshee7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto561DFB58_g;
    int auto561DFB58_var;
    int auto295CC551_player;
    int auto295CC551_state;
    int auto295CC551_var;
    int auto295CC551_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto561DFB58_g = lib4A1496D1_gv_aICovHard;
    auto561DFB58_var = -1;
    while (true) {
        auto561DFB58_var = PlayerGroupNextPlayer(auto561DFB58_g, auto561DFB58_var);
        if (auto561DFB58_var < 0) { break; }
        auto295CC551_player = auto561DFB58_var;
        auto295CC551_state = lib4A1496D1_gv_townStateBuilding;
        auto295CC551_var = 0;
        for ( ; auto295CC551_var < c_townMax; auto295CC551_var += 1 ) {
            auto295CC551_statevar = AIGetTownState(auto295CC551_player,auto295CC551_var);
            if (auto295CC551_statevar >= auto295CC551_state) {
                AITrain(auto561DFB58_var, 4, auto295CC551_var, "BansheeCovenant", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardBanshee7_Init () {
    lib4A1496D1_gt_CovenantHardBanshee7 = TriggerCreate("lib4A1496D1_gt_CovenantHardBanshee7_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardBanshee7, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardBanshee7, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Locust 16
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardLocust16_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoADC9F331_g;
    int autoADC9F331_var;
    int autoDC1C5EA6_player;
    int autoDC1C5EA6_state;
    int autoDC1C5EA6_var;
    int autoDC1C5EA6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoADC9F331_g = lib4A1496D1_gv_aICovHard;
    autoADC9F331_var = -1;
    while (true) {
        autoADC9F331_var = PlayerGroupNextPlayer(autoADC9F331_g, autoADC9F331_var);
        if (autoADC9F331_var < 0) { break; }
        autoDC1C5EA6_player = autoADC9F331_var;
        autoDC1C5EA6_state = lib4A1496D1_gv_townStateBuilding;
        autoDC1C5EA6_var = 0;
        for ( ; autoDC1C5EA6_var < c_townMax; autoDC1C5EA6_var += 1 ) {
            autoDC1C5EA6_statevar = AIGetTownState(autoDC1C5EA6_player,autoDC1C5EA6_var);
            if (autoDC1C5EA6_statevar >= autoDC1C5EA6_state) {
                AITrain(autoADC9F331_var, 5, autoDC1C5EA6_var, "LocustCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardLocust15, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardLocust16, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardLocust16_Init () {
    lib4A1496D1_gt_CovenantHardLocust16 = TriggerCreate("lib4A1496D1_gt_CovenantHardLocust16_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardLocust16, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardLocust16, lib4A1496D1_gv_covenantTrainLocust3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Locust 15
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardLocust15_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8181B311_g;
    int auto8181B311_var;
    int auto9B81DCA3_player;
    int auto9B81DCA3_state;
    int auto9B81DCA3_var;
    int auto9B81DCA3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8181B311_g = lib4A1496D1_gv_aICovHard;
    auto8181B311_var = -1;
    while (true) {
        auto8181B311_var = PlayerGroupNextPlayer(auto8181B311_g, auto8181B311_var);
        if (auto8181B311_var < 0) { break; }
        auto9B81DCA3_player = auto8181B311_var;
        auto9B81DCA3_state = lib4A1496D1_gv_townStateBuilding;
        auto9B81DCA3_var = 0;
        for ( ; auto9B81DCA3_var < c_townMax; auto9B81DCA3_var += 1 ) {
            auto9B81DCA3_statevar = AIGetTownState(auto9B81DCA3_player,auto9B81DCA3_var);
            if (auto9B81DCA3_statevar >= auto9B81DCA3_state) {
                AITrain(auto8181B311_var, 5, auto9B81DCA3_var, "LocustCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardLocust15_Init () {
    lib4A1496D1_gt_CovenantHardLocust15 = TriggerCreate("lib4A1496D1_gt_CovenantHardLocust15_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardLocust15, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardLocust15, 48.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Wraith 22
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardWraith22_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEB1B38A4_g;
    int autoEB1B38A4_var;
    int autoBB38B2F6_player;
    int autoBB38B2F6_state;
    int autoBB38B2F6_var;
    int autoBB38B2F6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEB1B38A4_g = lib4A1496D1_gv_aICovHard;
    autoEB1B38A4_var = -1;
    while (true) {
        autoEB1B38A4_var = PlayerGroupNextPlayer(autoEB1B38A4_g, autoEB1B38A4_var);
        if (autoEB1B38A4_var < 0) { break; }
        autoBB38B2F6_player = autoEB1B38A4_var;
        autoBB38B2F6_state = lib4A1496D1_gv_townStateBuilding;
        autoBB38B2F6_var = 0;
        for ( ; autoBB38B2F6_var < c_townMax; autoBB38B2F6_var += 1 ) {
            autoBB38B2F6_statevar = AIGetTownState(autoBB38B2F6_player,autoBB38B2F6_var);
            if (autoBB38B2F6_statevar >= autoBB38B2F6_state) {
                AITrain(autoEB1B38A4_var, 5, autoBB38B2F6_var, "WraithCovenant", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardWraith21, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardWraith22, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardWraith22_Init () {
    lib4A1496D1_gt_CovenantHardWraith22 = TriggerCreate("lib4A1496D1_gt_CovenantHardWraith22_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardWraith22, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardWraith22, lib4A1496D1_gv_covenantTrainWraith3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Wraith 21
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardWraith21_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto45489338_g;
    int auto45489338_var;
    int autoA00197E7_player;
    int autoA00197E7_state;
    int autoA00197E7_var;
    int autoA00197E7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto45489338_g = lib4A1496D1_gv_aICovHard;
    auto45489338_var = -1;
    while (true) {
        auto45489338_var = PlayerGroupNextPlayer(auto45489338_g, auto45489338_var);
        if (auto45489338_var < 0) { break; }
        autoA00197E7_player = auto45489338_var;
        autoA00197E7_state = lib4A1496D1_gv_townStateBuilding;
        autoA00197E7_var = 0;
        for ( ; autoA00197E7_var < c_townMax; autoA00197E7_var += 1 ) {
            autoA00197E7_statevar = AIGetTownState(autoA00197E7_player,autoA00197E7_var);
            if (autoA00197E7_statevar >= autoA00197E7_state) {
                AITrain(auto45489338_var, 5, autoA00197E7_var, "WraithCovenant", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardWraith21_Init () {
    lib4A1496D1_gt_CovenantHardWraith21 = TriggerCreate("lib4A1496D1_gt_CovenantHardWraith21_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardWraith21, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardWraith21, 55.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Anti-Air Wraith 24
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardAntiAirWraith24_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto93E57977_g;
    int auto93E57977_var;
    int autoC92DAD67_player;
    int autoC92DAD67_state;
    int autoC92DAD67_var;
    int autoC92DAD67_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto93E57977_g = lib4A1496D1_gv_aICovHard;
    auto93E57977_var = -1;
    while (true) {
        auto93E57977_var = PlayerGroupNextPlayer(auto93E57977_g, auto93E57977_var);
        if (auto93E57977_var < 0) { break; }
        autoC92DAD67_player = auto93E57977_var;
        autoC92DAD67_state = lib4A1496D1_gv_townStateBuilding;
        autoC92DAD67_var = 0;
        for ( ; autoC92DAD67_var < c_townMax; autoC92DAD67_var += 1 ) {
            autoC92DAD67_statevar = AIGetTownState(autoC92DAD67_player,autoC92DAD67_var);
            if (autoC92DAD67_statevar >= autoC92DAD67_state) {
                AITrain(auto93E57977_var, 5, autoC92DAD67_var, "AntiAirWraith", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith23, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith24, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardAntiAirWraith24_Init () {
    lib4A1496D1_gt_CovenantHardAntiAirWraith24 = TriggerCreate("lib4A1496D1_gt_CovenantHardAntiAirWraith24_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith24, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardAntiAirWraith24, lib4A1496D1_gv_covenantTrainAntiAirWraith3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Anti-Air Wraith 23
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardAntiAirWraith23_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto171D8ED2_g;
    int auto171D8ED2_var;
    int auto0654D056_player;
    int auto0654D056_state;
    int auto0654D056_var;
    int auto0654D056_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto171D8ED2_g = lib4A1496D1_gv_aICovHard;
    auto171D8ED2_var = -1;
    while (true) {
        auto171D8ED2_var = PlayerGroupNextPlayer(auto171D8ED2_g, auto171D8ED2_var);
        if (auto171D8ED2_var < 0) { break; }
        auto0654D056_player = auto171D8ED2_var;
        auto0654D056_state = lib4A1496D1_gv_townStateBuilding;
        auto0654D056_var = 0;
        for ( ; auto0654D056_var < c_townMax; auto0654D056_var += 1 ) {
            auto0654D056_statevar = AIGetTownState(auto0654D056_player,auto0654D056_var);
            if (auto0654D056_statevar >= auto0654D056_state) {
                AITrain(auto171D8ED2_var, 5, auto0654D056_var, "AntiAirWraith", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardAntiAirWraith23_Init () {
    lib4A1496D1_gt_CovenantHardAntiAirWraith23 = TriggerCreate("lib4A1496D1_gt_CovenantHardAntiAirWraith23_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardAntiAirWraith23, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardAntiAirWraith23, 60.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard CAS-Class Carrier 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardCASClassCarrier4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB77E0FB0_g;
    int autoB77E0FB0_var;
    int auto8EFAED4E_player;
    int auto8EFAED4E_state;
    int auto8EFAED4E_var;
    int auto8EFAED4E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB77E0FB0_g = lib4A1496D1_gv_aICovHard;
    autoB77E0FB0_var = -1;
    while (true) {
        autoB77E0FB0_var = PlayerGroupNextPlayer(autoB77E0FB0_g, autoB77E0FB0_var);
        if (autoB77E0FB0_var < 0) { break; }
        auto8EFAED4E_player = autoB77E0FB0_var;
        auto8EFAED4E_state = lib4A1496D1_gv_townStateBuilding;
        auto8EFAED4E_var = 0;
        for ( ; auto8EFAED4E_var < c_townMax; auto8EFAED4E_var += 1 ) {
            auto8EFAED4E_statevar = AIGetTownState(auto8EFAED4E_player,auto8EFAED4E_var);
            if (auto8EFAED4E_statevar >= auto8EFAED4E_state) {
                AITrain(autoB77E0FB0_var, 4, auto8EFAED4E_var, "CASClassCarrier", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier3, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier4, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardCASClassCarrier4_Init () {
    lib4A1496D1_gt_CovenantHardCASClassCarrier4 = TriggerCreate("lib4A1496D1_gt_CovenantHardCASClassCarrier4_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier4, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardCASClassCarrier4, lib4A1496D1_gv_covenantTrainCASClassSupercarrier3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard CAS-Class Carrier 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardCASClassCarrier3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE31481A0_g;
    int autoE31481A0_var;
    int autoEB29185A_player;
    int autoEB29185A_state;
    int autoEB29185A_var;
    int autoEB29185A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE31481A0_g = lib4A1496D1_gv_aICovHard;
    autoE31481A0_var = -1;
    while (true) {
        autoE31481A0_var = PlayerGroupNextPlayer(autoE31481A0_g, autoE31481A0_var);
        if (autoE31481A0_var < 0) { break; }
        autoEB29185A_player = autoE31481A0_var;
        autoEB29185A_state = lib4A1496D1_gv_townStateBuilding;
        autoEB29185A_var = 0;
        for ( ; autoEB29185A_var < c_townMax; autoEB29185A_var += 1 ) {
            autoEB29185A_statevar = AIGetTownState(autoEB29185A_player,autoEB29185A_var);
            if (autoEB29185A_statevar >= autoEB29185A_state) {
                AITrain(autoE31481A0_var, 4, autoEB29185A_var, "CASClassCarrier", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardCASClassCarrier3_Init () {
    lib4A1496D1_gt_CovenantHardCASClassCarrier3 = TriggerCreate("lib4A1496D1_gt_CovenantHardCASClassCarrier3_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardCASClassCarrier3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardCASClassCarrier3, 120.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Scarab 6
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardScarab6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto4B8168CA_g;
    int auto4B8168CA_var;
    int auto2652703F_player;
    int auto2652703F_state;
    int auto2652703F_var;
    int auto2652703F_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto4B8168CA_g = lib4A1496D1_gv_aICovHard;
    auto4B8168CA_var = -1;
    while (true) {
        auto4B8168CA_var = PlayerGroupNextPlayer(auto4B8168CA_g, auto4B8168CA_var);
        if (auto4B8168CA_var < 0) { break; }
        auto2652703F_player = auto4B8168CA_var;
        auto2652703F_state = lib4A1496D1_gv_townStateBuilding;
        auto2652703F_var = 0;
        for ( ; auto2652703F_var < c_townMax; auto2652703F_var += 1 ) {
            auto2652703F_statevar = AIGetTownState(auto2652703F_player,auto2652703F_var);
            if (auto2652703F_statevar >= auto2652703F_state) {
                AITrain(auto4B8168CA_var, 5, auto2652703F_var, "ScarabCovenant", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardScarab5, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardScarab6, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardScarab6_Init () {
    lib4A1496D1_gt_CovenantHardScarab6 = TriggerCreate("lib4A1496D1_gt_CovenantHardScarab6_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardScarab6, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardScarab6, lib4A1496D1_gv_covenantTrainScarab3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Scarab 5
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardScarab5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8EE4003D_g;
    int auto8EE4003D_var;
    int auto5192A724_player;
    int auto5192A724_state;
    int auto5192A724_var;
    int auto5192A724_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8EE4003D_g = lib4A1496D1_gv_aICovHard;
    auto8EE4003D_var = -1;
    while (true) {
        auto8EE4003D_var = PlayerGroupNextPlayer(auto8EE4003D_g, auto8EE4003D_var);
        if (auto8EE4003D_var < 0) { break; }
        auto5192A724_player = auto8EE4003D_var;
        auto5192A724_state = lib4A1496D1_gv_townStateBuilding;
        auto5192A724_var = 0;
        for ( ; auto5192A724_var < c_townMax; auto5192A724_var += 1 ) {
            auto5192A724_statevar = AIGetTownState(auto5192A724_player,auto5192A724_var);
            if (auto5192A724_statevar >= auto5192A724_state) {
                AITrain(auto8EE4003D_var, 5, auto5192A724_var, "ScarabCovenant", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardScarab5_Init () {
    lib4A1496D1_gt_CovenantHardScarab5 = TriggerCreate("lib4A1496D1_gt_CovenantHardScarab5_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardScarab5, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardScarab5, 96.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Vampire 8
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardVampire8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE9CEA5C9_g;
    int autoE9CEA5C9_var;
    int auto59CF0938_player;
    int auto59CF0938_state;
    int auto59CF0938_var;
    int auto59CF0938_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE9CEA5C9_g = lib4A1496D1_gv_aICovHard;
    autoE9CEA5C9_var = -1;
    while (true) {
        autoE9CEA5C9_var = PlayerGroupNextPlayer(autoE9CEA5C9_g, autoE9CEA5C9_var);
        if (autoE9CEA5C9_var < 0) { break; }
        auto59CF0938_player = autoE9CEA5C9_var;
        auto59CF0938_state = lib4A1496D1_gv_townStateBuilding;
        auto59CF0938_var = 0;
        for ( ; auto59CF0938_var < c_townMax; auto59CF0938_var += 1 ) {
            auto59CF0938_statevar = AIGetTownState(auto59CF0938_player,auto59CF0938_var);
            if (auto59CF0938_statevar >= auto59CF0938_state) {
                AITrain(autoE9CEA5C9_var, 4, auto59CF0938_var, "VampireCovenant", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_CovenantHardVampire7, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_CovenantHardVampire8, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardVampire8_Init () {
    lib4A1496D1_gt_CovenantHardVampire8 = TriggerCreate("lib4A1496D1_gt_CovenantHardVampire8_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardVampire8, false);
    TriggerAddEventTimer(lib4A1496D1_gt_CovenantHardVampire8, lib4A1496D1_gv_covenantTrainVampire3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Covenant Hard Vampire 7
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_CovenantHardVampire7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto69BF2BCB_g;
    int auto69BF2BCB_var;
    int auto635EE13A_player;
    int auto635EE13A_state;
    int auto635EE13A_var;
    int auto635EE13A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto69BF2BCB_g = lib4A1496D1_gv_aICovHard;
    auto69BF2BCB_var = -1;
    while (true) {
        auto69BF2BCB_var = PlayerGroupNextPlayer(auto69BF2BCB_g, auto69BF2BCB_var);
        if (auto69BF2BCB_var < 0) { break; }
        auto635EE13A_player = auto69BF2BCB_var;
        auto635EE13A_state = lib4A1496D1_gv_townStateBuilding;
        auto635EE13A_var = 0;
        for ( ; auto635EE13A_var < c_townMax; auto635EE13A_var += 1 ) {
            auto635EE13A_statevar = AIGetTownState(auto635EE13A_player,auto635EE13A_var);
            if (auto635EE13A_statevar >= auto635EE13A_state) {
                AITrain(auto69BF2BCB_var, 4, auto635EE13A_var, "VampireCovenant", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_CovenantHardVampire7_Init () {
    lib4A1496D1_gt_CovenantHardVampire7 = TriggerCreate("lib4A1496D1_gt_CovenantHardVampire7_Func");
    TriggerEnable(lib4A1496D1_gt_CovenantHardVampire7, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_CovenantHardVampire7, 90.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV HARD EXPAND TIMER 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVHARDEXPANDTIMER3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_bazinga3;

    // Automatic Variable Declarations
    playergroup autoD3E1E675_g;
    int autoD3E1E675_var;
    int auto6B2AEE10_player;
    int auto6B2AEE10_state;
    int auto6B2AEE10_var;
    int auto6B2AEE10_statevar;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoD3E1E675_g = lib4A1496D1_gv_aICovHard;
    autoD3E1E675_var = -1;
    while (true) {
        autoD3E1E675_var = PlayerGroupNextPlayer(autoD3E1E675_g, autoD3E1E675_var);
        if (autoD3E1E675_var < 0) { break; }
        auto6B2AEE10_player = autoD3E1E675_var;
        auto6B2AEE10_state = lib4A1496D1_gv_townStateBuilding;
        auto6B2AEE10_var = 0;
        for ( ; auto6B2AEE10_var < c_townMax; auto6B2AEE10_var += 1 ) {
            auto6B2AEE10_statevar = AIGetTownState(auto6B2AEE10_player,auto6B2AEE10_var);
            if (auto6B2AEE10_statevar >= auto6B2AEE10_state) {
                lv_bazinga3 = (lv_bazinga3 + UnitGroupCount(UnitGroup("CitadelCovenant", autoD3E1E675_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if ((lv_bazinga3 < 8)) {
                    PlayerModifyPropertyInt(autoD3E1E675_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(autoD3E1E675_var, PlayerStartLocation(autoD3E1E675_var), "CitadelCovenant");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVHARDEXPANDTIMER3_Init () {
    lib4A1496D1_gt_COVHARDEXPANDTIMER3 = TriggerCreate("lib4A1496D1_gt_COVHARDEXPANDTIMER3_Func");
    TriggerEnable(lib4A1496D1_gt_COVHARDEXPANDTIMER3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVHARDEXPANDTIMER3, 240.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: COV HARD Attack Timer 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_COVHARDAttackTimer3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7D29B984_g;
    int auto7D29B984_var;
    unitgroup autoDEB9281B_g;
    int autoDEB9281B_u;
    unit autoDEB9281B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7D29B984_g = lib4A1496D1_gv_aICovHard;
    auto7D29B984_var = -1;
    while (true) {
        auto7D29B984_var = PlayerGroupNextPlayer(auto7D29B984_g, auto7D29B984_var);
        if (auto7D29B984_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(auto7D29B984_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        autoDEB9281B_g = UnitGroup(null, auto7D29B984_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoDEB9281B_u = UnitGroupCount(autoDEB9281B_g, c_unitCountAll);
        for (;; autoDEB9281B_u -= 1) {
            autoDEB9281B_var = UnitGroupUnitFromEnd(autoDEB9281B_g, autoDEB9281B_u);
            if (autoDEB9281B_var == null) { break; }
            UnitIssueOrder(autoDEB9281B_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_COVHARDAttackTimer3_Init () {
    lib4A1496D1_gt_COVHARDAttackTimer3 = TriggerCreate("lib4A1496D1_gt_COVHARDAttackTimer3_Func");
    TriggerEnable(lib4A1496D1_gt_COVHARDAttackTimer3, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_COVHARDAttackTimer3, 420.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Choose A.I. Difficulty 4
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_ChooseAIDifficulty4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoADB5153A_g;
    int autoADB5153A_var;
    playergroup autoE720C171_g;
    int autoE720C171_var;

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.625, c_timeGame);
    autoADB5153A_g = PlayerGroupAll();
    autoADB5153A_var = -1;
    while (true) {
        autoADB5153A_var = PlayerGroupNextPlayer(autoADB5153A_g, autoADB5153A_var);
        if (autoADB5153A_var < 0) { break; }
        if ((PlayerType(autoADB5153A_var) == c_playerTypeComputer)) {
            PlayerGroupAdd(lib4A1496D1_gv_aIPlayers, autoADB5153A_var);
        }

    }
    autoE720C171_g = lib4A1496D1_gv_aIPlayers;
    autoE720C171_var = -1;
    while (true) {
        autoE720C171_var = PlayerGroupNextPlayer(autoE720C171_g, autoE720C171_var);
        if (autoE720C171_var < 0) { break; }
        AIScout(autoE720C171_var);
        PlayerModifyPropertyInt(autoE720C171_var, c_playerPropVespene, c_playerPropOperAdd, 80000);
        if ((PlayerRace(autoE720C171_var) == "Zerg")) {
            PlayerGroupAdd(lib4A1496D1_gv_fLOODAI, autoE720C171_var);
            PlayerModifyPropertyInt(autoE720C171_var, c_playerPropMinerals, c_playerPropOperAdd, 2500);
            TextExpressionSetToken("Param/Expression/lib_4A1496D1_50C86201", "A", PlayerName(autoE720C171_var));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_4A1496D1_50C86201"));
            TriggerEnable(lib4A1496D1_gt_FloodAbominationForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodAcidSpewer, true);
            TriggerEnable(lib4A1496D1_gt_FloodBiomaterialConverter, true);
            TriggerEnable(lib4A1496D1_gt_FloodBiomaterialDen, true);
            TriggerEnable(lib4A1496D1_gt_FloodBiomaterialMass, true);
            TriggerEnable(lib4A1496D1_gt_FloodBomberForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodCarrierForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodCombatForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodConstructorForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodGravemind, true);
            TriggerEnable(lib4A1496D1_gt_FloodJuggernautForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodKeymind, true);
            TriggerEnable(lib4A1496D1_gt_FloodMalagorkorForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodPodForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodPureBiosporeFactory, true);
            TriggerEnable(lib4A1496D1_gt_FloodRangedCombatForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodRangedForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodSpawnerForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodSporeVent, true);
            TriggerEnable(lib4A1496D1_gt_FloodSporeVentilator, true);
            TriggerEnable(lib4A1496D1_gt_FloodSwarmForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodSynapticFungus, true);
            TriggerEnable(lib4A1496D1_gt_FloodTankForm, true);
            TriggerEnable(lib4A1496D1_gt_FloodWhip, true);
            TriggerEnable(lib4A1496D1_gt_FloodAttackTimer, true);
            TriggerEnable(lib4A1496D1_gt_FloodEXPANDTIMER, true);
        }

    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_ChooseAIDifficulty4_Init () {
    lib4A1496D1_gt_ChooseAIDifficulty4 = TriggerCreate("lib4A1496D1_gt_ChooseAIDifficulty4_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_ChooseAIDifficulty4);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Constructor Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodConstructorForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto53123D30_g;
    int auto53123D30_var;
    int autoD3FAE912_player;
    int autoD3FAE912_state;
    int autoD3FAE912_var;
    int autoD3FAE912_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto53123D30_g = lib4A1496D1_gv_fLOODAI;
    auto53123D30_var = -1;
    while (true) {
        auto53123D30_var = PlayerGroupNextPlayer(auto53123D30_g, auto53123D30_var);
        if (auto53123D30_var < 0) { break; }
        autoD3FAE912_player = auto53123D30_var;
        autoD3FAE912_state = lib4A1496D1_gv_townStateBuilding;
        autoD3FAE912_var = 0;
        for ( ; autoD3FAE912_var < c_townMax; autoD3FAE912_var += 1 ) {
            autoD3FAE912_statevar = AIGetTownState(autoD3FAE912_player,autoD3FAE912_var);
            if (autoD3FAE912_statevar >= autoD3FAE912_state) {
                if ((UnitCount("ConstructorForm", auto53123D30_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 48)) {
                    PlayerModifyPropertyInt(auto53123D30_var, c_playerPropMinerals, c_playerPropOperAdd, 100);
                    AITrain(auto53123D30_var, 7, autoD3FAE912_var, "ConstructorForm", 4);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodConstructorForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodConstructorForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodConstructorForm_Init () {
    lib4A1496D1_gt_FloodConstructorForm = TriggerCreate("lib4A1496D1_gt_FloodConstructorForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodConstructorForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodConstructorForm, lib4A1496D1_gv_floodTrainConstructorFormWorker);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Constructor Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodConstructorForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB6B9FCA3_g;
    int autoB6B9FCA3_var;
    int auto64391034_player;
    int auto64391034_state;
    int auto64391034_var;
    int auto64391034_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB6B9FCA3_g = lib4A1496D1_gv_fLOODAI;
    autoB6B9FCA3_var = -1;
    while (true) {
        autoB6B9FCA3_var = PlayerGroupNextPlayer(autoB6B9FCA3_g, autoB6B9FCA3_var);
        if (autoB6B9FCA3_var < 0) { break; }
        auto64391034_player = autoB6B9FCA3_var;
        auto64391034_state = lib4A1496D1_gv_townStateBuilding;
        auto64391034_var = 0;
        for ( ; auto64391034_var < c_townMax; auto64391034_var += 1 ) {
            auto64391034_statevar = AIGetTownState(auto64391034_player,auto64391034_var);
            if (auto64391034_statevar >= auto64391034_state) {
                if ((UnitCount("ConstructorForm", autoB6B9FCA3_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 48)) {
                    PlayerModifyPropertyInt(autoB6B9FCA3_var, c_playerPropMinerals, c_playerPropOperAdd, 100);
                    AITrain(autoB6B9FCA3_var, 7, auto64391034_var, "ConstructorForm", 4);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodConstructorForm2_Init () {
    lib4A1496D1_gt_FloodConstructorForm2 = TriggerCreate("lib4A1496D1_gt_FloodConstructorForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodConstructorForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodConstructorForm2, 23.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Combat Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodCombatForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto05611489_g;
    int auto05611489_var;
    int auto5FC1B339_player;
    int auto5FC1B339_state;
    int auto5FC1B339_var;
    int auto5FC1B339_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto05611489_g = lib4A1496D1_gv_fLOODAI;
    auto05611489_var = -1;
    while (true) {
        auto05611489_var = PlayerGroupNextPlayer(auto05611489_g, auto05611489_var);
        if (auto05611489_var < 0) { break; }
        auto5FC1B339_player = auto05611489_var;
        auto5FC1B339_state = lib4A1496D1_gv_townStateBuilding;
        auto5FC1B339_var = 0;
        for ( ; auto5FC1B339_var < c_townMax; auto5FC1B339_var += 1 ) {
            auto5FC1B339_statevar = AIGetTownState(auto5FC1B339_player,auto5FC1B339_var);
            if (auto5FC1B339_statevar >= auto5FC1B339_state) {
                PlayerModifyPropertyInt(auto05611489_var, c_playerPropMinerals, c_playerPropOperAdd, 125);
                AITrain(auto05611489_var, 6, auto5FC1B339_var, "CombatForm", 4);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodCombatForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodCombatForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodCombatForm_Init () {
    lib4A1496D1_gt_FloodCombatForm = TriggerCreate("lib4A1496D1_gt_FloodCombatForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodCombatForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodCombatForm, lib4A1496D1_gv_floodTrainCombatForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Combat Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodCombatForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto87FD2200_g;
    int auto87FD2200_var;
    int auto9A6141A1_player;
    int auto9A6141A1_state;
    int auto9A6141A1_var;
    int auto9A6141A1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto87FD2200_g = lib4A1496D1_gv_fLOODAI;
    auto87FD2200_var = -1;
    while (true) {
        auto87FD2200_var = PlayerGroupNextPlayer(auto87FD2200_g, auto87FD2200_var);
        if (auto87FD2200_var < 0) { break; }
        auto9A6141A1_player = auto87FD2200_var;
        auto9A6141A1_state = lib4A1496D1_gv_townStateBuilding;
        auto9A6141A1_var = 0;
        for ( ; auto9A6141A1_var < c_townMax; auto9A6141A1_var += 1 ) {
            auto9A6141A1_statevar = AIGetTownState(auto9A6141A1_player,auto9A6141A1_var);
            if (auto9A6141A1_statevar >= auto9A6141A1_state) {
                PlayerModifyPropertyInt(auto87FD2200_var, c_playerPropMinerals, c_playerPropOperAdd, 125);
                AITrain(auto87FD2200_var, 6, auto9A6141A1_var, "CombatForm", 4);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodCombatForm2_Init () {
    lib4A1496D1_gt_FloodCombatForm2 = TriggerCreate("lib4A1496D1_gt_FloodCombatForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodCombatForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodCombatForm2, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Ranged Combat Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodRangedCombatForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoECA208D4_g;
    int autoECA208D4_var;
    int autoC2D96175_player;
    int autoC2D96175_state;
    int autoC2D96175_var;
    int autoC2D96175_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoECA208D4_g = lib4A1496D1_gv_fLOODAI;
    autoECA208D4_var = -1;
    while (true) {
        autoECA208D4_var = PlayerGroupNextPlayer(autoECA208D4_g, autoECA208D4_var);
        if (autoECA208D4_var < 0) { break; }
        autoC2D96175_player = autoECA208D4_var;
        autoC2D96175_state = lib4A1496D1_gv_townStateBuilding;
        autoC2D96175_var = 0;
        for ( ; autoC2D96175_var < c_townMax; autoC2D96175_var += 1 ) {
            autoC2D96175_statevar = AIGetTownState(autoC2D96175_player,autoC2D96175_var);
            if (autoC2D96175_statevar >= autoC2D96175_state) {
                PlayerModifyPropertyInt(autoECA208D4_var, c_playerPropMinerals, c_playerPropOperAdd, 188);
                AITrain(autoECA208D4_var, 6, autoC2D96175_var, "RangedCombatForm", 3);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodRangedCombatForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodRangedCombatForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodRangedCombatForm_Init () {
    lib4A1496D1_gt_FloodRangedCombatForm = TriggerCreate("lib4A1496D1_gt_FloodRangedCombatForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodRangedCombatForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodRangedCombatForm, lib4A1496D1_gv_floodTrainRangedCombatForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Ranged Combat Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodRangedCombatForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEAA284CE_g;
    int autoEAA284CE_var;
    int auto8710F9A4_player;
    int auto8710F9A4_state;
    int auto8710F9A4_var;
    int auto8710F9A4_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoEAA284CE_g = lib4A1496D1_gv_fLOODAI;
    autoEAA284CE_var = -1;
    while (true) {
        autoEAA284CE_var = PlayerGroupNextPlayer(autoEAA284CE_g, autoEAA284CE_var);
        if (autoEAA284CE_var < 0) { break; }
        auto8710F9A4_player = autoEAA284CE_var;
        auto8710F9A4_state = lib4A1496D1_gv_townStateBuilding;
        auto8710F9A4_var = 0;
        for ( ; auto8710F9A4_var < c_townMax; auto8710F9A4_var += 1 ) {
            auto8710F9A4_statevar = AIGetTownState(auto8710F9A4_player,auto8710F9A4_var);
            if (auto8710F9A4_statevar >= auto8710F9A4_state) {
                PlayerModifyPropertyInt(autoEAA284CE_var, c_playerPropMinerals, c_playerPropOperAdd, 188);
                AITrain(autoEAA284CE_var, 6, auto8710F9A4_var, "RangedCombatForm", 3);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodRangedCombatForm2_Init () {
    lib4A1496D1_gt_FloodRangedCombatForm2 = TriggerCreate("lib4A1496D1_gt_FloodRangedCombatForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodRangedCombatForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodRangedCombatForm2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Pod Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodPodForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto711619A4_g;
    int auto711619A4_var;
    int auto7099CC67_player;
    int auto7099CC67_state;
    int auto7099CC67_var;
    int auto7099CC67_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto711619A4_g = lib4A1496D1_gv_fLOODAI;
    auto711619A4_var = -1;
    while (true) {
        auto711619A4_var = PlayerGroupNextPlayer(auto711619A4_g, auto711619A4_var);
        if (auto711619A4_var < 0) { break; }
        auto7099CC67_player = auto711619A4_var;
        auto7099CC67_state = lib4A1496D1_gv_townStateBuilding;
        auto7099CC67_var = 0;
        for ( ; auto7099CC67_var < c_townMax; auto7099CC67_var += 1 ) {
            auto7099CC67_statevar = AIGetTownState(auto7099CC67_player,auto7099CC67_var);
            if (auto7099CC67_statevar >= auto7099CC67_state) {
                PlayerModifyPropertyInt(auto711619A4_var, c_playerPropMinerals, c_playerPropOperAdd, 120);
                AITrain(auto711619A4_var, 6, auto7099CC67_var, "PodForm", 6);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodPodForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodPodForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodPodForm_Init () {
    lib4A1496D1_gt_FloodPodForm = TriggerCreate("lib4A1496D1_gt_FloodPodForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodPodForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodPodForm, lib4A1496D1_gv_floodTrainPodForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Pod Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodPodForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto6EA4E241_g;
    int auto6EA4E241_var;
    int auto9463506C_player;
    int auto9463506C_state;
    int auto9463506C_var;
    int auto9463506C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto6EA4E241_g = lib4A1496D1_gv_fLOODAI;
    auto6EA4E241_var = -1;
    while (true) {
        auto6EA4E241_var = PlayerGroupNextPlayer(auto6EA4E241_g, auto6EA4E241_var);
        if (auto6EA4E241_var < 0) { break; }
        auto9463506C_player = auto6EA4E241_var;
        auto9463506C_state = lib4A1496D1_gv_townStateBuilding;
        auto9463506C_var = 0;
        for ( ; auto9463506C_var < c_townMax; auto9463506C_var += 1 ) {
            auto9463506C_statevar = AIGetTownState(auto9463506C_player,auto9463506C_var);
            if (auto9463506C_statevar >= auto9463506C_state) {
                PlayerModifyPropertyInt(auto6EA4E241_var, c_playerPropMinerals, c_playerPropOperAdd, 120);
                AITrain(auto6EA4E241_var, 6, auto9463506C_var, "PodForm", 8);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodPodForm2_Init () {
    lib4A1496D1_gt_FloodPodForm2 = TriggerCreate("lib4A1496D1_gt_FloodPodForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodPodForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodPodForm2, 24.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Ranged Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodRangedForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto64A8F79B_g;
    int auto64A8F79B_var;
    int autoB4C2A79A_player;
    int autoB4C2A79A_state;
    int autoB4C2A79A_var;
    int autoB4C2A79A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto64A8F79B_g = lib4A1496D1_gv_fLOODAI;
    auto64A8F79B_var = -1;
    while (true) {
        auto64A8F79B_var = PlayerGroupNextPlayer(auto64A8F79B_g, auto64A8F79B_var);
        if (auto64A8F79B_var < 0) { break; }
        autoB4C2A79A_player = auto64A8F79B_var;
        autoB4C2A79A_state = lib4A1496D1_gv_townStateBuilding;
        autoB4C2A79A_var = 0;
        for ( ; autoB4C2A79A_var < c_townMax; autoB4C2A79A_var += 1 ) {
            autoB4C2A79A_statevar = AIGetTownState(autoB4C2A79A_player,autoB4C2A79A_var);
            if (autoB4C2A79A_statevar >= autoB4C2A79A_state) {
                PlayerModifyPropertyInt(auto64A8F79B_var, c_playerPropMinerals, c_playerPropOperAdd, 250);
                AITrain(auto64A8F79B_var, 4, autoB4C2A79A_var, "RangedForm", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodRangedForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodRangedForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodRangedForm_Init () {
    lib4A1496D1_gt_FloodRangedForm = TriggerCreate("lib4A1496D1_gt_FloodRangedForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodRangedForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodRangedForm, lib4A1496D1_gv_floodTrainRangedForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Ranged Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodRangedForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto743507C7_g;
    int auto743507C7_var;
    int auto542D7A03_player;
    int auto542D7A03_state;
    int auto542D7A03_var;
    int auto542D7A03_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto743507C7_g = lib4A1496D1_gv_fLOODAI;
    auto743507C7_var = -1;
    while (true) {
        auto743507C7_var = PlayerGroupNextPlayer(auto743507C7_g, auto743507C7_var);
        if (auto743507C7_var < 0) { break; }
        auto542D7A03_player = auto743507C7_var;
        auto542D7A03_state = lib4A1496D1_gv_townStateBuilding;
        auto542D7A03_var = 0;
        for ( ; auto542D7A03_var < c_townMax; auto542D7A03_var += 1 ) {
            auto542D7A03_statevar = AIGetTownState(auto542D7A03_player,auto542D7A03_var);
            if (auto542D7A03_statevar >= auto542D7A03_state) {
                PlayerModifyPropertyInt(auto743507C7_var, c_playerPropMinerals, c_playerPropOperAdd, 250);
                AITrain(auto743507C7_var, 4, auto542D7A03_var, "RangedForm", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodRangedForm2_Init () {
    lib4A1496D1_gt_FloodRangedForm2 = TriggerCreate("lib4A1496D1_gt_FloodRangedForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodRangedForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodRangedForm2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Tank Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodTankForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto96F0CA91_g;
    int auto96F0CA91_var;
    int auto0D3639C7_player;
    int auto0D3639C7_state;
    int auto0D3639C7_var;
    int auto0D3639C7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto96F0CA91_g = lib4A1496D1_gv_fLOODAI;
    auto96F0CA91_var = -1;
    while (true) {
        auto96F0CA91_var = PlayerGroupNextPlayer(auto96F0CA91_g, auto96F0CA91_var);
        if (auto96F0CA91_var < 0) { break; }
        auto0D3639C7_player = auto96F0CA91_var;
        auto0D3639C7_state = lib4A1496D1_gv_townStateEstabilished;
        auto0D3639C7_var = 0;
        for ( ; auto0D3639C7_var < c_townMax; auto0D3639C7_var += 1 ) {
            auto0D3639C7_statevar = AIGetTownState(auto0D3639C7_player,auto0D3639C7_var);
            if (auto0D3639C7_statevar == auto0D3639C7_state) {
                PlayerModifyPropertyInt(auto96F0CA91_var, c_playerPropMinerals, c_playerPropOperAdd, 350);
                AITrain(auto96F0CA91_var, 4, auto0D3639C7_var, "TankForm", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodTankForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodTankForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodTankForm_Init () {
    lib4A1496D1_gt_FloodTankForm = TriggerCreate("lib4A1496D1_gt_FloodTankForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodTankForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodTankForm, lib4A1496D1_gv_floodTrainTankForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Tank Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodTankForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC2D16F88_g;
    int autoC2D16F88_var;
    int autoF13940FE_player;
    int autoF13940FE_state;
    int autoF13940FE_var;
    int autoF13940FE_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC2D16F88_g = lib4A1496D1_gv_fLOODAI;
    autoC2D16F88_var = -1;
    while (true) {
        autoC2D16F88_var = PlayerGroupNextPlayer(autoC2D16F88_g, autoC2D16F88_var);
        if (autoC2D16F88_var < 0) { break; }
        autoF13940FE_player = autoC2D16F88_var;
        autoF13940FE_state = lib4A1496D1_gv_townStateEstabilished;
        autoF13940FE_var = 0;
        for ( ; autoF13940FE_var < c_townMax; autoF13940FE_var += 1 ) {
            autoF13940FE_statevar = AIGetTownState(autoF13940FE_player,autoF13940FE_var);
            if (autoF13940FE_statevar == autoF13940FE_state) {
                PlayerModifyPropertyInt(autoC2D16F88_var, c_playerPropMinerals, c_playerPropOperAdd, 350);
                AITrain(autoC2D16F88_var, 4, autoF13940FE_var, "TankForm", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodTankForm2_Init () {
    lib4A1496D1_gt_FloodTankForm2 = TriggerCreate("lib4A1496D1_gt_FloodTankForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodTankForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodTankForm2, 48.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Carrier Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodCarrierForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto8A349EED_g;
    int auto8A349EED_var;
    int auto9770AEFA_player;
    int auto9770AEFA_state;
    int auto9770AEFA_var;
    int auto9770AEFA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8A349EED_g = lib4A1496D1_gv_fLOODAI;
    auto8A349EED_var = -1;
    while (true) {
        auto8A349EED_var = PlayerGroupNextPlayer(auto8A349EED_g, auto8A349EED_var);
        if (auto8A349EED_var < 0) { break; }
        auto9770AEFA_player = auto8A349EED_var;
        auto9770AEFA_state = lib4A1496D1_gv_townStateBuilding;
        auto9770AEFA_var = 0;
        for ( ; auto9770AEFA_var < c_townMax; auto9770AEFA_var += 1 ) {
            auto9770AEFA_statevar = AIGetTownState(auto9770AEFA_player,auto9770AEFA_var);
            if (auto9770AEFA_statevar >= auto9770AEFA_state) {
                PlayerModifyPropertyInt(auto8A349EED_var, c_playerPropMinerals, c_playerPropOperAdd, 240);
                AITrain(auto8A349EED_var, 6, auto9770AEFA_var, "CarrierForm", 4);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodCarrierForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodCarrierForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodCarrierForm_Init () {
    lib4A1496D1_gt_FloodCarrierForm = TriggerCreate("lib4A1496D1_gt_FloodCarrierForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodCarrierForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodCarrierForm, lib4A1496D1_gv_floodTrainCarrierForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Carrier Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodCarrierForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto409A347B_g;
    int auto409A347B_var;
    int autoA3C1772B_player;
    int autoA3C1772B_state;
    int autoA3C1772B_var;
    int autoA3C1772B_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto409A347B_g = lib4A1496D1_gv_fLOODAI;
    auto409A347B_var = -1;
    while (true) {
        auto409A347B_var = PlayerGroupNextPlayer(auto409A347B_g, auto409A347B_var);
        if (auto409A347B_var < 0) { break; }
        autoA3C1772B_player = auto409A347B_var;
        autoA3C1772B_state = lib4A1496D1_gv_townStateBuilding;
        autoA3C1772B_var = 0;
        for ( ; autoA3C1772B_var < c_townMax; autoA3C1772B_var += 1 ) {
            autoA3C1772B_statevar = AIGetTownState(autoA3C1772B_player,autoA3C1772B_var);
            if (autoA3C1772B_statevar >= autoA3C1772B_state) {
                PlayerModifyPropertyInt(auto409A347B_var, c_playerPropMinerals, c_playerPropOperAdd, 240);
                AITrain(auto409A347B_var, 6, autoA3C1772B_var, "CarrierForm", 4);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodCarrierForm2_Init () {
    lib4A1496D1_gt_FloodCarrierForm2 = TriggerCreate("lib4A1496D1_gt_FloodCarrierForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodCarrierForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodCarrierForm2, 27.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spawner Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSpawnerForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto98A9FCE6_g;
    int auto98A9FCE6_var;
    int autoABFC3F57_player;
    int autoABFC3F57_state;
    int autoABFC3F57_var;
    int autoABFC3F57_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto98A9FCE6_g = lib4A1496D1_gv_fLOODAI;
    auto98A9FCE6_var = -1;
    while (true) {
        auto98A9FCE6_var = PlayerGroupNextPlayer(auto98A9FCE6_g, auto98A9FCE6_var);
        if (auto98A9FCE6_var < 0) { break; }
        autoABFC3F57_player = auto98A9FCE6_var;
        autoABFC3F57_state = lib4A1496D1_gv_townStateEstabilished;
        autoABFC3F57_var = 0;
        for ( ; autoABFC3F57_var < c_townMax; autoABFC3F57_var += 1 ) {
            autoABFC3F57_statevar = AIGetTownState(autoABFC3F57_player,autoABFC3F57_var);
            if (autoABFC3F57_statevar == autoABFC3F57_state) {
                PlayerModifyPropertyInt(auto98A9FCE6_var, c_playerPropMinerals, c_playerPropOperAdd, 250);
                AITrain(auto98A9FCE6_var, 4, autoABFC3F57_var, "SpawnerForm", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodSpawnerForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodSpawnerForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSpawnerForm_Init () {
    lib4A1496D1_gt_FloodSpawnerForm = TriggerCreate("lib4A1496D1_gt_FloodSpawnerForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSpawnerForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodSpawnerForm, lib4A1496D1_gv_floodTrainSpawnerForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spawner Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSpawnerForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF5F855D6_g;
    int autoF5F855D6_var;
    int autoC23DABE8_player;
    int autoC23DABE8_state;
    int autoC23DABE8_var;
    int autoC23DABE8_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF5F855D6_g = lib4A1496D1_gv_fLOODAI;
    autoF5F855D6_var = -1;
    while (true) {
        autoF5F855D6_var = PlayerGroupNextPlayer(autoF5F855D6_g, autoF5F855D6_var);
        if (autoF5F855D6_var < 0) { break; }
        autoC23DABE8_player = autoF5F855D6_var;
        autoC23DABE8_state = lib4A1496D1_gv_townStateEstabilished;
        autoC23DABE8_var = 0;
        for ( ; autoC23DABE8_var < c_townMax; autoC23DABE8_var += 1 ) {
            autoC23DABE8_statevar = AIGetTownState(autoC23DABE8_player,autoC23DABE8_var);
            if (autoC23DABE8_statevar == autoC23DABE8_state) {
                PlayerModifyPropertyInt(autoF5F855D6_var, c_playerPropMinerals, c_playerPropOperAdd, 250);
                AITrain(autoF5F855D6_var, 4, autoC23DABE8_var, "SpawnerForm", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSpawnerForm2_Init () {
    lib4A1496D1_gt_FloodSpawnerForm2 = TriggerCreate("lib4A1496D1_gt_FloodSpawnerForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSpawnerForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodSpawnerForm2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Juggernaut Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodJuggernautForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFF9B8B1F_g;
    int autoFF9B8B1F_var;
    int auto64E340B9_player;
    int auto64E340B9_state;
    int auto64E340B9_var;
    int auto64E340B9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFF9B8B1F_g = lib4A1496D1_gv_fLOODAI;
    autoFF9B8B1F_var = -1;
    while (true) {
        autoFF9B8B1F_var = PlayerGroupNextPlayer(autoFF9B8B1F_g, autoFF9B8B1F_var);
        if (autoFF9B8B1F_var < 0) { break; }
        auto64E340B9_player = autoFF9B8B1F_var;
        auto64E340B9_state = lib4A1496D1_gv_townStateEstabilished;
        auto64E340B9_var = 0;
        for ( ; auto64E340B9_var < c_townMax; auto64E340B9_var += 1 ) {
            auto64E340B9_statevar = AIGetTownState(auto64E340B9_player,auto64E340B9_var);
            if (auto64E340B9_statevar == auto64E340B9_state) {
                PlayerModifyPropertyInt(autoFF9B8B1F_var, c_playerPropMinerals, c_playerPropOperAdd, 450);
                AITrain(autoFF9B8B1F_var, 4, auto64E340B9_var, "JuggernautForm", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodJuggernautForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodJuggernautForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodJuggernautForm_Init () {
    lib4A1496D1_gt_FloodJuggernautForm = TriggerCreate("lib4A1496D1_gt_FloodJuggernautForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodJuggernautForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodJuggernautForm, lib4A1496D1_gv_floodTrainJuggernautForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Juggernaut Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodJuggernautForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC66343D9_g;
    int autoC66343D9_var;
    int autoAB228984_player;
    int autoAB228984_state;
    int autoAB228984_var;
    int autoAB228984_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC66343D9_g = lib4A1496D1_gv_fLOODAI;
    autoC66343D9_var = -1;
    while (true) {
        autoC66343D9_var = PlayerGroupNextPlayer(autoC66343D9_g, autoC66343D9_var);
        if (autoC66343D9_var < 0) { break; }
        autoAB228984_player = autoC66343D9_var;
        autoAB228984_state = lib4A1496D1_gv_townStateEstabilished;
        autoAB228984_var = 0;
        for ( ; autoAB228984_var < c_townMax; autoAB228984_var += 1 ) {
            autoAB228984_statevar = AIGetTownState(autoAB228984_player,autoAB228984_var);
            if (autoAB228984_statevar == autoAB228984_state) {
                PlayerModifyPropertyInt(autoC66343D9_var, c_playerPropMinerals, c_playerPropOperAdd, 450);
                AITrain(autoC66343D9_var, 4, autoAB228984_var, "JuggernautForm", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodJuggernautForm2_Init () {
    lib4A1496D1_gt_FloodJuggernautForm2 = TriggerCreate("lib4A1496D1_gt_FloodJuggernautForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodJuggernautForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodJuggernautForm2, 34.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Abomination Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodAbominationForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA6725FD9_g;
    int autoA6725FD9_var;
    int auto411CDC21_player;
    int auto411CDC21_state;
    int auto411CDC21_var;
    int auto411CDC21_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA6725FD9_g = lib4A1496D1_gv_fLOODAI;
    autoA6725FD9_var = -1;
    while (true) {
        autoA6725FD9_var = PlayerGroupNextPlayer(autoA6725FD9_g, autoA6725FD9_var);
        if (autoA6725FD9_var < 0) { break; }
        auto411CDC21_player = autoA6725FD9_var;
        auto411CDC21_state = lib4A1496D1_gv_townStateEstabilished;
        auto411CDC21_var = 0;
        for ( ; auto411CDC21_var < c_townMax; auto411CDC21_var += 1 ) {
            auto411CDC21_statevar = AIGetTownState(auto411CDC21_player,auto411CDC21_var);
            if (auto411CDC21_statevar == auto411CDC21_state) {
                PlayerModifyPropertyInt(autoA6725FD9_var, c_playerPropMinerals, c_playerPropOperAdd, 625);
                AITrain(autoA6725FD9_var, 4, auto411CDC21_var, "AbominationForm", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodAbominationForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodAbominationForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodAbominationForm_Init () {
    lib4A1496D1_gt_FloodAbominationForm = TriggerCreate("lib4A1496D1_gt_FloodAbominationForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodAbominationForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodAbominationForm, lib4A1496D1_gv_floodTrainAbominationForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Abomination Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodAbominationForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9F7FABDC_g;
    int auto9F7FABDC_var;
    int auto78F0F336_player;
    int auto78F0F336_state;
    int auto78F0F336_var;
    int auto78F0F336_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9F7FABDC_g = lib4A1496D1_gv_fLOODAI;
    auto9F7FABDC_var = -1;
    while (true) {
        auto9F7FABDC_var = PlayerGroupNextPlayer(auto9F7FABDC_g, auto9F7FABDC_var);
        if (auto9F7FABDC_var < 0) { break; }
        auto78F0F336_player = auto9F7FABDC_var;
        auto78F0F336_state = lib4A1496D1_gv_townStateEstabilished;
        auto78F0F336_var = 0;
        for ( ; auto78F0F336_var < c_townMax; auto78F0F336_var += 1 ) {
            auto78F0F336_statevar = AIGetTownState(auto78F0F336_player,auto78F0F336_var);
            if (auto78F0F336_statevar == auto78F0F336_state) {
                PlayerModifyPropertyInt(auto9F7FABDC_var, c_playerPropMinerals, c_playerPropOperAdd, 625);
                AITrain(auto9F7FABDC_var, 4, auto78F0F336_var, "AbominationForm", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodAbominationForm2_Init () {
    lib4A1496D1_gt_FloodAbominationForm2 = TriggerCreate("lib4A1496D1_gt_FloodAbominationForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodAbominationForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodAbominationForm2, 51.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Swarm Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSwarmForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto28D35112_g;
    int auto28D35112_var;
    int auto85AC0D28_player;
    int auto85AC0D28_state;
    int auto85AC0D28_var;
    int auto85AC0D28_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto28D35112_g = lib4A1496D1_gv_fLOODAI;
    auto28D35112_var = -1;
    while (true) {
        auto28D35112_var = PlayerGroupNextPlayer(auto28D35112_g, auto28D35112_var);
        if (auto28D35112_var < 0) { break; }
        auto85AC0D28_player = auto28D35112_var;
        auto85AC0D28_state = lib4A1496D1_gv_townStateBuilding;
        auto85AC0D28_var = 0;
        for ( ; auto85AC0D28_var < c_townMax; auto85AC0D28_var += 1 ) {
            auto85AC0D28_statevar = AIGetTownState(auto85AC0D28_player,auto85AC0D28_var);
            if (auto85AC0D28_statevar >= auto85AC0D28_state) {
                PlayerModifyPropertyInt(auto28D35112_var, c_playerPropMinerals, c_playerPropOperAdd, 125);
                AITrain(auto28D35112_var, 5, auto85AC0D28_var, "SwarmForm", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodSwarmForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodSwarmForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSwarmForm_Init () {
    lib4A1496D1_gt_FloodSwarmForm = TriggerCreate("lib4A1496D1_gt_FloodSwarmForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSwarmForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodSwarmForm, lib4A1496D1_gv_floodTrainSwarmForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Swarm Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSwarmForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto491CBAE1_g;
    int auto491CBAE1_var;
    int autoA99BDE6E_player;
    int autoA99BDE6E_state;
    int autoA99BDE6E_var;
    int autoA99BDE6E_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto491CBAE1_g = lib4A1496D1_gv_fLOODAI;
    auto491CBAE1_var = -1;
    while (true) {
        auto491CBAE1_var = PlayerGroupNextPlayer(auto491CBAE1_g, auto491CBAE1_var);
        if (auto491CBAE1_var < 0) { break; }
        autoA99BDE6E_player = auto491CBAE1_var;
        autoA99BDE6E_state = lib4A1496D1_gv_townStateBuilding;
        autoA99BDE6E_var = 0;
        for ( ; autoA99BDE6E_var < c_townMax; autoA99BDE6E_var += 1 ) {
            autoA99BDE6E_statevar = AIGetTownState(autoA99BDE6E_player,autoA99BDE6E_var);
            if (autoA99BDE6E_statevar >= autoA99BDE6E_state) {
                PlayerModifyPropertyInt(auto491CBAE1_var, c_playerPropMinerals, c_playerPropOperAdd, 125);
                AITrain(auto491CBAE1_var, 5, autoA99BDE6E_var, "SwarmForm", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSwarmForm2_Init () {
    lib4A1496D1_gt_FloodSwarmForm2 = TriggerCreate("lib4A1496D1_gt_FloodSwarmForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSwarmForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodSwarmForm2, 29.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Bomber Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBomberForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoF6107A8C_g;
    int autoF6107A8C_var;
    int auto84EBDEF0_player;
    int auto84EBDEF0_state;
    int auto84EBDEF0_var;
    int auto84EBDEF0_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF6107A8C_g = lib4A1496D1_gv_fLOODAI;
    autoF6107A8C_var = -1;
    while (true) {
        autoF6107A8C_var = PlayerGroupNextPlayer(autoF6107A8C_g, autoF6107A8C_var);
        if (autoF6107A8C_var < 0) { break; }
        auto84EBDEF0_player = autoF6107A8C_var;
        auto84EBDEF0_state = lib4A1496D1_gv_townStateBuilding;
        auto84EBDEF0_var = 0;
        for ( ; auto84EBDEF0_var < c_townMax; auto84EBDEF0_var += 1 ) {
            auto84EBDEF0_statevar = AIGetTownState(auto84EBDEF0_player,auto84EBDEF0_var);
            if (auto84EBDEF0_statevar >= auto84EBDEF0_state) {
                PlayerModifyPropertyInt(autoF6107A8C_var, c_playerPropMinerals, c_playerPropOperAdd, 225);
                AITrain(autoF6107A8C_var, 5, auto84EBDEF0_var, "BroodLord", 2);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodBomberForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodBomberForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBomberForm_Init () {
    lib4A1496D1_gt_FloodBomberForm = TriggerCreate("lib4A1496D1_gt_FloodBomberForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBomberForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodBomberForm, lib4A1496D1_gv_floodTrainBomberForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Bomber Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBomberForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto122D7561_g;
    int auto122D7561_var;
    int auto617C3BE1_player;
    int auto617C3BE1_state;
    int auto617C3BE1_var;
    int auto617C3BE1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto122D7561_g = lib4A1496D1_gv_fLOODAI;
    auto122D7561_var = -1;
    while (true) {
        auto122D7561_var = PlayerGroupNextPlayer(auto122D7561_g, auto122D7561_var);
        if (auto122D7561_var < 0) { break; }
        auto617C3BE1_player = auto122D7561_var;
        auto617C3BE1_state = lib4A1496D1_gv_townStateBuilding;
        auto617C3BE1_var = 0;
        for ( ; auto617C3BE1_var < c_townMax; auto617C3BE1_var += 1 ) {
            auto617C3BE1_statevar = AIGetTownState(auto617C3BE1_player,auto617C3BE1_var);
            if (auto617C3BE1_statevar >= auto617C3BE1_state) {
                PlayerModifyPropertyInt(auto122D7561_var, c_playerPropMinerals, c_playerPropOperAdd, 225);
                AITrain(auto122D7561_var, 5, auto617C3BE1_var, "BroodLord", 2);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBomberForm2_Init () {
    lib4A1496D1_gt_FloodBomberForm2 = TriggerCreate("lib4A1496D1_gt_FloodBomberForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBomberForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodBomberForm2, 45.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Malagorkor Form
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodMalagorkorForm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto5E072BDD_g;
    int auto5E072BDD_var;
    int auto9615842D_player;
    int auto9615842D_state;
    int auto9615842D_var;
    int auto9615842D_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5E072BDD_g = lib4A1496D1_gv_fLOODAI;
    auto5E072BDD_var = -1;
    while (true) {
        auto5E072BDD_var = PlayerGroupNextPlayer(auto5E072BDD_g, auto5E072BDD_var);
        if (auto5E072BDD_var < 0) { break; }
        auto9615842D_player = auto5E072BDD_var;
        auto9615842D_state = lib4A1496D1_gv_townStateBuilding;
        auto9615842D_var = 0;
        for ( ; auto9615842D_var < c_townMax; auto9615842D_var += 1 ) {
            auto9615842D_statevar = AIGetTownState(auto9615842D_player,auto9615842D_var);
            if (auto9615842D_statevar >= auto9615842D_state) {
                PlayerModifyPropertyInt(auto5E072BDD_var, c_playerPropMinerals, c_playerPropOperAdd, 325);
                AITrain(auto5E072BDD_var, 5, auto9615842D_var, "MalagorkorForm", 1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodMalagorkorForm2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodMalagorkorForm, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodMalagorkorForm_Init () {
    lib4A1496D1_gt_FloodMalagorkorForm = TriggerCreate("lib4A1496D1_gt_FloodMalagorkorForm_Func");
    TriggerEnable(lib4A1496D1_gt_FloodMalagorkorForm, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodMalagorkorForm, lib4A1496D1_gv_floodTrainMalagorkorForm);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Malagorkor Form 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodMalagorkorForm2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto55C8B0DE_g;
    int auto55C8B0DE_var;
    int auto44E6736A_player;
    int auto44E6736A_state;
    int auto44E6736A_var;
    int auto44E6736A_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto55C8B0DE_g = lib4A1496D1_gv_fLOODAI;
    auto55C8B0DE_var = -1;
    while (true) {
        auto55C8B0DE_var = PlayerGroupNextPlayer(auto55C8B0DE_g, auto55C8B0DE_var);
        if (auto55C8B0DE_var < 0) { break; }
        auto44E6736A_player = auto55C8B0DE_var;
        auto44E6736A_state = lib4A1496D1_gv_townStateBuilding;
        auto44E6736A_var = 0;
        for ( ; auto44E6736A_var < c_townMax; auto44E6736A_var += 1 ) {
            auto44E6736A_statevar = AIGetTownState(auto44E6736A_player,auto44E6736A_var);
            if (auto44E6736A_statevar >= auto44E6736A_state) {
                PlayerModifyPropertyInt(auto55C8B0DE_var, c_playerPropMinerals, c_playerPropOperAdd, 325);
                AITrain(auto55C8B0DE_var, 5, auto44E6736A_var, "MalagorkorForm", 1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodMalagorkorForm2_Init () {
    lib4A1496D1_gt_FloodMalagorkorForm2 = TriggerCreate("lib4A1496D1_gt_FloodMalagorkorForm2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodMalagorkorForm2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodMalagorkorForm2, 60.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Converter
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialConverter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto995664C4_g;
    int auto995664C4_var;
    int autoDAED0B23_player;
    int autoDAED0B23_state;
    int autoDAED0B23_var;
    int autoDAED0B23_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto995664C4_g = lib4A1496D1_gv_fLOODAI;
    auto995664C4_var = -1;
    while (true) {
        auto995664C4_var = PlayerGroupNextPlayer(auto995664C4_g, auto995664C4_var);
        if (auto995664C4_var < 0) { break; }
        autoDAED0B23_player = auto995664C4_var;
        autoDAED0B23_state = lib4A1496D1_gv_townStateEstabilished;
        autoDAED0B23_var = 0;
        for ( ; autoDAED0B23_var < c_townMax; autoDAED0B23_var += 1 ) {
            autoDAED0B23_statevar = AIGetTownState(autoDAED0B23_player,autoDAED0B23_var);
            if (autoDAED0B23_statevar == autoDAED0B23_state) {
                if ((UnitCount("BiomassConverter", auto995664C4_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto995664C4_var, 1, autoDAED0B23_var, "BiomassConverter", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialConverter2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialConverter, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialConverter_Init () {
    lib4A1496D1_gt_FloodBiomaterialConverter = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialConverter_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialConverter, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodBiomaterialConverter, lib4A1496D1_gv_floodBuildBiomassConverter);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Converter 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialConverter2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto4B8A4973_g;
    int auto4B8A4973_var;
    int auto6E5250A6_player;
    int auto6E5250A6_state;
    int auto6E5250A6_var;
    int auto6E5250A6_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto4B8A4973_g = lib4A1496D1_gv_fLOODAI;
    auto4B8A4973_var = -1;
    while (true) {
        auto4B8A4973_var = PlayerGroupNextPlayer(auto4B8A4973_g, auto4B8A4973_var);
        if (auto4B8A4973_var < 0) { break; }
        auto6E5250A6_player = auto4B8A4973_var;
        auto6E5250A6_state = lib4A1496D1_gv_townStateEstabilished;
        auto6E5250A6_var = 0;
        for ( ; auto6E5250A6_var < c_townMax; auto6E5250A6_var += 1 ) {
            auto6E5250A6_statevar = AIGetTownState(auto6E5250A6_player,auto6E5250A6_var);
            if (auto6E5250A6_statevar == auto6E5250A6_state) {
                if ((UnitCount("BiomassConverter", auto4B8A4973_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 18)) {
                    AIBuild(auto4B8A4973_var, 1, auto6E5250A6_var, "BiomassConverter", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialConverter2_Init () {
    lib4A1496D1_gt_FloodBiomaterialConverter2 = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialConverter2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialConverter2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodBiomaterialConverter2, 25.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Den
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialDen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto4AC3EF85_g;
    int auto4AC3EF85_var;
    int auto191C9EAD_player;
    int auto191C9EAD_state;
    int auto191C9EAD_var;
    int auto191C9EAD_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto4AC3EF85_g = lib4A1496D1_gv_fLOODAI;
    auto4AC3EF85_var = -1;
    while (true) {
        auto4AC3EF85_var = PlayerGroupNextPlayer(auto4AC3EF85_g, auto4AC3EF85_var);
        if (auto4AC3EF85_var < 0) { break; }
        auto191C9EAD_player = auto4AC3EF85_var;
        auto191C9EAD_state = lib4A1496D1_gv_townStateBuilding;
        auto191C9EAD_var = 0;
        for ( ; auto191C9EAD_var < c_townMax; auto191C9EAD_var += 1 ) {
            auto191C9EAD_statevar = AIGetTownState(auto191C9EAD_player,auto191C9EAD_var);
            if (auto191C9EAD_statevar >= auto191C9EAD_state) {
                if ((UnitCount("BiomaterialDen", auto4AC3EF85_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(auto4AC3EF85_var, 1, auto191C9EAD_var, "BiomaterialDen", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialDen2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialDen, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialDen_Init () {
    lib4A1496D1_gt_FloodBiomaterialDen = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialDen_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialDen, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodBiomaterialDen, lib4A1496D1_gv_floodBuildBiomaterialDen);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Den 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialDen2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBF17CFF8_g;
    int autoBF17CFF8_var;
    int auto23077ABB_player;
    int auto23077ABB_state;
    int auto23077ABB_var;
    int auto23077ABB_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBF17CFF8_g = lib4A1496D1_gv_fLOODAI;
    autoBF17CFF8_var = -1;
    while (true) {
        autoBF17CFF8_var = PlayerGroupNextPlayer(autoBF17CFF8_g, autoBF17CFF8_var);
        if (autoBF17CFF8_var < 0) { break; }
        auto23077ABB_player = autoBF17CFF8_var;
        auto23077ABB_state = lib4A1496D1_gv_townStateBuilding;
        auto23077ABB_var = 0;
        for ( ; auto23077ABB_var < c_townMax; auto23077ABB_var += 1 ) {
            auto23077ABB_statevar = AIGetTownState(auto23077ABB_player,auto23077ABB_var);
            if (auto23077ABB_statevar >= auto23077ABB_state) {
                if ((UnitCount("BiomaterialDen", autoBF17CFF8_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(autoBF17CFF8_var, 1, auto23077ABB_var, "BiomaterialDen", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialDen2_Init () {
    lib4A1496D1_gt_FloodBiomaterialDen2 = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialDen2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialDen2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodBiomaterialDen2, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Mass
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialMass_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBE8ACF90_g;
    int autoBE8ACF90_var;
    int auto222C1A06_player;
    int auto222C1A06_state;
    int auto222C1A06_var;
    int auto222C1A06_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoBE8ACF90_g = lib4A1496D1_gv_fLOODAI;
    autoBE8ACF90_var = -1;
    while (true) {
        autoBE8ACF90_var = PlayerGroupNextPlayer(autoBE8ACF90_g, autoBE8ACF90_var);
        if (autoBE8ACF90_var < 0) { break; }
        auto222C1A06_player = autoBE8ACF90_var;
        auto222C1A06_state = lib4A1496D1_gv_townStateBuilding;
        auto222C1A06_var = 0;
        for ( ; auto222C1A06_var < c_townMax; auto222C1A06_var += 1 ) {
            auto222C1A06_statevar = AIGetTownState(auto222C1A06_player,auto222C1A06_var);
            if (auto222C1A06_statevar >= auto222C1A06_state) {
                if ((UnitCount("BiomaterialMass", autoBE8ACF90_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoBE8ACF90_var, 2, auto222C1A06_var, "BiomaterialMass", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialMass2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialMass, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialMass_Init () {
    lib4A1496D1_gt_FloodBiomaterialMass = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialMass_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialMass, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodBiomaterialMass, lib4A1496D1_gv_floodBuildBiomaterialMass);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Biomaterial Mass 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodBiomaterialMass2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto15BA8073_g;
    int auto15BA8073_var;
    int auto09D366DA_player;
    int auto09D366DA_state;
    int auto09D366DA_var;
    int auto09D366DA_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto15BA8073_g = lib4A1496D1_gv_fLOODAI;
    auto15BA8073_var = -1;
    while (true) {
        auto15BA8073_var = PlayerGroupNextPlayer(auto15BA8073_g, auto15BA8073_var);
        if (auto15BA8073_var < 0) { break; }
        auto09D366DA_player = auto15BA8073_var;
        auto09D366DA_state = lib4A1496D1_gv_townStateBuilding;
        auto09D366DA_var = 0;
        for ( ; auto09D366DA_var < c_townMax; auto09D366DA_var += 1 ) {
            auto09D366DA_statevar = AIGetTownState(auto09D366DA_player,auto09D366DA_var);
            if (auto09D366DA_statevar >= auto09D366DA_state) {
                if ((UnitCount("BiomaterialMass", auto15BA8073_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto15BA8073_var, 2, auto09D366DA_var, "BiomaterialMass", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodBiomaterialMass2_Init () {
    lib4A1496D1_gt_FloodBiomaterialMass2 = TriggerCreate("lib4A1496D1_gt_FloodBiomaterialMass2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodBiomaterialMass2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodBiomaterialMass2, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Whip
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodWhip_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA77D171A_g;
    int autoA77D171A_var;
    int autoB9A82FD9_player;
    int autoB9A82FD9_state;
    int autoB9A82FD9_var;
    int autoB9A82FD9_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA77D171A_g = lib4A1496D1_gv_fLOODAI;
    autoA77D171A_var = -1;
    while (true) {
        autoA77D171A_var = PlayerGroupNextPlayer(autoA77D171A_g, autoA77D171A_var);
        if (autoA77D171A_var < 0) { break; }
        autoB9A82FD9_player = autoA77D171A_var;
        autoB9A82FD9_state = lib4A1496D1_gv_townStateBuilding;
        autoB9A82FD9_var = 0;
        for ( ; autoB9A82FD9_var < c_townMax; autoB9A82FD9_var += 1 ) {
            autoB9A82FD9_statevar = AIGetTownState(autoB9A82FD9_player,autoB9A82FD9_var);
            if (autoB9A82FD9_statevar == autoB9A82FD9_state) {
                if ((UnitCount("SpineCrawler", autoA77D171A_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 12)) {
                    AIBuild(autoA77D171A_var, 0, autoB9A82FD9_var, "SpineCrawler", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodWhip2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodWhip, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodWhip_Init () {
    lib4A1496D1_gt_FloodWhip = TriggerCreate("lib4A1496D1_gt_FloodWhip_Func");
    TriggerEnable(lib4A1496D1_gt_FloodWhip, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodWhip, lib4A1496D1_gv_floodBuildWhip);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Whip 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodWhip2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB278680B_g;
    int autoB278680B_var;
    int auto39194F68_player;
    int auto39194F68_state;
    int auto39194F68_var;
    int auto39194F68_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoB278680B_g = lib4A1496D1_gv_fLOODAI;
    autoB278680B_var = -1;
    while (true) {
        autoB278680B_var = PlayerGroupNextPlayer(autoB278680B_g, autoB278680B_var);
        if (autoB278680B_var < 0) { break; }
        auto39194F68_player = autoB278680B_var;
        auto39194F68_state = lib4A1496D1_gv_townStateBuilding;
        auto39194F68_var = 0;
        for ( ; auto39194F68_var < c_townMax; auto39194F68_var += 1 ) {
            auto39194F68_statevar = AIGetTownState(auto39194F68_player,auto39194F68_var);
            if (auto39194F68_statevar == auto39194F68_state) {
                if ((UnitCount("SpineCrawler", autoB278680B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 12)) {
                    AIBuild(autoB278680B_var, 0, auto39194F68_var, "SpineCrawler", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodWhip2_Init () {
    lib4A1496D1_gt_FloodWhip2 = TriggerCreate("lib4A1496D1_gt_FloodWhip2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodWhip2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodWhip2, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Pure Biospore Factory 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodPureBiosporeFactory2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto36833F55_g;
    int auto36833F55_var;
    int auto1B13AC17_player;
    int auto1B13AC17_state;
    int auto1B13AC17_var;
    int auto1B13AC17_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto36833F55_g = lib4A1496D1_gv_fLOODAI;
    auto36833F55_var = -1;
    while (true) {
        auto36833F55_var = PlayerGroupNextPlayer(auto36833F55_g, auto36833F55_var);
        if (auto36833F55_var < 0) { break; }
        auto1B13AC17_player = auto36833F55_var;
        auto1B13AC17_state = lib4A1496D1_gv_townStateBuilding;
        auto1B13AC17_var = 0;
        for ( ; auto1B13AC17_var < c_townMax; auto1B13AC17_var += 1 ) {
            auto1B13AC17_statevar = AIGetTownState(auto1B13AC17_player,auto1B13AC17_var);
            if (auto1B13AC17_statevar >= auto1B13AC17_state) {
                if ((UnitCount("PureBiosporeFactory", auto36833F55_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(auto36833F55_var, 0, auto1B13AC17_var, "PureBiosporeFactory", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodPureBiosporeFactory2_Init () {
    lib4A1496D1_gt_FloodPureBiosporeFactory2 = TriggerCreate("lib4A1496D1_gt_FloodPureBiosporeFactory2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodPureBiosporeFactory2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodPureBiosporeFactory2, 60.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Pure Biospore Factory
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodPureBiosporeFactory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCF27109A_g;
    int autoCF27109A_var;
    int auto1AEB56E7_player;
    int auto1AEB56E7_state;
    int auto1AEB56E7_var;
    int auto1AEB56E7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCF27109A_g = lib4A1496D1_gv_fLOODAI;
    autoCF27109A_var = -1;
    while (true) {
        autoCF27109A_var = PlayerGroupNextPlayer(autoCF27109A_g, autoCF27109A_var);
        if (autoCF27109A_var < 0) { break; }
        auto1AEB56E7_player = autoCF27109A_var;
        auto1AEB56E7_state = lib4A1496D1_gv_townStateBuilding;
        auto1AEB56E7_var = 0;
        for ( ; auto1AEB56E7_var < c_townMax; auto1AEB56E7_var += 1 ) {
            auto1AEB56E7_statevar = AIGetTownState(auto1AEB56E7_player,auto1AEB56E7_var);
            if (auto1AEB56E7_statevar >= auto1AEB56E7_state) {
                if ((UnitCount("PureBiosporeFactory", autoCF27109A_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4)) {
                    AIBuild(autoCF27109A_var, 0, auto1AEB56E7_var, "PureBiosporeFactory", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodPureBiosporeFactory2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodPureBiosporeFactory, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodPureBiosporeFactory_Init () {
    lib4A1496D1_gt_FloodPureBiosporeFactory = TriggerCreate("lib4A1496D1_gt_FloodPureBiosporeFactory_Func");
    TriggerEnable(lib4A1496D1_gt_FloodPureBiosporeFactory, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodPureBiosporeFactory, lib4A1496D1_gv_floodBuildPureBiosporeFactory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spore Vent
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSporeVent_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCA0EF92E_g;
    int autoCA0EF92E_var;
    int auto2CA8E650_player;
    int auto2CA8E650_state;
    int auto2CA8E650_var;
    int auto2CA8E650_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCA0EF92E_g = lib4A1496D1_gv_fLOODAI;
    autoCA0EF92E_var = -1;
    while (true) {
        autoCA0EF92E_var = PlayerGroupNextPlayer(autoCA0EF92E_g, autoCA0EF92E_var);
        if (autoCA0EF92E_var < 0) { break; }
        auto2CA8E650_player = autoCA0EF92E_var;
        auto2CA8E650_state = lib4A1496D1_gv_townStateBuilding;
        auto2CA8E650_var = 0;
        for ( ; auto2CA8E650_var < c_townMax; auto2CA8E650_var += 1 ) {
            auto2CA8E650_statevar = AIGetTownState(auto2CA8E650_player,auto2CA8E650_var);
            if (auto2CA8E650_statevar >= auto2CA8E650_state) {
                if ((UnitCount("SporeVent", autoCA0EF92E_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(autoCA0EF92E_var, 0, auto2CA8E650_var, "SporeVent", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodSporeVent2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodSporeVent, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSporeVent_Init () {
    lib4A1496D1_gt_FloodSporeVent = TriggerCreate("lib4A1496D1_gt_FloodSporeVent_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSporeVent, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodSporeVent, lib4A1496D1_gv_floodBuildSporeVent);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spore Vent 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSporeVent2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC7FBE658_g;
    int autoC7FBE658_var;
    int auto966B9FFC_player;
    int auto966B9FFC_state;
    int auto966B9FFC_var;
    int auto966B9FFC_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC7FBE658_g = lib4A1496D1_gv_fLOODAI;
    autoC7FBE658_var = -1;
    while (true) {
        autoC7FBE658_var = PlayerGroupNextPlayer(autoC7FBE658_g, autoC7FBE658_var);
        if (autoC7FBE658_var < 0) { break; }
        auto966B9FFC_player = autoC7FBE658_var;
        auto966B9FFC_state = lib4A1496D1_gv_townStateBuilding;
        auto966B9FFC_var = 0;
        for ( ; auto966B9FFC_var < c_townMax; auto966B9FFC_var += 1 ) {
            auto966B9FFC_statevar = AIGetTownState(auto966B9FFC_player,auto966B9FFC_var);
            if (auto966B9FFC_statevar >= auto966B9FFC_state) {
                if ((UnitCount("SporeVent", autoC7FBE658_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 5)) {
                    AIBuild(autoC7FBE658_var, 0, auto966B9FFC_var, "SporeVent", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSporeVent2_Init () {
    lib4A1496D1_gt_FloodSporeVent2 = TriggerCreate("lib4A1496D1_gt_FloodSporeVent2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSporeVent2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodSporeVent2, 65.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Synaptic Fungus
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSynapticFungus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto1FF04A0B_g;
    int auto1FF04A0B_var;
    int auto4C5A5201_player;
    int auto4C5A5201_state;
    int auto4C5A5201_var;
    int auto4C5A5201_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto1FF04A0B_g = lib4A1496D1_gv_fLOODAI;
    auto1FF04A0B_var = -1;
    while (true) {
        auto1FF04A0B_var = PlayerGroupNextPlayer(auto1FF04A0B_g, auto1FF04A0B_var);
        if (auto1FF04A0B_var < 0) { break; }
        auto4C5A5201_player = auto1FF04A0B_var;
        auto4C5A5201_state = lib4A1496D1_gv_townStateBuilding;
        auto4C5A5201_var = 0;
        for ( ; auto4C5A5201_var < c_townMax; auto4C5A5201_var += 1 ) {
            auto4C5A5201_statevar = AIGetTownState(auto4C5A5201_player,auto4C5A5201_var);
            if (auto4C5A5201_statevar >= auto4C5A5201_state) {
                if ((UnitCount("SynapticFungus", auto1FF04A0B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(auto1FF04A0B_var, 2, auto4C5A5201_var, "SynapticFungus", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodSynapticFungus2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodSynapticFungus, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSynapticFungus_Init () {
    lib4A1496D1_gt_FloodSynapticFungus = TriggerCreate("lib4A1496D1_gt_FloodSynapticFungus_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSynapticFungus, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodSynapticFungus, lib4A1496D1_gv_floodBuildSynapticFungus);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Synaptic Fungus 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSynapticFungus2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAD3D7D72_g;
    int autoAD3D7D72_var;
    int auto2E319E08_player;
    int auto2E319E08_state;
    int auto2E319E08_var;
    int auto2E319E08_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAD3D7D72_g = lib4A1496D1_gv_fLOODAI;
    autoAD3D7D72_var = -1;
    while (true) {
        autoAD3D7D72_var = PlayerGroupNextPlayer(autoAD3D7D72_g, autoAD3D7D72_var);
        if (autoAD3D7D72_var < 0) { break; }
        auto2E319E08_player = autoAD3D7D72_var;
        auto2E319E08_state = lib4A1496D1_gv_townStateBuilding;
        auto2E319E08_var = 0;
        for ( ; auto2E319E08_var < c_townMax; auto2E319E08_var += 1 ) {
            auto2E319E08_statevar = AIGetTownState(auto2E319E08_player,auto2E319E08_var);
            if (auto2E319E08_statevar >= auto2E319E08_state) {
                if ((UnitCount("SynapticFungus", autoAD3D7D72_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2)) {
                    AIBuild(autoAD3D7D72_var, 2, auto2E319E08_var, "SynapticFungus", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSynapticFungus2_Init () {
    lib4A1496D1_gt_FloodSynapticFungus2 = TriggerCreate("lib4A1496D1_gt_FloodSynapticFungus2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSynapticFungus2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodSynapticFungus2, 85.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spore Ventilator
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSporeVentilator_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoAC7E66B3_g;
    int autoAC7E66B3_var;
    int auto9BC31558_player;
    int auto9BC31558_state;
    int auto9BC31558_var;
    int auto9BC31558_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoAC7E66B3_g = lib4A1496D1_gv_fLOODAI;
    autoAC7E66B3_var = -1;
    while (true) {
        autoAC7E66B3_var = PlayerGroupNextPlayer(autoAC7E66B3_g, autoAC7E66B3_var);
        if (autoAC7E66B3_var < 0) { break; }
        auto9BC31558_player = autoAC7E66B3_var;
        auto9BC31558_state = lib4A1496D1_gv_townStateEstabilished;
        auto9BC31558_var = 0;
        for ( ; auto9BC31558_var < c_townMax; auto9BC31558_var += 1 ) {
            auto9BC31558_statevar = AIGetTownState(auto9BC31558_player,auto9BC31558_var);
            if (auto9BC31558_statevar >= auto9BC31558_state) {
                if ((UnitCount("SporeVentilator", autoAC7E66B3_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 8)) {
                    AIBuild(autoAC7E66B3_var, 0, auto9BC31558_var, "SporeVentilator", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodSporeVentilator2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodSporeVentilator, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSporeVentilator_Init () {
    lib4A1496D1_gt_FloodSporeVentilator = TriggerCreate("lib4A1496D1_gt_FloodSporeVentilator_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSporeVentilator, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodSporeVentilator, lib4A1496D1_gv_floodBuildSporeVentilator);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Spore Ventilator 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodSporeVentilator2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto16CEB0FF_g;
    int auto16CEB0FF_var;
    int auto3B2278D7_player;
    int auto3B2278D7_state;
    int auto3B2278D7_var;
    int auto3B2278D7_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto16CEB0FF_g = lib4A1496D1_gv_fLOODAI;
    auto16CEB0FF_var = -1;
    while (true) {
        auto16CEB0FF_var = PlayerGroupNextPlayer(auto16CEB0FF_g, auto16CEB0FF_var);
        if (auto16CEB0FF_var < 0) { break; }
        auto3B2278D7_player = auto16CEB0FF_var;
        auto3B2278D7_state = lib4A1496D1_gv_townStateEstabilished;
        auto3B2278D7_var = 0;
        for ( ; auto3B2278D7_var < c_townMax; auto3B2278D7_var += 1 ) {
            auto3B2278D7_statevar = AIGetTownState(auto3B2278D7_player,auto3B2278D7_var);
            if (auto3B2278D7_statevar >= auto3B2278D7_state) {
                if ((UnitCount("SporeVentilator", auto16CEB0FF_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 8)) {
                    AIBuild(auto16CEB0FF_var, 0, auto3B2278D7_var, "SporeVentilator", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodSporeVentilator2_Init () {
    lib4A1496D1_gt_FloodSporeVentilator2 = TriggerCreate("lib4A1496D1_gt_FloodSporeVentilator2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodSporeVentilator2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodSporeVentilator2, 80.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Acid Spewer
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodAcidSpewer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9E4E7918_g;
    int auto9E4E7918_var;
    int auto5B2A0EE3_player;
    int auto5B2A0EE3_state;
    int auto5B2A0EE3_var;
    int auto5B2A0EE3_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9E4E7918_g = lib4A1496D1_gv_fLOODAI;
    auto9E4E7918_var = -1;
    while (true) {
        auto9E4E7918_var = PlayerGroupNextPlayer(auto9E4E7918_g, auto9E4E7918_var);
        if (auto9E4E7918_var < 0) { break; }
        auto5B2A0EE3_player = auto9E4E7918_var;
        auto5B2A0EE3_state = lib4A1496D1_gv_townStateEstabilished;
        auto5B2A0EE3_var = 0;
        for ( ; auto5B2A0EE3_var < c_townMax; auto5B2A0EE3_var += 1 ) {
            auto5B2A0EE3_statevar = AIGetTownState(auto5B2A0EE3_player,auto5B2A0EE3_var);
            if (auto5B2A0EE3_statevar == auto5B2A0EE3_state) {
                if ((UnitCount("AcidSpewer", auto9E4E7918_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 8)) {
                    AIBuild(auto9E4E7918_var, 0, auto5B2A0EE3_var, "AcidSpewer", 1, -1);
                }

            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodAcidSpewer2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodAcidSpewer, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodAcidSpewer_Init () {
    lib4A1496D1_gt_FloodAcidSpewer = TriggerCreate("lib4A1496D1_gt_FloodAcidSpewer_Func");
    TriggerEnable(lib4A1496D1_gt_FloodAcidSpewer, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodAcidSpewer, lib4A1496D1_gv_floodBuildAcidSpewer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Acid Spewer 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodAcidSpewer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto01B941C2_g;
    int auto01B941C2_var;
    int auto6D9E6951_player;
    int auto6D9E6951_state;
    int auto6D9E6951_var;
    int auto6D9E6951_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto01B941C2_g = lib4A1496D1_gv_fLOODAI;
    auto01B941C2_var = -1;
    while (true) {
        auto01B941C2_var = PlayerGroupNextPlayer(auto01B941C2_g, auto01B941C2_var);
        if (auto01B941C2_var < 0) { break; }
        auto6D9E6951_player = auto01B941C2_var;
        auto6D9E6951_state = lib4A1496D1_gv_townStateEstabilished;
        auto6D9E6951_var = 0;
        for ( ; auto6D9E6951_var < c_townMax; auto6D9E6951_var += 1 ) {
            auto6D9E6951_statevar = AIGetTownState(auto6D9E6951_player,auto6D9E6951_var);
            if (auto6D9E6951_statevar == auto6D9E6951_state) {
                if ((UnitCount("AcidSpewer", auto01B941C2_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 8)) {
                    AIBuild(auto01B941C2_var, 0, auto6D9E6951_var, "AcidSpewer", 1, -1);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodAcidSpewer2_Init () {
    lib4A1496D1_gt_FloodAcidSpewer2 = TriggerCreate("lib4A1496D1_gt_FloodAcidSpewer2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodAcidSpewer2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodAcidSpewer2, 45.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Gravemind
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodGravemind_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoE7FCBF56_g;
    int autoE7FCBF56_var;
    int autoEA5474DF_player;
    int autoEA5474DF_state;
    int autoEA5474DF_var;
    int autoEA5474DF_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoE7FCBF56_g = lib4A1496D1_gv_fLOODAI;
    autoE7FCBF56_var = -1;
    while (true) {
        autoE7FCBF56_var = PlayerGroupNextPlayer(autoE7FCBF56_g, autoE7FCBF56_var);
        if (autoE7FCBF56_var < 0) { break; }
        autoEA5474DF_player = autoE7FCBF56_var;
        autoEA5474DF_state = lib4A1496D1_gv_townStateBuilding;
        autoEA5474DF_var = 0;
        for ( ; autoEA5474DF_var < c_townMax; autoEA5474DF_var += 1 ) {
            autoEA5474DF_statevar = AIGetTownState(autoEA5474DF_player,autoEA5474DF_var);
            if (autoEA5474DF_statevar >= autoEA5474DF_state) {
                PlayerModifyPropertyInt(autoE7FCBF56_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                AITrain(autoE7FCBF56_var, 3, autoEA5474DF_var, "Lair", 1);
                AIBuild(autoE7FCBF56_var, 3, autoEA5474DF_var, "Lair", 1, -1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodGravemind2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodGravemind, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodGravemind_Init () {
    lib4A1496D1_gt_FloodGravemind = TriggerCreate("lib4A1496D1_gt_FloodGravemind_Func");
    TriggerEnable(lib4A1496D1_gt_FloodGravemind, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodGravemind, lib4A1496D1_gv_floodBuildGravemind);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Gravemind 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodGravemind2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoFD4BF287_g;
    int autoFD4BF287_var;
    int auto8D31FCA1_player;
    int auto8D31FCA1_state;
    int auto8D31FCA1_var;
    int auto8D31FCA1_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFD4BF287_g = lib4A1496D1_gv_fLOODAI;
    autoFD4BF287_var = -1;
    while (true) {
        autoFD4BF287_var = PlayerGroupNextPlayer(autoFD4BF287_g, autoFD4BF287_var);
        if (autoFD4BF287_var < 0) { break; }
        auto8D31FCA1_player = autoFD4BF287_var;
        auto8D31FCA1_state = lib4A1496D1_gv_townStateBuilding;
        auto8D31FCA1_var = 0;
        for ( ; auto8D31FCA1_var < c_townMax; auto8D31FCA1_var += 1 ) {
            auto8D31FCA1_statevar = AIGetTownState(auto8D31FCA1_player,auto8D31FCA1_var);
            if (auto8D31FCA1_statevar >= auto8D31FCA1_state) {
                PlayerModifyPropertyInt(autoFD4BF287_var, c_playerPropMinerals, c_playerPropOperAdd, 750);
                AITrain(autoFD4BF287_var, 3, auto8D31FCA1_var, "Lair", 1);
                AIBuild(autoFD4BF287_var, 3, auto8D31FCA1_var, "Lair", 1, -1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodGravemind2_Init () {
    lib4A1496D1_gt_FloodGravemind2 = TriggerCreate("lib4A1496D1_gt_FloodGravemind2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodGravemind2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodGravemind2, 85.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Keymind
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodKeymind_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoA68709E6_g;
    int autoA68709E6_var;
    int autoE936C95C_player;
    int autoE936C95C_state;
    int autoE936C95C_var;
    int autoE936C95C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA68709E6_g = lib4A1496D1_gv_fLOODAI;
    autoA68709E6_var = -1;
    while (true) {
        autoA68709E6_var = PlayerGroupNextPlayer(autoA68709E6_g, autoA68709E6_var);
        if (autoA68709E6_var < 0) { break; }
        autoE936C95C_player = autoA68709E6_var;
        autoE936C95C_state = lib4A1496D1_gv_townStateBuilding;
        autoE936C95C_var = 0;
        for ( ; autoE936C95C_var < c_townMax; autoE936C95C_var += 1 ) {
            autoE936C95C_statevar = AIGetTownState(autoE936C95C_player,autoE936C95C_var);
            if (autoE936C95C_statevar >= autoE936C95C_state) {
                PlayerModifyPropertyInt(autoA68709E6_var, c_playerPropMinerals, c_playerPropOperAdd, 900);
                AITrain(autoA68709E6_var, 3, autoE936C95C_var, "Hive", 1);
                AIBuild(autoA68709E6_var, 3, autoE936C95C_var, "Hive", 1, -1);
            }
        }
    }
    TriggerEnable(lib4A1496D1_gt_FloodKeymind2, true);
    Wait(0.0625, c_timeGame);
    TriggerEnable(lib4A1496D1_gt_FloodKeymind, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodKeymind_Init () {
    lib4A1496D1_gt_FloodKeymind = TriggerCreate("lib4A1496D1_gt_FloodKeymind_Func");
    TriggerEnable(lib4A1496D1_gt_FloodKeymind, false);
    TriggerAddEventTimer(lib4A1496D1_gt_FloodKeymind, lib4A1496D1_gv_floodBuildKeymind);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood Keymind 2
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodKeymind2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto05E09049_g;
    int auto05E09049_var;
    int autoCBC30B4C_player;
    int autoCBC30B4C_state;
    int autoCBC30B4C_var;
    int autoCBC30B4C_statevar;

    // Actions
    if (!runActions) {
        return true;
    }

    auto05E09049_g = lib4A1496D1_gv_fLOODAI;
    auto05E09049_var = -1;
    while (true) {
        auto05E09049_var = PlayerGroupNextPlayer(auto05E09049_g, auto05E09049_var);
        if (auto05E09049_var < 0) { break; }
        autoCBC30B4C_player = auto05E09049_var;
        autoCBC30B4C_state = lib4A1496D1_gv_townStateBuilding;
        autoCBC30B4C_var = 0;
        for ( ; autoCBC30B4C_var < c_townMax; autoCBC30B4C_var += 1 ) {
            autoCBC30B4C_statevar = AIGetTownState(autoCBC30B4C_player,autoCBC30B4C_var);
            if (autoCBC30B4C_statevar >= autoCBC30B4C_state) {
                PlayerModifyPropertyInt(auto05E09049_var, c_playerPropMinerals, c_playerPropOperAdd, 900);
                AITrain(auto05E09049_var, 3, autoCBC30B4C_var, "Hive", 1);
                AIBuild(auto05E09049_var, 3, autoCBC30B4C_var, "Hive", 1, -1);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodKeymind2_Init () {
    lib4A1496D1_gt_FloodKeymind2 = TriggerCreate("lib4A1496D1_gt_FloodKeymind2_Func");
    TriggerEnable(lib4A1496D1_gt_FloodKeymind2, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodKeymind2, 105.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI TIMERS 3
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_AITIMERS3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(lib4A1496D1_gv_floodBuildBiomassConverter, 15.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildBiomaterialDen, 10.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildBiomaterialMass, 60.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildWhip, 125.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildPureBiosporeFactory, 70.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildSporeVent, 135.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildSynapticFungus, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildSporeVentilator, 225.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildAcidSpewer, 110.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildGravemind, 240.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodBuildKeymind, 480.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainConstructorFormWorker, 2.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainCombatForm, 65.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainRangedCombatForm, 72.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainPodForm, 86.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainRangedForm, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainTankForm, 276.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainCarrierForm, 485.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainSpawnerForm, 140.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainJuggernautForm, 250.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainAbominationForm, 500.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainSwarmForm, 205.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainBomberForm, 490.0, false, c_timeGame);
    TimerStart(lib4A1496D1_gv_floodTrainMalagorkorForm, 540.0, false, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_AITIMERS3_Init () {
    lib4A1496D1_gt_AITIMERS3 = TriggerCreate("lib4A1496D1_gt_AITIMERS3_Func");
    TriggerAddEventMapInit(lib4A1496D1_gt_AITIMERS3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood EXPAND TIMER
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodEXPANDTIMER_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_floodAIExpandAmount;
    int lv_floodAIExpandAmount2;
    int lv_floodAIExpandAmount3;
    unitgroup lv_floodTownHallUnitGroup;

    // Automatic Variable Declarations
    playergroup auto48F9E51B_g;
    int auto48F9E51B_var;
    int auto7F9860B4_player;
    int auto7F9860B4_state;
    int auto7F9860B4_var;
    int auto7F9860B4_statevar;

    // Variable Initialization
    lv_floodTownHallUnitGroup = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    auto48F9E51B_g = lib4A1496D1_gv_fLOODAI;
    auto48F9E51B_var = -1;
    while (true) {
        auto48F9E51B_var = PlayerGroupNextPlayer(auto48F9E51B_g, auto48F9E51B_var);
        if (auto48F9E51B_var < 0) { break; }
        auto7F9860B4_player = auto48F9E51B_var;
        auto7F9860B4_state = lib4A1496D1_gv_townStateBuilding;
        auto7F9860B4_var = 0;
        for ( ; auto7F9860B4_var < c_townMax; auto7F9860B4_var += 1 ) {
            auto7F9860B4_statevar = AIGetTownState(auto7F9860B4_player,auto7F9860B4_var);
            if (auto7F9860B4_statevar >= auto7F9860B4_state) {
                lv_floodAIExpandAmount = (lv_floodAIExpandAmount + UnitGroupCount(UnitGroup("Hatchery", auto48F9E51B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                lv_floodAIExpandAmount2 = (lv_floodAIExpandAmount2 + UnitGroupCount(UnitGroup("Lair", auto48F9E51B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                lv_floodAIExpandAmount3 = (lv_floodAIExpandAmount3 + UnitGroupCount(UnitGroup("Hive", auto48F9E51B_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive));
                if (((lv_floodAIExpandAmount < 4) || (lv_floodAIExpandAmount2 < 4) || (lv_floodAIExpandAmount3 < 4))) {
                    PlayerModifyPropertyInt(auto48F9E51B_var, c_playerPropMinerals, c_playerPropOperAdd, 1250);
                    AIExpand(auto48F9E51B_var, PlayerStartLocation(auto48F9E51B_var), "Hatchery");
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodEXPANDTIMER_Init () {
    lib4A1496D1_gt_FloodEXPANDTIMER = TriggerCreate("lib4A1496D1_gt_FloodEXPANDTIMER_Func");
    TriggerEnable(lib4A1496D1_gt_FloodEXPANDTIMER, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodEXPANDTIMER, 240.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: -Flood  Attack Timer
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_gt_FloodAttackTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto78B7A6BF_g;
    int auto78B7A6BF_var;
    unitgroup auto95F791DB_g;
    int auto95F791DB_u;
    unit auto95F791DB_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto78B7A6BF_g = lib4A1496D1_gv_fLOODAI;
    auto78B7A6BF_var = -1;
    while (true) {
        auto78B7A6BF_var = PlayerGroupNextPlayer(auto78B7A6BF_g, auto78B7A6BF_var);
        if (auto78B7A6BF_var < 0) { break; }
        lib4A1496D1_gv_kILLZEMALL = UnitGroupAlliance(auto78B7A6BF_var, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterPlayer) | (1 << c_targetFilterAlly) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto95F791DB_g = UnitGroup(null, auto78B7A6BF_var, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto95F791DB_u = UnitGroupCount(auto95F791DB_g, c_unitCountAll);
        for (;; auto95F791DB_u -= 1) {
            auto95F791DB_var = UnitGroupUnitFromEnd(auto95F791DB_g, auto95F791DB_u);
            if (auto95F791DB_var == null) { break; }
            UnitIssueOrder(auto95F791DB_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(lib4A1496D1_gv_kILLZEMALL, c_unitCountAlive))), c_orderQueueAddToEnd);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib4A1496D1_gt_FloodAttackTimer_Init () {
    lib4A1496D1_gt_FloodAttackTimer = TriggerCreate("lib4A1496D1_gt_FloodAttackTimer_Func");
    TriggerEnable(lib4A1496D1_gt_FloodAttackTimer, false);
    TriggerAddEventTimePeriodic(lib4A1496D1_gt_FloodAttackTimer, 210.0, c_timeGame);
}

void lib4A1496D1_InitTriggers () {
    lib4A1496D1_gt_Chooseyourracetrigger_Init();
    lib4A1496D1_gt_Diffcultyselected_Init();
    lib4A1496D1_gt_UntitledTrigger002_Init();
    lib4A1496D1_gt_MurlocNamedFish_Init();
    lib4A1496D1_gt_AITIMERS_Init();
    lib4A1496D1_gt_ChooseAIDifficulty2_Init();
    lib4A1496D1_gt_UNSCEASYLogisticsHanger_Init();
    lib4A1496D1_gt_UNSCEASYLogisticsHanger2_Init();
    lib4A1496D1_gt_UNSCEASYInfantryBarracks_Init();
    lib4A1496D1_gt_UNSCEASYInfantryBarracks2_Init();
    lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory_Init();
    lib4A1496D1_gt_UNSCEASYMotorizedVehicleFactory2_Init();
    lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter_Init();
    lib4A1496D1_gt_UNSCEASYFowardOperatingResearchCenter2_Init();
    lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter_Init();
    lib4A1496D1_gt_UNSCEASYAdvancedResearchCenter2_Init();
    lib4A1496D1_gt_UNSCEASYMedicalCore_Init();
    lib4A1496D1_gt_UNSCEASYMedicalCore2_Init();
    lib4A1496D1_gt_UNSCEASYCyclops_Init();
    lib4A1496D1_gt_UNSCEASYCyclops2_Init();
    lib4A1496D1_gt_UNSCEASYCombatMarine_Init();
    lib4A1496D1_gt_UNSCEASYCombatMarine2_Init();
    lib4A1496D1_gt_UNSCEASYMedicalOperator_Init();
    lib4A1496D1_gt_UNSCEASYMedicalOperator2_Init();
    lib4A1496D1_gt_UNSCEASYWarthog_Init();
    lib4A1496D1_gt_UNSCEASYWarthog2_Init();
    lib4A1496D1_gt_UNSCEASYElephant_Init();
    lib4A1496D1_gt_UNSCEASYElephant2_Init();
    lib4A1496D1_gt_UNSCEASYScorpion_Init();
    lib4A1496D1_gt_UNSCEASYScorpion2_Init();
    lib4A1496D1_gt_UNSCEASYEXPANDTIMER_Init();
    lib4A1496D1_gt_UNSCEASYAttackTimer_Init();
    lib4A1496D1_gt_UNSCMODERATELogisticsHanger4_Init();
    lib4A1496D1_gt_UNSCMODERATELogisticsHanger3_Init();
    lib4A1496D1_gt_UNSCMODERATEInfantryBarracks4_Init();
    lib4A1496D1_gt_UNSCMODERATEInfantryBarracks3_Init();
    lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory4_Init();
    lib4A1496D1_gt_UNSCMODERATEMotorizedVehicleFactory3_Init();
    lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility_Init();
    lib4A1496D1_gt_UNSCMODERATEShipyardProductionFacility2_Init();
    lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter4_Init();
    lib4A1496D1_gt_UNSCMODERATEFowardOperatingResearchCenter3_Init();
    lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter4_Init();
    lib4A1496D1_gt_UNSCMODERATEAdvancedResearchCenter3_Init();
    lib4A1496D1_gt_UNSCMODERATEMedicalCore4_Init();
    lib4A1496D1_gt_UNSCMODERATEMedicalCore3_Init();
    lib4A1496D1_gt_UNSCMODERATEShipReactorLab_Init();
    lib4A1496D1_gt_UNSCMODERATEShipReactorLab2_Init();
    lib4A1496D1_gt_UNSCMODERATECyclops4_Init();
    lib4A1496D1_gt_UNSCMODERATECyclops3_Init();
    lib4A1496D1_gt_UNSCMODERATECombatMarine4_Init();
    lib4A1496D1_gt_UNSCMODERATECombatMarine3_Init();
    lib4A1496D1_gt_UNSCMODERATERocketMarine_Init();
    lib4A1496D1_gt_UNSCMODERATERocketMarine2_Init();
    lib4A1496D1_gt_UNSCMODERATEMarksmanMarine_Init();
    lib4A1496D1_gt_UNSCMODERATEMarksmanMarine2_Init();
    lib4A1496D1_gt_UNSCMODERATEHellbringer_Init();
    lib4A1496D1_gt_UNSCMODERATEHellbringer2_Init();
    lib4A1496D1_gt_UNSCMODERATEMedicalOperator4_Init();
    lib4A1496D1_gt_UNSCMODERATEMedicalOperator3_Init();
    lib4A1496D1_gt_UNSCMODERATESpartanII_Init();
    lib4A1496D1_gt_UNSCMODERATESpartanII2_Init();
    lib4A1496D1_gt_UNSCMODERATEWarthog4_Init();
    lib4A1496D1_gt_UNSCMODERATEWarthog3_Init();
    lib4A1496D1_gt_UNSCMODERATEElephant4_Init();
    lib4A1496D1_gt_UNSCMODERATEElephant3_Init();
    lib4A1496D1_gt_UNSCMODERATEKoidak6_Init();
    lib4A1496D1_gt_UNSCMODERATEKodiak5_Init();
    lib4A1496D1_gt_UNSCMODERATEHornet_Init();
    lib4A1496D1_gt_UNSCMODERATEHornet2_Init();
    lib4A1496D1_gt_UNSCMODERATEScorpion4_Init();
    lib4A1496D1_gt_UNSCMODERATEScorpion3_Init();
    lib4A1496D1_gt_UNSCMODERATECobra_Init();
    lib4A1496D1_gt_UNSCMODERATECobra2_Init();
    lib4A1496D1_gt_UNSCMODERATEEXPANDTIMER2_Init();
    lib4A1496D1_gt_UNSCMODERATEAttackTimer2_Init();
    lib4A1496D1_gt_UNSCHARDLogisticsHanger6_Init();
    lib4A1496D1_gt_UNSCHARDLogisticsHanger5_Init();
    lib4A1496D1_gt_UNSCHARDInfantryBarracks6_Init();
    lib4A1496D1_gt_UNSCHARDInfantryBarracks5_Init();
    lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory6_Init();
    lib4A1496D1_gt_UNSCHARDMotorizedVehicleFactory5_Init();
    lib4A1496D1_gt_UNSCHARDShipyardProductionFacility4_Init();
    lib4A1496D1_gt_UNSCHARDShipyardProductionFacility3_Init();
    lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter6_Init();
    lib4A1496D1_gt_UNSCHARDFowardOperatingResearchCenter5_Init();
    lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter6_Init();
    lib4A1496D1_gt_UNSCHARDAdvancedResearchCenter5_Init();
    lib4A1496D1_gt_UNSCHARDShipReactorLab4_Init();
    lib4A1496D1_gt_UNSCHARDShipReactorLab3_Init();
    lib4A1496D1_gt_UNSCHARDCyclops6_Init();
    lib4A1496D1_gt_UNSCHARDCyclops5_Init();
    lib4A1496D1_gt_UNSCHARDCombatMarine6_Init();
    lib4A1496D1_gt_UNSCHARDCombatMarine5_Init();
    lib4A1496D1_gt_UNSCHARDWarthog6_Init();
    lib4A1496D1_gt_UNSCHARDWarthog5_Init();
    lib4A1496D1_gt_UNSCHARDHornet4_Init();
    lib4A1496D1_gt_UNSCHARDHornet3_Init();
    lib4A1496D1_gt_UNSCHARDScorpion6_Init();
    lib4A1496D1_gt_UNSCHARDScorpion5_Init();
    lib4A1496D1_gt_UNSCHardKoidak7_Init();
    lib4A1496D1_gt_UNSCHardKodiak6_Init();
    lib4A1496D1_gt_UNSCHARDCobra4_Init();
    lib4A1496D1_gt_UNSCHARDCobra3_Init();
    lib4A1496D1_gt_UNSCHARDMantis_Init();
    lib4A1496D1_gt_UNSCHARDMantis2_Init();
    lib4A1496D1_gt_UNSCHARDVulture_Init();
    lib4A1496D1_gt_UNSCHARDVulture2_Init();
    lib4A1496D1_gt_UNSCHARDFrigate_Init();
    lib4A1496D1_gt_UNSCHARDFrigate2_Init();
    lib4A1496D1_gt_UNSCHARDEXPANDTIMER3_Init();
    lib4A1496D1_gt_UNSCHARDAttackTimer3_Init();
    lib4A1496D1_gt_AITIMERS2_Init();
    lib4A1496D1_gt_ChooseAIDifficulty3_Init();
    lib4A1496D1_gt_CovenantEasyWarehouse_Init();
    lib4A1496D1_gt_CovenantEasyWarehouse2_Init();
    lib4A1496D1_gt_CovenantEasyInfantryHall_Init();
    lib4A1496D1_gt_CovenantEasyInfantryHall2_Init();
    lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory_Init();
    lib4A1496D1_gt_CovenantEasyPropolusionVehicleFactory2_Init();
    lib4A1496D1_gt_CovenantEasyChamberOfReclimation_Init();
    lib4A1496D1_gt_CovenantEasyChamberOfReclimation2_Init();
    lib4A1496D1_gt_CovenantEasyTemple_Init();
    lib4A1496D1_gt_CovenantEasyTemple2_Init();
    lib4A1496D1_gt_CovenantEasyHuragok_Init();
    lib4A1496D1_gt_CovenantEasyHuragok2_Init();
    lib4A1496D1_gt_CovenantEasyBrute_Init();
    lib4A1496D1_gt_CovenantEasyBrute2_Init();
    lib4A1496D1_gt_CovenantEasyGhost_Init();
    lib4A1496D1_gt_CovenantEasyGhost2_Init();
    lib4A1496D1_gt_CovenantEasyGrunt_Init();
    lib4A1496D1_gt_CovenantEasyGrunt2_Init();
    lib4A1496D1_gt_CovenantEasySuicideHuragok_Init();
    lib4A1496D1_gt_CovenantEasySuicideHuragok2_Init();
    lib4A1496D1_gt_COVEASYEXPANDTIMER_Init();
    lib4A1496D1_gt_COVEASYAttackTimer_Init();
    lib4A1496D1_gt_CovenantModerateWarehouse4_Init();
    lib4A1496D1_gt_CovenantModerateWarehouse3_Init();
    lib4A1496D1_gt_CovenantModerateInfantryHall4_Init();
    lib4A1496D1_gt_CovenantModerateInfantryHall3_Init();
    lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory4_Init();
    lib4A1496D1_gt_CovenantModeratePropolusionVehicleFactory3_Init();
    lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility4_Init();
    lib4A1496D1_gt_CovenantModerateAtmosphericShipyardProductionFacility3_Init();
    lib4A1496D1_gt_CovenantModerateChamberOfReclimation4_Init();
    lib4A1496D1_gt_CovenantModerateChamberOfReclimation3_Init();
    lib4A1496D1_gt_CovenantModerateTemple4_Init();
    lib4A1496D1_gt_CovenantModerateTemple3_Init();
    lib4A1496D1_gt_CovenantModerateMegaTurret6_Init();
    lib4A1496D1_gt_CovenantModerateMegaTurret5_Init();
    lib4A1496D1_gt_CovenantModerateHuragok4_Init();
    lib4A1496D1_gt_CovenantModerateHuragok3_Init();
    lib4A1496D1_gt_CovenantModerateBrute4_Init();
    lib4A1496D1_gt_CovenantModerateBrute3_Init();
    lib4A1496D1_gt_CovenantModerateGhost4_Init();
    lib4A1496D1_gt_CovenantModerateGhost3_Init();
    lib4A1496D1_gt_CovenantModerateBanshee6_Init();
    lib4A1496D1_gt_CovenantModerateBanshee5_Init();
    lib4A1496D1_gt_CovenantModerateBruteChieftan8_Init();
    lib4A1496D1_gt_CovenantModerateBruteChieftan7_Init();
    lib4A1496D1_gt_CovenantModerateElite10_Init();
    lib4A1496D1_gt_CovenantModerateElite9_Init();
    lib4A1496D1_gt_CovenantModerateHunter12_Init();
    lib4A1496D1_gt_CovenantModerateHunter11_Init();
    lib4A1496D1_gt_CovenantModerateLocust14_Init();
    lib4A1496D1_gt_CovenantModerateLocust13_Init();
    lib4A1496D1_gt_CovenantModerateSniperJackal18_Init();
    lib4A1496D1_gt_CovenantModerateSniperJackal17_Init();
    lib4A1496D1_gt_CovenantModerateWraith20_Init();
    lib4A1496D1_gt_CovenantModerateWraith19_Init();
    lib4A1496D1_gt_CovenantModerateAntiAirWraith22_Init();
    lib4A1496D1_gt_CovenantModerateAntiAirWraith21_Init();
    lib4A1496D1_gt_COVMODERATEEXPANDTIMER2_Init();
    lib4A1496D1_gt_COVMODERATEAttackTimer2_Init();
    lib4A1496D1_gt_CovenantHardWarehouse6_Init();
    lib4A1496D1_gt_CovenantHardWarehouse5_Init();
    lib4A1496D1_gt_CovenantHardInfantryHall6_Init();
    lib4A1496D1_gt_CovenantHardInfantryHall5_Init();
    lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory6_Init();
    lib4A1496D1_gt_CovenantHardPropolusionVehicleFactory5_Init();
    lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility6_Init();
    lib4A1496D1_gt_CovenantHardAtmosphericShipyardProductionFacility5_Init();
    lib4A1496D1_gt_CovenantHardChamberOfReclimation6_Init();
    lib4A1496D1_gt_CovenantHardChamberOfReclimation5_Init();
    lib4A1496D1_gt_CovenantHardTemple6_Init();
    lib4A1496D1_gt_CovenantHardTemple5_Init();
    lib4A1496D1_gt_CovenantHardMegaTurret8_Init();
    lib4A1496D1_gt_CovenantHardMegaTurret7_Init();
    lib4A1496D1_gt_CovenantHardHuragok6_Init();
    lib4A1496D1_gt_CovenantHardHuragok5_Init();
    lib4A1496D1_gt_CovenantHardBrute6_Init();
    lib4A1496D1_gt_CovenantHardBrute5_Init();
    lib4A1496D1_gt_CovenantHardBanshee8_Init();
    lib4A1496D1_gt_CovenantHardBanshee7_Init();
    lib4A1496D1_gt_CovenantHardLocust16_Init();
    lib4A1496D1_gt_CovenantHardLocust15_Init();
    lib4A1496D1_gt_CovenantHardWraith22_Init();
    lib4A1496D1_gt_CovenantHardWraith21_Init();
    lib4A1496D1_gt_CovenantHardAntiAirWraith24_Init();
    lib4A1496D1_gt_CovenantHardAntiAirWraith23_Init();
    lib4A1496D1_gt_CovenantHardCASClassCarrier4_Init();
    lib4A1496D1_gt_CovenantHardCASClassCarrier3_Init();
    lib4A1496D1_gt_CovenantHardScarab6_Init();
    lib4A1496D1_gt_CovenantHardScarab5_Init();
    lib4A1496D1_gt_CovenantHardVampire8_Init();
    lib4A1496D1_gt_CovenantHardVampire7_Init();
    lib4A1496D1_gt_COVHARDEXPANDTIMER3_Init();
    lib4A1496D1_gt_COVHARDAttackTimer3_Init();
    lib4A1496D1_gt_ChooseAIDifficulty4_Init();
    lib4A1496D1_gt_FloodConstructorForm_Init();
    lib4A1496D1_gt_FloodConstructorForm2_Init();
    lib4A1496D1_gt_FloodCombatForm_Init();
    lib4A1496D1_gt_FloodCombatForm2_Init();
    lib4A1496D1_gt_FloodRangedCombatForm_Init();
    lib4A1496D1_gt_FloodRangedCombatForm2_Init();
    lib4A1496D1_gt_FloodPodForm_Init();
    lib4A1496D1_gt_FloodPodForm2_Init();
    lib4A1496D1_gt_FloodRangedForm_Init();
    lib4A1496D1_gt_FloodRangedForm2_Init();
    lib4A1496D1_gt_FloodTankForm_Init();
    lib4A1496D1_gt_FloodTankForm2_Init();
    lib4A1496D1_gt_FloodCarrierForm_Init();
    lib4A1496D1_gt_FloodCarrierForm2_Init();
    lib4A1496D1_gt_FloodSpawnerForm_Init();
    lib4A1496D1_gt_FloodSpawnerForm2_Init();
    lib4A1496D1_gt_FloodJuggernautForm_Init();
    lib4A1496D1_gt_FloodJuggernautForm2_Init();
    lib4A1496D1_gt_FloodAbominationForm_Init();
    lib4A1496D1_gt_FloodAbominationForm2_Init();
    lib4A1496D1_gt_FloodSwarmForm_Init();
    lib4A1496D1_gt_FloodSwarmForm2_Init();
    lib4A1496D1_gt_FloodBomberForm_Init();
    lib4A1496D1_gt_FloodBomberForm2_Init();
    lib4A1496D1_gt_FloodMalagorkorForm_Init();
    lib4A1496D1_gt_FloodMalagorkorForm2_Init();
    lib4A1496D1_gt_FloodBiomaterialConverter_Init();
    lib4A1496D1_gt_FloodBiomaterialConverter2_Init();
    lib4A1496D1_gt_FloodBiomaterialDen_Init();
    lib4A1496D1_gt_FloodBiomaterialDen2_Init();
    lib4A1496D1_gt_FloodBiomaterialMass_Init();
    lib4A1496D1_gt_FloodBiomaterialMass2_Init();
    lib4A1496D1_gt_FloodWhip_Init();
    lib4A1496D1_gt_FloodWhip2_Init();
    lib4A1496D1_gt_FloodPureBiosporeFactory2_Init();
    lib4A1496D1_gt_FloodPureBiosporeFactory_Init();
    lib4A1496D1_gt_FloodSporeVent_Init();
    lib4A1496D1_gt_FloodSporeVent2_Init();
    lib4A1496D1_gt_FloodSynapticFungus_Init();
    lib4A1496D1_gt_FloodSynapticFungus2_Init();
    lib4A1496D1_gt_FloodSporeVentilator_Init();
    lib4A1496D1_gt_FloodSporeVentilator2_Init();
    lib4A1496D1_gt_FloodAcidSpewer_Init();
    lib4A1496D1_gt_FloodAcidSpewer2_Init();
    lib4A1496D1_gt_FloodGravemind_Init();
    lib4A1496D1_gt_FloodGravemind2_Init();
    lib4A1496D1_gt_FloodKeymind_Init();
    lib4A1496D1_gt_FloodKeymind2_Init();
    lib4A1496D1_gt_AITIMERS3_Init();
    lib4A1496D1_gt_FloodEXPANDTIMER_Init();
    lib4A1496D1_gt_FloodAttackTimer_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib4A1496D1_InitLib_completed = false;

void lib4A1496D1_InitLib () {
    if (lib4A1496D1_InitLib_completed) {
        return;
    }

    lib4A1496D1_InitLib_completed = true;

    lib4A1496D1_InitLibraries();
    lib4A1496D1_InitVariables();
    lib4A1496D1_InitTriggers();
}

