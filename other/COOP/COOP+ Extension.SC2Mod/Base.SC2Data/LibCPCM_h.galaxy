include "LibCOOC"
include "LibCOOC"
include "LibCPGL_h"

//--------------------------------------------------------------------------------------------------
// Library: Coop+Mutator
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCPCM_ge_MutatorGameType_NoMutators = 0;
const int libCPCM_ge_MutatorGameType_Random = 1;
const int libCPCM_ge_MutatorGameType_Brutal = 2;
const int libCPCM_ge_MutatorGameType_ChaosStudios = 3;
const int libCPCM_ge_MutatorGameType_WeeklyBrutation = 4;
const int libCPCM_ge_MutatorGameType_Curation = 5;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickAlienIncubation = 0;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickWalkingInfested = 1;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickSelfDestruction = 2;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickHybridNuke = 3;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickAvenger = 4;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickDeathFire = 5;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickBarrier = 6;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickConcussiveAttacks = 7;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickDamageBounce = 8;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickSidestep = 9;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickFear = 10;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickPhotonOverload = 11;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickReanimator = 12;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickLifeLeech = 13;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickOrderCosts = 14;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickMissileMadness = 15;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickEvolve = 16;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickFoodHunt = 17;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickPlague = 18;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickStructureSteal = 19;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickBlizzcon = 20;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickKillKarma = 21;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickAfraidOfTheDark = 22;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickInsubordination = 23;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickHeroesFromTheStorm = 24;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickInspiration = 25;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickHardenedWill = 26;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickFireworks = 27;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickRedEnvelopes = 28;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickTempDamageReflect = 29;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickDeathPull = 30;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickPropagator = 31;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickMomentOfSilence = 32;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickPolarity = 33;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickBoomBots = 34;
const int libCPCM_ge_CT_MutatorQuickList_CT_QuickUberDarkness = 35;
const int libCPCM_ge_CT_TriggerType_UnitDeath = 0;
const int libCPCM_ge_CT_TriggerType_UnitDamage = 1;
const int libCPCM_ge_CT_TriggerType_UnitCreation = 2;
const int libCPCM_ge_CT_TriggerType_OwnerChanges = 3;
const int libCPCM_ge_CT_TriggerType_UnitIssuedOrder = 4;
const int libCPCM_ge_CT_TriggerType_UpgradeChanged = 5;
const int libCPCM_ge_CT_GiftState_CT_GiftStateSpawning = 0;
const int libCPCM_ge_CT_GiftState_CT_GiftStateNeutral = 1;
const int libCPCM_ge_CT_GiftState_CT_GiftStateContested = 2;
const int libCPCM_ge_CT_GiftState_CT_GiftStatePlayer = 3;
const int libCPCM_ge_CT_GiftState_CT_GiftStateEnemy = 4;
const int libCPCM_ge_CT_GiftState_CT_GiftStateStealing = 5;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersNone = 0;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersPsiStorm = 1;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersGuardianShield = 2;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersSeekerMissile = 3;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersIrradiate = 4;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersAbduct = 5;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersFungal = 6;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersGravitonBeam = 7;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersPsiOrb = 8;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersTimeWarp = 9;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersVortex = 10;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersDefensiveMatrix = 11;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersPDD = 12;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersDisruptionWeb = 13;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersPhaseShift = 14;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersMax = 15;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersYamato = 16;
const int libCPCM_ge_CT_AllCastersAbilities_CT_AllCastersNeural = 17;
const int libCPCM_ge_MissionCondition_Sucessful = 0;
const int libCPCM_ge_MissionCondition_Simulation = 1;

// Constants
const int libCPCM_gv_activeMutatorMaxCount = 8;
const int libCPCM_gv_cTC_TempDamageCustomIndex = 28;
const int libCPCM_gv_cTC_AmonHeroAbilityTargetIndex = 1;
const int libCPCM_gv_cTC_AmonHeroMaxHeroTypes = 10;
const fixed libCPCM_gv_cTC_GiftCaptureRadius = 7.0;
const int libCPCM_gv_cTC_GiftPlayerBonuses = 9;
const int libCPCM_gv_cTC_GiftEnemyBonuses = 7;
const int libCPCM_gv_cTC_AllCastersMinEnergyCost = 20;
const int libCPCM_gv_cTC_CorpseMaxCount = 500;
const int libCPCM_gv_cCC_BankVersion = 8;

// Structures
struct libCPCM_gs_ActiveMutatorList {
    string lv_instance;
    trigger lv_startup;
    trigger lv_event;
    trigger lv_shutdown;
    text lv_tooltip;
    string lv_icon;
    string lv_border;
};

// Variable Declarations
bool[libCPGL_gv_humanPlayerCount + 1] libCPCM_gv_cT_DebugDropPodSpawnNow;
int libCPCM_gv_cT_DebugAllCastersAbility;
bool libCPCM_gv_mutatorsEnabled;
int libCPCM_gv_mutatorGameType;
bool libCPCM_gv_mutatorUIAllowed;
bool libCPCM_gv_mutatorMicroAllowed;
int libCPCM_gv_mutatorIndex;
bool libCPCM_gv_mutatorSafeZoneAllowed;
libCPCM_gs_ActiveMutatorList[libCPCM_gv_activeMutatorMaxCount + 1] libCPCM_gv_activeMutatorList;
bool libCPCM_gv_cT_MutatorIsWeeklyChallenge;
bool[51] libCPCM_gv_cT_MutatorEnabledQuickList;
int[12] libCPCM_gv_cT_TriggerRefCount;
bool libCPCM_gv_cT_MutatorCustomMode;
playergroup[libCPGL_gv_humanPlayerCount + 1] libCPCM_gv_cT_MutatorVisionPlayers;
unitgroup libCPCM_gv_cT_BarrierRecipients;
int libCPCM_gv_cT_AvengerWimpCounter;
unitgroup libCPCM_gv_cT_TempDamageReflectUnits;
string[libCPCM_gv_cTC_AmonHeroMaxHeroTypes + 1] libCPCM_gv_cT_AmonHeroUnitTypeArray;
soundlink[libCPCM_gv_cTC_AmonHeroMaxHeroTypes + 1] libCPCM_gv_cT_AmonHeroSoundArray;
int libCPCM_gv_cT_AmonHeroNumber;
int libCPCM_gv_cT_AmonHeroPool;
point libCPCM_gv_cT_AmonHeroLastSpawnPoint;
timer libCPCM_gv_cT_AmonHeroLastSpawnTimer;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatOrderCostMineralsLost;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatOrderCostVespeneLost;
fixed libCPCM_gv_cT_StatSpeedFreaksSpeedAdded;
int libCPCM_gv_cT_StatBroodlingsSpawned;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatAllCastersSpellsCast;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatBlizzardUnitsFrozen;
int libCPCM_gv_cT_StatAvengerStacksApplied;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatMissileCommandDamage;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatPurifierBeamDamage;
int libCPCM_gv_cT_StatVoidRiftUnitsSpawned;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatPolarityKills;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_StatNukeKills;
unitgroup libCPCM_gv_cT_Gifts;
int libCPCM_gv_cT_GiftAmonPower;
unit libCPCM_gv_cT_GiftLastCreated;
int libCPCM_gv_cT_GiftShuttlesOvercharged;
unit libCPCM_gv_cT_CandyBowlUnit;
int libCPCM_gv_cT_CandyBowlTextTag;
int libCPCM_gv_cT_FoodHuntWarningLabel;
int libCPCM_gv_cT_FoodHuntAttackLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_FoodHuntOriginalSupplyLimit;
fixed[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_SharedSupplyIndividual;
int libCPCM_gv_cT_FoodHuntInfestedWaves;
bool libCPCM_gv_cT_FoodHuntKingSpawned;
unitgroup libCPCM_gv_cT_OrderCostImmuneUnits;
int libCPCM_gv_cT_PolarityPlayer;
int libCPCM_gv_cT_PolarityPlayerTrains;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_PolarityEnemies;
unit[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_PolarityCloneTarget;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCPCM_gv_cT_AllCastersPlayerEnergy;
fixed libCPCM_gv_cT_BlizzardSpacingTolerance;
unitgroup libCPCM_gv_cT_RecentBlizzards;
string[4] libCPCM_gv_cT_RandomMutators;
timer libCPCM_gv_cT_RandomCycleTimer;
unitgroup libCPCM_gv_cT_PurifierBeamTargets;
fixed libCPCM_gv_cT_PurifierBeamBaseAvoidDistance;
int libCPCM_gv_cT_CorpseCount;
point[libCPCM_gv_cTC_CorpseMaxCount + 1] libCPCM_gv_cT_CorpseLocations;
unitgroup libCPCM_gv_cT_Reanimators;
int libCPCM_gv_cT_VoidRiftCount;
unitgroup libCPCM_gv_cT_VoidRifts;
unitgroup libCPCM_gv_cT_VoidRiftLastSpawnedUnits;
int libCPCM_gv_cT_BoomBotsCount;
int[3] libCPCM_gv_cT_BoomBotsDigits;
int libCPCM_gv_cT_BoomBotsIndexStart;
int libCPCM_gv_cT_BoomBotsInputTextTagIndex;
unitgroup libCPCM_gv_cT_OnDeathSpawns;
unitgroup libCPCM_gv_cT_SpawnedUnits;
unitgroup libCPCM_gv_cT_Tornadoes;
unit libCPCM_gv_cT_LaserDrill;
unitgroup libCPCM_gv_cT_StolenStructures;
bool libCPCM_gv_cT_MissileCleanupEnabled;
bool libCPCM_gv_cT_PropagatorCleanupEnabled;
bool libCPCM_gv_cT_BoomBotCleanupEnabled;
region libCPCM_gv_cT_MutatorSafetyZone;
region libCPCM_gv_mutatorLaserDrillSoundRegion;
actor libCPCM_gv_mutatorLaserDrillSoundRegionActor;
bool libCPCM_gv_mutatorLaserDrillSoundRegionCreated;
unitgroup libCPCM_gv_allMutatorUnits;
unitgroup libCPCM_gv_allMutatorStructures;
trigger libCPCM_gv_cC_StartupMissionTrigger;
string libCPCM_gv_cC_CurrentMap;
int[libCPGL_gv_humanPlayerCount + 1] libCPCM_gv_cCX_PlayerBankVersion;
bool libCPCM_gv_cC_InContestMap;
string libCPCM_gv_cC_ContestDefaultCommander1;
string libCPCM_gv_cC_ContestDefaultCommander2;
bool libCPCM_gv_cC_DevStart_Forced;
string libCPCM_gv_cC_CoopBankName;
bank[libCPGL_gv_humanPlayerCount + 1] libCPCM_gv_cC_CoopBank;

// Function Declarations
void libCPCM_gf_MutatorRegister ();
void libCPCM_gf_RegisterMutator (string lp_mutator, trigger lp_initTrigger, trigger lp_shutdownTrigger);
void libCPCM_gf_MutatorLobbyInit ();
bool libCPCM_gf_MutatorsEnabled ();
int libCPCM_gf_GetPlayerDifficultyFromMutatorLevel ();
void libCPCM_gf_MutatorDataInit ();
bool libCPCM_gf_MutatorIsEnabled (string lp_mutator);
color libCPCM_gf_GetColorfromMutatorCategory (string lp_mutatorCategory);
text libCPCM_gf_GetMutatorDataName (string lp_mutator);
text libCPCM_gf_GetMutatorDataDescription (string lp_mutator);
string libCPCM_gf_GetMutatorDataIcon (string lp_mutator);
trigger libCPCM_gf_GetMutatorTriggerShutdown (string lp_mutator);
trigger libCPCM_gf_GetMutatorTriggerInitialization (string lp_mutator);
void libCPCM_gf_MutatorGlobalInit (bool lp_enabled);
int libCPCM_gf_ActiveMutatorCount ();
void libCPCM_gf_EnableDisableMutator (bool lp_enableDisable, string lp_mutator);
void libCPCM_gf_SetMutatorWeeklyChallengeOn (int lp_challengeIndex);
bool libCPCM_gf_IsWeeklyMutation ();
bool libCPCM_gf_IsCustomMutators ();
bool libCPCM_gf_IsRandomMutators (string lp_mutator);
bool libCPCM_gf_CT_MutatorRandomFirstAllowed (string lp_mutator);
bool libCPCM_gf_CustomMutatorsAllowed (string lp_mutator);
bool libCPCM_gf_CustomMutatorsMultipleAllowed (string lp_mutator);
string libCPCM_gf_IsRandomUnusedCustomMutator ();
void libCPCM_gf_CT_MutatorShutdownTriggerSet (string lp_mutator, trigger lp_shutdownTrigger);
void libCPCM_gf_ToggleMutator (int lp_triggerType, bool lp_onOff);
bool libCPCM_gf_CT_NearbyCliffs (point lp_testPoint, fixed lp_testDistance);
bool libCPCM_gf_CT_LineCrossesRegion (point lp_pointA, point lp_pointB, region lp_testRegion);
bool libCPCM_gf_CT_MutatorUnitIsMapObjective (unit lp_unit);
void libCPCM_gf_CT_ApplyPermaCloak (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyUnitSpeed (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyHardenedWill (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyInspiration (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyUberDarkness (string lp_upgrade, int lp_player);
void libCPCM_gf_CT_ApplySpawnBroodling (unit lp_killedUnit);
void libCPCM_gf_CT_ApplySpawnInfested (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyDeathAOE (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyFireworks (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyHybridDeathNuke (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyDeathFire (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyAvenger (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyEvolve (unit lp_killingUnit, unit lp_victimUnit);
void libCPCM_gf_CT_ApplyJustDie (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyConcussiveAttacks (unit lp_damagedUnit, unit lp_damagingUnit);
void libCPCM_gf_CT_ApplyDamageBounce2 (unit lp_damagedUnit, unit lp_damagingUnit, fixed lp_initialDamageAmount, string lp_damagingEffect);
void libCPCM_gf_CT_ApplyBarrier (unit lp_damagedUnit, unit lp_damagingUnit);
void libCPCM_gf_CT_ApplySideStep (unit lp_damagedUnit, unit lp_damagingUnit);
void libCPCM_gf_CT_ApplyFear (unit lp_damagedUnit, unit lp_damagingUnit, fixed lp_damageAmount);
void libCPCM_gf_CT_ApplyLifeLeech (unit lp_damagedUnit, unit lp_damagingUnit, fixed lp_damageAmount);
void libCPCM_gf_CT_ApplyPhotonOverload (unit lp_damagedUnit, unit lp_damagingUnit);
void libCPCM_gf_CT_ApplyReanimatorCorpse (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyAllSpellsEnergy (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyOrderCosts (unit lp_orderedUnit, order lp_order);
void libCPCM_gf_CT_ApplyMissileBirth (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyMissileDeath (unit lp_deadUnit);
void libCPCM_gf_CT_ApplyPolarity (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyFoodHuntSpawn (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyFoodHuntBounty (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyFoodHuntAggro (unit lp_damagedUnit, unit lp_damagingUnit);
void libCPCM_gf_CT_ApplyPlague (unit lp_newUnit);
void libCPCM_gf_CT_ApplyPlagueOnDeath (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyStructureSteal (unit lp_killingUnit, unit lp_deadStructure, int lp_killingPlayer);
void libCPCM_gf_CT_ApplyStructureStealBehavior (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyWinterCheer (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyKillKarma (unit lp_killer, unit lp_killedUnit);
void libCPCM_gf_CT_ApplyAfraidOfTheDark (unit lp_orderedUnit, order lp_order);
void libCPCM_gf_CT_ApplyInsubordination (unit lp_orderedUnit, order lp_order);
void libCPCM_gf_CT_ApplyTempDamageReflect (unit lp_damagedUnit, unit lp_damagingUnit, fixed lp_damageAmount, string lp_damagingEffect);
void libCPCM_gf_CT_ApplyDeathPull (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyPropagatorPing (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyPropagatorPingCleanup (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyMomentOfSilence (unit lp_killedUnit);
void libCPCM_gf_CT_ApplyBoomBotPing (unit lp_createdUnit);
void libCPCM_gf_CT_ApplyBoomBotPingCleanup (unit lp_killedUnit);
void libCPCM_gf_CT_RemovePolarity (unit lp_polarityUnit);
void libCPCM_gf_CT_RemoveAvenger (unit lp_avengeUnit);
void libCPCM_gf_CT_RemoveUnitSpeed (unit lp_speedUnit);
void libCPCM_gf_CT_RemoveStructureStealBehavior (unit lp_structure);
void libCPCM_gf_CT_RemoveAllCastersEnergy (unit lp_energyUnit);
void libCPCM_gf_CT_AmonHeroTychus_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroRaynor_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroDehaka_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroDehakaBurrowed_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroDehakaSpawn_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroDehakaSpawnBurrowed_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroKarax_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroNova_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroZagara_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroZagaraBurrowed_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroArtanis_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroZeratul_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroKerrigan_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHeroKerriganBurrowed_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_AmonHero_AddToWave (int lp_player, unitgroup lp_units, point lp_gatherPoint, int lp_targetType);
unit libCPCM_gf_CT_AmonHero_SpawnHero (int lp_player, int lp_heroIndex, point lp_spawnPoint, bool lp_playSweeteners);
void libCPCM_gf_CT_AmonHero_GrantPoolAtMissionTime (fixed lp_missionTimeInMinutes, int lp_poolGranted);
int libCPCM_gf_CT_AmonHero_HeroMaxPerWave (int lp_targetType);
int libCPCM_gf_CT_GiftState (unit lp_gift);
void libCPCM_gf_CT_GiftSpawn (point lp_spawnLocation);
void libCPCM_gf_CT_GiftSetState (unit lp_gift, int lp_state);
void libCPCM_gf_CT_GiftSetProgress (unit lp_gift, fixed lp_progress);
void libCPCM_gf_CT_GiftAddProgress (unit lp_gift, fixed lp_progress);
void libCPCM_gf_CT_GiftSendAttack (unit lp_gift);
void libCPCM_gf_CT_GiftSpawnHybridFX (point lp_location);
void libCPCM_gf_CT_GiftClaim (unit lp_gift);
void libCPCM_gf_CT_GiftPlayerBonus (point lp_giftLocation, int lp_bonusType, int lp_giftPlayer);
void libCPCM_gf_CT_GiftEnemyBonus (point lp_giftLocation, int lp_bonusType);
string libCPCM_gf_CT_GiftRandomMutator ();
void libCPCM_gf_CT_TrickOrTreaterLogic (unit lp_civilianUnit);
fixed libCPCM_gf_CT_MathNumberWrap (fixed lp_value, fixed lp_minAmount, fixed lp_maxAmount);
void libCPCM_gf_CT_NullifyDamage (unit lp_damagedUnit, unit lp_damagingUnit, fixed lp_damageAmount);
void libCPCM_gf_CT_Polarity_Swap (unit lp_polarizedUnit);
void libCPCM_gf_CT_Polarity_TrainApply (unit lp_createdUnit);
void libCPCM_gf_CT_AllCastersUseAbility (unit lp_caster, unit lp_target, int lp_ability);
int libCPCM_gf_CT_AllCastersAbilityPlayerCost (int lp_ability);
int libCPCM_gf_CT_AllCastersAbilityChance (int lp_ability, int lp_targetPlayer, unit lp_targetUnit);
int libCPCM_gf_CT_AllCastersRandomAbility (int lp_targetPlayer, unit lp_targetUnit);
fixed libCPCM_gf_CT_AllCastersAbilityRange (int lp_ability);
bool libCPCM_gf_CT_AllCastersBlacklistedUnit (unit lp_unit);
void libCPCM_gf_CT_DestroyBlizzard (unit lp_blizzardUnit);
string libCPCM_gf_CT_RandomUnusedCycleMutator ();
void libCPCM_gf_CT_OrbitalStrikeLaunch (unitgroup lp_targetCandidates, int lp_unitTargetCount, int lp_strikesPerTarget, fixed lp_fireDelay, fixed lp_targetDelay);
bool libCPCM_gf_CT_PurifierBeamTargetValid (unit lp_beam, unit lp_target);
int libCPCM_gf_CT_CorpseNearestToLocation (point lp_location, fixed lp_maxDistance);
int libCPCM_gf_CT_CorpseAtRandom ();
bool libCPCM_gf_CT_CorpseBeingRevived (int lp_corpseIndex);
int libCPCM_gf_CT_CorpseTargetOfReanimator (unit lp_reanimator);
string libCPCM_gf_CT_CorpseUnitType (int lp_corpseIndex);
void libCPCM_gf_CT_CorpseSetAsTarget (unit lp_reanimator, int lp_corpseIndex);
void libCPCM_gf_CT_CorpseCreate (unit lp_deadUnit);
void libCPCM_gf_CT_CorpseRemove (int lp_corpseIndex);
void libCPCM_gf_CT_VoidRiftCreate (int lp_forPlayer);
void libCPCM_gf_CT_VoidRiftBirthUnits (unit lp_spawningRift, unitgroup lp_birthUnits);
void libCPCM_gf_CT_VoidRiftSpawnUnitsPlain (int lp_player, point lp_spawnLocation);
unitgroup libCPCM_gf_CT_VoidRiftLastSpawnedUnits ();
void libCPCM_gf_CT_KillBotsUpdate (unit lp_killBot, int lp_killBotLevel);
void libCPCM_gf_CT_KillBot_AIThink (int lp_owner, unit lp_aIUnit, unitgroup lp_nearByUnits);
void libCPCM_gf_CT_BoomBotsUpdate (unit lp_boomBot);
bool libCPCM_gf_CT_ResourceSpawnLocationValid (point lp_spawnPoint);
bool libCPCM_gf_CT_UnitSpawnedByMutator (unit lp_unit);
void libCPCM_gf_CT_RegisterSpawnedUnit (unit lp_spawnedUnit);
void libCPCM_gf_CT_RegisterSpawnedUnitGroup (unitgroup lp_spawnedUnits);
void libCPCM_gf_CT_Mutator_AttackWaveHook_WaveCreated (int lp_attackingPlayer, unitgroup lp_attackingUnitGroup, point lp_attackOrigin, int lp_attackTargetType);
void libCPCM_gf_CT_Mutator_AttackWaveHook_WaveSent (int lp_attackingPlayer, unitgroup lp_attackingUnitGroup, point lp_attackOrigin, int lp_attackTargetType);
void libCPCM_gf_CT_MutatorSafetyZone_Init ();
region libCPCM_gf_CT_MutatorSafetyZone ();
region libCPCM_gf_PlayerSafeZone (bool lp_entireMap);
region libCPCM_gf_PlayerStartingZones ();
region libCPCM_gf_StartLocationofPlayerGroup (playergroup lp_playerGroup);
point libCPCM_gf_PointinPlayerSafeZone (region lp_region);
void libCPCM_gf_EnableArcadeContestMode ();
bool libCPCM_gf_GameIsContestLocalTest ();
void libCPCM_gf_SetDefaultCommandersForContestLocalTest (string lp_player1Commnader, string lp_player2Commnader);
void libCPCM_gf_LoadAlliedCommandersData (string lp_map, trigger lp_startTrigger);
void libCPCM_gf_CC_LoadDefaultCommanderForContestLocalTest ();
void libCPCM_gf_CC_CampaignPreload ();
void libCPCM_gf_CC_SaveAllTransitionData (bool lp_resultFromDefeat, int lp_player);
void libCPCM_gf_CC_LoadAllTransitionData (int lp_player);
void libCPCM_gf_CC_LoadBNetChoices (int lp_player);
void libCPCM_gf_CC_SaveBNetChoices (int lp_player);
void libCPCM_gf_CC_SaveTransitionVars (int lp_player, bank lp_targetBank, bool lp_resultFromDefeat);
void libCPCM_gf_CC_LoadTransitionVars (int lp_player, bank lp_sourceBank);
void libCPCM_gf_ResetCampaignData (int lp_player);
void libCPCM_gf_CC_CustomStartupBegin ();
void libCPCM_gf_CC_CustomStartupLaunch ();
void libCPCM_gf_CC_ForceDevStartup ();
void libCPCM_gf_CC_DevStartupBegin ();
void libCPCM_gf_CC_DevStartupFinish ();
void libCPCM_gf_CC_OpenCoopBank (int lp_player);
bool libCPCM_gf_CC_CoopBankExists (int lp_player);
void libCPCM_gf_CC_SaveCoopBank (int lp_player);
string libCPCM_gf_CC_BankMIssionDifficultyKey6 (string lp_campaignPerk, string lp_commander);
string libCPCM_gf_CC_BankSectionName (string lp_section);
int libCPCM_gf_CC_LoadTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_default);
bool libCPCM_gf_CC_LoadTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_default);
string libCPCM_gf_CC_LoadTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_default);
void libCPCM_gf_CC_SaveTransitionVarInteger (bank lp_bank, string lp_section, string lp_key, int lp_value, int lp_default);
void libCPCM_gf_CC_SaveTransitionVarBoolean (bank lp_bank, string lp_section, string lp_key, bool lp_value, bool lp_default);
void libCPCM_gf_CC_SaveTransitionVarString (bank lp_bank, string lp_section, string lp_key, string lp_value, string lp_default);

// Trigger Declarations
trigger libCPCM_gt_CT_DebugDropPodSpawnNow;
trigger libCPCM_gt_CT_DebugMakeVoidRift;
trigger libCPCM_gt_CT_DebugMakePurifierBeam;
trigger libCPCM_gt_CT_DebugRandomCycleNow;
trigger libCPCM_gt_CT_DebugSpawnReanimator;
trigger libCPCM_gt_CT_DebugAllCastersForceAbility;
trigger libCPCM_gt_CT_DebugAllCastersSetEnergy;
trigger libCPCM_gt_CT_DebugMissileMe;
trigger libCPCM_gt_CT_DebugMissileGo;
trigger libCPCM_gt_CT_DebugPathCost;
trigger libCPCM_gt_CT_DebugCanPath;
trigger libCPCM_gt_CT_DebugRiftSpawn;
trigger libCPCM_gt_CT_DebugGiftSpawn;
trigger libCPCM_gt_CT_DebugGiftSetPower;
trigger libCPCM_gt_CT_DebugGiftPlayer;
trigger libCPCM_gt_CT_DebugGiftEnemy;
trigger libCPCM_gt_CT_DebugBoomBotSpawn;
trigger libCPCM_gt_CT_DebugBrutal;
trigger libCPCM_gt_CT_InitializeCycleRandom;
trigger libCPCM_gt_CT_AmonHeroPool_Tracker;
trigger libCPCM_gt_CT_JustDieTrainHealth;
trigger libCPCM_gt_CT_JustDiePolarityInteraction;
trigger libCPCM_gt_CT_StatBlizzardFreeze;
trigger libCPCM_gt_CT_GiftKillBotBanelingCredit;
trigger libCPCM_gt_CT_GiftShrunkEffectOn;
trigger libCPCM_gt_CT_GiftShrunkEffectOff;
trigger libCPCM_gt_CT_CandyBowlTextUpdate;
trigger libCPCM_gt_CT_BlizzardEntersSafetyZone;
trigger libCPCM_gt_CT_BlizzardLeavesSafetyZone;
trigger libCPCM_gt_MutatorLaserDrillBeamSoundRegionClear;
trigger libCPCM_gt_MutatorLaserDrillBeamSoundFiring;
trigger libCPCM_gt_UnitisCreated;
trigger libCPCM_gt_UnitisOrdered;
trigger libCPCM_gt_UnitOwnerChanges;
trigger libCPCM_gt_UnitTakesDamage;
trigger libCPCM_gt_UnitDies;
trigger libCPCM_gt_UpgradeChanges;
trigger libCPCM_gt_CT_PlagueDeath;
trigger libCPCM_gt_CT_OutbreakSpawn;
trigger libCPCM_gt_CT_StoneZealotsSpawn;
trigger libCPCM_gt_CT_MagMineSpawn;
trigger libCPCM_gt_CT_DropPodSpawn;
trigger libCPCM_gt_CT_ResourceSpawns;
trigger libCPCM_gt_CT_RedEnvelopeSpawns;
trigger libCPCM_gt_CT_TimeWarpSpawn;
trigger libCPCM_gt_CT_NukeSpawn;
trigger libCPCM_gt_CT_BlizzardSpawn;
trigger libCPCM_gt_CT_LavaBurstSpawn;
trigger libCPCM_gt_CT_TemporalFieldSpawn;
trigger libCPCM_gt_CT_EvilSoACast;
trigger libCPCM_gt_CT_EntombApply;
trigger libCPCM_gt_CT_WorkerSleep;
trigger libCPCM_gt_CT_VoidRiftSpawn;
trigger libCPCM_gt_CT_VoidRiftMakeUnits;
trigger libCPCM_gt_CT_VoidRiftUnitMade;
trigger libCPCM_gt_CT_TornadoMovement;
trigger libCPCM_gt_CT_OrbitalStrikes;
trigger libCPCM_gt_CT_PurifierBeamController;
trigger libCPCM_gt_CT_CycleRandomMutators;
trigger libCPCM_gt_CT_ReanimatorSpawn;
trigger libCPCM_gt_CT_ReanimatorLogic;
trigger libCPCM_gt_CT_ReanimateUsed;
trigger libCPCM_gt_CT_SpeedFreaksMorphCleanup;
trigger libCPCM_gt_CT_AllCastersPeriodicCast;
trigger libCPCM_gt_CT_MissileBarrage;
trigger libCPCM_gt_CT_OrderCostCopyUsed;
trigger libCPCM_gt_CT_UberDarknessSpotlight;
trigger libCPCM_gt_CT_FoodHuntDepleteFood;
trigger libCPCM_gt_CT_FoodHuntHungerDamage;
trigger libCPCM_gt_CT_FoodHuntSpawn;
trigger libCPCM_gt_CT_FoodHuntFear;
trigger libCPCM_gt_CT_SharedSupplyUpdate;
trigger libCPCM_gt_CT_TrickOrTreatSpawn;
trigger libCPCM_gt_CT_StructureStealLogic;
trigger libCPCM_gt_CT_StructureStealTrigger;
trigger libCPCM_gt_CT_StructureStealUnitTrained;
trigger libCPCM_gt_CT_GiftFightSpawn;
trigger libCPCM_gt_CT_GiftFightControl;
trigger libCPCM_gt_CT_TempDamageReflectHealing;
trigger libCPCM_gt_CT_PropagateClone;
trigger libCPCM_gt_CT_PropagatorSpawn;
trigger libCPCM_gt_CT_KillBotsSpawn;
trigger libCPCM_gt_CT_BoomBotsSpawn;
trigger libCPCM_gt_CT_BoomBotsInput;
trigger libCPCM_gt_CT_InitializeHardenedWill;
trigger libCPCM_gt_CT_InitializeInspiration;
trigger libCPCM_gt_CT_InitializeAllCasters;
trigger libCPCM_gt_CT_InitializeAvenger;
trigger libCPCM_gt_CT_InitializeLongRange;
trigger libCPCM_gt_CT_InitializePermaCloak;
trigger libCPCM_gt_CT_InitializeUnitSpeed;
trigger libCPCM_gt_CT_InitializeMomentOfSilence;
trigger libCPCM_gt_CT_InitializeDeathPull;
trigger libCPCM_gt_CT_InitializeFireworks;
trigger libCPCM_gt_CT_InitializeKillKarma;
trigger libCPCM_gt_CT_InitializeStructureSteal;
trigger libCPCM_gt_CT_InitializeReanimators;
trigger libCPCM_gt_CT_InitializeJustDie;
trigger libCPCM_gt_CT_InitializeDeathFire;
trigger libCPCM_gt_CT_InitializeHybridDeathNuke;
trigger libCPCM_gt_CT_InitializeDeathAOE;
trigger libCPCM_gt_CT_InitializeSpawnInfested;
trigger libCPCM_gt_CT_InitializeSpawnBroodling;
trigger libCPCM_gt_CT_InitializeBoomBots;
trigger libCPCM_gt_CT_InitializeKillBots;
trigger libCPCM_gt_CT_InitializePropagate;
trigger libCPCM_gt_CT_InitializeHeroesFromTheStorm;
trigger libCPCM_gt_CT_InitializeUndyingEvil;
trigger libCPCM_gt_CT_InitializeMissileBarrage;
trigger libCPCM_gt_CT_InitializeMineFields;
trigger libCPCM_gt_CT_InitializeVoidRifts;
trigger libCPCM_gt_CT_InitializeMagMines;
trigger libCPCM_gt_CT_InitializeStoneZealots;
trigger libCPCM_gt_CT_InitializeDropPods;
trigger libCPCM_gt_CT_InitializeLaserDrill;
trigger libCPCM_gt_CT_InitializeOutbreak;
trigger libCPCM_gt_CT_InitializePurifierBeam;
trigger libCPCM_gt_CT_InitializeOrbitalStrike;
trigger libCPCM_gt_CT_InitializeTornadoes;
trigger libCPCM_gt_CT_InitializeTemporalField;
trigger libCPCM_gt_CT_InitializeLavaBurst;
trigger libCPCM_gt_CT_InitializeBlizzard;
trigger libCPCM_gt_CT_InitializeNukes;
trigger libCPCM_gt_CT_InitializeTimeWarp;
trigger libCPCM_gt_CT_InitializeMinedOut;
trigger libCPCM_gt_CT_InitializeEntomb;
trigger libCPCM_gt_CT_InitializeTempDamageReflect;
trigger libCPCM_gt_CT_InitializePlague;
trigger libCPCM_gt_CT_InitializeEvolve;
trigger libCPCM_gt_CT_InitializePolarity;
trigger libCPCM_gt_CT_InitializePhotonOverload;
trigger libCPCM_gt_CT_InitializeLifeLeech;
trigger libCPCM_gt_CT_InitializeSideStep;
trigger libCPCM_gt_CT_InitializeBarrier;
trigger libCPCM_gt_CT_InitializeDamageBounce;
trigger libCPCM_gt_CT_InitializeConcussiveAttacks;
trigger libCPCM_gt_CT_InitializeAfraidOfTheDark;
trigger libCPCM_gt_CT_InitializeUberDarkness;
trigger libCPCM_gt_CT_InitializeVertigo;
trigger libCPCM_gt_CT_InitializeBlackFog;
trigger libCPCM_gt_CT_InitializeShortSighted;
trigger libCPCM_gt_CT_InitializeSluggishness;
trigger libCPCM_gt_CT_InitializeInsubordination;
trigger libCPCM_gt_CT_InitializeSharedSupply;
trigger libCPCM_gt_CT_InitializeOrderCosts;
trigger libCPCM_gt_CT_InitializeFear;
trigger libCPCM_gt_CT_InitializeWorkerSleep;
trigger libCPCM_gt_CT_InitializeRedEnvelopes;
trigger libCPCM_gt_CT_InitializeGiftFight;
trigger libCPCM_gt_CT_InitializeTrickOrTreat;
trigger libCPCM_gt_CT_InitializeFoodHunt;
trigger libCPCM_gt_CT_ShutdownWorkerSleep;
trigger libCPCM_gt_CT_ShutdownOutbreak;
trigger libCPCM_gt_CT_ShutdownEntomb;
trigger libCPCM_gt_CT_ShutdownPermaCloak;
trigger libCPCM_gt_CT_ShutdownUnitSpeed;
trigger libCPCM_gt_CT_ShutdownBlackFog;
trigger libCPCM_gt_CT_ShutdownReducedVision;
trigger libCPCM_gt_CT_ShutdownLongRange;
trigger libCPCM_gt_CT_ShutdownShortSighted;
trigger libCPCM_gt_CT_ShutdownLaserDrill;
trigger libCPCM_gt_CT_ShutdownSpawnBroodling;
trigger libCPCM_gt_CT_ShutdownSpawnInfested;
trigger libCPCM_gt_CT_ShutdownDeathAOE;
trigger libCPCM_gt_CT_ShutdownStructureSteal;
trigger libCPCM_gt_CT_ShutdownHybridDeathNuke;
trigger libCPCM_gt_CT_ShutdownDeathFire;
trigger libCPCM_gt_CT_ShutdownPlague;
trigger libCPCM_gt_CT_ShutdownAvenger;
trigger libCPCM_gt_CT_ShutdownEvolve;
trigger libCPCM_gt_CT_ShutdownJustDie;
trigger libCPCM_gt_CT_ShutdownConcussiveAttacks;
trigger libCPCM_gt_CT_ShutdownDamageBounce;
trigger libCPCM_gt_CT_ShutdownMinedOut;
trigger libCPCM_gt_CT_ShutdownDropPods;
trigger libCPCM_gt_CT_ShutdownBarrier;
trigger libCPCM_gt_CT_ShutdownSideStep;
trigger libCPCM_gt_CT_ShutdownFear;
trigger libCPCM_gt_CT_ShutdownLifeLeech;
trigger libCPCM_gt_CT_ShutdownTimeWarp;
trigger libCPCM_gt_CT_ShutdownNukes;
trigger libCPCM_gt_CT_ShutdownBlizzard;
trigger libCPCM_gt_CT_ShutdownLavaBurst;
trigger libCPCM_gt_CT_ShutdownTemporalField;
trigger libCPCM_gt_CT_ShutdownStoneZealots;
trigger libCPCM_gt_CT_ShutdownMagMines;
trigger libCPCM_gt_CT_ShutdownVoidRifts;
trigger libCPCM_gt_CT_ShutdownTornadoes;
trigger libCPCM_gt_CT_ShutdownOrbitalStrike;
trigger libCPCM_gt_CT_ShutdownPurifierBeam;
trigger libCPCM_gt_CT_ShutdownPhotonOverload;
trigger libCPCM_gt_CT_ShutdownMineFields;
trigger libCPCM_gt_CT_ShutdownCycleRandom;
trigger libCPCM_gt_CT_ShutdownReanimators;
trigger libCPCM_gt_CT_ShutdownAllCasters;
trigger libCPCM_gt_CT_ShutdownOrderCosts;
trigger libCPCM_gt_CT_ShutdownAfraidOfTheDark;
trigger libCPCM_gt_CT_ShutdownInsubordination;
trigger libCPCM_gt_CT_ShutdownMissileBarrage;
trigger libCPCM_gt_CT_ShutdownVertigo;
trigger libCPCM_gt_CT_ShutdownUndyingEvil;
trigger libCPCM_gt_CT_ShutdownPolarity;
trigger libCPCM_gt_CT_ShutdownUberDarkness;
trigger libCPCM_gt_CT_ShutdownFoodHunt;
trigger libCPCM_gt_CT_ShutdownSharedSupply;
trigger libCPCM_gt_CT_ShutdownTrickOrTreat;
trigger libCPCM_gt_CT_ShutdownBlizzconChallenge;
trigger libCPCM_gt_CT_ShutdownGiftFight;
trigger libCPCM_gt_CT_ShutdownKillKarma;
trigger libCPCM_gt_CT_ShutdownSluggishness;
trigger libCPCM_gt_CT_ShutdownHeroesFromTheStorm;
trigger libCPCM_gt_CT_ShutdownHardenedWill;
trigger libCPCM_gt_CT_ShutdownInspiration;
trigger libCPCM_gt_CT_ShutdownFireworks;
trigger libCPCM_gt_CT_ShutdownRedEnvelopes;
trigger libCPCM_gt_CT_ShutdownTempDamageReflect;
trigger libCPCM_gt_CT_ShutdownDeathPull;
trigger libCPCM_gt_CT_ShutdownPropagate;
trigger libCPCM_gt_CT_ShutdownKillBots;
trigger libCPCM_gt_CT_ShutdownMomentOfSilence;
trigger libCPCM_gt_CT_ShutdownBoomBots;
trigger libCPCM_gt_CC_CustomStartupSelectLaunch;
trigger libCPCM_gt_CC_DevStartupDevForceQuit;
trigger libCPCM_gt_CC_DevStartupCommSelectExit;

// Library Initialization
void libCPCM_InitVariables ();

