include "TriggerLibs/NativeLib"
include "LibDDE92A83_h"
include "LibF095282B_h"
include "Lib22D496B3_h"
include "Lib7A9A9B22_h"
include "Lib39886FE6_h"
include "Lib64DC5B97_h"
include "Lib7550A90B_h"

include "Lib458E37E6_h"

//--------------------------------------------------------------------------------------------------
// Library: Tug of War Objectives
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib458E37E6_InitLibraries () {
    libNtve_InitVariables();
    libDDE92A83_InitVariables();
    libF095282B_InitVariables();
    lib22D496B3_InitVariables();
    lib7A9A9B22_InitVariables();
    lib39886FE6_InitVariables();
    lib64DC5B97_InitVariables();
    lib7550A90B_InitVariables();
}

// Variable Initialization
bool lib458E37E6_InitVariables_completed = false;

void lib458E37E6_InitVariables () {
    int init_i;

    if (lib458E37E6_InitVariables_completed) {
        return;
    }

    lib458E37E6_InitVariables_completed = true;

    for (init_i = 0; init_i <= 1; init_i += 1) {
        lib458E37E6_gv_teamBaseGroup[init_i] = UnitGroupEmpty();
    }
    lib458E37E6_gv_midControlTimer = TimerCreate();
    lib458E37E6_gv_midControlCurrentOwner = -1;
    lib458E37E6_gv_deadObjectives = UnitGroupEmpty();
}

// Functions
void lib458E37E6_gf_TugofWarObjectivesBasic (point lp_center, point lp_team0Base, point lp_team0Turret, point lp_team0DefensiveArea, region lp_team0TotalArea, point lp_team1Base, string lp_team1BaseType, point lp_team1Turret, point lp_team1DefensiveArea, region lp_team1TotalArea) {
    // Automatic Variable Declarations
    const int autoE45A9787_n = 5;
    int autoE45A9787_i;
    const int auto9DFF58E7_n = 5;
    int auto9DFF58E7_i;

    // Implementation
    PlayerSetRace(13, "Terr");
    PlayerSetRace(14, "Prot");
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePlanetaryFortress", c_unitCreateIgnorePlacement, 13, lp_team0Base);
    lib458E37E6_gv_teamBase[0] = UnitLastCreated();
    lib458E37E6_gv_teamBasePoint[0] = lp_team0Base;
    UnitGroupAdd(lib458E37E6_gv_teamBaseGroup[0], UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, lp_team1BaseType, c_unitCreateIgnorePlacement, 14, lp_team1Base);
    if ((lp_team1BaseType == "ObjectiveVoidThrasher")) {
        libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), lp_center, 0.0);
    }

    lib458E37E6_gv_teamBase[1] = UnitLastCreated();
    lib458E37E6_gv_teamBasePoint[1] = lp_team1Base;
    UnitGroupAdd(lib458E37E6_gv_teamBaseGroup[1], UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveBunker", c_unitCreateIgnorePlacement, 13, lp_team0Turret);
    lib458E37E6_gv_teamTurret[0] = UnitLastCreated();
    UnitBehaviorAdd(UnitLastCreated(), "ObjectiveMineralsBounty125", UnitLastCreated(), 1);
    libF095282B_gf_ObjectiveIconCreate(UnitLastCreated(), PlayerGroupAll(), 0, c_anchorTopRight, 0, 150, 0, false, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePhotonCannon", c_unitCreateIgnorePlacement, 14, lp_team1Turret);
    lib458E37E6_gv_teamTurret[1] = UnitLastCreated();
    UnitBehaviorAdd(UnitLastCreated(), "ObjectiveMineralsBounty125", UnitLastCreated(), 1);
    libF095282B_gf_ObjectiveIconCreate(UnitLastCreated(), PlayerGroupAll(), 1, c_anchorTopRight, 0, 250, 0, false, false);
    if ((TechTreeUpgradeCount(0, "MutationExpansion", c_techCountQueuedOrBetter) >= 1)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveSupplyDepot", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_team0Base, 3.0, -6.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveSupplyDepot", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_team0Base, -6.0, 3.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveSupplyDepot", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_team0Base, 3.0, -12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveSupplyDepot", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_team0Base, -12.0, 3.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectiveMjolnirBattery", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_team0Base, -7.0, -7.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePylon", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_team1Base, -3.0, 6.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePylon", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_team1Base, 6.0, -3.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePylon", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_team1Base, 12.0, -3.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePylon", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_team1Base, -3.0, 12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ObjectivePhaseArray", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_team1Base, 7.0, 7.0));
    }

    if ((TechTreeUpgradeCount(0, "MutationStronghold", c_techCountQueuedOrBetter) >= 1)) {
        libNtve_gf_SetUpgradeLevelForPlayer(13, "SCVPlaceholder", 6);
        libNtve_gf_SetUpgradeLevelForPlayer(13, "MarinePlaceholder", 6);
        libNtve_gf_SetUpgradeLevelForPlayer(13, "HellionPlaceholder", 3);
        for (autoE45A9787_i = 1; autoE45A9787_i <= autoE45A9787_n; autoE45A9787_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "SCV", c_unitCreateIgnorePlacement, 13, RegionRandomPoint(RegionCircle(PointWithOffset(lp_center, 36.5, 21.0), 0.5)));
        }
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "CommandCenterPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 36.5, 24.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 30.0, 26.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 32.0, 20.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 20.0, 28.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 24.0, 16.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 15.0, 25.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 13.0, 12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 13.0, 5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 19.0, 1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 24.0, 8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 7.0, 8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 3.0, 13.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -3.0, 13.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 15.0, -5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 1.0, 5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -7.0, 5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 1.0, -4.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 1.0, -15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -17.0, 1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -11.0, -7.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -20.0, -8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -14.0, -18.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -10.0, -26.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BarracksPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 20.5, 32.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BarracksPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 27.5, 11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "EngineeringBayPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 28.5, 20.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "FactoryPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 15.5, 8.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "FactoryPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 7.5, 11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StarportPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 5.5, 2.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ArmoryPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 1.5, 17.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "GhostAcademyPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -16.5, -4.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "FusionCorePlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -11.5, -11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 34.0, 16.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 12.0, 22.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 15.0, 1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 0.0, 10.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -6.0, 1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -1.0, -7.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -18.0, -11.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "MissileTurretPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -12.0, -23.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 31.5, 15.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 11.5, 19.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, 12.5, 0.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -2.5, 9.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -8.5, -0.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -3.5, -7.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -20.5, -20.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "BunkerPlaceholder", c_unitCreateIgnorePlacement, 13, PointWithOffset(lp_center, -14.5, -22.5));
        libNtve_gf_SetUpgradeLevelForPlayer(14, "ProbePlaceholder", 6);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "ZealotPlaceholder", 3);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "ImmortalPlaceholder", 1);
        for (auto9DFF58E7_i = 1; auto9DFF58E7_i <= auto9DFF58E7_n; auto9DFF58E7_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Probe", c_unitCreateIgnorePlacement, 14, RegionRandomPoint(RegionCircle(PointWithOffset(lp_center, -36.5, -21.0), 0.5)));
        }
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "NexusPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -36.5, -24.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -30.0, -26.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -32.0, -20.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -20.0, -28.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -24.0, -16.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -15.0, -25.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -13.0, -12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -13.0, -5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -19.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -24.0, -8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -7.0, -8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -3.0, -13.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 3.0, -13.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -15.0, 5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -1.0, -5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 7.0, -5.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -1.0, 4.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -1.0, 15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 17.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 11.0, 7.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 20.0, 8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 14.0, 18.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PylonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 10.0, 26.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "GatewayPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -20.5, -32.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "GatewayPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -27.5, -11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "CyberneticsCorePlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -23.5, -30.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ForgePlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -28.5, -20.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoboticsFacilityPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -15.5, -8.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoboticsFacilityPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -7.5, -11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StargatePlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -5.5, -2.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoboticsBayPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -1.5, -17.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TwilightCouncilPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 16.5, 4.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "FleetBeaconPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 11.5, 11.5));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 16.0, 22.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 14.0, 23.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 4.0, 8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 2.0, 9.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 8.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 9.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 4.0, -9.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 2.0, -8.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -12.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -14.0, 1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -11.0, -19.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -10.0, -21.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -31.0, -15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PhotonCannonPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -33.0, -14.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 14.0, 21.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 20.0, 11.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 2.0, 7.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 7.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, 2.0, -10.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -14.0, -1.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -12.0, -21.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ShieldBatteryPlaceholder", c_unitCreateIgnorePlacement, 14, PointWithOffset(lp_center, -33.0, -16.0));
    }

    lib458E37E6_gv_teamArea[0] = lp_team0TotalArea;
    lib458E37E6_gv_teamArea[1] = lp_team1TotalArea;
    libDDE92A83_gf_CreateDefensiveArea(lib7A9A9B22_gf_StagingAreaTeam(0), lp_team0DefensiveArea);
    libDDE92A83_gf_CreateDefensiveArea(lib7A9A9B22_gf_StagingAreaTeam(1), lp_team1DefensiveArea);
    libNtve_gf_StopTimer(lib458E37E6_gv_midControlTimer);
    TimerStart(lib458E37E6_gv_midControlTimer, 100000.0, false, c_timeReal);
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesBaseDeath, true);
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesTurretDeath, true);
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate, true);
}

void lib458E37E6_gf_TugofWarObjectivesMidControl () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib7A9A9B22_gv_mines == true)) {
        if ((UnitGroupCount(UnitGroupFilterRegion(lib7A9A9B22_gf_StagingAreaTeamSpawns(0), lib458E37E6_gv_teamArea[1], 0), c_unitCountAlive) > 0) && (UnitGroupCount(UnitGroupFilterRegion(lib7A9A9B22_gf_StagingAreaTeamSpawns(1), lib458E37E6_gv_teamArea[0], 0), c_unitCountAlive) == 0)) {
            lib458E37E6_gf_TugofWarObjectivesSetMid(0);
            if ((lib458E37E6_gv_midControlCurrentOwner != 0)) {
                lib458E37E6_gv_midControlCurrentOwner = 0;
                lib458E37E6_gf_MidControlChanged();
            }

        }
        else {
            if ((UnitGroupCount(UnitGroupFilterRegion(lib7A9A9B22_gf_StagingAreaTeamSpawns(1), lib458E37E6_gv_teamArea[0], 0), c_unitCountAlive) > 0) && (UnitGroupCount(UnitGroupFilterRegion(lib7A9A9B22_gf_StagingAreaTeamSpawns(0), lib458E37E6_gv_teamArea[1], 0), c_unitCountAlive) == 0)) {
                lib458E37E6_gf_TugofWarObjectivesSetMid(1);
                if ((lib458E37E6_gv_midControlCurrentOwner != 1)) {
                    lib458E37E6_gv_midControlCurrentOwner = 1;
                    lib458E37E6_gf_MidControlChanged();
                }

            }

        }
    }

}

trigger auto_lib458E37E6_gf_TugofWarObjectivesGameOver_Trigger = null;
int auto_lib458E37E6_gf_TugofWarObjectivesGameOver_lp_winner;

void lib458E37E6_gf_TugofWarObjectivesGameOver (int lp_winner) {
    auto_lib458E37E6_gf_TugofWarObjectivesGameOver_lp_winner = lp_winner;

    if (auto_lib458E37E6_gf_TugofWarObjectivesGameOver_Trigger == null) {
        auto_lib458E37E6_gf_TugofWarObjectivesGameOver_Trigger = TriggerCreate("auto_lib458E37E6_gf_TugofWarObjectivesGameOver_TriggerFunc");
    }

    TriggerExecute(auto_lib458E37E6_gf_TugofWarObjectivesGameOver_Trigger, false, false);
}

bool auto_lib458E37E6_gf_TugofWarObjectivesGameOver_TriggerFunc (bool testConds, bool runActions) {
    int lp_winner = auto_lib458E37E6_gf_TugofWarObjectivesGameOver_lp_winner;

    // Automatic Variable Declarations
    int auto2EE8813C_val;

    // Implementation
    auto2EE8813C_val = lp_winner;
    if (auto2EE8813C_val == 1) {
        lib7550A90B_gf_TugofWarGameOver(lib7A9A9B22_gf_StagingAreaTeam(1), lib458E37E6_gv_teamBasePoint[0]);
        libF095282B_gf_ObjectiveIconToggle(0, false);
        Wait(5.0, c_timeGame);
        libF095282B_gf_ObjectiveIconDeath(0);
        libF095282B_gf_ObjectiveIconUpdate();
        libF095282B_gf_ObjectiveIconFade(PlayerGroupAll(), 0, false, 1.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupAll(), 1, false, 1.0);
    }
    else {
        lib7550A90B_gf_TugofWarGameOver(lib7A9A9B22_gf_StagingAreaTeam(0), lib458E37E6_gv_teamBasePoint[1]);
        libF095282B_gf_ObjectiveIconToggle(1, false);
        Wait(5.0, c_timeGame);
        libF095282B_gf_ObjectiveIconDeath(1);
        libF095282B_gf_ObjectiveIconUpdate();
        libF095282B_gf_ObjectiveIconFade(PlayerGroupAll(), 0, false, 1.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupAll(), 1, false, 1.0);
    }
    return true;
}

void lib458E37E6_gf_MidControlChanged () {
    // Automatic Variable Declarations
    playergroup autoAB112CDC_g;
    int autoAB112CDC_var;

    // Implementation
    autoAB112CDC_g = lib7550A90B_gf_TugofWarPlayers();
    autoAB112CDC_var = -1;
    while (true) {
        autoAB112CDC_var = PlayerGroupNextPlayer(autoAB112CDC_g, autoAB112CDC_var);
        if (autoAB112CDC_var < 0) { break; }
        libDDE92A83_gf_PlayerAttributesUpdate(autoAB112CDC_var);
    }
}

void lib458E37E6_gf_TugofWarObjectivesSetMid (int lp_team) {
    // Automatic Variable Declarations
    int auto3973E86D_val;
    unitgroup auto300442D4_g;
    int auto300442D4_u;
    unit auto300442D4_var;
    unitgroup auto85347B89_g;
    int auto85347B89_u;
    unit auto85347B89_var;

    // Implementation
    libDDE92A83_gf_AddMidControlScore(lib7A9A9B22_gf_StagingAreaTeam(lp_team), TimerGetElapsed(lib458E37E6_gv_midControlTimer));
    libNtve_gf_StopTimer(lib458E37E6_gv_midControlTimer);
    TimerStart(lib458E37E6_gv_midControlTimer, 100000.0, false, c_timeReal);
    if ((TechTreeUpgradeCount(0, "MutationAccord", c_techCountCompleteOnly) == 0) && (lib7A9A9B22_gv_mines == true)) {
        auto3973E86D_val = lp_team;
        if (auto3973E86D_val == 0) {
            libF095282B_gf_ObjectiveIconStatus(0, "Assets\\Textures\\behavior_goldminerals.dds", 32, 32);
            libF095282B_gf_ObjectiveIconStatus(1, null, 32, 32);
            lib7A9A9B22_gf_MineralIncomeBonusToggle(lib7A9A9B22_gf_StagingAreaTeam(0), true);
            lib7A9A9B22_gf_MineralIncomeBonusToggle(lib7A9A9B22_gf_StagingAreaTeam(1), false);
            auto300442D4_g = UnitGroup("MiddleLineGlow", c_playerAny, null, UnitFilter(0, 0, 0, 0), 0);
            auto300442D4_u = UnitGroupCount(auto300442D4_g, c_unitCountAll);
            for (;; auto300442D4_u -= 1) {
                auto300442D4_var = UnitGroupUnitFromEnd(auto300442D4_g, auto300442D4_u);
                if (auto300442D4_var == null) { break; }
                UnitSetOwner(auto300442D4_var, 13, true);
            }
        }
        else if (auto3973E86D_val == 1) {
            libF095282B_gf_ObjectiveIconStatus(0, null, 32, 32);
            libF095282B_gf_ObjectiveIconStatus(1, "Assets\\Textures\\behavior_goldminerals.dds", 32, 32);
            lib7A9A9B22_gf_MineralIncomeBonusToggle(lib7A9A9B22_gf_StagingAreaTeam(1), true);
            lib7A9A9B22_gf_MineralIncomeBonusToggle(lib7A9A9B22_gf_StagingAreaTeam(0), false);
            auto85347B89_g = UnitGroup("MiddleLineGlow", c_playerAny, null, UnitFilter(0, 0, 0, 0), 0);
            auto85347B89_u = UnitGroupCount(auto85347B89_g, c_unitCountAll);
            for (;; auto85347B89_u -= 1) {
                auto85347B89_var = UnitGroupUnitFromEnd(auto85347B89_g, auto85347B89_u);
                if (auto85347B89_var == null) { break; }
                UnitSetOwner(auto85347B89_var, 14, true);
            }
        }
        else {
        }
    }

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Tug of War Objectives - Turret Death
//--------------------------------------------------------------------------------------------------
bool lib458E37E6_gt_TugofWarObjectivesTurretDeath_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC721C160_g;
    int autoC721C160_var;
    playergroup auto0E36FF70_g;
    int auto0E36FF70_var;

    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((GameIsMissionTimePaused() == false))) {
            return false;
        }

        if (!((UnitGroupHasUnit(lib458E37E6_gv_deadObjectives, EventPlayerEffectUsedUnit(c_effectUnitSource)) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(lib458E37E6_gv_deadObjectives, EventPlayerEffectUsedUnit(c_effectUnitSource));
    autoC721C160_g = PlayerGroupAll();
    autoC721C160_var = -1;
    while (true) {
        autoC721C160_var = PlayerGroupNextPlayer(autoC721C160_g, autoC721C160_var);
        if (autoC721C160_var < 0) { break; }
        VisRevealArea(autoC721C160_var, RegionCircle(UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitSource)), 2.0), 2.0, false);
    }
    if ((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource))) && (((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) >= 1) && (UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) <= 14)) != true)) {
        auto0E36FF70_g = PlayerGroupAlliance(c_playerGroupEnemy, UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource)));
        auto0E36FF70_var = -1;
        while (true) {
            auto0E36FF70_var = PlayerGroupNextPlayer(auto0E36FF70_g, auto0E36FF70_var);
            if (auto0E36FF70_var < 0) { break; }
            lib39886FE6_gf_MasteryBarAwardExperience(auto0E36FF70_var, FixedToInt(UnitTypeGetProperty(UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitSource)), c_unitPropKillXP)), false, false);
        }
    }

    if ((EventPlayerEffectUsedUnit(c_effectUnitSource) == lib458E37E6_gv_teamTurret[0])) {
        if ((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource))) && (libNtve_gf_PlayerIsEnemy(UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)), UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource)), libNtve_ge_PlayerRelation_Enemy) == true) && (((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) >= 1) && (UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) <= 14)) != true)) {
            libF095282B_gf_ObjectiveIconRemove(0);
            libF095282B_gf_ObjectiveIconCreate(lib458E37E6_gv_teamBase[0], PlayerGroupAll(), 0, c_anchorTopRight, 0, 150, 0, false, false);
        }
        else {
            libF095282B_gf_ObjectiveIconDeath(0);
            libF095282B_gf_ObjectiveIconCreate(lib458E37E6_gv_teamBase[0], PlayerGroupAll(), 0, c_anchorTopRight, 0, 150, 0, true, false);
        }
    }
    else {
        if ((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource))) && (libNtve_gf_PlayerIsEnemy(UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)), UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource)), libNtve_ge_PlayerRelation_Enemy) == true) && (((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) >= 1) && (UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) <= 14)) != true)) {
            libF095282B_gf_ObjectiveIconRemove(1);
            libF095282B_gf_ObjectiveIconCreate(lib458E37E6_gv_teamBase[1], PlayerGroupAll(), 1, c_anchorTopRight, 0, 250, 0, false, false);
        }
        else {
            libF095282B_gf_ObjectiveIconDeath(1);
            libF095282B_gf_ObjectiveIconCreate(lib458E37E6_gv_teamBase[1], PlayerGroupAll(), 1, c_anchorTopRight, 0, 250, 0, true, false);
        }
    }
    libF095282B_gf_ObjectiveIconUpdate();
    if ((libDDE92A83_gf_GameIsUnityMutation() == false) && (libDDE92A83_gf_GameisusingAutoMineralFields() == false) && (UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) != UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitSource))) && (((UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) >= 1) && (UnitGetOwner(EventPlayerEffectUsedUnit(c_effectUnitTarget)) <= 14)) == true) && (TechTreeUpgradeCount(EventPlayerEffectUsedUnitOwner(c_effectPlayerTarget), "PremiumReward", c_techCountCompleteOnly) == 1)) {
        libNtve_gf_CreatePingFacingAngle(PlayerGroupSingle(EventPlayerEffectUsedUnitOwner(c_effectPlayerTarget)), "PingObjective", UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitSource)), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 8.0, 270.0);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TrophyRiftPremium", c_unitCreateIgnorePlacement, EventPlayerEffectUsedUnitOwner(c_effectPlayerTarget), UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitSource)));
        UIDisplayMessage(PlayerGroupSingle(EventPlayerEffectUsedUnitOwner(c_effectPlayerTarget)), c_messageAreaChat, StringExternal("Param/Value/lib_458E37E6_83DBD3D2"));
    }
    else {
        libNtve_gf_CreatePingFacingAngle(PlayerGroupSingle(EventPlayerEffectUsedUnitOwner(c_effectPlayerTarget)), "PingObjective", UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitSource)), ColorWithAlpha(0.00, 100.00, 0.00, 0.00), 8.0, 270.0);
    }
    lib22D496B3_gf_PartyFrameUpdate("MineralsCurrent");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib458E37E6_gt_TugofWarObjectivesTurretDeath_Init () {
    lib458E37E6_gt_TugofWarObjectivesTurretDeath = TriggerCreate("lib458E37E6_gt_TugofWarObjectivesTurretDeath_Func");
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesTurretDeath, false);
    TriggerAddEventPlayerEffectUsed(lib458E37E6_gt_TugofWarObjectivesTurretDeath, c_playerAny, "ObjectiveDeathTrigger");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tug of War Objectives - Base Death
//--------------------------------------------------------------------------------------------------
bool lib458E37E6_gt_TugofWarObjectivesBaseDeath_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }

        if (!((UnitGroupHasUnit(lib458E37E6_gv_deadObjectives, EventPlayerEffectUsedUnit(c_effectUnitSource)) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(lib458E37E6_gv_deadObjectives, EventPlayerEffectUsedUnit(c_effectUnitSource));
    if (((EventPlayerEffectUsed() == "OverdeathProtossSetActivate") || (EventPlayerEffectUsed() == "OverdeathPurifierSetActivate"))) {
        lib458E37E6_gf_TugofWarObjectivesGameOver(0);
    }

    if ((EventPlayerEffectUsed() == "OverdeathTerranSetActivate")) {
        lib458E37E6_gf_TugofWarObjectivesGameOver(1);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib458E37E6_gt_TugofWarObjectivesBaseDeath_Init () {
    lib458E37E6_gt_TugofWarObjectivesBaseDeath = TriggerCreate("lib458E37E6_gt_TugofWarObjectivesBaseDeath_Func");
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesBaseDeath, false);
    TriggerAddEventPlayerEffectUsed(lib458E37E6_gt_TugofWarObjectivesBaseDeath, c_playerAny, "OverdeathProtossSetActivate");
    TriggerAddEventPlayerEffectUsed(lib458E37E6_gt_TugofWarObjectivesBaseDeath, c_playerAny, "OverdeathTerranSetActivate");
    TriggerAddEventPlayerEffectUsed(lib458E37E6_gt_TugofWarObjectivesBaseDeath, c_playerAny, "OverdeathPurifierSetActivate");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tug of War Objectives - Periodic Update
//--------------------------------------------------------------------------------------------------
bool lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib64DC5B97_gf_VespeneRefresh();
    if ((libDDE92A83_gv_gameOver == false) && (GameIsMissionTimePaused() == false)) {
        lib7550A90B_gf_TugofWarPeriodicUpdate();
        lib458E37E6_gf_TugofWarObjectivesMidControl();
        if ((UnitGroupCount(lib458E37E6_gv_teamBaseGroup[0], c_unitCountAlive) == 0)) {
            TriggerEnable(lib458E37E6_gt_TugofWarObjectivesBaseDeath, false);
            lib458E37E6_gf_TugofWarObjectivesGameOver(1);
        }

        if ((UnitGroupCount(lib458E37E6_gv_teamBaseGroup[1], c_unitCountAlive) == 0)) {
            TriggerEnable(lib458E37E6_gt_TugofWarObjectivesBaseDeath, false);
            lib458E37E6_gf_TugofWarObjectivesGameOver(0);
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate_Init () {
    lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate = TriggerCreate("lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate_Func");
    TriggerEnable(lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate, false);
    TriggerAddEventTimePeriodic(lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate, 0.5, c_timeReal);
}

void lib458E37E6_InitTriggers () {
    lib458E37E6_gt_TugofWarObjectivesTurretDeath_Init();
    lib458E37E6_gt_TugofWarObjectivesBaseDeath_Init();
    lib458E37E6_gt_TugofWarObjectivesPeriodicUpdate_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib458E37E6_InitLib_completed = false;

void lib458E37E6_InitLib () {
    if (lib458E37E6_InitLib_completed) {
        return;
    }

    lib458E37E6_InitLib_completed = true;

    lib458E37E6_InitLibraries();
    lib458E37E6_InitVariables();
    lib458E37E6_InitTriggers();
}

include "LibDDE92A83"
include "LibF095282B"
include "Lib22D496B3"
include "Lib7A9A9B22"
include "Lib39886FE6"
include "Lib64DC5B97"
include "Lib7550A90B"

