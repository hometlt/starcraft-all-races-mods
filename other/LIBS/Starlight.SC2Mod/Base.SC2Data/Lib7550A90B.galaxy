include "TriggerLibs/NativeLib"
include "LibDDE92A83_h"
include "Lib474957E9_h"
include "LibFB3A33A2_h"
include "Lib16875C2F_h"
include "LibF095282B_h"
include "Lib1DE23868_h"
include "Lib29554E00_h"
include "LibFD391A9C_h"
include "Lib948F000A_h"
include "Lib2A8CE4F7_h"
include "Lib22D496B3_h"
include "Lib7A9A9B22_h"
include "LibCA960273_h"
include "Lib038F51B7_h"
include "Lib28FBFBC5_h"
include "Lib479C7CBB_h"
include "LibF58A3325_h"
include "Lib39886FE6_h"
include "LibD6A97973_h"
include "Lib64DC5B97_h"
include "Lib458E37E6_h"
include "Lib9A6A5E35_h"
include "LibBBFED31C_h"

include "Lib7550A90B_h"

//--------------------------------------------------------------------------------------------------
// Library: Tug of War
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib7550A90B_InitLibraries () {
    libNtve_InitVariables();
    libDDE92A83_InitVariables();
    lib474957E9_InitVariables();
    libFB3A33A2_InitVariables();
    lib16875C2F_InitVariables();
    libF095282B_InitVariables();
    lib1DE23868_InitVariables();
    lib29554E00_InitVariables();
    libFD391A9C_InitVariables();
    lib948F000A_InitVariables();
    lib2A8CE4F7_InitVariables();
    lib22D496B3_InitVariables();
    lib7A9A9B22_InitVariables();
    libCA960273_InitVariables();
    lib038F51B7_InitVariables();
    lib28FBFBC5_InitVariables();
    lib479C7CBB_InitVariables();
    libF58A3325_InitVariables();
    lib39886FE6_InitVariables();
    libD6A97973_InitVariables();
    lib64DC5B97_InitVariables();
    lib458E37E6_InitVariables();
    lib9A6A5E35_InitVariables();
    libBBFED31C_InitVariables();
}

// Variable Initialization
bool lib7550A90B_InitVariables_completed = false;

void lib7550A90B_InitVariables () {
    int init_i;

    if (lib7550A90B_InitVariables_completed) {
        return;
    }

    lib7550A90B_InitVariables_completed = true;

    lib7550A90B_gv_maxTeams = 1;
    lib7550A90B_gv_originalPlayers = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lib7550A90B_gv_originalTeams[init_i] = PlayerGroupEmpty();
    }
    lib7550A90B_gv_spawnPeriod = 30.0;
    lib7550A90B_gv_spawnPeriodMultiplier = 1.0;
    lib7550A90B_gv_totalTimer = TimerCreate();
    lib7550A90B_gv_spawnTimer = TimerCreate();
    lib7550A90B_gv_spawnTimerExtra = TimerCreate();
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lib7550A90B_gv_teamNextPlayer[init_i] = 1;
    }
    for (init_i = 0; init_i <= 15; init_i += 1) {
        lib7550A90B_gv_armyStatsDialog[init_i] = c_invalidDialogId;
    }
}

// Functions
playergroup lib7550A90B_gf_TugofWarPlayers () {
    // Automatic Variable Declarations
    // Implementation
    return lib7550A90B_gv_originalPlayers;
}

void lib7550A90B_gf_TugofWarSingleLane (playergroup lp_team0Group, point lp_team0Destination, point lp_team0Spawn, point lp_team0Origin1, point lp_team0Origin2, point lp_team0Origin3, point lp_team0Origin4, point lp_team0Origin5, point lp_team0Origin6, playergroup lp_team1Group, point lp_team1Destination, point lp_team1Spawn, point lp_team1Origin1, point lp_team1Origin2, point lp_team1Origin3, point lp_team1Origin4, point lp_team1Origin5, point lp_team1Origin6) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoE0C57725_ae = 23;
    const int autoE0C57725_ai = 1;
    const int autoB09A097B_ae = 23;
    const int autoB09A097B_ai = 1;
    playergroup autoCB5B5A5E_g;
    int autoCB5B5A5E_var;

    // Variable Initialization

    // Implementation
    if ((lib7550A90B_gv_sizeChosen == false)) {
        lib7550A90B_gv_sizeChosen = true;
        PlayerGroupClear(lib7550A90B_gv_originalPlayers);
        PlayerGroupClear(lib7550A90B_gv_originalTeams[0]);
        libNtve_gf_AddPlayerGroupToPlayerGroup(lp_team0Group, lib7550A90B_gv_originalTeams[0]);
        PlayerGroupClear(lib7550A90B_gv_originalTeams[1]);
        libNtve_gf_AddPlayerGroupToPlayerGroup(lp_team1Group, lib7550A90B_gv_originalTeams[1]);
        if ((PlayerGroupCount(lp_team0Group) >= 1)) {
            PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team0Group, 1));
            if ((PlayerGroupCount(lp_team0Group) >= 2)) {
                PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team0Group, 2));
                if ((PlayerGroupCount(lp_team0Group) >= 3)) {
                    PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team0Group, 3));
                }

            }

        }

        if ((PlayerGroupCount(lp_team1Group) >= 1)) {
            PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team1Group, 1));
            if ((PlayerGroupCount(lp_team1Group) >= 2)) {
                PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team1Group, 2));
                if ((PlayerGroupCount(lp_team1Group) >= 3)) {
                    PlayerGroupAdd(lib7550A90B_gv_originalPlayers, PlayerGroupPlayer(lp_team1Group, 3));
                }

            }

        }

        VisRevealArea(13, RegionCircle(lp_team0Origin2, 32.0), 0.0, false);
        VisRevealArea(13, RegionRect((PointGetX(lp_team0Origin2) - 57.0), PointGetY(lp_team0Origin2), PointGetX(RegionGetBoundsMax(RegionEntireMap())), PointGetY(RegionGetBoundsMax(RegionEntireMap()))), 0.0, false);
        VisRevealArea(13, RegionRect(PointGetX(lp_team0Origin2), (PointGetY(lp_team0Origin2) - 57.0), PointGetX(RegionGetBoundsMax(RegionEntireMap())), PointGetY(RegionGetBoundsMax(RegionEntireMap()))), 0.0, false);
        lv_i = 0;
        for ( ; ( (autoE0C57725_ai >= 0 && lv_i <= autoE0C57725_ae) || (autoE0C57725_ai < 0 && lv_i >= autoE0C57725_ae) ) ; lv_i += autoE0C57725_ai ) {
            VisRevealArea(13, RegionCircle(PointWithOffsetPolar(lp_team0Origin2, 26.0, (IntToFixed(lv_i) * 15.0)), 32.0), 0.0, false);
        }
        VisRevealArea(14, RegionCircle(lp_team1Origin2, 32.0), 0.0, false);
        VisRevealArea(14, RegionRect((PointGetX(lp_team1Origin2) + 58.0), PointGetY(lp_team1Origin2), PointGetX(RegionGetBoundsMin(RegionEntireMap())), PointGetY(RegionGetBoundsMin(RegionEntireMap()))), 0.0, false);
        VisRevealArea(14, RegionRect(PointGetX(lp_team1Origin2), (PointGetY(lp_team1Origin2) + 58.0), PointGetX(RegionGetBoundsMin(RegionEntireMap())), PointGetY(RegionGetBoundsMin(RegionEntireMap()))), 0.0, false);
        lv_i = 0;
        for ( ; ( (autoB09A097B_ai >= 0 && lv_i <= autoB09A097B_ae) || (autoB09A097B_ai < 0 && lv_i >= autoB09A097B_ae) ) ; lv_i += autoB09A097B_ai ) {
            VisRevealArea(14, RegionCircle(PointWithOffsetPolar(lp_team1Origin2, 26.0, (IntToFixed(lv_i) * 15.0)), 32.0), 0.0, false);
        }
        if ((libDDE92A83_gf_GameIsTutorial() == true)) {
            VisRevealArea(13, RegionCircle(lp_team1Origin1, 24.0), 0.0, false);
        }

        lib7A9A9B22_gf_StagingAreaTeamSet(lp_team0Group, 13, lp_team0Origin1, lp_team0Origin2, lp_team0Origin3, lp_team0Origin4, lp_team0Origin5, lp_team0Origin6, lp_team1Group, 14, lp_team1Origin1, lp_team1Origin2, lp_team1Origin3, lp_team1Origin4, lp_team1Origin5, lp_team1Origin6, PlayerGroupEmpty(), -1, null, null, null, null, null, null, PlayerGroupEmpty(), -1, null, null, null, null, null, null);
        if ((TechTreeUpgradeCount(0, "MutationUnity", c_techCountCompleteOnly) == 0)) {
            lib7A9A9B22_gf_StagingAreaTeamCreate("StagingAreaFootprint", 0, 225.0, lp_team0Spawn, lp_team0Destination, null, null, null, null, null, null, null, null);
            lib7A9A9B22_gf_StagingAreaTeamCreate("StagingAreaFootprint", 1, 45.0, lp_team1Spawn, lp_team1Destination, null, null, null, null, null, null, null, null);
            lib7A9A9B22_gf_PreparationAreaCreate(lp_team0Spawn, null, 0);
            lib7A9A9B22_gf_PreparationAreaCreate(lp_team1Spawn, null, 1);
        }
        else {
            lib7A9A9B22_gf_StagingAreaTeamCreate("StagingAreaFootprint", 0, 225.0, lp_team0Spawn, lp_team0Destination, null, null, null, null, null, null, null, null);
            lib7A9A9B22_gf_PreparationAreaCreate(lp_team0Spawn, null, 0);
        }
        autoCB5B5A5E_g = PlayerGroupActive();
        autoCB5B5A5E_var = -1;
        while (true) {
            autoCB5B5A5E_var = PlayerGroupNextPlayer(autoCB5B5A5E_g, autoCB5B5A5E_var);
            if (autoCB5B5A5E_var < 0) { break; }
            lib474957E9_gf_PlayerRewardsApply(autoCB5B5A5E_var);
        }
        lib474957E9_gf_PacksStart();
        lib7A9A9B22_gf_PreparationAreaPrepare(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), 1), 0);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team0Origin1);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team0Origin2);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team0Origin3);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team1Origin1);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team1Origin2);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaDecoration", c_unitCreateIgnorePlacement, 0, lp_team1Origin3);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaBoundaryTopLeft", c_unitCreateIgnorePlacement, 0, PointWithOffset(lp_team0Origin1, -15.0, 15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaBoundaryTopLeft", c_unitCreateIgnorePlacement, 0, PointWithOffset(lp_team1Origin1, -15.0, 15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaBoundaryBottomRight", c_unitCreateIgnorePlacement, 0, PointWithOffset(lp_team0Origin3, 15.0, -15.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "StagingAreaBoundaryBottomRight", c_unitCreateIgnorePlacement, 0, PointWithOffset(lp_team1Origin3, 15.0, -15.0));
        if ((libDDE92A83_gf_GameIsTutorial() == true)) {
            lib7A9A9B22_gf_PreparationAreaPrepare(14, 1);
            lib39886FE6_gf_MasteryBarTextOverride(StringExternal("UI/MenuPanelTutorial"));
        }
        else {
            lib7A9A9B22_gf_PreparationAreaPrepare(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(1), 1), 1);
        }
        lib7550A90B_gf_GenericStartActions();
    }

}

trigger auto_lib7550A90B_gf_TugofWarGameOver_Trigger = null;
playergroup auto_lib7550A90B_gf_TugofWarGameOver_lp_winners;
point auto_lib7550A90B_gf_TugofWarGameOver_lp_panCamera;

void lib7550A90B_gf_TugofWarGameOver (playergroup lp_winners, point lp_panCamera) {
    auto_lib7550A90B_gf_TugofWarGameOver_lp_winners = lp_winners;
    auto_lib7550A90B_gf_TugofWarGameOver_lp_panCamera = lp_panCamera;

    if (auto_lib7550A90B_gf_TugofWarGameOver_Trigger == null) {
        auto_lib7550A90B_gf_TugofWarGameOver_Trigger = TriggerCreate("auto_lib7550A90B_gf_TugofWarGameOver_TriggerFunc");
    }

    TriggerExecute(auto_lib7550A90B_gf_TugofWarGameOver_Trigger, false, false);
}

bool auto_lib7550A90B_gf_TugofWarGameOver_TriggerFunc (bool testConds, bool runActions) {
    playergroup lp_winners = auto_lib7550A90B_gf_TugofWarGameOver_lp_winners;
    point lp_panCamera = auto_lib7550A90B_gf_TugofWarGameOver_lp_panCamera;

    // Automatic Variable Declarations
    playergroup auto383C0E21_g;
    int auto383C0E21_var;
    playergroup auto32EE5D28_g;
    int auto32EE5D28_var;

    // Implementation
    if ((libDDE92A83_gv_gameOver == false)) {
        libBBFED31C_gf_EndGameGameOver(lp_panCamera, true, lp_winners);
        lib9A6A5E35_gf_DesertStrikeBankGameOver(lp_winners);
        lib7A9A9B22_gf_MineralIncomePause(true);
        lib39886FE6_gf_MasteryBarDisable(false);
        lib39886FE6_gf_MasteryBarFade(PlayerGroupAll(), false, 0.5);
        lib038F51B7_gf_AbilityControlEnable(false, PlayerGroupAll());
        lib038F51B7_gf_AbilityControlFade(PlayerGroupAll(), false, 0.5);
        libCA960273_gf_StagingAreaCustomizationFade(PlayerGroupAll(), false, 0.5);
        lib22D496B3_gf_PartyFrameFade(PlayerGroupAll(), false, 0.5);
        DialogSetVisible(lib2A8CE4F7_gv_statsDialog, PlayerGroupAll(), false);
        lib2A8CE4F7_gf_StatsMenuFade(PlayerGroupAll(), false, 0.5);
        lib948F000A_gf_WorkerSelectFade(PlayerGroupAll(), false, 0.5);
        auto383C0E21_g = PlayerGroupAll();
        auto383C0E21_var = -1;
        while (true) {
            auto383C0E21_var = PlayerGroupNextPlayer(auto383C0E21_g, auto383C0E21_var);
            if (auto383C0E21_var < 0) { break; }
            lib948F000A_gf_WorkerSelectShowHide(auto383C0E21_var, false, false);
            libCA960273_gf_StagingAreaCustomizationShowHide(auto383C0E21_var, false, false);
            lib038F51B7_gf_AbilityControlShowHide(auto383C0E21_var, false, false);
            lib64DC5B97_gf_SkinSystemClose(auto383C0E21_var);
            libD6A97973_gf_MasteryPanelShowHide(auto383C0E21_var, false, false);
            lib479C7CBB_gf_LiveScoreboardShowHide(auto383C0E21_var, false, false);
            DialogSetVisible(lib28FBFBC5_gv_handle, PlayerGroupSingle(auto383C0E21_var), false);
        }
        TimerPause(lib7550A90B_gv_spawnTimer, true);
        TimerPause(lib7550A90B_gv_spawnTimerExtra, true);
        TimerPause(lib7550A90B_gv_totalTimer, true);
        libDDE92A83_gf_PauseUnpauseWaveTimers(true);
        Wait(4.5, c_timeGame);
        libBBFED31C_gf_EndGameUnitPause();
        Wait(0.5, c_timeGame);
        libDDE92A83_gf_ScreenShakeGlobal();
        libDDE92A83_gf_StarlightFullscreenBorder(true, true, PlayerGroupAll());
        Wait(0.25, c_timeGame);
        libDDE92A83_gf_FadeSounds(true, false, PlayerGroupAll(), 33.0, 1.0);
        auto32EE5D28_g = PlayerGroupAll();
        auto32EE5D28_var = -1;
        while (true) {
            auto32EE5D28_var = PlayerGroupNextPlayer(auto32EE5D28_g, auto32EE5D28_var);
            if (auto32EE5D28_var < 0) { break; }
            VisRevealArea(auto32EE5D28_var, RegionEntireMap(), 0.0, false);
        }
        Wait(2.75, c_timeGame);
        libBBFED31C_gf_EndGameDonationDialog();
        Wait(3.0, c_timeGame);
        libFD391A9C_gf_Scoreboard(libDDE92A83_gf_OriginalPlayers(), "UnitsKilledCount", "UnitsLostCount", "DamageDealt", "DamageTaken", "SecondsOwnedMid", "ExperienceEarned", null, null, null, 150, 0);
        libFD391A9C_gf_ScoreboardAddTab(StringExternal("UI/TechGlossary"), "MineralsKilledArmy", "MineralsLostArmy", "TotalUnitsSpawnedCount", "TotalUnitsSpawnedValue", "TotalUnitsExpiredCount", "TotalUnitsExpiredValue", null, null, null);
        libFD391A9C_gf_ScoreboardAddTab(StringExternal("ScoreResult/Name/Resources"), "MineralsCollected", "MineralsSpent", "MineralMineCount", "UnitSpawnersValue", "UpgradeSpendingSampled", "ScannerSweepSpending", null, null, null);
    }

    return true;
}

void lib7550A90B_gf_TugofWarRemovePlayer (int lp_player) {
    // Variable Declarations
    int lv_localPlayer;
    int lv_team;
    bool lv_skipPlayer;
    int lv_t;

    // Automatic Variable Declarations
    int auto88725702_ae;
    const int auto88725702_ai = 1;
    unitgroup auto50E17489_g;
    int auto50E17489_u;
    unit auto50E17489_var;
    unitgroup auto070E563B_g;
    int auto070E563B_u;
    unit auto070E563B_var;

    // Variable Initialization

    // Implementation
    while ((lib7550A90B_gv_spawningActive == true)) {
        Wait(0.0625, c_timeGame);
    }
    lv_localPlayer = libNtve_gf_ArithmeticIntClamp(lp_player, 0, 15);
    auto88725702_ae = lib7550A90B_gv_maxTeams;
    lv_t = 0;
    for ( ; ( (auto88725702_ai >= 0 && lv_t <= auto88725702_ae) || (auto88725702_ai < 0 && lv_t >= auto88725702_ae) ) ; lv_t += auto88725702_ai ) {
        if ((PlayerGroupHasPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_t), lv_localPlayer) == true)) {
            lv_team = lv_t;
            if ((PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_t), lib7550A90B_gv_teamNextPlayer[lv_t]) == lv_localPlayer)) {
                lv_skipPlayer = true;
            }

            if ((((lib7550A90B_gv_teamNextPlayer[lv_t] >= 2) && (PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_t), 1) == lv_localPlayer)) || ((lib7550A90B_gv_teamNextPlayer[lv_t] >= 3) && (PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_t), 2) == lv_localPlayer)))) {
                lib7550A90B_gv_teamNextPlayer[lv_t] -= 1;
            }

        }

    }
    lib7550A90B_gf_UpdateNPCColors();
    lib7A9A9B22_gf_StagingAreaRemovePlayer(lp_player);
    if ((lv_skipPlayer == true)) {
        lib7550A90B_gf_IncreaseSpawnCount(lv_team, 0);
    }

    lib7A9A9B22_gf_PreparationAreaPrepare(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_team), lib7550A90B_gv_teamNextPlayer[lv_team]), lv_team);
    lib7550A90B_gf_UpdateSpawnTimer();
    UnitSetState(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(lp_player), 1), c_unitStateStunned, true);
    if ((libDDE92A83_gv_gameOver == false) && (PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)) == 0)) {
        auto50E17489_g = UnitGroup(null, 13, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto50E17489_u = UnitGroupCount(auto50E17489_g, c_unitCountAll);
        for (;; auto50E17489_u -= 1) {
            auto50E17489_var = UnitGroupUnitFromEnd(auto50E17489_g, auto50E17489_u);
            if (auto50E17489_var == null) { break; }
            UnitCreateEffectUnit(auto50E17489_var, "HugeDamage", auto50E17489_var);
        }
    }

    if ((libDDE92A83_gv_gameOver == false) && (PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(1)) == 0) && (libDDE92A83_gf_GameIsUnityMutation() == false)) {
        auto070E563B_g = UnitGroup(null, 14, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto070E563B_u = UnitGroupCount(auto070E563B_g, c_unitCountAll);
        for (;; auto070E563B_u -= 1) {
            auto070E563B_var = UnitGroupUnitFromEnd(auto070E563B_g, auto070E563B_u);
            if (auto070E563B_var == null) { break; }
            UnitCreateEffectUnit(auto070E563B_var, "HugeDamage", auto070E563B_var);
        }
    }

}

void lib7550A90B_gf_TugofWarPeriodicUpdate () {
    // Automatic Variable Declarations
    // Implementation
    lib22D496B3_gf_PartyFrameUpdate("MineralsCurrent");
    libF095282B_gf_ObjectiveIconUpdate();
    lib7A9A9B22_gf_UpdateAllMines();
    libCA960273_gf_PremiumDialogUpdate();
    lib479C7CBB_gf_LiveScoreboardUpdate();
    libF58A3325_gf_MasteryCodeRefresh();
}

void lib7550A90B_gf_TugofWarAddSpawnTime (fixed lp_time) {
    // Variable Declarations
    fixed lv_remaining;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_remaining = TimerGetRemaining(lib7550A90B_gv_spawnTimerExtra);

    // Implementation
    TriggerEnable(lib7550A90B_gt_SpawnTimerExtraActivate, true);
    TimerPause(lib7550A90B_gv_spawnTimer, true);
    TimerPause(lib7550A90B_gv_totalTimer, true);
    libNtve_gf_StopTimer(lib7550A90B_gv_spawnTimerExtra);
    TimerStart(lib7550A90B_gv_spawnTimerExtra, (lp_time + lv_remaining), false, c_timeGame);
    lib7550A90B_gf_UpdateSpawnTimer();
}

void lib7550A90B_gf_TugofWarSetSpawnPeriod (fixed lp_spawnPeriod) {
    // Automatic Variable Declarations
    // Implementation
    lib7550A90B_gv_spawnPeriod = lp_spawnPeriod;
}

void lib7550A90B_gf_TugofWarStartDefault (region lp_team0Region, region lp_team1Region) {
    // Variable Declarations
    const int lv_separationPlayers = 6;
    const int lv_separationSpawn = 6;
    point lv_cent;
    int lv_i;
    playergroup lv_team0;
    point lv_team0TownHall;
    point lv_team0Turret;
    point lv_team0DefensiveArea;
    region lv_team0Region;
    point lv_team0Spawn;
    point lv_team0Origin2;
    point lv_team0Origin1;
    point lv_team0Origin3;
    playergroup lv_team1;
    point lv_team1TownHall;
    point lv_team1Turret;
    point lv_team1DefensiveArea;
    point lv_team1Spawn;
    point lv_team1Origin2;
    point lv_team1Origin1;
    point lv_team1Origin3;

    // Automatic Variable Declarations
    playergroup auto071EAD52_g;
    int auto071EAD52_var;
    string auto82DC1E5A_val;
    playergroup autoE582F489_g;
    int autoE582F489_var;

    // Variable Initialization
    lv_cent = Point(128.0, 120.0);
    lv_team0 = GameAttributePlayersForTeam(1);
    lv_team0TownHall = PointWithOffset(lv_cent, 32.0, 32.0);
    lv_team0Turret = PointWithOffset(lv_cent, 18.0, 18.0);
    lv_team0DefensiveArea = PointWithOffset(lv_cent, 22.0, 22.0);
    lv_team0Region = RegionRect(0.0, 0.0, 1.0, 1.0);
    lv_team0Spawn = PointWithOffset(lv_cent, 40.5, 40.5);
    lv_team0Origin2 = PointWithOffset(lv_team0Spawn, (12.0 + IntToFixed(lv_separationSpawn)), (12.0 + IntToFixed(lv_separationSpawn)));
    lv_team0Origin1 = PointWithOffset(lv_team0Origin2, (0.0 - (18.0 + IntToFixed(lv_separationPlayers))), (18.0 + IntToFixed(lv_separationPlayers)));
    lv_team0Origin3 = PointWithOffset(lv_team0Origin2, (18.0 + IntToFixed(lv_separationPlayers)), (0.0 - (18.0 + IntToFixed(lv_separationPlayers))));
    lv_team1 = GameAttributePlayersForTeam(2);
    lv_team1TownHall = PointWithOffset(lv_cent, -32.0, -32.0);
    lv_team1Turret = PointWithOffset(lv_cent, -18.0, -18.0);
    lv_team1DefensiveArea = PointWithOffset(lv_cent, -22.0, -22.0);
    lv_team1Spawn = PointWithOffset(lv_cent, -40.5, -40.5);
    lv_team1Origin2 = PointWithOffset(lv_team1Spawn, (0.0 - (12.0 + IntToFixed(lv_separationSpawn))), (0.0 - (12.0 + IntToFixed(lv_separationSpawn))));
    lv_team1Origin1 = PointWithOffset(lv_team1Origin2, (0.0 - (18.0 + IntToFixed(lv_separationPlayers))), (18.0 + IntToFixed(lv_separationPlayers)));
    lv_team1Origin3 = PointWithOffset(lv_team1Origin2, (18.0 + IntToFixed(lv_separationPlayers)), (0.0 - (18.0 + IntToFixed(lv_separationPlayers))));

    // Implementation
    lib7550A90B_gv_center = lv_cent;
    if (((GameIsTestMap(false) == true) || (GameAttributePlayerValue("[bnet:Liberty (Mod)/0.0/999,file:Mods/Liberty.SC2Mod]5100", PlayerGroupPlayer(PlayerGroupActive(), 1)) == "   4"))) {
        if ((lib7550A90B_gv_setup == false)) {
            lib7550A90B_gv_setup = true;
            if ((GameAttributeGameValue("[bnet:Core (Mod)/0.0/999,file:Mods/Core.SC2Mod]4000") == "NoMH")) {
                lib16875C2F_gf_ModeTutorial();
            }

            if (((libDDE92A83_gf_GameIsTutorial() == true) || (GameIsTestMap(false) == true))) {
                PlayerGroupAdd(lv_team1, 2);
            }

            auto071EAD52_g = GameAttributePlayersForTeam(2);
            auto071EAD52_var = -1;
            while (true) {
                auto071EAD52_var = PlayerGroupNextPlayer(auto071EAD52_g, auto071EAD52_var);
                if (auto071EAD52_var < 0) { break; }
                lib474957E9_gf_DecorationInvert(auto071EAD52_var, true);
            }
            if ((PlayerGroupCount(PlayerGroupActive()) == 2)) {
                lib16875C2F_gf_ModeDuel();
            }

            lib7550A90B_gf_CreateTargetRequirementDummies();
            auto82DC1E5A_val = GameAttributePlayerValue("[bnet:Liberty (Mod)/0.0/999,file:Mods/Liberty.SC2Mod]3014", 1);
            if (auto82DC1E5A_val == "   2") {
                lib16875C2F_gf_ModeWeeklyBrawl(-1);
            }
            else if (auto82DC1E5A_val == "   4") {
                lib16875C2F_gf_ModeCommanders();
            }
            else if (auto82DC1E5A_val == "   5") {
                lib16875C2F_gf_ModeSabotage();
            }
            else if (auto82DC1E5A_val == "   6") {
                lib16875C2F_gf_ModeSwitch();
            }
            else if (auto82DC1E5A_val == "   7") {
                lib16875C2F_gf_ModeGear();
            }
            else if (auto82DC1E5A_val == "   8") {
                lib16875C2F_gf_ModeHeroicCommanders();
            }
            else {
                autoE582F489_g = PlayerGroupAll();
                autoE582F489_var = -1;
                while (true) {
                    autoE582F489_var = PlayerGroupNextPlayer(autoE582F489_g, autoE582F489_var);
                    if (autoE582F489_var < 0) { break; }
                    libNtve_gf_SetUpgradeLevelForPlayer(autoE582F489_var, "GameModeStandard", 1);
                }
            }
            lib7550A90B_gf_Initialization();
        }

        if ((lib7550A90B_gv_started == false)) {
            lib7550A90B_gv_started = true;
            lib7550A90B_gf_TugofWarSingleLane(lv_team0, lv_team1TownHall, lv_team0Spawn, lv_team0Origin1, lv_team0Origin2, lv_team0Origin3, null, null, null, lv_team1, lv_team0TownHall, lv_team1Spawn, lv_team1Origin1, lv_team1Origin2, lv_team1Origin3, null, null, null);
            if ((libDDE92A83_gf_GameIsUnityMutation() == true)) {
                lib458E37E6_gf_TugofWarObjectivesBasic(lv_cent, lv_team0TownHall, lv_team0Turret, lv_team0DefensiveArea, lp_team0Region, lv_team1TownHall, "ObjectiveVoidThrasher", lv_team1Turret, lv_team1DefensiveArea, lp_team1Region);
            }
            else {
                lib458E37E6_gf_TugofWarObjectivesBasic(lv_cent, lv_team0TownHall, lv_team0Turret, lv_team0DefensiveArea, lp_team0Region, lv_team1TownHall, "ObjectiveNexus", lv_team1Turret, lv_team1DefensiveArea, lp_team1Region);
            }
            libFB3A33A2_gf_CreditsCrittersNew();
            libFB3A33A2_gf_CreditsTowers();
        }

    }
    else {
        libNtve_gf_HideGameUI(false, PlayerGroupAll());
        EnvironmentShow(c_environmentAll, false);
        SoundChannelMute(PlayerGroupAll(), c_soundCategoryMusic, true);
    }
}

void lib7550A90B_gf_TugofWarReset () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    playergroup auto758397E7_g;
    int auto758397E7_var;
    unitgroup auto1EB59FAA_g;
    int auto1EB59FAA_u;
    unit auto1EB59FAA_var;
    playergroup auto3E4C8FF1_g;
    int auto3E4C8FF1_var;
    unitgroup auto17EC0803_g;
    int auto17EC0803_u;
    unit auto17EC0803_var;
    unitgroup auto4E685070_g;
    int auto4E685070_u;
    unit auto4E685070_var;
    unitgroup auto8E7E1D9D_g;
    int auto8E7E1D9D_u;
    unit auto8E7E1D9D_var;
    unitgroup auto8939B6CF_g;
    int auto8939B6CF_u;
    unit auto8939B6CF_var;
    playergroup auto6705E8E5_g;
    int auto6705E8E5_var;
    int auto7BA50182_ae;
    const int auto7BA50182_ai = 1;

    // Variable Initialization

    // Implementation
    lib7550A90B_gv_setup = false;
    lib7550A90B_gv_started = false;
    libDDE92A83_gv_gameOver = false;
    libDDE92A83_gf_ToggleUpgradesSC2Multi(PlayerGroupAll(), 0);
    libDDE92A83_gf_ToggleUpgradesSC2Coop(PlayerGroupAll(), 0);
    auto758397E7_g = PlayerGroupAll();
    auto758397E7_var = -1;
    while (true) {
        auto758397E7_var = PlayerGroupNextPlayer(auto758397E7_g, auto758397E7_var);
        if (auto758397E7_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(auto758397E7_var, "OverdeathDisable", 1);
    }
    auto1EB59FAA_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, 0, (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto1EB59FAA_u = UnitGroupCount(auto1EB59FAA_g, c_unitCountAll);
    for (;; auto1EB59FAA_u -= 1) {
        auto1EB59FAA_var = UnitGroupUnitFromEnd(auto1EB59FAA_g, auto1EB59FAA_u);
        if (auto1EB59FAA_var == null) { break; }
        UnitBehaviorRemove(auto1EB59FAA_var, "DeathBurstLoot", 1);
        UnitBehaviorRemove(auto1EB59FAA_var, "DeathBurstProtoss", 1);
        UnitRemove(auto1EB59FAA_var);
    }
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformProtossLarge");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformProtossSmall");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformProtossTiny");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformTerranLarge");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformTerranSmall");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("PlatformTerranTiny");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstLoot");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstLoot00");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstLoot01");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstLoot02");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstLoot03");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstProtoss");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstProtoss00");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstProtoss01");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstProtoss02");
    libDDE92A83_gf_RemoveAllUnitsOfUnitType("DeathBurstProtoss03");
    auto3E4C8FF1_g = PlayerGroupAll();
    auto3E4C8FF1_var = -1;
    while (true) {
        auto3E4C8FF1_var = PlayerGroupNextPlayer(auto3E4C8FF1_g, auto3E4C8FF1_var);
        if (auto3E4C8FF1_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(auto3E4C8FF1_var, "OverdeathDisable", 0);
    }
    auto17EC0803_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterMissile), 0, 0, 0), 0);
    auto17EC0803_u = UnitGroupCount(auto17EC0803_g, c_unitCountAll);
    for (;; auto17EC0803_u -= 1) {
        auto17EC0803_var = UnitGroupUnitFromEnd(auto17EC0803_g, auto17EC0803_u);
        if (auto17EC0803_var == null) { break; }
        UnitRemove(auto17EC0803_var);
    }
    auto4E685070_g = libDDE92A83_gf_PlayerWorkers(1);
    auto4E685070_u = UnitGroupCount(auto4E685070_g, c_unitCountAll);
    for (;; auto4E685070_u -= 1) {
        auto4E685070_var = UnitGroupUnitFromEnd(auto4E685070_g, auto4E685070_u);
        if (auto4E685070_var == null) { break; }
        UnitRemove(auto4E685070_var);
    }
    auto8E7E1D9D_g = lib7A9A9B22_gf_StagingAreaSpawners();
    auto8E7E1D9D_u = UnitGroupCount(auto8E7E1D9D_g, c_unitCountAll);
    for (;; auto8E7E1D9D_u -= 1) {
        auto8E7E1D9D_var = UnitGroupUnitFromEnd(auto8E7E1D9D_g, auto8E7E1D9D_u);
        if (auto8E7E1D9D_var == null) { break; }
        UnitRemove(auto8E7E1D9D_var);
    }
    auto8939B6CF_g = lib7A9A9B22_gf_StagingAreaSpawns();
    auto8939B6CF_u = UnitGroupCount(auto8939B6CF_g, c_unitCountAll);
    for (;; auto8939B6CF_u -= 1) {
        auto8939B6CF_var = UnitGroupUnitFromEnd(auto8939B6CF_g, auto8939B6CF_u);
        if (auto8939B6CF_var == null) { break; }
        UnitRemove(auto8939B6CF_var);
    }
    auto6705E8E5_g = PlayerGroupAll();
    auto6705E8E5_var = -1;
    while (true) {
        auto6705E8E5_var = PlayerGroupNextPlayer(auto6705E8E5_g, auto6705E8E5_var);
        if (auto6705E8E5_var < 0) { break; }
        auto7BA50182_ae = UserDataInstanceCount(libCA960273_gv_userData);
        lv_i = 1;
        for ( ; ( (auto7BA50182_ai >= 0 && lv_i <= auto7BA50182_ae) || (auto7BA50182_ai < 0 && lv_i >= auto7BA50182_ae) ) ; lv_i += auto7BA50182_ai ) {
            libNtve_gf_SetUpgradeLevelForPlayer(auto6705E8E5_var, UserDataGetGameLink(libCA960273_gv_userData, UserDataInstance(libCA960273_gv_userData, lv_i), UserDataField(libCA960273_gv_userData, 1), 1), 0);
        }
    }
}

trigger auto_lib7550A90B_gf_TugofWarSpawn_Trigger = null;

void lib7550A90B_gf_TugofWarSpawn () {
    if (auto_lib7550A90B_gf_TugofWarSpawn_Trigger == null) {
        auto_lib7550A90B_gf_TugofWarSpawn_Trigger = TriggerCreate("auto_lib7550A90B_gf_TugofWarSpawn_TriggerFunc");
    }

    TriggerExecute(auto_lib7550A90B_gf_TugofWarSpawn_Trigger, false, false);
}

bool auto_lib7550A90B_gf_TugofWarSpawn_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_t;
    int lv_repeat;
    int lv_team0Player;
    int lv_team1Player;

    // Automatic Variable Declarations
    int auto9420E793_n;
    int auto9420E793_i;
    const int auto9574E05D_ae = 1;
    const int auto9574E05D_ai = 1;

    // Variable Initialization
    lv_repeat = 1;
    lv_team0Player = PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), lib7550A90B_gv_teamNextPlayer[0]);
    lv_team1Player = PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(1), lib7550A90B_gv_teamNextPlayer[1]);

    // Implementation
    lib7550A90B_gv_spawningActive = true;
    if ((TechTreeUpgradeCount(0, "MutationSynergy", c_techCountCompleteOnly) == 1)) {
        lv_repeat = 3;
    }

    auto9420E793_n = lv_repeat;
    for (auto9420E793_i = 1; auto9420E793_i <= auto9420E793_n; auto9420E793_i += 1) {
        lv_team0Player = PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), lib7550A90B_gv_teamNextPlayer[0]);
        lv_team1Player = PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(1), lib7550A90B_gv_teamNextPlayer[1]);
        lv_t = 0;
        for ( ; ( (auto9574E05D_ai >= 0 && lv_t <= auto9574E05D_ae) || (auto9574E05D_ai < 0 && lv_t >= auto9574E05D_ae) ) ; lv_t += auto9574E05D_ai ) {
            lib7550A90B_gf_IncreaseSpawnCount(lv_t, 1);
        }
        lib7550A90B_gf_UpdateSpawnTimer();
        lib7550A90B_gf_PrepareSpawnAreas();
        if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)) > 0)) {
            lib7A9A9B22_gf_ZeratulArtifactSearchUpdate(lv_team0Player, PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)));
            lib7A9A9B22_gf_StagingAreaPrepare(UnitGroupFilterPlayer(lib7A9A9B22_gf_StagingAreas(), lv_team0Player, 0), "WaveUnit", "UnitBirthRedPrecursor");
            libDDE92A83_gf_RebuildPermanentStructures(lv_team0Player);
        }

        if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(1)) > 0)) {
            lib7A9A9B22_gf_ZeratulArtifactSearchUpdate(lv_team1Player, PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(1)));
            lib7A9A9B22_gf_StagingAreaPrepare(UnitGroupFilterPlayer(lib7A9A9B22_gf_StagingAreas(), lv_team1Player, 0), "WaveUnit", "UnitBirthBluePrecursor");
            libDDE92A83_gf_RebuildPermanentStructures(lv_team1Player);
        }

        if ((libDDE92A83_gf_GameIsUnityMutation() == true)) {
            if ((TechTreeUpgradeCount(0, "MutationCommanders", c_techCountCompleteOnly) == 1)) {
                lib7550A90B_gf_SpawnPvE(14, lv_team0Player, 280, 7.5);
            }
            else {
                lib7550A90B_gf_SpawnPvE(14, lv_team0Player, 280, 5.5);
            }
        }

    }
    lib7A9A9B22_gf_StagingAreaSend("WaveUnit");
    lib7550A90B_gv_spawningActive = false;
    return true;
}

void lib7550A90B_gf_TugofWarTimeout () {
    // Variable Declarations
    int[2] lv_minerals;
    int lv_winners;
    int lv_losers;
    int lv_nPC;

    // Automatic Variable Declarations
    playergroup auto645F09DE_g;
    int auto645F09DE_var;
    playergroup autoF0EAF7FC_g;
    int autoF0EAF7FC_var;
    playergroup autoE2182D43_g;
    int autoE2182D43_var;
    unitgroup auto26871A4E_g;
    int auto26871A4E_u;
    unit auto26871A4E_var;

    // Variable Initialization

    // Implementation
    if ((libDDE92A83_gv_gameOver == false)) {
        auto645F09DE_g = lib7550A90B_gv_originalTeams[0];
        auto645F09DE_var = -1;
        while (true) {
            auto645F09DE_var = PlayerGroupNextPlayer(auto645F09DE_g, auto645F09DE_var);
            if (auto645F09DE_var < 0) { break; }
            lv_minerals[0] += PlayerScoreValueGetAsInt(auto645F09DE_var, "MineralsCollected");
        }
        autoF0EAF7FC_g = lib7550A90B_gv_originalTeams[1];
        autoF0EAF7FC_var = -1;
        while (true) {
            autoF0EAF7FC_var = PlayerGroupNextPlayer(autoF0EAF7FC_g, autoF0EAF7FC_var);
            if (autoF0EAF7FC_var < 0) { break; }
            lv_minerals[1] += PlayerScoreValueGetAsInt(autoF0EAF7FC_var, "MineralsCollected");
        }
        if ((lv_minerals[0] >= lv_minerals[1])) {
            lv_winners = 0;
            lv_losers = 1;
            lv_nPC = 13;
        }
        else {
            lv_winners = 1;
            lv_losers = 0;
            lv_nPC = 14;
        }
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, (StringToText("<s val=\"ChatDisplay\">") + StringExternal("Param/Value/lib_7550A90B_3533EA71") + StringToText("</n>") + TextWithColor(PlayerName(PlayerGroupPlayer(lib7550A90B_gv_originalTeams[lv_winners], 1)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(PlayerGroupPlayer(lib7550A90B_gv_originalTeams[lv_winners], 1), false))) + StringExternal("Param/Value/lib_7550A90B_A947AC96") + StringToText("</n>[") + TextWithColor(IntToText(lv_minerals[lv_winners]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(PlayerGroupPlayer(lib7550A90B_gv_originalTeams[lv_winners], 1), false))) + StringToText(" vs ") + TextWithColor(IntToText(lv_minerals[lv_losers]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(PlayerGroupPlayer(lib7550A90B_gv_originalTeams[lv_losers], 1), false))) + StringToText("]") + StringToText("</n>") + StringExternal("Param/Value/lib_7550A90B_3173DBDC")));
        autoE2182D43_g = lib7550A90B_gv_originalTeams[lv_winners];
        autoE2182D43_var = -1;
        while (true) {
            autoE2182D43_var = PlayerGroupNextPlayer(autoE2182D43_g, autoE2182D43_var);
            if (autoE2182D43_var < 0) { break; }
            CatalogFieldValueSet(c_gameCatalogBehavior, "GlobalUnitModifier", "Modification.UnifiedDamageDealtFraction[" + IntToString(0) + "]", autoE2182D43_var, IntToString(10));
            CatalogFieldValueSet(c_gameCatalogBehavior, "GlobalUnitModifier", "Modification.UnifiedDamageDealtFraction[" + IntToString(1) + "]", autoE2182D43_var, IntToString(10));
            CatalogFieldValueSet(c_gameCatalogBehavior, "GlobalUnitModifier", "Modification.UnifiedDamageDealtFraction[" + IntToString(2) + "]", autoE2182D43_var, IntToString(10));
            CatalogFieldValueSet(c_gameCatalogBehavior, "GlobalUnitModifier", "Modification.UnifiedDamageDealtFraction[" + IntToString(3) + "]", autoE2182D43_var, IntToString(10));
            CatalogFieldValueSet(c_gameCatalogBehavior, "GlobalUnitModifier", "Modification.UnifiedDamageDealtFraction[" + IntToString(4) + "]", autoE2182D43_var, IntToString(10));
        }
        auto26871A4E_g = UnitGroup(null, lv_nPC, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto26871A4E_u = UnitGroupCount(auto26871A4E_g, c_unitCountAll);
        for (;; auto26871A4E_u -= 1) {
            auto26871A4E_var = UnitGroupUnitFromEnd(auto26871A4E_g, auto26871A4E_u);
            if (auto26871A4E_var == null) { break; }
            UnitSetPropertyFixed(auto26871A4E_var, c_unitPropLifePercent, 100.0);
            UnitSetPropertyFixed(auto26871A4E_var, c_unitPropShieldsPercent, 100.0);
            libNtve_gf_MakeUnitInvulnerable(auto26871A4E_var, true);
        }
    }

}

void lib7550A90B_gf_TugofWarActivateTournament () {
    // Automatic Variable Declarations
    // Implementation
    lib7550A90B_gv_tournamentEdition = true;
    TriggerEnable(lib7550A90B_gt_TournamentTimeout, true);
}

void lib7550A90B_gf_CreateTargetRequirementDummies () {
    // Variable Declarations
    point lv_cent;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_cent = Point(128.0, 120.0);

    // Implementation
    if ((UnitGroupCount(UnitGroup("TargetRequirementPlayerSide64", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) == 0)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 13, PointWithOffset(lv_cent, 36.0, -12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 13, PointWithOffset(lv_cent, 24.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 13, PointWithOffset(lv_cent, 12.0, 12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 13, PointWithOffset(lv_cent, 0.0, 24.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 13, PointWithOffset(lv_cent, -12.0, 36.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 13, PointWithOffset(lv_cent, 96.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 13, PointWithOffset(lv_cent, 48.0, 48.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 13, PointWithOffset(lv_cent, 0.0, 96.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 13, PointWithOffset(lv_cent, 96.0, 96.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 14, PointWithOffset(lv_cent, -36.0, 12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 14, PointWithOffset(lv_cent, -24.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 14, PointWithOffset(lv_cent, -12.0, -12.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 14, PointWithOffset(lv_cent, 0.0, -24.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide16", 0, 14, PointWithOffset(lv_cent, 12.0, -36.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 14, PointWithOffset(lv_cent, -96.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 14, PointWithOffset(lv_cent, -48.0, -48.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 14, PointWithOffset(lv_cent, 0.0, -96.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetRequirementPlayerSide64", 0, 14, PointWithOffset(lv_cent, -96.0, -96.0));
    }

}

void lib7550A90B_gf_Initialization () {
    // Variable Declarations
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup auto98F4AA78_g;
    int auto98F4AA78_var;
    playergroup autoC4FAB4D1_g;
    int autoC4FAB4D1_var;

    // Variable Initialization
    lv_players = PlayerGroupActive();

    // Implementation
    if ((lib7550A90B_gv_initialized == false)) {
        lib7550A90B_gv_initialized = true;
        if ((libDDE92A83_gf_GameIsTutorial() == true)) {
            PlayerGroupAdd(lv_players, 2);
            PlayerSetAlliance(2, c_allianceIdControl, 1, true);
            PlayerSetAlliance(1, c_allianceIdControl, 2, true);
            PlayerSetAlliance(2, c_allianceIdSpend, 1, true);
            PlayerSetAlliance(1, c_allianceIdSpend, 2, true);
        }

        libDDE92A83_gf_CreateWorkers(true, 1, lv_players, true, true);
        CameraSetData(PlayerGroupAll(), "DirectStrikeCamera");
        lib7550A90B_gf_Preload();
        lib1DE23868_gf_DSSpecificTriggersEnable();
        libDDE92A83_gf_AbilityUsageLimitRange(true, PlayerGroupAll());
        lib038F51B7_gf_AbilityControlStart();
        if ((libDDE92A83_gf_GameIsSandbox() == false)) {
            lib29554E00_gf_AFKTimerCreate(PlayerGroupActive());
            libCA960273_gf_StagingAreaCustomizationCreate();
            lib39886FE6_gf_MasteryBarStart();
            libD6A97973_gf_MasteryPanelApply(PlayerGroupActive(), "MasteryWorker", "IlIlIlIIllIIllII");
            lib1DE23868_gf_PassiveMetaExperience(true);
            lib9A6A5E35_gf_DesertStrikeBank();
            lib479C7CBB_gf_LiveScoreboardAddScore("UnitsKilledCount");
            lib479C7CBB_gf_LiveScoreboardAddScore("StructuresKilledCount");
            lib479C7CBB_gf_LiveScoreboardAddGap();
            lib479C7CBB_gf_LiveScoreboardAddScore("UnitSpawnersValue");
            lib479C7CBB_gf_LiveScoreboardAddScore("MineralsUsedTotalUpgrade");
            lib479C7CBB_gf_LiveScoreboardAddGap();
            lib479C7CBB_gf_LiveScoreboardAddScore("TotalUnitsExpiredCount");
            lib2A8CE4F7_gf_StatsMenuAddStat("Assets\\Textures\\ui_glues_help_armyicon_protoss.dds", Color(35.29, 62.75, 94.12), 0);
            lib2A8CE4F7_gf_StatsMenuAddStat("Assets\\Textures\\ui_glues_help_armyicon_terran.dds", Color(25.49, 70.59, 43.14), 0);
            lib2A8CE4F7_gf_StatsMenuAddStat("Assets\\Textures\\ui_glues_help_armyicon_zerg.dds", Color(96.08, 54.90, 27.45), 0);
            lib64DC5B97_gf_VespeneCustomers();
            lib64DC5B97_gf_SkinSystemStart();
            auto98F4AA78_g = PlayerGroupActive();
            auto98F4AA78_var = -1;
            while (true) {
                auto98F4AA78_var = PlayerGroupNextPlayer(auto98F4AA78_g, auto98F4AA78_var);
                if (auto98F4AA78_var < 0) { break; }
                lib948F000A_gf_WorkerSelectSetLevel(auto98F4AA78_var, lib39886FE6_gf_MasteryBarPlayerLevel(auto98F4AA78_var));
                if ((libDDE92A83_gf_PlayerIsMuted(auto98F4AA78_var) == false)) {
                    libNtve_gf_SetUpgradeLevelForPlayer(auto98F4AA78_var, "WorkerSubmenuDiscord", 1);
                }

            }
        }

        autoC4FAB4D1_g = PlayerGroupActive();
        autoC4FAB4D1_var = -1;
        while (true) {
            autoC4FAB4D1_var = PlayerGroupNextPlayer(autoC4FAB4D1_g, autoC4FAB4D1_var);
            if (autoC4FAB4D1_var < 0) { break; }
            VisExploreArea(autoC4FAB4D1_var, RegionEntireMap(), false, false);
        }
    }

}

void lib7550A90B_gf_SpawnPvE (int lp_playerOwner, int lp_playerTarget, int lp_valueStart, fixed lp_valuePerSecond) {
    // Variable Declarations
    fixed lv_air;
    int lv_value;
    int lv_valueDetector;
    int lv_valueAdvanced;
    const fixed lv_advancedWaveMultiplier = 0.5;
    int lv_startingValue;
    bool lv_detector;
    const fixed lv_minimumFractionforAntiAirResponse = 0.6;
    const fixed lv_antiAirResponseMultiplier = 1.2;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_air = libNtve_gf_ArithmeticRealClamp((IntToFixed(PlayerScoreValueGetAsInt(lp_playerTarget, "UnitSpawnersValueAirOnly")) / libNtve_gf_ArithmeticIntClamp(PlayerScoreValueGetAsInt(lp_playerTarget, "UnitSpawnersValue"), 1, 100000)), 0.0, 0.7);
    lv_startingValue = lp_valueStart;

    // Implementation
    if ((UnitGroupCount(UnitGroup("PvEUpgradeController", lp_playerOwner, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) == 0)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "PvEUpgradeController", 0, lp_playerOwner, Point(0.0, 0.0));
    }

    TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("RavenShredderMissile", 0), false);
    TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("BuildAutoTurret", 0), false);
    TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("RavenScramblerMissile", 0), false);
    lv_value = FixedToInt((lv_startingValue + ((GameGetMissionTime() * (lp_valuePerSecond / 1.4)) * GameGetGlobalTimeScale())));
    lv_valueAdvanced = FixedToInt((lv_value * lv_advancedWaveMultiplier));
    if ((TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly) >= 3)) {
        if ((TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly) >= 4)) {
            lv_value = FixedToInt((lv_startingValue + ((GameGetMissionTime() * ((lp_valuePerSecond + 1.0) / 1.4)) * GameGetGlobalTimeScale())));
            TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("RavenShredderMissile", 0), true);
            TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("BuildAutoTurret", 0), true);
            TechTreeAbilityAllow(lp_playerOwner, AbilityCommand("RavenScramblerMissile", 0), true);
        }
        else {
            lv_value = FixedToInt((lv_startingValue + ((GameGetMissionTime() * ((lp_valuePerSecond + 0.5) / 1.4)) * GameGetGlobalTimeScale())));
        }
    }

    if (((UnitGroupCount(UnitGroupFilter("DarkTemplar", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("DarkTemplarVorazun", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("Mothership", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("Observer", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("PurifierObserver", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("Corsair", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("FenixFlyer", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("Banshee", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("CovertBanshee", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("DuskWing", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("WraithStarlight", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("HornerAsteriaWraith", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || ((UnitGroupCount(UnitGroupFilter("Nova", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) && (TechTreeUpgradeCount(lp_playerTarget, "Tier2", c_techCountCompleteOnly) >= 1)) || (UnitGroupCount(UnitGroupFilter("Roach", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("VileRoach", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("Lurker", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("LurkerMP", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("InfestedBansheeStarlight", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1) || (UnitGroupCount(UnitGroupFilter("SwarmHostMP", lp_playerTarget, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, 0, 0), 0), c_unitCountAlive) >= 1))) {
        lv_detector = true;
        lv_valueDetector = FixedToInt((lv_value * 0.05));
        lv_value = (lv_value - lv_valueDetector);
    }

    if (((TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly) >= 3) || (lv_air >= lv_minimumFractionforAntiAirResponse))) {
        lib7A9A9B22_gf_AttackWavePrepareManualWaypoints(14, 45.0, null, lib7A9A9B22_gf_PlayerAttackWaveData(lp_playerTarget), (TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly) + (lib7A9A9B22_gf_PlayerAttackWaveOffset(lp_playerTarget) * 8)), FixedToInt((IntToFixed(lv_value) * (1.0 - lv_air))), PointWithOffset(lib7550A90B_gv_center, -40.5, -40.5), PointWithOffset(lib7550A90B_gv_center, 32.0, 32.0), null, null, null, null, null, null, null, null);
        lib7A9A9B22_gf_AttackWavePrepareManualWaypoints(14, 45.0, null, lib7A9A9B22_gf_PlayerAttackWaveData(lp_playerTarget), (8 + (lib7A9A9B22_gf_PlayerAttackWaveOffset(lp_playerTarget) * 8)), FixedToInt(((IntToFixed(lv_value) * lv_air) * lv_antiAirResponseMultiplier)), PointWithOffset(lib7550A90B_gv_center, -40.5, -40.5), PointWithOffset(lib7550A90B_gv_center, 32.0, 32.0), null, null, null, null, null, null, null, null);
    }
    else {
        lib7A9A9B22_gf_AttackWavePrepareManualWaypoints(14, 45.0, null, lib7A9A9B22_gf_PlayerAttackWaveData(lp_playerTarget), (TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly) + (lib7A9A9B22_gf_PlayerAttackWaveOffset(lp_playerTarget) * 8)), lv_value, PointWithOffset(lib7550A90B_gv_center, -40.5, -40.5), PointWithOffset(lib7550A90B_gv_center, 32.0, 32.0), null, null, null, null, null, null, null, null);
    }
    lib7550A90B_gv_pvEAdvancedWaveTicker += 1;
    if ((lib7550A90B_gv_pvEAdvancedWaveTicker >= 15)) {
        lib7550A90B_gv_pvEAdvancedWaveTicker -= 5;
        lib7A9A9B22_gf_AttackWavePrepareManualWaypoints(14, 45.0, null, "AttackWaveHybrid", TechTreeUpgradeCount(lp_playerOwner, "PvEUpgradeControllerAttackWave", c_techCountCompleteOnly), lv_valueAdvanced, PointWithOffset(lib7550A90B_gv_center, -46.5, -46.5), PointWithOffset(lib7550A90B_gv_center, 32.0, 32.0), null, null, null, null, null, null, null, null);
    }

    if ((lv_detector == true)) {
        lib7A9A9B22_gf_AttackWavePrepareManualWaypoints(lp_playerOwner, 45.0, null, lib7A9A9B22_gf_PlayerAttackWaveDataSupport(lp_playerTarget), 1, lv_valueDetector, PointWithOffset(lib7550A90B_gv_center, -44.5, -44.5), PointWithOffset(lib7550A90B_gv_center, 32.0, 32.0), null, null, null, null, null, null, null, null);
    }

    lib7A9A9B22_gf_AttackWaveSend("WaveUnit");
}

void lib7550A90B_gf_Preload () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RefineryMinerals", c_unitCreateIgnorePlacement, 0, Point(0.0, 0.0));
    UnitRemove(UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "AssimilatorMinerals", c_unitCreateIgnorePlacement, 0, Point(0.0, 0.0));
    UnitRemove(UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "ExtractorMinerals", c_unitCreateIgnorePlacement, 0, Point(0.0, 0.0));
    UnitCreateEffectUnit(UnitLastCreated(), "MineralMineSet", UnitLastCreated());
    UnitCreateEffectUnit(UnitLastCreated(), "UpgradeEffectGreen", UnitLastCreated());
    libNtve_gf_CreateActorAtPoint("ObjectiveMineralsBurst", Point(0.0, 0.0));
    libNtve_gf_CreateActorAtPoint("ObjectiveMineralsCloud", Point(0.0, 0.0));
    libNtve_gf_CreateActorAtPoint("ObjectiveMineralsDeath", Point(0.0, 0.0));
    libNtve_gf_CreateActorAtPoint("ObjectiveMineralsNova", Point(0.0, 0.0));
    UnitRemove(UnitLastCreated());
}

void lib7550A90B_gf_GenericStartActions () {
    // Variable Declarations
    int lv_i;
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup autoAE215FB4_g;
    int autoAE215FB4_var;
    playergroup auto6EA8ED68_g;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    TriggerEnable(lib7550A90B_gt_SpawnTimerActivate, true);
    TriggerEnable(lib7550A90B_gt_Leaver, true);
    libNtve_gf_AddPlayerGroupToPlayerGroup(lib7A9A9B22_gf_StagingAreaTeam(0), lv_players);
    libNtve_gf_AddPlayerGroupToPlayerGroup(lib7A9A9B22_gf_StagingAreaTeam(1), lv_players);
    libNtve_gf_AddPlayerGroupToPlayerGroup(lib7A9A9B22_gf_StagingAreaTeam(2), lv_players);
    libNtve_gf_AddPlayerGroupToPlayerGroup(lib7A9A9B22_gf_StagingAreaTeam(3), lv_players);
    TimerStart(lib7550A90B_gv_spawnTimer, (lib7550A90B_gv_spawnPeriod * lib7550A90B_gv_spawnPeriodMultiplier), false, c_timeGame);
    TimerStart(lib7550A90B_gv_totalTimer, 524287.0, false, c_timeGame);
    libDDE92A83_gf_CreateWaveTimers();
    lib7550A90B_gf_UpdateSpawnTimer();
    lib7550A90B_gf_UpdateNPCColors();
    lib22D496B3_gf_PartyFrameCreate(lv_players);
    lib7A9A9B22_gf_StagingAreaRecallWorkers(lv_players, true);
    autoAE215FB4_g = lv_players;
    autoAE215FB4_var = -1;
    while (true) {
        autoAE215FB4_var = PlayerGroupNextPlayer(autoAE215FB4_g, autoAE215FB4_var);
        if (autoAE215FB4_var < 0) { break; }
        PlayerModifyPropertyInt(autoAE215FB4_var, c_playerPropMinerals, c_playerPropOperAdd, 280);
        PlayerModifyPropertyInt(autoAE215FB4_var, c_playerPropMineralsCollected, c_playerPropOperAdd, 280);
        auto6EA8ED68_g = lv_players;
        lv_i = -1;
        while (true) {
            lv_i = PlayerGroupNextPlayer(auto6EA8ED68_g, lv_i);
            if (lv_i < 0) { break; }
            PlayerSetAlliance(autoAE215FB4_var, c_allianceIdTrade, lv_i, false);
        }
        if ((TechTreeUpgradeCount(autoAE215FB4_var, "MutationStockpile", c_techCountCompleteOnly) >= 1)) {
            PlayerModifyPropertyInt(autoAE215FB4_var, c_playerPropMinerals, c_playerPropOperAdd, (TechTreeUpgradeCount(autoAE215FB4_var, "MutationStockpile", c_techCountCompleteOnly) * 320));
            PlayerModifyPropertyInt(autoAE215FB4_var, c_playerPropMineralsCollected, c_playerPropOperAdd, (TechTreeUpgradeCount(autoAE215FB4_var, "MutationStockpile", c_techCountCompleteOnly) * 320));
        }

    }
}

void lib7550A90B_gf_UpdateSpawnTimer () {
    // Variable Declarations
    int lv_team;
    int lv_x;
    int lv_y;
    int[6] lv_playerOrder;
    const string lv_waveTimer = "WaveTimer";

    // Automatic Variable Declarations
    playergroup autoCC5B8280_g;
    int autoCC5B8280_var;
    const int auto6EC5BF79_ae = 1;
    const int auto6EC5BF79_ai = 1;
    int auto236E13A6_n;
    int auto236E13A6_i;
    playergroup auto5F3061F6_g;
    int auto5F3061F6_var;

    // Variable Initialization

    // Implementation
    autoCC5B8280_g = PlayerGroupAll();
    autoCC5B8280_var = -1;
    while (true) {
        autoCC5B8280_var = PlayerGroupNextPlayer(autoCC5B8280_g, autoCC5B8280_var);
        if (autoCC5B8280_var < 0) { break; }
        CatalogFieldValueSet(c_gameCatalogBehavior, lv_waveTimer, "Period", autoCC5B8280_var, FixedToString((GameGetSpeed() * GameGetGlobalTimeScale() * lib7550A90B_gv_spawnPeriodMultiplier), c_fixedPrecisionAny));
        libNtve_gf_SetUpgradeLevelForPlayer(autoCC5B8280_var, "StagingAreaNextSpawn", 0);
    }
    if ((TimerGetRemaining(lib7550A90B_gv_spawnTimerExtra) > 0.0)) {
        TimerPause(lib7550A90B_gv_spawnTimer, true);
        TimerPause(lib7550A90B_gv_totalTimer, true);
    }
    else {
        TimerPause(lib7550A90B_gv_spawnTimer, false);
        TimerPause(lib7550A90B_gv_totalTimer, false);
    }
    lv_team = 0;
    for ( ; ( (auto6EC5BF79_ai >= 0 && lv_team <= auto6EC5BF79_ae) || (auto6EC5BF79_ai < 0 && lv_team >= auto6EC5BF79_ae) ) ; lv_team += auto6EC5BF79_ai ) {
        lv_x = lib7550A90B_gv_teamNextPlayer[lv_team];
        if ((((PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_team), lv_x) >= 1) && (PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_team), lv_x) <= 14)) == true)) {
            libNtve_gf_SetUpgradeLevelForPlayer(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_team), lv_x), "StagingAreaNextSpawn", 1);
        }

        lv_y = 0;
        auto236E13A6_n = PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(lv_team));
        for (auto236E13A6_i = 1; auto236E13A6_i <= auto236E13A6_n; auto236E13A6_i += 1) {
            lv_playerOrder[lv_y] = PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(lv_team), lv_x);
            PlayerModifyPropertyInt(lv_playerOrder[lv_y], c_playerPropCustom, c_playerPropOperSetTo, FixedToInt((((IntToFixed((lv_y * FixedToInt(lib7550A90B_gv_spawnPeriod))) + (lib7550A90B_gv_spawnPeriod - (ModF(TimerGetElapsed(lib7550A90B_gv_totalTimer), lib7550A90B_gv_spawnPeriod) / lib7550A90B_gv_spawnPeriodMultiplier))) + TimerGetRemaining(lib7550A90B_gv_spawnTimerExtra)) / GameGetSpeed())));
            UnitBehaviorRemove(libDDE92A83_gf_PlayerWaveTimer(lv_playerOrder[lv_y]), "WaveTimer", 1);
            UnitBehaviorAdd(libDDE92A83_gf_PlayerWaveTimer(lv_playerOrder[lv_y]), "WaveTimer", libDDE92A83_gf_PlayerWaveTimer(lv_playerOrder[lv_y]), 1);
            lv_x += 1;
            lv_y += 1;
            if ((lv_x > PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(lv_team)))) {
                lv_x = 1;
            }

        }
    }
    if ((TechTreeUpgradeCount(0, "MutationSynergy", c_techCountCompleteOnly) == 1)) {
        auto5F3061F6_g = PlayerGroupActive();
        auto5F3061F6_var = -1;
        while (true) {
            auto5F3061F6_var = PlayerGroupNextPlayer(auto5F3061F6_g, auto5F3061F6_var);
            if (auto5F3061F6_var < 0) { break; }
            PlayerModifyPropertyInt(auto5F3061F6_var, c_playerPropCustom, c_playerPropOperSetTo, FixedToInt((((0.0 + (lib7550A90B_gv_spawnPeriod - (ModF(TimerGetElapsed(lib7550A90B_gv_totalTimer), lib7550A90B_gv_spawnPeriod) / lib7550A90B_gv_spawnPeriodMultiplier))) + TimerGetRemaining(lib7550A90B_gv_spawnTimerExtra)) / GameGetSpeed())));
        }
    }

}

void lib7550A90B_gf_UpdateNPCColors () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetUpgradeLevelForPlayer(13, "PartyFrameHide", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(14, "PartyFrameHide", 1);
    if ((libDDE92A83_gf_GameIsTutorial() == false)) {
        if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)) > 0)) {
            PlayerSetColorIndex(13, PlayerGetColorIndex(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), 1), false), true);
        }

        if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(1)) > 0)) {
            PlayerSetColorIndex(14, PlayerGetColorIndex(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(1), 1), false), true);
        }

    }
    else {
        if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)) > 0)) {
            PlayerSetColorIndex(13, PlayerGetColorIndex(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), 1), false), true);
            if ((PlayerGetColorIndex(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), 1), false) != 6)) {
                PlayerSetColorIndex(14, 6, true);
            }
            else {
                PlayerSetColorIndex(14, 1, true);
            }
        }

    }
}

void lib7550A90B_gf_IncreaseSpawnCount (int lp_team, int lp_modification) {
    // Automatic Variable Declarations
    // Implementation
    if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(lp_team)) > 0)) {
        lib7550A90B_gv_teamNextPlayer[lp_team] += lp_modification;
        if (((lib7550A90B_gv_teamNextPlayer[lp_team] > PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(lp_team))) || (lib7550A90B_gv_teamNextPlayer[lp_team] < 1))) {
            lib7550A90B_gv_teamNextPlayer[lp_team] = 1;
        }

    }

}

void lib7550A90B_gf_PrepareSpawnAreas () {
    // Variable Declarations
    int lv_t;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(0)) > 0)) {
        lib7A9A9B22_gf_PreparationAreaPrepare(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(0), lib7550A90B_gv_teamNextPlayer[0]), 0);
    }
    else {
        lib7A9A9B22_gf_PreparationAreaPrepare(13, 0);
    }
    if ((PlayerGroupCount(lib7A9A9B22_gf_StagingAreaTeam(1)) > 0)) {
        lib7A9A9B22_gf_PreparationAreaPrepare(PlayerGroupPlayer(lib7A9A9B22_gf_StagingAreaTeam(1), lib7550A90B_gv_teamNextPlayer[1]), 1);
    }
    else {
        lib7A9A9B22_gf_PreparationAreaPrepare(14, 1);
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Timer Activate
//--------------------------------------------------------------------------------------------------
bool lib7550A90B_gt_SpawnTimerActivate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto441EB3EE_g;
    int auto441EB3EE_var;

    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib7550A90B_gv_totalWavesSpawned += 1;
    if ((lib7550A90B_gv_totalWavesSpawned >= 42)) {
        lib7550A90B_gv_spawnPeriodMultiplier = libNtve_gf_ArithmeticRealClamp((lib7550A90B_gv_spawnPeriodMultiplier + 0.003), 1.0, 1.15);
        auto441EB3EE_g = PlayerGroupAll();
        auto441EB3EE_var = -1;
        while (true) {
            auto441EB3EE_var = PlayerGroupNextPlayer(auto441EB3EE_g, auto441EB3EE_var);
            if (auto441EB3EE_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(auto441EB3EE_var, "HighCapacityMode", 1);
        }
    }

    TimerStart(lib7550A90B_gv_spawnTimer, (lib7550A90B_gv_spawnPeriod * lib7550A90B_gv_spawnPeriodMultiplier), false, c_timeGame);
    libNtve_gf_StopTimer(lib7550A90B_gv_totalTimer);
    TimerStart(lib7550A90B_gv_totalTimer, 600.0, false, c_timeGame);
    lib7550A90B_gf_TugofWarSpawn();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7550A90B_gt_SpawnTimerActivate_Init () {
    lib7550A90B_gt_SpawnTimerActivate = TriggerCreate("lib7550A90B_gt_SpawnTimerActivate_Func");
    TriggerEnable(lib7550A90B_gt_SpawnTimerActivate, false);
    TriggerAddEventTimer(lib7550A90B_gt_SpawnTimerActivate, lib7550A90B_gv_spawnTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Timer Extra Activate
//--------------------------------------------------------------------------------------------------
bool lib7550A90B_gt_SpawnTimerExtraActivate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_StopTimer(lib7550A90B_gv_spawnTimerExtra);
    TimerPause(lib7550A90B_gv_spawnTimer, false);
    TimerPause(lib7550A90B_gv_totalTimer, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7550A90B_gt_SpawnTimerExtraActivate_Init () {
    lib7550A90B_gt_SpawnTimerExtraActivate = TriggerCreate("lib7550A90B_gt_SpawnTimerExtraActivate_Func");
    TriggerEnable(lib7550A90B_gt_SpawnTimerExtraActivate, false);
    TriggerAddEventTimer(lib7550A90B_gt_SpawnTimerExtraActivate, lib7550A90B_gv_spawnTimerExtra);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Leaver
//--------------------------------------------------------------------------------------------------
bool lib7550A90B_gt_Leaver_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDDE92A83_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib7550A90B_gf_TugofWarRemovePlayer(EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7550A90B_gt_Leaver_Init () {
    lib7550A90B_gt_Leaver = TriggerCreate("lib7550A90B_gt_Leaver_Func");
    TriggerEnable(lib7550A90B_gt_Leaver, false);
    TriggerAddEventPlayerLeft(lib7550A90B_gt_Leaver, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tournament Timeout
//--------------------------------------------------------------------------------------------------
bool lib7550A90B_gt_TournamentTimeout_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib7550A90B_gf_TugofWarTimeout();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7550A90B_gt_TournamentTimeout_Init () {
    lib7550A90B_gt_TournamentTimeout = TriggerCreate("lib7550A90B_gt_TournamentTimeout_Func");
    TriggerEnable(lib7550A90B_gt_TournamentTimeout, false);
    TriggerAddEventTimeElapsed(lib7550A90B_gt_TournamentTimeout, 2400.0, c_timeReal);
}

void lib7550A90B_InitTriggers () {
    lib7550A90B_gt_SpawnTimerActivate_Init();
    lib7550A90B_gt_SpawnTimerExtraActivate_Init();
    lib7550A90B_gt_Leaver_Init();
    lib7550A90B_gt_TournamentTimeout_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib7550A90B_InitLib_completed = false;

void lib7550A90B_InitLib () {
    if (lib7550A90B_InitLib_completed) {
        return;
    }

    lib7550A90B_InitLib_completed = true;

    lib7550A90B_InitLibraries();
    lib7550A90B_InitVariables();
    lib7550A90B_InitTriggers();
}

include "LibDDE92A83"
include "Lib474957E9"
include "LibFB3A33A2"
include "Lib16875C2F"
include "LibF095282B"
include "Lib1DE23868"
include "Lib29554E00"
include "LibFD391A9C"
include "Lib948F000A"
include "Lib2A8CE4F7"
include "Lib22D496B3"
include "Lib7A9A9B22"
include "LibCA960273"
include "Lib038F51B7"
include "Lib28FBFBC5"
include "Lib479C7CBB"
include "LibF58A3325"
include "Lib39886FE6"
include "LibD6A97973"
include "Lib64DC5B97"
include "Lib458E37E6"
include "Lib9A6A5E35"
include "LibBBFED31C"

