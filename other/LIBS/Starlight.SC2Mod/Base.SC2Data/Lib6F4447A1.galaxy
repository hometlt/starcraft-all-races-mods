include "TriggerLibs/NativeLib"
include "Lib95CAB67A_h"
include "LibDDE92A83_h"
include "Lib474957E9_h"
include "LibFB3A33A2_h"
include "Lib16875C2F_h"
include "LibF095282B_h"
include "LibDBB0BE4A_h"
include "Lib948F000A_h"
include "Lib2A8CE4F7_h"
include "Lib7A9A9B22_h"
include "LibCA960273_h"
include "Lib038F51B7_h"
include "Lib39886FE6_h"
include "Lib64DC5B97_h"
include "Lib7550A90B_h"

include "Lib6F4447A1_h"

//--------------------------------------------------------------------------------------------------
// Library: Testing Grounds
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib6F4447A1_InitLibraries () {
    libNtve_InitVariables();
    lib95CAB67A_InitVariables();
    libDDE92A83_InitVariables();
    lib474957E9_InitVariables();
    libFB3A33A2_InitVariables();
    lib16875C2F_InitVariables();
    libF095282B_InitVariables();
    libDBB0BE4A_InitVariables();
    lib948F000A_InitVariables();
    lib2A8CE4F7_InitVariables();
    lib7A9A9B22_InitVariables();
    libCA960273_InitVariables();
    lib038F51B7_InitVariables();
    lib39886FE6_InitVariables();
    lib64DC5B97_InitVariables();
    lib7550A90B_InitVariables();
}

// Variable Initialization
bool lib6F4447A1_InitVariables_completed = false;

void lib6F4447A1_InitVariables () {
    if (lib6F4447A1_InitVariables_completed) {
        return;
    }

    lib6F4447A1_InitVariables_completed = true;

    lib6F4447A1_gv_testTavernPlayers = PlayerGroupEmpty();
    lib6F4447A1_gv_testTavernPlayersUnassigned = PlayerGroupEmpty();
}

// Functions
void lib6F4447A1_gf_TestStart (fixed lp_timescale, fixed lp_spawnPeriod, int lp_teamSize, bool lp_invertTeams, bool lp_research, bool lp_extraMinerals, bool lp_upgrades, bool lp_instantTier, bool lp_overpoweredBase, bool lp_sharedVision, bool lp_critters) {
    // Variable Declarations
    int lv_teamSize;
    int lv_i;
    playergroup lv_team0Group;
    playergroup lv_team1Group;
    point lv_center;

    // Automatic Variable Declarations
    const int autoB1304237_n = 50;
    int autoB1304237_i;
    const int auto15F1F3D4_n = 50;
    int auto15F1F3D4_i;
    const int autoE3CFDED9_n = 50;
    int autoE3CFDED9_i;
    const int autoB64EA108_n = 50;
    int autoB64EA108_i;
    int auto50529A4C_n;
    int auto50529A4C_i;
    playergroup auto8E20C12E_g;
    int auto8E20C12E_var;
    int autoB3C80739_ae;
    const int autoB3C80739_ai = 1;
    int autoBD9010F3_ae;
    const int autoBD9010F3_ai = 1;

    // Variable Initialization
    lv_teamSize = lp_teamSize;
    lv_team0Group = PlayerGroupEmpty();
    lv_team1Group = PlayerGroupEmpty();
    lv_center = RegionGetCenter(RegionPlayableMap());

    // Implementation
    if ((lp_critters == true)) {
        for (autoB1304237_i = 1; autoB1304237_i <= autoB1304237_n; autoB1304237_i += 1) {
            UnitCreate(1, "CreditsCritterPlaceholderBeach", 0, 0, RegionRandomPoint(RegionCircle(PointWithOffset(RegionGetCenter(RegionPlayableMap()), 72.0, -64.0), 30.0)), libNtve_gf_RandomAngle());
        }
        for (auto15F1F3D4_i = 1; auto15F1F3D4_i <= auto15F1F3D4_n; auto15F1F3D4_i += 1) {
            UnitCreate(1, "CreditsCritterPlaceholderForest", 0, 0, RegionRandomPoint(RegionCircle(PointWithOffset(RegionGetCenter(RegionPlayableMap()), 72.0, -64.0), 30.0)), libNtve_gf_RandomAngle());
        }
        for (autoE3CFDED9_i = 1; autoE3CFDED9_i <= autoE3CFDED9_n; autoE3CFDED9_i += 1) {
            UnitCreate(1, "CreditsCritterPlaceholderMountain", 0, 0, RegionRandomPoint(RegionCircle(PointWithOffset(RegionGetCenter(RegionPlayableMap()), 72.0, -64.0), 30.0)), libNtve_gf_RandomAngle());
        }
        for (autoB64EA108_i = 1; autoB64EA108_i <= autoB64EA108_n; autoB64EA108_i += 1) {
            UnitCreate(1, "CreditsCritterPlaceholderTerran", 0, 0, RegionRandomPoint(RegionCircle(PointWithOffset(RegionGetCenter(RegionPlayableMap()), 72.0, -64.0), 30.0)), libNtve_gf_RandomAngle());
        }
        auto50529A4C_n = UserDataInstanceCount("SupporterRewards");
        for (auto50529A4C_i = 1; auto50529A4C_i <= auto50529A4C_n; auto50529A4C_i += 1) {
            UnitCreate(1, "XelNagaTowerWorker", 0, 0, RegionRandomPoint(RegionCircle(PointWithOffset(RegionGetCenter(RegionPlayableMap()), 48.0, -64.0), 12.0)), libNtve_gf_RandomAngle());
        }
    }

    if ((lp_research == true)) {
        libDDE92A83_gf_ToggleUpgradesSC2Coop(PlayerGroupAll(), 1);
        libDDE92A83_gf_ToggleUpgradesSC2Multi(PlayerGroupAll(), 1);
    }

    auto8E20C12E_g = PlayerGroupAll();
    auto8E20C12E_var = -1;
    while (true) {
        auto8E20C12E_var = PlayerGroupNextPlayer(auto8E20C12E_g, auto8E20C12E_var);
        if (auto8E20C12E_var < 0) { break; }
        if ((lp_overpoweredBase == true)) {
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectiveNexusDamage", "Amount", auto8E20C12E_var, IntToString(500));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectiveNexusDamage", "AreaArray[" + IntToString(0) + "].Radius", auto8E20C12E_var, IntToString(1));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectiveNexusDamage", "AreaArray[" + IntToString(1) + "].Radius", auto8E20C12E_var, IntToString(2));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectiveNexusDamage", "AreaArray[" + IntToString(2) + "].Radius", auto8E20C12E_var, IntToString(3));
            CatalogFieldValueSet(c_gameCatalogUnit, "ObjectiveNexus", "LifeRegenRate", auto8E20C12E_var, IntToString(200));
            CatalogFieldValueSet(c_gameCatalogUnit, "ObjectiveNexus", "ShieldRegenRate", auto8E20C12E_var, IntToString(200));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamage", "Amount", auto8E20C12E_var, IntToString(500));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamage", "AreaArray[" + IntToString(0) + "].Radius", auto8E20C12E_var, IntToString(1));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamage", "AreaArray[" + IntToString(1) + "].Radius", auto8E20C12E_var, IntToString(2));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamage", "AreaArray[" + IntToString(2) + "].Radius", auto8E20C12E_var, IntToString(3));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamageAlt", "Amount", auto8E20C12E_var, IntToString(500));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamageAlt", "AreaArray[" + IntToString(0) + "].Radius", auto8E20C12E_var, IntToString(1));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamageAlt", "AreaArray[" + IntToString(1) + "].Radius", auto8E20C12E_var, IntToString(2));
            CatalogFieldValueSet(c_gameCatalogEffect, "ObjectivePlanetaryFortressDamageAlt", "AreaArray[" + IntToString(2) + "].Radius", auto8E20C12E_var, IntToString(3));
            CatalogFieldValueSet(c_gameCatalogUnit, "ObjectivePlanetaryFortress", "LifeRegenRate", auto8E20C12E_var, IntToString(10000));
            CatalogFieldValueSet(c_gameCatalogUnit, "ObjectivePlanetaryFortress", "ShieldRegenRate", auto8E20C12E_var, IntToString(10000));
        }

        if ((lp_instantTier == true)) {
            CatalogFieldValueSet(c_gameCatalogAbil, "NeutralUpgradesAutocast", "InfoArray[" + IntToString(0) + "].Time", auto8E20C12E_var, IntToString(0));
            CatalogFieldValueSet(c_gameCatalogAbil, "NeutralUpgradesAutocast", "InfoArray[" + IntToString(1) + "].Time", auto8E20C12E_var, IntToString(0));
        }

        if ((lp_upgrades == true)) {
            PlayerCreateEffectPoint(auto8E20C12E_var, "AllUpgradesLevel1", Point(0.0, 0.0));
            PlayerCreateEffectPoint(auto8E20C12E_var, "AllUpgradesLevel2", Point(0.0, 0.0));
            PlayerCreateEffectPoint(auto8E20C12E_var, "AllUpgradesLevel3", Point(0.0, 0.0));
        }

    }
    if ((lp_invertTeams == false)) {
        autoBD9010F3_ae = lv_teamSize;
        lv_i = 1;
        for ( ; ( (autoBD9010F3_ai >= 0 && lv_i <= autoBD9010F3_ae) || (autoBD9010F3_ai < 0 && lv_i >= autoBD9010F3_ae) ) ; lv_i += autoBD9010F3_ai ) {
            PlayerGroupAdd(lv_team0Group, lv_i);
            PlayerGroupAdd(lv_team1Group, (lv_i + lv_teamSize));
        }
    }
    else {
        autoB3C80739_ae = lv_teamSize;
        lv_i = 1;
        for ( ; ( (autoB3C80739_ai >= 0 && lv_i <= autoB3C80739_ae) || (autoB3C80739_ai < 0 && lv_i >= autoB3C80739_ae) ) ; lv_i += autoB3C80739_ai ) {
            PlayerGroupAdd(lv_team1Group, lv_i);
            PlayerGroupAdd(lv_team0Group, (lv_i + lv_teamSize));
        }
    }
    lib7550A90B_gf_TugofWarSetSpawnPeriod(lp_spawnPeriod);
    libDDE92A83_gf_SetGlobalTimeScale(lp_timescale);
    if ((lp_extraMinerals == true)) {
        PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperAdd, 10000);
        PlayerModifyPropertyInt(1, c_playerPropMineralsCollected, c_playerPropOperAdd, 10000);
    }

    lib7550A90B_gf_TugofWarStartDefault(null, null);
    if ((lp_sharedVision == true)) {
        PlayerSetAlliance(2, c_allianceIdVision, 1, true);
        PlayerSetAlliance(1, c_allianceIdVision, 2, true);
        PlayerSetAlliance(2, c_allianceIdControl, 1, true);
        PlayerSetAlliance(1, c_allianceIdControl, 2, true);
    }

}

void lib6F4447A1_gf_TestTavernCreate (int lp_player, point lp_point) {
    // Variable Declarations
    point lv_pointSpawnFriendly;
    point lv_pointSpawnEnemy;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_pointSpawnFriendly = PointWithOffset(lp_point, 6.5, 6.5);
    lv_pointSpawnEnemy = PointWithOffset(lp_point, -23.5, -23.5);

    // Implementation
    lib7A9A9B22_gf_StagingAreaCreate(lp_player, 225.0, PointWithOffset(lp_point, 24.0, 24.0));
    lib7A9A9B22_gf_PreparationAreaCreate(lv_pointSpawnFriendly, "StagingAreaSpawnIndicatorSW", 0);
    lib7A9A9B22_gf_PreparationAreaCreate(lv_pointSpawnEnemy, "StagingAreaSpawnIndicatorSW", 0);
    PlayerGroupAdd(lib6F4447A1_gv_testTavernPlayers, lp_player);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -40.0, -40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -38.0, -40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -40.0, -38.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 40.0, -40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 38.0, -40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 40.0, -38.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -40.0, 40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -38.0, 40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, -40.0, 38.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 40.0, 40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 38.0, 40.0));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SupplyDepotLowered", c_unitCreateIgnorePlacement, lp_player, PointWithOffset(lp_point, 40.0, 38.0));
}

void lib6F4447A1_gf_TestTavernMatchup (bool lp_readOnly) {
    // Variable Declarations
    int lv_player;
    int lv_opponent;
    playergroup lv_tempGroup;
    int lv_x;
    string lv_print;

    // Automatic Variable Declarations
    playergroup auto87FE9B22_g;
    playergroup auto08113069_g;

    // Variable Initialization
    lv_tempGroup = PlayerGroupEmpty();
    lv_print = "";

    // Implementation
    PlayerGroupClear(lib6F4447A1_gv_testTavernPlayersUnassigned);
    libNtve_gf_AddPlayerGroupToPlayerGroup(lib6F4447A1_gv_testTavernPlayers, lib6F4447A1_gv_testTavernPlayersUnassigned);
    while ((PlayerGroupCount(lib6F4447A1_gv_testTavernPlayersUnassigned) >= 2)) {
        PlayerGroupClear(lv_tempGroup);
        lv_player = PlayerGroupPlayer(lib6F4447A1_gv_testTavernPlayersUnassigned, 1);
        lv_x = 99;
        auto87FE9B22_g = lib6F4447A1_gv_testTavernPlayersUnassigned;
        lv_opponent = -1;
        while (true) {
            lv_opponent = PlayerGroupNextPlayer(auto87FE9B22_g, lv_opponent);
            if (lv_opponent < 0) { break; }
            if ((lv_opponent > 0) && (lv_opponent != lv_player) && (lib6F4447A1_gv_testTavernPlayersHistory[lv_player][lv_opponent] < lv_x)) {
                lv_x = lib6F4447A1_gv_testTavernPlayersHistory[lv_player][lv_opponent];
            }

        }
        auto08113069_g = lib6F4447A1_gv_testTavernPlayersUnassigned;
        lv_opponent = -1;
        while (true) {
            lv_opponent = PlayerGroupNextPlayer(auto08113069_g, lv_opponent);
            if (lv_opponent < 0) { break; }
            if ((lv_opponent > 0) && (lv_opponent != lv_player) && (lib6F4447A1_gv_testTavernPlayersHistory[lv_player][lv_opponent] == lv_x)) {
                PlayerGroupAdd(lv_tempGroup, lv_opponent);
            }

        }
        lv_opponent = PlayerGroupPlayer(lv_tempGroup, 1);
        if ((lp_readOnly == false)) {
            lib6F4447A1_gv_testTavernPlayersHistory[lv_player][lv_opponent] += 1;
            lib6F4447A1_gv_testTavernPlayersHistory[lv_opponent][lv_player] += 1;
        }

        PlayerGroupRemove(lib6F4447A1_gv_testTavernPlayersUnassigned, lv_player);
        PlayerGroupRemove(lib6F4447A1_gv_testTavernPlayersUnassigned, lv_opponent);
        lv_print = (lv_print + " " + (IntToString(lv_player) + "v" + IntToString(lv_opponent)));
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringToText(lv_print));
}

void lib6F4447A1_gf_EnemyRaceRepick (string lp_worker) {
    // Automatic Variable Declarations
    // Implementation
    lib948F000A_gf_ReplaceWorker(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(2), 1), lp_worker);
    MinimapPing(PlayerGroupAll(), UnitGetPosition(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(2), 1)), 8.0, Color(50.20, 100.00, 50.20));
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Enemy race changed to:</c> ") + UnitTypeGetName(UnitGetType(UnitGroupUnit(libDDE92A83_gf_PlayerWorkers(2), 1)))));
}

void lib6F4447A1_gf_RemoveHeroUseds (playergroup lp_players) {
    // Automatic Variable Declarations
    playergroup auto067FEA8E_g;
    int auto067FEA8E_var;

    // Implementation
    auto067FEA8E_g = lp_players;
    auto067FEA8E_var = -1;
    while (true) {
        auto067FEA8E_var = PlayerGroupNextPlayer(auto067FEA8E_g, auto067FEA8E_var);
        if (auto067FEA8E_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(auto067FEA8E_var, "TychusTychusPlaced", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto067FEA8E_var, "FenixUnlock", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto067FEA8E_var, "GaryStetmannPlaceUsed", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto067FEA8E_var, "DehakaHeroPlaceUsed", 0);
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/NovaPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/RaynorHyperionPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/DuskWingsPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/ShadowGuardPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/AlarakPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/FenixPraetorPlaceUnlock");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/KerriganPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/ZagaraPlace");
        libNtve_gf_PlayerRemoveChargeUsed(auto067FEA8E_var, "Abil/StukovAleksanderPlace");
    }
}

void lib6F4447A1_gf_EmoticonApply (int lp_player, string lp_value) {
    // Variable Declarations
    string lv_string;
    int lv_i;

    // Automatic Variable Declarations
    int auto28CE6D75_ae;
    const int auto28CE6D75_ai = 1;

    // Variable Initialization
    lv_string = StringCase(lp_value, false);

    // Implementation
    libDBB0BE4A_gf_SettingsSaveString(lp_player, "Emoticon", lv_string);
    libDBB0BE4A_gf_SettingsSave(lp_player);
    auto28CE6D75_ae = libDDE92A83_gv_allUnitTypesCurrent;
    lv_i = 0;
    for ( ; ( (auto28CE6D75_ai >= 0 && lv_i <= auto28CE6D75_ae) || (auto28CE6D75_ai < 0 && lv_i >= auto28CE6D75_ae) ) ; lv_i += auto28CE6D75_ai ) {
        CatalogFieldValueSet(c_gameCatalogUnit, libDDE92A83_gv_allUnitTypes[lv_i], "Subtitle", lp_player, ("<img path=\"" + lv_string + "\"/>"));
    }
}

void lib6F4447A1_gf_EmoticonLoadAll () {
    // Automatic Variable Declarations
    playergroup auto74977F00_g;
    int auto74977F00_var;

    // Implementation
    auto74977F00_g = PlayerGroupActive();
    auto74977F00_var = -1;
    while (true) {
        auto74977F00_var = PlayerGroupNextPlayer(auto74977F00_g, auto74977F00_var);
        if (auto74977F00_var < 0) { break; }
        if ((StringLength(libDBB0BE4A_gf_SettingsLoadString(auto74977F00_var, "Emoticon")) > 0)) {
        }

    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Test Tavern Read
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_TestTavernRead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameIsTestMap(false) == true)) {
        lib6F4447A1_gf_TestTavernMatchup(true);
    }
    else {
        TriggerEnable(lib6F4447A1_gt_TestTavernRead, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_TestTavernRead_Init () {
    lib6F4447A1_gt_TestTavernRead = TriggerCreate("lib6F4447A1_gt_TestTavernRead_Func");
    TriggerAddEventKeyPressed(lib6F4447A1_gt_TestTavernRead, c_playerAny, c_keyX, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reset Commander
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_ResetCommander_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameIsTestMap(false) == true)) {
        libDDE92A83_gf_ResetCommander(1);
    }
    else {
        TriggerEnable(lib6F4447A1_gt_ResetCommander, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_ResetCommander_Init () {
    lib6F4447A1_gt_ResetCommander = TriggerCreate("lib6F4447A1_gt_ResetCommander_Func");
    TriggerAddEventKeyPressed(lib6F4447A1_gt_ResetCommander, c_playerAny, c_keyJ, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: NYI Unit Disabler
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_NYIUnitDisabler_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto4D8028EF_g;
    int auto4D8028EF_var;

    // Conditions
    if (testConds) {
        if (!((GameIsTestMap(false) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto4D8028EF_g = PlayerGroupAll();
    auto4D8028EF_var = -1;
    while (true) {
        auto4D8028EF_var = PlayerGroupNextPlayer(auto4D8028EF_g, auto4D8028EF_var);
        if (auto4D8028EF_var < 0) { break; }
        TechTreeAbilityAllow(auto4D8028EF_var, AbilityCommand("WorkerSelect", 17), false);
        TechTreeAbilityAllow(auto4D8028EF_var, AbilityCommand("DehakaDakrunPlace", 0), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_NYIUnitDisabler_Init () {
    lib6F4447A1_gt_NYIUnitDisabler = TriggerCreate("lib6F4447A1_gt_NYIUnitDisabler_Func");
    TriggerAddEventMapInit(lib6F4447A1_gt_NYIUnitDisabler);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Effect) - Repick
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeEffectRepick_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_4A056852") + StringToText("</c> ")));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), "IncludeStandardRacesInCommanderSelect", 1);
    TechTreeAbilityAllow(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster), AbilityCommand("WorkerSelect", 22), false);
    libDDE92A83_gf_ResetCommander(EventPlayerEffectUsedUnitOwner(c_effectPlayerCaster));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeEffectRepick_Init () {
    lib6F4447A1_gt_SandboxModeEffectRepick = TriggerCreate("lib6F4447A1_gt_SandboxModeEffectRepick_Func");
    TriggerAddEventPlayerEffectUsed(lib6F4447A1_gt_SandboxModeEffectRepick, c_playerAny, "SandboxModeRaceSelect");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Effect) - Reset
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeEffectReset_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9ECD6C45_g;
    int auto9ECD6C45_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_997C5900") + StringToText("</c> ")));
    auto9ECD6C45_g = PlayerGroupAll();
    auto9ECD6C45_var = -1;
    while (true) {
        auto9ECD6C45_var = PlayerGroupNextPlayer(auto9ECD6C45_g, auto9ECD6C45_var);
        if (auto9ECD6C45_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "Tier2", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "Tier3", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "Tier4", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel1", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel2", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel3", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel4", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel5", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel6", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel7", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel8", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel9", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel10", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel11", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel12", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel13", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel14", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel15", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel16", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel17", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(auto9ECD6C45_var, "StrikeWeaponryLevel18", 0);
    }
    libDDE92A83_gf_ToggleUpgradesSC2Multi(PlayerGroupAll(), 0);
    libDDE92A83_gf_ToggleUpgradesSC2Coop(PlayerGroupAll(), 0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeEffectReset_Init () {
    lib6F4447A1_gt_SandboxModeEffectReset = TriggerCreate("lib6F4447A1_gt_SandboxModeEffectReset_Func");
    TriggerAddEventPlayerEffectUsed(lib6F4447A1_gt_SandboxModeEffectReset, c_playerAny, "SandboxModeRasetTech");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Repick
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatRepick_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_D5E1F6B4") + StringToText("</c> ")));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "IncludeStandardRacesInCommanderSelect", 1);
    libDDE92A83_gf_ResetCommander(EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatRepick_Init () {
    lib6F4447A1_gt_SandboxModeChatRepick = TriggerCreate("lib6F4447A1_gt_SandboxModeChatRepick_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatRepick, c_playerAny, "repick", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Reset
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatReset_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoEA94A05E_g;
    int autoEA94A05E_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_F7C79821") + StringToText("</c> ")));
    autoEA94A05E_g = PlayerGroupAll();
    autoEA94A05E_var = -1;
    while (true) {
        autoEA94A05E_var = PlayerGroupNextPlayer(autoEA94A05E_g, autoEA94A05E_var);
        if (autoEA94A05E_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "Tier2", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "Tier3", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "Tier4", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel1", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel2", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel3", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel4", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel5", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel6", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel7", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel8", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel9", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel10", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel11", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel12", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel13", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel14", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel15", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel16", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel17", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(autoEA94A05E_var, "StrikeWeaponryLevel18", 0);
    }
    libDDE92A83_gf_ToggleUpgradesSC2Multi(PlayerGroupAll(), 0);
    libDDE92A83_gf_ToggleUpgradesSC2Coop(PlayerGroupAll(), 0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatReset_Init () {
    lib6F4447A1_gt_SandboxModeChatReset = TriggerCreate("lib6F4447A1_gt_SandboxModeChatReset_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatReset, c_playerAny, "reset", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - UI
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatUI_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib6F4447A1_gv_sandboxModeUISwitch[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_2E4243CD") + StringToText("</c> ")));
        lib6F4447A1_gv_sandboxModeUISwitch[EventPlayer()] = false;
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeConsolePanel, true);
        lib39886FE6_gf_MasteryBarFade(PlayerGroupSingle(EventPlayer()), true, 0.0);
        lib2A8CE4F7_gf_StatsMenuFade(PlayerGroupSingle(EventPlayer()), true, 0.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupSingle(EventPlayer()), 0, true, 0.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupSingle(EventPlayer()), 1, true, 0.0);
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_86749F74") + StringToText("</c> ")));
        lib6F4447A1_gv_sandboxModeUISwitch[EventPlayer()] = true;
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeConsolePanel, false);
        lib39886FE6_gf_MasteryBarFade(PlayerGroupSingle(EventPlayer()), false, 0.0);
        lib2A8CE4F7_gf_StatsMenuFade(PlayerGroupSingle(EventPlayer()), false, 0.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupSingle(EventPlayer()), 0, false, 0.0);
        libF095282B_gf_ObjectiveIconFade(PlayerGroupSingle(EventPlayer()), 1, false, 0.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatUI_Init () {
    lib6F4447A1_gt_SandboxModeChatUI = TriggerCreate("lib6F4447A1_gt_SandboxModeChatUI_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatUI, c_playerAny, "ui", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - UI Essential
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatUIEssential_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib6F4447A1_gv_sandboxModeUIEssentialSwitch[EventPlayer()] == true)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_FB146DB9") + StringToText("</c> ")));
        lib6F4447A1_gv_sandboxModeUIEssentialSwitch[EventPlayer()] = false;
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMinimapPanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMissionTimePanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeResourcePanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeCommandPanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeInfoPanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeControlGroupPanel, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMenuBar, true);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeInventoryPanel, true);
        lib948F000A_gf_WorkerSelectFade(PlayerGroupSingle(EventPlayer()), true, 0.0);
        libCA960273_gf_StagingAreaCustomizationFade(PlayerGroupSingle(EventPlayer()), true, 0.0);
        lib038F51B7_gf_AbilityControlFade(PlayerGroupSingle(EventPlayer()), true, 0.0);
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_56A6A5D5") + StringToText("</c> ")));
        lib6F4447A1_gv_sandboxModeUIEssentialSwitch[EventPlayer()] = true;
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMinimapPanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMissionTimePanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeResourcePanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeCommandPanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeInfoPanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeControlGroupPanel, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeMenuBar, false);
        UISetFrameVisible(PlayerGroupSingle(EventPlayer()), c_syncFrameTypeInventoryPanel, false);
        lib948F000A_gf_WorkerSelectFade(PlayerGroupSingle(EventPlayer()), false, 0.0);
        libCA960273_gf_StagingAreaCustomizationFade(PlayerGroupSingle(EventPlayer()), false, 0.0);
        lib038F51B7_gf_AbilityControlFade(PlayerGroupSingle(EventPlayer()), false, 0.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatUIEssential_Init () {
    lib6F4447A1_gt_SandboxModeChatUIEssential = TriggerCreate("lib6F4447A1_gt_SandboxModeChatUIEssential_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatUIEssential, c_playerAny, "ui essential", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Clear
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatClear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7B16F62B_g;
    int auto7B16F62B_u;
    unit auto7B16F62B_var;
    unitgroup auto251A12BF_g;
    int auto251A12BF_u;
    unit auto251A12BF_var;
    unitgroup auto04F32D9B_g;
    int auto04F32D9B_u;
    unit auto04F32D9B_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_DF54639A") + StringToText("</c> ")));
    auto7B16F62B_g = lib7A9A9B22_gf_StagingAreaSpawners();
    auto7B16F62B_u = UnitGroupCount(auto7B16F62B_g, c_unitCountAll);
    for (;; auto7B16F62B_u -= 1) {
        auto7B16F62B_var = UnitGroupUnitFromEnd(auto7B16F62B_g, auto7B16F62B_u);
        if (auto7B16F62B_var == null) { break; }
        UnitSetOwner(auto7B16F62B_var, 0, false);
        UnitBehaviorAdd(auto7B16F62B_var, "UnitSuicideCrystalPrecursor", auto7B16F62B_var, 1);
    }
    auto251A12BF_g = lib7A9A9B22_gf_StagingAreaSpawns();
    auto251A12BF_u = UnitGroupCount(auto251A12BF_g, c_unitCountAll);
    for (;; auto251A12BF_u -= 1) {
        auto251A12BF_var = UnitGroupUnitFromEnd(auto251A12BF_g, auto251A12BF_u);
        if (auto251A12BF_var == null) { break; }
        UnitSetOwner(auto251A12BF_var, 0, false);
        UnitBehaviorAdd(auto251A12BF_var, "UnitSuicideCrystalPrecursor", auto251A12BF_var, 1);
    }
    auto04F32D9B_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), 0, 0), 0);
    auto04F32D9B_u = UnitGroupCount(auto04F32D9B_g, c_unitCountAll);
    for (;; auto04F32D9B_u -= 1) {
        auto04F32D9B_var = UnitGroupUnitFromEnd(auto04F32D9B_g, auto04F32D9B_u);
        if (auto04F32D9B_var == null) { break; }
        UnitSetOwner(auto04F32D9B_var, 0, false);
        UnitBehaviorAdd(auto04F32D9B_var, "UnitSuicideCrystalPrecursor", auto04F32D9B_var, 1);
    }
    lib6F4447A1_gf_RemoveHeroUseds(PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatClear_Init () {
    lib6F4447A1_gt_SandboxModeChatClear = TriggerCreate("lib6F4447A1_gt_SandboxModeChatClear_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatClear, c_playerAny, "clear", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Clear Self
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatClearSelf_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto306347FB_g;
    int auto306347FB_u;
    unit auto306347FB_var;
    unitgroup auto952184FD_g;
    int auto952184FD_u;
    unit auto952184FD_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_17356AAD") + StringToText("</c> ")));
    auto306347FB_g = UnitGroupFilter(null, 1, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto306347FB_u = UnitGroupCount(auto306347FB_g, c_unitCountAll);
    for (;; auto306347FB_u -= 1) {
        auto306347FB_var = UnitGroupUnitFromEnd(auto306347FB_g, auto306347FB_u);
        if (auto306347FB_var == null) { break; }
        UnitSetOwner(auto306347FB_var, 0, false);
        UnitBehaviorAdd(auto306347FB_var, "UnitSuicideCrystalPrecursor", auto306347FB_var, 1);
    }
    auto952184FD_g = UnitGroupFilter(null, 1, lib7A9A9B22_gf_StagingAreaSpawns(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto952184FD_u = UnitGroupCount(auto952184FD_g, c_unitCountAll);
    for (;; auto952184FD_u -= 1) {
        auto952184FD_var = UnitGroupUnitFromEnd(auto952184FD_g, auto952184FD_u);
        if (auto952184FD_var == null) { break; }
        UnitSetOwner(auto952184FD_var, 0, false);
        UnitBehaviorAdd(auto952184FD_var, "UnitSuicideCrystalPrecursor", auto952184FD_var, 1);
    }
    lib6F4447A1_gf_RemoveHeroUseds(PlayerGroupSingle(EventPlayer()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatClearSelf_Init () {
    lib6F4447A1_gt_SandboxModeChatClearSelf = TriggerCreate("lib6F4447A1_gt_SandboxModeChatClearSelf_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatClearSelf, c_playerAny, "clear self", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Clear Enemy
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatClearEnemy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5AF0735A_g;
    int auto5AF0735A_u;
    unit auto5AF0735A_var;
    unitgroup auto868D5AA4_g;
    int auto868D5AA4_u;
    unit auto868D5AA4_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_8EBF39D8") + StringToText("</c> ")));
    auto5AF0735A_g = UnitGroupFilter(null, 2, lib7A9A9B22_gf_StagingAreaSpawners(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5AF0735A_u = UnitGroupCount(auto5AF0735A_g, c_unitCountAll);
    for (;; auto5AF0735A_u -= 1) {
        auto5AF0735A_var = UnitGroupUnitFromEnd(auto5AF0735A_g, auto5AF0735A_u);
        if (auto5AF0735A_var == null) { break; }
        UnitSetOwner(auto5AF0735A_var, 0, false);
        UnitBehaviorAdd(auto5AF0735A_var, "UnitSuicideCrystalPrecursor", auto5AF0735A_var, 1);
    }
    auto868D5AA4_g = UnitGroupFilter(null, 2, lib7A9A9B22_gf_StagingAreaSpawns(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto868D5AA4_u = UnitGroupCount(auto868D5AA4_g, c_unitCountAll);
    for (;; auto868D5AA4_u -= 1) {
        auto868D5AA4_var = UnitGroupUnitFromEnd(auto868D5AA4_g, auto868D5AA4_u);
        if (auto868D5AA4_var == null) { break; }
        UnitSetOwner(auto868D5AA4_var, 0, false);
        UnitBehaviorAdd(auto868D5AA4_var, "UnitSuicideCrystalPrecursor", auto868D5AA4_var, 1);
    }
    lib6F4447A1_gf_RemoveHeroUseds(PlayerGroupSingle(2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatClearEnemy_Init () {
    lib6F4447A1_gt_SandboxModeChatClearEnemy = TriggerCreate("lib6F4447A1_gt_SandboxModeChatClearEnemy_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatClearEnemy, c_playerAny, "clear enemy", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Clear Battle
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatClearBattle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDA1207BF_g;
    int autoDA1207BF_u;
    unit autoDA1207BF_var;
    unitgroup auto277D035B_g;
    int auto277D035B_u;
    unit auto277D035B_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_E3968ED7") + StringToText("</c> ")));
    autoDA1207BF_g = UnitGroupFilter(null, c_playerAny, lib7A9A9B22_gf_StagingAreaSpawns(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDA1207BF_u = UnitGroupCount(autoDA1207BF_g, c_unitCountAll);
    for (;; autoDA1207BF_u -= 1) {
        autoDA1207BF_var = UnitGroupUnitFromEnd(autoDA1207BF_g, autoDA1207BF_u);
        if (autoDA1207BF_var == null) { break; }
        UnitSetOwner(autoDA1207BF_var, 0, false);
        UnitBehaviorAdd(autoDA1207BF_var, "UnitSuicideCrystalPrecursor", autoDA1207BF_var, 1);
    }
    auto277D035B_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), 0, 0), 0);
    auto277D035B_u = UnitGroupCount(auto277D035B_g, c_unitCountAll);
    for (;; auto277D035B_u -= 1) {
        auto277D035B_var = UnitGroupUnitFromEnd(auto277D035B_g, auto277D035B_u);
        if (auto277D035B_var == null) { break; }
        UnitSetOwner(auto277D035B_var, 0, false);
        UnitBehaviorAdd(auto277D035B_var, "UnitSuicideCrystalPrecursor", auto277D035B_var, 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatClearBattle_Init () {
    lib6F4447A1_gt_SandboxModeChatClearBattle = TriggerCreate("lib6F4447A1_gt_SandboxModeChatClearBattle_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatClearBattle, c_playerAny, "clear battle", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Infinite
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatInfinite_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoECD8D01C_g;
    int autoECD8D01C_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_3F222F17") + StringToText("</c> ")));
    autoECD8D01C_g = PlayerGroupAll();
    autoECD8D01C_var = -1;
    while (true) {
        autoECD8D01C_var = PlayerGroupNextPlayer(autoECD8D01C_g, autoECD8D01C_var);
        if (autoECD8D01C_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(autoECD8D01C_var, "SandboxModeInfiniteMinerals", 1);
    }
    libDDE92A83_gf_SandboxModeInfiniteMinerals();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatInfinite_Init () {
    lib6F4447A1_gt_SandboxModeChatInfinite = TriggerCreate("lib6F4447A1_gt_SandboxModeChatInfinite_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatInfinite, c_playerAny, "infinite", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Energy
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnergy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoCEE330EF_g;
    int autoCEE330EF_var;
    playergroup auto2A645D0F_g;
    int auto2A645D0F_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TechTreeUpgradeCount(1, "SandboxModeInfiniteEnergy", c_techCountCompleteOnly) == 0)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_0BF1A58B") + StringToText("</c> ")));
        auto2A645D0F_g = PlayerGroupAll();
        auto2A645D0F_var = -1;
        while (true) {
            auto2A645D0F_var = PlayerGroupNextPlayer(auto2A645D0F_g, auto2A645D0F_var);
            if (auto2A645D0F_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(auto2A645D0F_var, "SandboxModeInfiniteEnergy", 1);
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_3A267BA8") + StringToText("</c> ")));
        autoCEE330EF_g = PlayerGroupAll();
        autoCEE330EF_var = -1;
        while (true) {
            autoCEE330EF_var = PlayerGroupNextPlayer(autoCEE330EF_g, autoCEE330EF_var);
            if (autoCEE330EF_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(autoCEE330EF_var, "SandboxModeInfiniteEnergy", 0);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnergy_Init () {
    lib6F4447A1_gt_SandboxModeChatEnergy = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnergy_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnergy, c_playerAny, "energy", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Vision
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatVision_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto0B2C6D42_g;
    int auto0B2C6D42_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Fog of war removed") + StringToText("</c> ")));
    auto0B2C6D42_g = PlayerGroupAll();
    auto0B2C6D42_var = -1;
    while (true) {
        auto0B2C6D42_var = PlayerGroupNextPlayer(auto0B2C6D42_g, auto0B2C6D42_var);
        if (auto0B2C6D42_var < 0) { break; }
        VisRevealArea(auto0B2C6D42_var, RegionEntireMap(), 0.0, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatVision_Init () {
    lib6F4447A1_gt_SandboxModeChatVision = TriggerCreate("lib6F4447A1_gt_SandboxModeChatVision_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatVision, c_playerAny, "vision", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Shared
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatShared_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib6F4447A1_gv_sandboxModeSharedSwitch[EventPlayer()] == true)) {
        lib6F4447A1_gv_sandboxModeSharedSwitch[EventPlayer()] = false;
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_36AE6C15") + StringToText("</c> ")));
        PlayerSetAlliance(2, c_allianceIdVision, 1, false);
        PlayerSetAlliance(1, c_allianceIdVision, 2, false);
    }
    else {
        lib6F4447A1_gv_sandboxModeSharedSwitch[EventPlayer()] = true;
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_C3F243FF") + StringToText("</c> ")));
        PlayerSetAlliance(2, c_allianceIdVision, 1, true);
        PlayerSetAlliance(1, c_allianceIdVision, 2, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatShared_Init () {
    lib6F4447A1_gt_SandboxModeChatShared = TriggerCreate("lib6F4447A1_gt_SandboxModeChatShared_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatShared, c_playerAny, "shared", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Base 
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatBase_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib6F4447A1_gv_sandboxModeBaseSwitch[EventPlayer()] == true)) {
        lib6F4447A1_gv_sandboxModeBaseSwitch[EventPlayer()] = false;
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_F44352A3") + StringToText("</c> ")));
        libNtve_gf_SetUpgradeLevelForPlayer(13, "SandboxModeOverpoweredBase", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "SandboxModeOverpoweredBase", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(13, "SandboxModeNexusDontDie", 0);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "SandboxModeNexusDontDie", 0);
    }
    else {
        lib6F4447A1_gv_sandboxModeBaseSwitch[EventPlayer()] = true;
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_B68045B0") + StringToText("</c> ")));
        libNtve_gf_SetUpgradeLevelForPlayer(13, "SandboxModeOverpoweredBase", 1);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "SandboxModeOverpoweredBase", 1);
        libNtve_gf_SetUpgradeLevelForPlayer(13, "SandboxModeNexusDontDie", 1);
        libNtve_gf_SetUpgradeLevelForPlayer(14, "SandboxModeNexusDontDie", 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatBase_Init () {
    lib6F4447A1_gt_SandboxModeChatBase = TriggerCreate("lib6F4447A1_gt_SandboxModeChatBase_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatBase, c_playerAny, "base", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - CDS
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatCDS_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto9CB5E24D_g;
    int auto9CB5E24D_var;
    playergroup auto77A6E547_g;
    int auto77A6E547_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TechTreeUpgradeCount(1, "SandboxModeRapidCooldown", c_techCountCompleteOnly) == 0)) {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Rapid cooldown enabled") + StringToText("</c> ")));
        auto77A6E547_g = PlayerGroupAll();
        auto77A6E547_var = -1;
        while (true) {
            auto77A6E547_var = PlayerGroupNextPlayer(auto77A6E547_g, auto77A6E547_var);
            if (auto77A6E547_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(auto77A6E547_var, "SandboxModeRapidCooldown", 1);
        }
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Rapid cooldown disabled") + StringToText("</c> ")));
        auto9CB5E24D_g = PlayerGroupAll();
        auto9CB5E24D_var = -1;
        while (true) {
            auto9CB5E24D_var = PlayerGroupNextPlayer(auto9CB5E24D_g, auto9CB5E24D_var);
            if (auto9CB5E24D_var < 0) { break; }
            libNtve_gf_SetUpgradeLevelForPlayer(auto9CB5E24D_var, "SandboxModeRapidCooldown", 0);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatCDS_Init () {
    lib6F4447A1_gt_SandboxModeChatCDS = TriggerCreate("lib6F4447A1_gt_SandboxModeChatCDS_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatCDS, c_playerAny, "cds", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Kill
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatKill_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoEBBA7B36_g;
    int autoEBBA7B36_u;
    unit autoEBBA7B36_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringExternal("Param/Value/lib_6F4447A1_09738D70") + StringToText("</c> ")));
    autoEBBA7B36_g = UnitGroupSelected(EventPlayer());
    autoEBBA7B36_u = UnitGroupCount(autoEBBA7B36_g, c_unitCountAll);
    for (;; autoEBBA7B36_u -= 1) {
        autoEBBA7B36_var = UnitGroupUnitFromEnd(autoEBBA7B36_g, autoEBBA7B36_u);
        if (autoEBBA7B36_var == null) { break; }
        if ((UnitHasBehavior2(autoEBBA7B36_var, "WorkerSwappable") == false) && (UnitHasBehavior2(autoEBBA7B36_var, "StagingAreaMinerals") == false) && (UnitGroupHasUnit(libFB3A33A2_gv_allCritters, autoEBBA7B36_var) == false)) {
            PlayerCreateEffectUnit(EventPlayer(), "HugeDamageNoResponse", autoEBBA7B36_var);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatKill_Init () {
    lib6F4447A1_gt_SandboxModeChatKill = TriggerCreate("lib6F4447A1_gt_SandboxModeChatKill_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatKill, c_playerAny, "kill", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Spawn
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Units spawned") + StringToText("</c> ")));
    lib7550A90B_gf_TugofWarSpawn();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatSpawn_Init () {
    lib6F4447A1_gt_SandboxModeChatSpawn = TriggerCreate("lib6F4447A1_gt_SandboxModeChatSpawn_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatSpawn, c_playerAny, "spawn", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Timer
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Spawn time set to ") + IntToText(StringToInt(StringSub(EventChatMessage(false), 7, 99))) + StringToText("</c> ")));
    lib7550A90B_gf_TugofWarSetSpawnPeriod((IntToFixed(StringToInt(StringSub(EventChatMessage(false), 7, 99))) * 1.4));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatTimer_Init () {
    lib6F4447A1_gt_SandboxModeChatTimer = TriggerCreate("lib6F4447A1_gt_SandboxModeChatTimer_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatTimer, c_playerAny, "timer", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Timescale
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatTimescale_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Timescale set to ") + FixedToText(libNtve_gf_ArithmeticRealClamp(StringToFixed(StringSub(EventChatMessage(false), 10, 99)), 1.0, 10.0), c_fixedPrecisionAny) + StringToText("</c> ")));
    libDDE92A83_gf_SetGlobalTimeScale(libNtve_gf_ArithmeticRealClamp(StringToFixed(StringSub(EventChatMessage(false), 10, 99)), 1.0, 10.0));
    lib7550A90B_gf_UpdateSpawnTimer();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatTimescale_Init () {
    lib6F4447A1_gt_SandboxModeChatTimescale = TriggerCreate("lib6F4447A1_gt_SandboxModeChatTimescale_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatTimescale, c_playerAny, "timescale", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Follow
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatFollow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Following. Press ESC to exit.") + StringToText("</c> ")));
    if ((lib6F4447A1_gv_sandboxModeFollowSwitch[EventPlayer()] == false)) {
        CameraSave(EventPlayer());
        lib6F4447A1_gv_sandboxModeFollowSwitch[EventPlayer()] = true;
        TriggerEnable(lib6F4447A1_gt_SandboxModeChatFollowEsc, true);
    }

    CameraSetMouseRotates(EventPlayer(), true);
    CameraForceMouseRelative(EventPlayer(), true);
    CameraFollowUnitGroup(EventPlayer(), UnitGroupSelected(EventPlayer()), true, false);
    CameraSetValue(EventPlayer(), c_cameraValueHeightOffset, 1.5, 0.0, -1, 10.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatFollow_Init () {
    lib6F4447A1_gt_SandboxModeChatFollow = TriggerCreate("lib6F4447A1_gt_SandboxModeChatFollow_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatFollow, c_playerAny, "follow", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Follow Esc
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatFollowEsc_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gv_sandboxModeFollowSwitch[EventPlayer()] = false;
    TriggerEnable(lib6F4447A1_gt_SandboxModeChatFollowEsc, false);
    CameraSetMouseRotates(EventPlayer(), false);
    CameraForceMouseRelative(EventPlayer(), false);
    CameraFollowUnitGroup(EventPlayer(), UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0), false, false);
    CameraSetValue(EventPlayer(), c_cameraValueHeightOffset, 0.0, 0.0, -1, 10.0);
    CameraRestore(EventPlayer(), 0.0, -1, 10.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatFollowEsc_Init () {
    lib6F4447A1_gt_SandboxModeChatFollowEsc = TriggerCreate("lib6F4447A1_gt_SandboxModeChatFollowEsc_Func");
    TriggerEnable(lib6F4447A1_gt_SandboxModeChatFollowEsc, false);
    TriggerAddEventKeyPressed(lib6F4447A1_gt_SandboxModeChatFollowEsc, c_playerAny, c_keyEscape, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Tier
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatTier_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoB9B9C09F_g;
    int autoB9B9C09F_var;

    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringToText("<c val=\"#ColorAttackInfo\">") + StringToText("Tier 2 and Tier 3 researched") + StringToText("</c> ")));
    autoB9B9C09F_g = PlayerGroupAll();
    autoB9B9C09F_var = -1;
    while (true) {
        autoB9B9C09F_var = PlayerGroupNextPlayer(autoB9B9C09F_g, autoB9B9C09F_var);
        if (autoB9B9C09F_var < 0) { break; }
        libNtve_gf_SetUpgradeLevelForPlayer(autoB9B9C09F_var, "Tier2", 1);
        libNtve_gf_SetUpgradeLevelForPlayer(autoB9B9C09F_var, "Tier3", 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatTier_Init () {
    lib6F4447A1_gt_SandboxModeChatTier = TriggerCreate("lib6F4447A1_gt_SandboxModeChatTier_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatTier, c_playerAny, "tier", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Protoss
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyProtoss_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerProtoss");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyProtoss_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyProtoss = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyProtoss_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyProtoss, c_playerAny, "enemy protoss", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Terran
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyTerran_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerTerran");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyTerran_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyTerran = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyTerran_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyTerran, c_playerAny, "enemy terran", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Zerg
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyZerg_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerZerg");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyZerg_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyZerg = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyZerg_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyZerg, c_playerAny, "enemy zerg", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Abathur
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyAbathur_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerAbathur");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyAbathur_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyAbathur = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyAbathur_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyAbathur, c_playerAny, "enemy abathur", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Alarak
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyAlarak_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerAlarak");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyAlarak_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyAlarak = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyAlarak_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyAlarak, c_playerAny, "enemy alarak", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Artanis
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyArtanis_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerArtanis");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyArtanis_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyArtanis = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyArtanis_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyArtanis, c_playerAny, "enemy artanis", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Dehaka
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyDehaka_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerDehaka");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyDehaka_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyDehaka = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyDehaka_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyDehaka, c_playerAny, "enemy dehaka", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Fenix
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyFenix_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerFenix");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyFenix_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyFenix = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyFenix_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyFenix, c_playerAny, "enemy fenix", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Horner
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyHorner_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerHorner");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyHorner_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyHorner = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyHorner_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy horner", true);
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy han", true);
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy hh", true);
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy h&h", true);
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy han & horner", true);
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyHorner, c_playerAny, "enemy han and horner", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Karax
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyKarax_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerKarax");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyKarax_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyKarax = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyKarax_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyKarax, c_playerAny, "enemy karax", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Kerrigan
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyKerrigan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerKerrigan");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyKerrigan_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyKerrigan = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyKerrigan_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyKerrigan, c_playerAny, "enemy kerrigan", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Mengsk
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyMengsk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerMengsk");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyMengsk_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyMengsk = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyMengsk_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyMengsk, c_playerAny, "enemy mengsk", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Nova
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyNova_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerNova");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyNova_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyNova = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyNova_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyNova, c_playerAny, "enemy nova", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Raynor
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyRaynor_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerRaynor");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyRaynor_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyRaynor = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyRaynor_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyRaynor, c_playerAny, "enemy raynor", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Stetmann
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyStetmann_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerStetmann");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyStetmann_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyStetmann = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyStetmann_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyStetmann, c_playerAny, "enemy stetmann", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Stukov
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyStukov_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerStukov");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyStukov_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyStukov = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyStukov_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyStukov, c_playerAny, "enemy stukov", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Swann
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemySwann_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerSwann");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemySwann_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemySwann = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemySwann_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemySwann, c_playerAny, "enemy swann", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Tychus
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyTychus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerTychus");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyTychus_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyTychus = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyTychus_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyTychus, c_playerAny, "enemy tychus", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Vorazun
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyVorazun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerVorazun");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyVorazun_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyVorazun = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyVorazun_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyVorazun, c_playerAny, "enemy vorazun", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Zagara
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyZagara_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerZagara");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyZagara_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyZagara = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyZagara_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyZagara, c_playerAny, "enemy zagara", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Sandbox Mode (Chat) - Enemy Zeratul
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_gt_SandboxModeChatEnemyZeratul_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameIsTestMap(false) == true) || (libDDE92A83_gf_GameIsTutorial() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib6F4447A1_gf_EnemyRaceRepick("WorkerZeratul");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6F4447A1_gt_SandboxModeChatEnemyZeratul_Init () {
    lib6F4447A1_gt_SandboxModeChatEnemyZeratul = TriggerCreate("lib6F4447A1_gt_SandboxModeChatEnemyZeratul_Func");
    TriggerAddEventChatMessage(lib6F4447A1_gt_SandboxModeChatEnemyZeratul, c_playerAny, "enemy zeratul", true);
}

void lib6F4447A1_InitTriggers () {
    lib6F4447A1_gt_TestTavernRead_Init();
    lib6F4447A1_gt_ResetCommander_Init();
    lib6F4447A1_gt_NYIUnitDisabler_Init();
    lib6F4447A1_gt_SandboxModeEffectRepick_Init();
    lib6F4447A1_gt_SandboxModeEffectReset_Init();
    lib6F4447A1_gt_SandboxModeChatRepick_Init();
    lib6F4447A1_gt_SandboxModeChatReset_Init();
    lib6F4447A1_gt_SandboxModeChatUI_Init();
    lib6F4447A1_gt_SandboxModeChatUIEssential_Init();
    lib6F4447A1_gt_SandboxModeChatClear_Init();
    lib6F4447A1_gt_SandboxModeChatClearSelf_Init();
    lib6F4447A1_gt_SandboxModeChatClearEnemy_Init();
    lib6F4447A1_gt_SandboxModeChatClearBattle_Init();
    lib6F4447A1_gt_SandboxModeChatInfinite_Init();
    lib6F4447A1_gt_SandboxModeChatEnergy_Init();
    lib6F4447A1_gt_SandboxModeChatVision_Init();
    lib6F4447A1_gt_SandboxModeChatShared_Init();
    lib6F4447A1_gt_SandboxModeChatBase_Init();
    lib6F4447A1_gt_SandboxModeChatCDS_Init();
    lib6F4447A1_gt_SandboxModeChatKill_Init();
    lib6F4447A1_gt_SandboxModeChatSpawn_Init();
    lib6F4447A1_gt_SandboxModeChatTimer_Init();
    lib6F4447A1_gt_SandboxModeChatTimescale_Init();
    lib6F4447A1_gt_SandboxModeChatFollow_Init();
    lib6F4447A1_gt_SandboxModeChatFollowEsc_Init();
    lib6F4447A1_gt_SandboxModeChatTier_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyProtoss_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyTerran_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyZerg_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyAbathur_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyAlarak_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyArtanis_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyDehaka_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyFenix_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyHorner_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyKarax_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyKerrigan_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyMengsk_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyNova_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyRaynor_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyStetmann_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyStukov_Init();
    lib6F4447A1_gt_SandboxModeChatEnemySwann_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyTychus_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyVorazun_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyZagara_Init();
    lib6F4447A1_gt_SandboxModeChatEnemyZeratul_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib6F4447A1_InitLib_completed = false;

void lib6F4447A1_InitLib () {
    if (lib6F4447A1_InitLib_completed) {
        return;
    }

    lib6F4447A1_InitLib_completed = true;

    lib6F4447A1_InitLibraries();
    lib6F4447A1_InitVariables();
    lib6F4447A1_InitTriggers();
}

include "Lib95CAB67A"
include "LibDDE92A83"
include "Lib474957E9"
include "LibFB3A33A2"
include "Lib16875C2F"
include "LibF095282B"
include "LibDBB0BE4A"
include "Lib948F000A"
include "Lib2A8CE4F7"
include "Lib7A9A9B22"
include "LibCA960273"
include "Lib038F51B7"
include "Lib39886FE6"
include "Lib64DC5B97"
include "Lib7550A90B"

